/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ComponentsObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComponentsObject{}

// ComponentsObject struct for ComponentsObject
type ComponentsObject struct {
	Schemas    *map[string]SchemaObject    `json:"schemas,omitempty"`
	Parameters *map[string]ParameterObject `json:"parameters,omitempty"`
}

// NewComponentsObject instantiates a new ComponentsObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentsObject() *ComponentsObject {
	this := ComponentsObject{}
	return &this
}

// NewComponentsObjectWithDefaults instantiates a new ComponentsObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentsObjectWithDefaults() *ComponentsObject {
	this := ComponentsObject{}
	return &this
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *ComponentsObject) GetSchemas() map[string]SchemaObject {
	if o == nil || IsNil(o.Schemas) {
		var ret map[string]SchemaObject
		return ret
	}
	return *o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsObject) GetSchemasOk() (*map[string]SchemaObject, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *ComponentsObject) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given map[string]SchemaObject and assigns it to the Schemas field.
func (o *ComponentsObject) SetSchemas(v map[string]SchemaObject) {
	o.Schemas = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ComponentsObject) GetParameters() map[string]ParameterObject {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]ParameterObject
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentsObject) GetParametersOk() (*map[string]ParameterObject, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ComponentsObject) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]ParameterObject and assigns it to the Parameters field.
func (o *ComponentsObject) SetParameters(v map[string]ParameterObject) {
	o.Parameters = &v
}

func (o ComponentsObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComponentsObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableComponentsObject struct {
	value *ComponentsObject
	isSet bool
}

func (v NullableComponentsObject) Get() *ComponentsObject {
	return v.value
}

func (v *NullableComponentsObject) Set(val *ComponentsObject) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentsObject) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentsObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentsObject(val *ComponentsObject) *NullableComponentsObject {
	return &NullableComponentsObject{value: val, isSet: true}
}

func (v NullableComponentsObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentsObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
