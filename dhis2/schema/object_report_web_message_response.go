/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the ObjectReportWebMessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectReportWebMessageResponse{}

// ObjectReportWebMessageResponse struct for ObjectReportWebMessageResponse
type ObjectReportWebMessageResponse struct {
	ErrorReports []ErrorReport `json:"errorReports,omitempty"`
	Klass        *string       `json:"klass,omitempty"`
	ResponseType *string       `json:"responseType,omitempty"`
	Uid          *string       `json:"uid,omitempty"`
}

// NewObjectReportWebMessageResponse instantiates a new ObjectReportWebMessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectReportWebMessageResponse() *ObjectReportWebMessageResponse {
	this := ObjectReportWebMessageResponse{}
	return &this
}

// NewObjectReportWebMessageResponseWithDefaults instantiates a new ObjectReportWebMessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectReportWebMessageResponseWithDefaults() *ObjectReportWebMessageResponse {
	this := ObjectReportWebMessageResponse{}
	return &this
}

// GetErrorReports returns the ErrorReports field value if set, zero value otherwise.
func (o *ObjectReportWebMessageResponse) GetErrorReports() []ErrorReport {
	if o == nil || IsNil(o.ErrorReports) {
		var ret []ErrorReport
		return ret
	}
	return o.ErrorReports
}

// GetErrorReportsOk returns a tuple with the ErrorReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectReportWebMessageResponse) GetErrorReportsOk() ([]ErrorReport, bool) {
	if o == nil || IsNil(o.ErrorReports) {
		return nil, false
	}
	return o.ErrorReports, true
}

// HasErrorReports returns a boolean if a field has been set.
func (o *ObjectReportWebMessageResponse) HasErrorReports() bool {
	if o != nil && !IsNil(o.ErrorReports) {
		return true
	}

	return false
}

// SetErrorReports gets a reference to the given []ErrorReport and assigns it to the ErrorReports field.
func (o *ObjectReportWebMessageResponse) SetErrorReports(v []ErrorReport) {
	o.ErrorReports = v
}

// GetKlass returns the Klass field value if set, zero value otherwise.
func (o *ObjectReportWebMessageResponse) GetKlass() string {
	if o == nil || IsNil(o.Klass) {
		var ret string
		return ret
	}
	return *o.Klass
}

// GetKlassOk returns a tuple with the Klass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectReportWebMessageResponse) GetKlassOk() (*string, bool) {
	if o == nil || IsNil(o.Klass) {
		return nil, false
	}
	return o.Klass, true
}

// HasKlass returns a boolean if a field has been set.
func (o *ObjectReportWebMessageResponse) HasKlass() bool {
	if o != nil && !IsNil(o.Klass) {
		return true
	}

	return false
}

// SetKlass gets a reference to the given string and assigns it to the Klass field.
func (o *ObjectReportWebMessageResponse) SetKlass(v string) {
	o.Klass = &v
}

// GetResponseType returns the ResponseType field value if set, zero value otherwise.
func (o *ObjectReportWebMessageResponse) GetResponseType() string {
	if o == nil || IsNil(o.ResponseType) {
		var ret string
		return ret
	}
	return *o.ResponseType
}

// GetResponseTypeOk returns a tuple with the ResponseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectReportWebMessageResponse) GetResponseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseType) {
		return nil, false
	}
	return o.ResponseType, true
}

// HasResponseType returns a boolean if a field has been set.
func (o *ObjectReportWebMessageResponse) HasResponseType() bool {
	if o != nil && !IsNil(o.ResponseType) {
		return true
	}

	return false
}

// SetResponseType gets a reference to the given string and assigns it to the ResponseType field.
func (o *ObjectReportWebMessageResponse) SetResponseType(v string) {
	o.ResponseType = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *ObjectReportWebMessageResponse) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectReportWebMessageResponse) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *ObjectReportWebMessageResponse) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *ObjectReportWebMessageResponse) SetUid(v string) {
	o.Uid = &v
}

func (o ObjectReportWebMessageResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectReportWebMessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorReports) {
		toSerialize["errorReports"] = o.ErrorReports
	}
	if !IsNil(o.Klass) {
		toSerialize["klass"] = o.Klass
	}
	if !IsNil(o.ResponseType) {
		toSerialize["responseType"] = o.ResponseType
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	return toSerialize, nil
}

type NullableObjectReportWebMessageResponse struct {
	value *ObjectReportWebMessageResponse
	isSet bool
}

func (v NullableObjectReportWebMessageResponse) Get() *ObjectReportWebMessageResponse {
	return v.value
}

func (v *NullableObjectReportWebMessageResponse) Set(val *ObjectReportWebMessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectReportWebMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectReportWebMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectReportWebMessageResponse(val *ObjectReportWebMessageResponse) *NullableObjectReportWebMessageResponse {
	return &NullableObjectReportWebMessageResponse{value: val, isSet: true}
}

func (v NullableObjectReportWebMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectReportWebMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
