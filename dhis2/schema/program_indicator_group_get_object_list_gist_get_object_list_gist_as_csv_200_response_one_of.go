/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf{}

// ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf struct for ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
type ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf struct {
	Entries                []map[string]interface{} `json:"entries,omitempty"`
	Pager                  *GistPager               `json:"pager,omitempty"`
	ProgramIndicatorGroups []ProgramIndicatorGroup  `json:"programIndicatorGroups,omitempty"`
}

// NewProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf instantiates a new ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf() *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf {
	this := ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf{}
	return &this
}

// NewProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfWithDefaults instantiates a new ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfWithDefaults() *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf {
	this := ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf{}
	return &this
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) GetEntries() []map[string]interface{} {
	if o == nil || IsNil(o.Entries) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) GetEntriesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Entries) {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) HasEntries() bool {
	if o != nil && !IsNil(o.Entries) {
		return true
	}

	return false
}

// SetEntries gets a reference to the given []map[string]interface{} and assigns it to the Entries field.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) SetEntries(v []map[string]interface{}) {
	o.Entries = v
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) GetPager() GistPager {
	if o == nil || IsNil(o.Pager) {
		var ret GistPager
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) GetPagerOk() (*GistPager, bool) {
	if o == nil || IsNil(o.Pager) {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) HasPager() bool {
	if o != nil && !IsNil(o.Pager) {
		return true
	}

	return false
}

// SetPager gets a reference to the given GistPager and assigns it to the Pager field.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) SetPager(v GistPager) {
	o.Pager = &v
}

// GetProgramIndicatorGroups returns the ProgramIndicatorGroups field value if set, zero value otherwise.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) GetProgramIndicatorGroups() []ProgramIndicatorGroup {
	if o == nil || IsNil(o.ProgramIndicatorGroups) {
		var ret []ProgramIndicatorGroup
		return ret
	}
	return o.ProgramIndicatorGroups
}

// GetProgramIndicatorGroupsOk returns a tuple with the ProgramIndicatorGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) GetProgramIndicatorGroupsOk() ([]ProgramIndicatorGroup, bool) {
	if o == nil || IsNil(o.ProgramIndicatorGroups) {
		return nil, false
	}
	return o.ProgramIndicatorGroups, true
}

// HasProgramIndicatorGroups returns a boolean if a field has been set.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) HasProgramIndicatorGroups() bool {
	if o != nil && !IsNil(o.ProgramIndicatorGroups) {
		return true
	}

	return false
}

// SetProgramIndicatorGroups gets a reference to the given []ProgramIndicatorGroup and assigns it to the ProgramIndicatorGroups field.
func (o *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) SetProgramIndicatorGroups(v []ProgramIndicatorGroup) {
	o.ProgramIndicatorGroups = v
}

func (o ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entries) {
		toSerialize["entries"] = o.Entries
	}
	if !IsNil(o.Pager) {
		toSerialize["pager"] = o.Pager
	}
	if !IsNil(o.ProgramIndicatorGroups) {
		toSerialize["programIndicatorGroups"] = o.ProgramIndicatorGroups
	}
	return toSerialize, nil
}

type NullableProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf struct {
	value *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	isSet bool
}

func (v NullableProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) Get() *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf {
	return v.value
}

func (v *NullableProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) Set(val *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf(val *ProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) *NullableProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf {
	return &NullableProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf{value: val, isSet: true}
}

func (v NullableProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
