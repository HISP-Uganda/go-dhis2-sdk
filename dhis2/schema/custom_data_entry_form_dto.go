/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CustomDataEntryFormDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomDataEntryFormDto{}

// CustomDataEntryFormDto struct for CustomDataEntryFormDto
type CustomDataEntryFormDto struct {
	DataSetId      *string        `json:"dataSetId,omitempty"`
	DisplayDensity DisplayDensity `json:"displayDensity"`
	Form           *string        `json:"form,omitempty"`
	Id             *string        `json:"id,omitempty"`
	Version        *int32         `json:"version,omitempty"`
}

type _CustomDataEntryFormDto CustomDataEntryFormDto

// NewCustomDataEntryFormDto instantiates a new CustomDataEntryFormDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomDataEntryFormDto(displayDensity DisplayDensity) *CustomDataEntryFormDto {
	this := CustomDataEntryFormDto{}
	this.DisplayDensity = displayDensity
	return &this
}

// NewCustomDataEntryFormDtoWithDefaults instantiates a new CustomDataEntryFormDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomDataEntryFormDtoWithDefaults() *CustomDataEntryFormDto {
	this := CustomDataEntryFormDto{}
	return &this
}

// GetDataSetId returns the DataSetId field value if set, zero value otherwise.
func (o *CustomDataEntryFormDto) GetDataSetId() string {
	if o == nil || IsNil(o.DataSetId) {
		var ret string
		return ret
	}
	return *o.DataSetId
}

// GetDataSetIdOk returns a tuple with the DataSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDataEntryFormDto) GetDataSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.DataSetId) {
		return nil, false
	}
	return o.DataSetId, true
}

// HasDataSetId returns a boolean if a field has been set.
func (o *CustomDataEntryFormDto) HasDataSetId() bool {
	if o != nil && !IsNil(o.DataSetId) {
		return true
	}

	return false
}

// SetDataSetId gets a reference to the given string and assigns it to the DataSetId field.
func (o *CustomDataEntryFormDto) SetDataSetId(v string) {
	o.DataSetId = &v
}

// GetDisplayDensity returns the DisplayDensity field value
func (o *CustomDataEntryFormDto) GetDisplayDensity() DisplayDensity {
	if o == nil {
		var ret DisplayDensity
		return ret
	}

	return o.DisplayDensity
}

// GetDisplayDensityOk returns a tuple with the DisplayDensity field value
// and a boolean to check if the value has been set.
func (o *CustomDataEntryFormDto) GetDisplayDensityOk() (*DisplayDensity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayDensity, true
}

// SetDisplayDensity sets field value
func (o *CustomDataEntryFormDto) SetDisplayDensity(v DisplayDensity) {
	o.DisplayDensity = v
}

// GetForm returns the Form field value if set, zero value otherwise.
func (o *CustomDataEntryFormDto) GetForm() string {
	if o == nil || IsNil(o.Form) {
		var ret string
		return ret
	}
	return *o.Form
}

// GetFormOk returns a tuple with the Form field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDataEntryFormDto) GetFormOk() (*string, bool) {
	if o == nil || IsNil(o.Form) {
		return nil, false
	}
	return o.Form, true
}

// HasForm returns a boolean if a field has been set.
func (o *CustomDataEntryFormDto) HasForm() bool {
	if o != nil && !IsNil(o.Form) {
		return true
	}

	return false
}

// SetForm gets a reference to the given string and assigns it to the Form field.
func (o *CustomDataEntryFormDto) SetForm(v string) {
	o.Form = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomDataEntryFormDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDataEntryFormDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomDataEntryFormDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustomDataEntryFormDto) SetId(v string) {
	o.Id = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CustomDataEntryFormDto) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomDataEntryFormDto) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CustomDataEntryFormDto) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *CustomDataEntryFormDto) SetVersion(v int32) {
	o.Version = &v
}

func (o CustomDataEntryFormDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomDataEntryFormDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataSetId) {
		toSerialize["dataSetId"] = o.DataSetId
	}
	toSerialize["displayDensity"] = o.DisplayDensity
	if !IsNil(o.Form) {
		toSerialize["form"] = o.Form
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

func (o *CustomDataEntryFormDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"displayDensity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomDataEntryFormDto := _CustomDataEntryFormDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomDataEntryFormDto)

	if err != nil {
		return err
	}

	*o = CustomDataEntryFormDto(varCustomDataEntryFormDto)

	return err
}

type NullableCustomDataEntryFormDto struct {
	value *CustomDataEntryFormDto
	isSet bool
}

func (v NullableCustomDataEntryFormDto) Get() *CustomDataEntryFormDto {
	return v.value
}

func (v *NullableCustomDataEntryFormDto) Set(val *CustomDataEntryFormDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomDataEntryFormDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomDataEntryFormDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomDataEntryFormDto(val *CustomDataEntryFormDto) *NullableCustomDataEntryFormDto {
	return &NullableCustomDataEntryFormDto{value: val, isSet: true}
}

func (v NullableCustomDataEntryFormDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomDataEntryFormDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
