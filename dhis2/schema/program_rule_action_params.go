/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ProgramRuleActionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramRuleActionParams{}

// ProgramRuleActionParams struct for ProgramRuleActionParams
type ProgramRuleActionParams struct {
	AttributeValues                         []AttributeValueParams                   `json:"attributeValues,omitempty"`
	Code                                    *string                                  `json:"code,omitempty"`
	Content                                 *string                                  `json:"content,omitempty"`
	Created                                 *time.Time                               `json:"created,omitempty"`
	CreatedBy                               *AggregateDataExchangeParamsCreatedBy    `json:"createdBy,omitempty"`
	Data                                    *string                                  `json:"data,omitempty"`
	DataElement                             *DataElementParams                       `json:"dataElement,omitempty"`
	DisplayContent                          *string                                  `json:"displayContent,omitempty"`
	DisplayName                             *string                                  `json:"displayName,omitempty"`
	Favorite                                *bool                                    `json:"favorite,omitempty"`
	Favorites                               []string                                 `json:"favorites,omitempty"`
	Id                                      *string                                  `json:"id,omitempty"`
	LastUpdated                             *time.Time                               `json:"lastUpdated,omitempty"`
	LastUpdatedBy                           *AggregateDataExchangeParamsCreatedBy    `json:"lastUpdatedBy,omitempty"`
	Location                                *string                                  `json:"location,omitempty"`
	Name                                    *string                                  `json:"name,omitempty"`
	Option                                  *OptionGroupParamsOptionsInner           `json:"option,omitempty"`
	OptionGroup                             *OptionGroupSetParamsOptionGroupsInner   `json:"optionGroup,omitempty"`
	ProgramIndicator                        *ProgramIndicatorParams                  `json:"programIndicator,omitempty"`
	ProgramRule                             *ProgramRuleParams                       `json:"programRule,omitempty"`
	ProgramRuleActionEvaluationEnvironments []ProgramRuleActionEvaluationEnvironment `json:"programRuleActionEvaluationEnvironments,omitempty"`
	ProgramRuleActionEvaluationTime         ProgramRuleActionEvaluationTime          `json:"programRuleActionEvaluationTime"`
	ProgramRuleActionType                   ProgramRuleActionType                    `json:"programRuleActionType"`
	ProgramStage                            *ProgramStageParams                      `json:"programStage,omitempty"`
	ProgramStageSection                     *ProgramStageSectionParams               `json:"programStageSection,omitempty"`
	Sharing                                 *Sharing                                 `json:"sharing,omitempty"`
	TemplateUid                             *string                                  `json:"templateUid,omitempty"`
	TrackedEntityAttribute                  *TrackedEntityAttributeParams            `json:"trackedEntityAttribute,omitempty"`
	Translations                            []Translation                            `json:"translations,omitempty"`
}

type _ProgramRuleActionParams ProgramRuleActionParams

// NewProgramRuleActionParams instantiates a new ProgramRuleActionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramRuleActionParams(programRuleActionEvaluationTime ProgramRuleActionEvaluationTime, programRuleActionType ProgramRuleActionType) *ProgramRuleActionParams {
	this := ProgramRuleActionParams{}
	this.ProgramRuleActionEvaluationTime = programRuleActionEvaluationTime
	this.ProgramRuleActionType = programRuleActionType
	return &this
}

// NewProgramRuleActionParamsWithDefaults instantiates a new ProgramRuleActionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramRuleActionParamsWithDefaults() *ProgramRuleActionParams {
	this := ProgramRuleActionParams{}
	return &this
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetAttributeValues() []AttributeValueParams {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValueParams
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetAttributeValuesOk() ([]AttributeValueParams, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValueParams and assigns it to the AttributeValues field.
func (o *ProgramRuleActionParams) SetAttributeValues(v []AttributeValueParams) {
	o.AttributeValues = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProgramRuleActionParams) SetCode(v string) {
	o.Code = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ProgramRuleActionParams) SetContent(v string) {
	o.Content = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ProgramRuleActionParams) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetCreatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetCreatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the CreatedBy field.
func (o *ProgramRuleActionParams) SetCreatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.CreatedBy = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *ProgramRuleActionParams) SetData(v string) {
	o.Data = &v
}

// GetDataElement returns the DataElement field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetDataElement() DataElementParams {
	if o == nil || IsNil(o.DataElement) {
		var ret DataElementParams
		return ret
	}
	return *o.DataElement
}

// GetDataElementOk returns a tuple with the DataElement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetDataElementOk() (*DataElementParams, bool) {
	if o == nil || IsNil(o.DataElement) {
		return nil, false
	}
	return o.DataElement, true
}

// HasDataElement returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasDataElement() bool {
	if o != nil && !IsNil(o.DataElement) {
		return true
	}

	return false
}

// SetDataElement gets a reference to the given DataElementParams and assigns it to the DataElement field.
func (o *ProgramRuleActionParams) SetDataElement(v DataElementParams) {
	o.DataElement = &v
}

// GetDisplayContent returns the DisplayContent field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetDisplayContent() string {
	if o == nil || IsNil(o.DisplayContent) {
		var ret string
		return ret
	}
	return *o.DisplayContent
}

// GetDisplayContentOk returns a tuple with the DisplayContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetDisplayContentOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayContent) {
		return nil, false
	}
	return o.DisplayContent, true
}

// HasDisplayContent returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasDisplayContent() bool {
	if o != nil && !IsNil(o.DisplayContent) {
		return true
	}

	return false
}

// SetDisplayContent gets a reference to the given string and assigns it to the DisplayContent field.
func (o *ProgramRuleActionParams) SetDisplayContent(v string) {
	o.DisplayContent = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProgramRuleActionParams) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ProgramRuleActionParams) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *ProgramRuleActionParams) SetFavorites(v []string) {
	o.Favorites = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProgramRuleActionParams) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ProgramRuleActionParams) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetLastUpdatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetLastUpdatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the LastUpdatedBy field.
func (o *ProgramRuleActionParams) SetLastUpdatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *ProgramRuleActionParams) SetLocation(v string) {
	o.Location = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProgramRuleActionParams) SetName(v string) {
	o.Name = &v
}

// GetOption returns the Option field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetOption() OptionGroupParamsOptionsInner {
	if o == nil || IsNil(o.Option) {
		var ret OptionGroupParamsOptionsInner
		return ret
	}
	return *o.Option
}

// GetOptionOk returns a tuple with the Option field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetOptionOk() (*OptionGroupParamsOptionsInner, bool) {
	if o == nil || IsNil(o.Option) {
		return nil, false
	}
	return o.Option, true
}

// HasOption returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasOption() bool {
	if o != nil && !IsNil(o.Option) {
		return true
	}

	return false
}

// SetOption gets a reference to the given OptionGroupParamsOptionsInner and assigns it to the Option field.
func (o *ProgramRuleActionParams) SetOption(v OptionGroupParamsOptionsInner) {
	o.Option = &v
}

// GetOptionGroup returns the OptionGroup field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetOptionGroup() OptionGroupSetParamsOptionGroupsInner {
	if o == nil || IsNil(o.OptionGroup) {
		var ret OptionGroupSetParamsOptionGroupsInner
		return ret
	}
	return *o.OptionGroup
}

// GetOptionGroupOk returns a tuple with the OptionGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetOptionGroupOk() (*OptionGroupSetParamsOptionGroupsInner, bool) {
	if o == nil || IsNil(o.OptionGroup) {
		return nil, false
	}
	return o.OptionGroup, true
}

// HasOptionGroup returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasOptionGroup() bool {
	if o != nil && !IsNil(o.OptionGroup) {
		return true
	}

	return false
}

// SetOptionGroup gets a reference to the given OptionGroupSetParamsOptionGroupsInner and assigns it to the OptionGroup field.
func (o *ProgramRuleActionParams) SetOptionGroup(v OptionGroupSetParamsOptionGroupsInner) {
	o.OptionGroup = &v
}

// GetProgramIndicator returns the ProgramIndicator field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetProgramIndicator() ProgramIndicatorParams {
	if o == nil || IsNil(o.ProgramIndicator) {
		var ret ProgramIndicatorParams
		return ret
	}
	return *o.ProgramIndicator
}

// GetProgramIndicatorOk returns a tuple with the ProgramIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetProgramIndicatorOk() (*ProgramIndicatorParams, bool) {
	if o == nil || IsNil(o.ProgramIndicator) {
		return nil, false
	}
	return o.ProgramIndicator, true
}

// HasProgramIndicator returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasProgramIndicator() bool {
	if o != nil && !IsNil(o.ProgramIndicator) {
		return true
	}

	return false
}

// SetProgramIndicator gets a reference to the given ProgramIndicatorParams and assigns it to the ProgramIndicator field.
func (o *ProgramRuleActionParams) SetProgramIndicator(v ProgramIndicatorParams) {
	o.ProgramIndicator = &v
}

// GetProgramRule returns the ProgramRule field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetProgramRule() ProgramRuleParams {
	if o == nil || IsNil(o.ProgramRule) {
		var ret ProgramRuleParams
		return ret
	}
	return *o.ProgramRule
}

// GetProgramRuleOk returns a tuple with the ProgramRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetProgramRuleOk() (*ProgramRuleParams, bool) {
	if o == nil || IsNil(o.ProgramRule) {
		return nil, false
	}
	return o.ProgramRule, true
}

// HasProgramRule returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasProgramRule() bool {
	if o != nil && !IsNil(o.ProgramRule) {
		return true
	}

	return false
}

// SetProgramRule gets a reference to the given ProgramRuleParams and assigns it to the ProgramRule field.
func (o *ProgramRuleActionParams) SetProgramRule(v ProgramRuleParams) {
	o.ProgramRule = &v
}

// GetProgramRuleActionEvaluationEnvironments returns the ProgramRuleActionEvaluationEnvironments field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetProgramRuleActionEvaluationEnvironments() []ProgramRuleActionEvaluationEnvironment {
	if o == nil || IsNil(o.ProgramRuleActionEvaluationEnvironments) {
		var ret []ProgramRuleActionEvaluationEnvironment
		return ret
	}
	return o.ProgramRuleActionEvaluationEnvironments
}

// GetProgramRuleActionEvaluationEnvironmentsOk returns a tuple with the ProgramRuleActionEvaluationEnvironments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetProgramRuleActionEvaluationEnvironmentsOk() ([]ProgramRuleActionEvaluationEnvironment, bool) {
	if o == nil || IsNil(o.ProgramRuleActionEvaluationEnvironments) {
		return nil, false
	}
	return o.ProgramRuleActionEvaluationEnvironments, true
}

// HasProgramRuleActionEvaluationEnvironments returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasProgramRuleActionEvaluationEnvironments() bool {
	if o != nil && !IsNil(o.ProgramRuleActionEvaluationEnvironments) {
		return true
	}

	return false
}

// SetProgramRuleActionEvaluationEnvironments gets a reference to the given []ProgramRuleActionEvaluationEnvironment and assigns it to the ProgramRuleActionEvaluationEnvironments field.
func (o *ProgramRuleActionParams) SetProgramRuleActionEvaluationEnvironments(v []ProgramRuleActionEvaluationEnvironment) {
	o.ProgramRuleActionEvaluationEnvironments = v
}

// GetProgramRuleActionEvaluationTime returns the ProgramRuleActionEvaluationTime field value
func (o *ProgramRuleActionParams) GetProgramRuleActionEvaluationTime() ProgramRuleActionEvaluationTime {
	if o == nil {
		var ret ProgramRuleActionEvaluationTime
		return ret
	}

	return o.ProgramRuleActionEvaluationTime
}

// GetProgramRuleActionEvaluationTimeOk returns a tuple with the ProgramRuleActionEvaluationTime field value
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetProgramRuleActionEvaluationTimeOk() (*ProgramRuleActionEvaluationTime, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProgramRuleActionEvaluationTime, true
}

// SetProgramRuleActionEvaluationTime sets field value
func (o *ProgramRuleActionParams) SetProgramRuleActionEvaluationTime(v ProgramRuleActionEvaluationTime) {
	o.ProgramRuleActionEvaluationTime = v
}

// GetProgramRuleActionType returns the ProgramRuleActionType field value
func (o *ProgramRuleActionParams) GetProgramRuleActionType() ProgramRuleActionType {
	if o == nil {
		var ret ProgramRuleActionType
		return ret
	}

	return o.ProgramRuleActionType
}

// GetProgramRuleActionTypeOk returns a tuple with the ProgramRuleActionType field value
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetProgramRuleActionTypeOk() (*ProgramRuleActionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProgramRuleActionType, true
}

// SetProgramRuleActionType sets field value
func (o *ProgramRuleActionParams) SetProgramRuleActionType(v ProgramRuleActionType) {
	o.ProgramRuleActionType = v
}

// GetProgramStage returns the ProgramStage field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetProgramStage() ProgramStageParams {
	if o == nil || IsNil(o.ProgramStage) {
		var ret ProgramStageParams
		return ret
	}
	return *o.ProgramStage
}

// GetProgramStageOk returns a tuple with the ProgramStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetProgramStageOk() (*ProgramStageParams, bool) {
	if o == nil || IsNil(o.ProgramStage) {
		return nil, false
	}
	return o.ProgramStage, true
}

// HasProgramStage returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasProgramStage() bool {
	if o != nil && !IsNil(o.ProgramStage) {
		return true
	}

	return false
}

// SetProgramStage gets a reference to the given ProgramStageParams and assigns it to the ProgramStage field.
func (o *ProgramRuleActionParams) SetProgramStage(v ProgramStageParams) {
	o.ProgramStage = &v
}

// GetProgramStageSection returns the ProgramStageSection field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetProgramStageSection() ProgramStageSectionParams {
	if o == nil || IsNil(o.ProgramStageSection) {
		var ret ProgramStageSectionParams
		return ret
	}
	return *o.ProgramStageSection
}

// GetProgramStageSectionOk returns a tuple with the ProgramStageSection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetProgramStageSectionOk() (*ProgramStageSectionParams, bool) {
	if o == nil || IsNil(o.ProgramStageSection) {
		return nil, false
	}
	return o.ProgramStageSection, true
}

// HasProgramStageSection returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasProgramStageSection() bool {
	if o != nil && !IsNil(o.ProgramStageSection) {
		return true
	}

	return false
}

// SetProgramStageSection gets a reference to the given ProgramStageSectionParams and assigns it to the ProgramStageSection field.
func (o *ProgramRuleActionParams) SetProgramStageSection(v ProgramStageSectionParams) {
	o.ProgramStageSection = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ProgramRuleActionParams) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetTemplateUid returns the TemplateUid field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetTemplateUid() string {
	if o == nil || IsNil(o.TemplateUid) {
		var ret string
		return ret
	}
	return *o.TemplateUid
}

// GetTemplateUidOk returns a tuple with the TemplateUid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetTemplateUidOk() (*string, bool) {
	if o == nil || IsNil(o.TemplateUid) {
		return nil, false
	}
	return o.TemplateUid, true
}

// HasTemplateUid returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasTemplateUid() bool {
	if o != nil && !IsNil(o.TemplateUid) {
		return true
	}

	return false
}

// SetTemplateUid gets a reference to the given string and assigns it to the TemplateUid field.
func (o *ProgramRuleActionParams) SetTemplateUid(v string) {
	o.TemplateUid = &v
}

// GetTrackedEntityAttribute returns the TrackedEntityAttribute field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetTrackedEntityAttribute() TrackedEntityAttributeParams {
	if o == nil || IsNil(o.TrackedEntityAttribute) {
		var ret TrackedEntityAttributeParams
		return ret
	}
	return *o.TrackedEntityAttribute
}

// GetTrackedEntityAttributeOk returns a tuple with the TrackedEntityAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetTrackedEntityAttributeOk() (*TrackedEntityAttributeParams, bool) {
	if o == nil || IsNil(o.TrackedEntityAttribute) {
		return nil, false
	}
	return o.TrackedEntityAttribute, true
}

// HasTrackedEntityAttribute returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasTrackedEntityAttribute() bool {
	if o != nil && !IsNil(o.TrackedEntityAttribute) {
		return true
	}

	return false
}

// SetTrackedEntityAttribute gets a reference to the given TrackedEntityAttributeParams and assigns it to the TrackedEntityAttribute field.
func (o *ProgramRuleActionParams) SetTrackedEntityAttribute(v TrackedEntityAttributeParams) {
	o.TrackedEntityAttribute = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ProgramRuleActionParams) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramRuleActionParams) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ProgramRuleActionParams) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *ProgramRuleActionParams) SetTranslations(v []Translation) {
	o.Translations = v
}

func (o ProgramRuleActionParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramRuleActionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.DataElement) {
		toSerialize["dataElement"] = o.DataElement
	}
	if !IsNil(o.DisplayContent) {
		toSerialize["displayContent"] = o.DisplayContent
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Option) {
		toSerialize["option"] = o.Option
	}
	if !IsNil(o.OptionGroup) {
		toSerialize["optionGroup"] = o.OptionGroup
	}
	if !IsNil(o.ProgramIndicator) {
		toSerialize["programIndicator"] = o.ProgramIndicator
	}
	if !IsNil(o.ProgramRule) {
		toSerialize["programRule"] = o.ProgramRule
	}
	if !IsNil(o.ProgramRuleActionEvaluationEnvironments) {
		toSerialize["programRuleActionEvaluationEnvironments"] = o.ProgramRuleActionEvaluationEnvironments
	}
	toSerialize["programRuleActionEvaluationTime"] = o.ProgramRuleActionEvaluationTime
	toSerialize["programRuleActionType"] = o.ProgramRuleActionType
	if !IsNil(o.ProgramStage) {
		toSerialize["programStage"] = o.ProgramStage
	}
	if !IsNil(o.ProgramStageSection) {
		toSerialize["programStageSection"] = o.ProgramStageSection
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.TemplateUid) {
		toSerialize["templateUid"] = o.TemplateUid
	}
	if !IsNil(o.TrackedEntityAttribute) {
		toSerialize["trackedEntityAttribute"] = o.TrackedEntityAttribute
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	return toSerialize, nil
}

func (o *ProgramRuleActionParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"programRuleActionEvaluationTime",
		"programRuleActionType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramRuleActionParams := _ProgramRuleActionParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgramRuleActionParams)

	if err != nil {
		return err
	}

	*o = ProgramRuleActionParams(varProgramRuleActionParams)

	return err
}

type NullableProgramRuleActionParams struct {
	value *ProgramRuleActionParams
	isSet bool
}

func (v NullableProgramRuleActionParams) Get() *ProgramRuleActionParams {
	return v.value
}

func (v *NullableProgramRuleActionParams) Set(val *ProgramRuleActionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramRuleActionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramRuleActionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramRuleActionParams(val *ProgramRuleActionParams) *NullableProgramRuleActionParams {
	return &NullableProgramRuleActionParams{value: val, isSet: true}
}

func (v NullableProgramRuleActionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramRuleActionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
