/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// DataSetNotificationTrigger the model 'DataSetNotificationTrigger'
type DataSetNotificationTrigger string

// List of DataSetNotificationTrigger
const (
	DATASETNOTIFICATIONTRIGGER_DATA_SET_COMPLETION DataSetNotificationTrigger = "DATA_SET_COMPLETION"
	DATASETNOTIFICATIONTRIGGER_SCHEDULED_DAYS      DataSetNotificationTrigger = "SCHEDULED_DAYS"
)

// All allowed values of DataSetNotificationTrigger enum
var AllowedDataSetNotificationTriggerEnumValues = []DataSetNotificationTrigger{
	"DATA_SET_COMPLETION",
	"SCHEDULED_DAYS",
}

func (v *DataSetNotificationTrigger) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DataSetNotificationTrigger(value)
	for _, existing := range AllowedDataSetNotificationTriggerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DataSetNotificationTrigger", value)
}

// NewDataSetNotificationTriggerFromValue returns a pointer to a valid DataSetNotificationTrigger
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDataSetNotificationTriggerFromValue(v string) (*DataSetNotificationTrigger, error) {
	ev := DataSetNotificationTrigger(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DataSetNotificationTrigger: valid values are %v", v, AllowedDataSetNotificationTriggerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DataSetNotificationTrigger) IsValid() bool {
	for _, existing := range AllowedDataSetNotificationTriggerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DataSetNotificationTrigger value
func (v DataSetNotificationTrigger) Ptr() *DataSetNotificationTrigger {
	return &v
}

type NullableDataSetNotificationTrigger struct {
	value *DataSetNotificationTrigger
	isSet bool
}

func (v NullableDataSetNotificationTrigger) Get() *DataSetNotificationTrigger {
	return v.value
}

func (v *NullableDataSetNotificationTrigger) Set(val *DataSetNotificationTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableDataSetNotificationTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableDataSetNotificationTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataSetNotificationTrigger(val *DataSetNotificationTrigger) *NullableDataSetNotificationTrigger {
	return &NullableDataSetNotificationTrigger{value: val, isSet: true}
}

func (v NullableDataSetNotificationTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataSetNotificationTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
