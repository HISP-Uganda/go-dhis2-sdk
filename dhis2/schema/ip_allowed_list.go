/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the IpAllowedList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpAllowedList{}

// IpAllowedList struct for IpAllowedList
type IpAllowedList struct {
	AllowedIps []string `json:"allowedIps,omitempty"`
	Type       *string  `json:"type,omitempty"`
}

// NewIpAllowedList instantiates a new IpAllowedList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpAllowedList() *IpAllowedList {
	this := IpAllowedList{}
	return &this
}

// NewIpAllowedListWithDefaults instantiates a new IpAllowedList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpAllowedListWithDefaults() *IpAllowedList {
	this := IpAllowedList{}
	return &this
}

// GetAllowedIps returns the AllowedIps field value if set, zero value otherwise.
func (o *IpAllowedList) GetAllowedIps() []string {
	if o == nil || IsNil(o.AllowedIps) {
		var ret []string
		return ret
	}
	return o.AllowedIps
}

// GetAllowedIpsOk returns a tuple with the AllowedIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpAllowedList) GetAllowedIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedIps) {
		return nil, false
	}
	return o.AllowedIps, true
}

// HasAllowedIps returns a boolean if a field has been set.
func (o *IpAllowedList) HasAllowedIps() bool {
	if o != nil && !IsNil(o.AllowedIps) {
		return true
	}

	return false
}

// SetAllowedIps gets a reference to the given []string and assigns it to the AllowedIps field.
func (o *IpAllowedList) SetAllowedIps(v []string) {
	o.AllowedIps = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IpAllowedList) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpAllowedList) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IpAllowedList) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IpAllowedList) SetType(v string) {
	o.Type = &v
}

func (o IpAllowedList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpAllowedList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedIps) {
		toSerialize["allowedIps"] = o.AllowedIps
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableIpAllowedList struct {
	value *IpAllowedList
	isSet bool
}

func (v NullableIpAllowedList) Get() *IpAllowedList {
	return v.value
}

func (v *NullableIpAllowedList) Set(val *IpAllowedList) {
	v.value = val
	v.isSet = true
}

func (v NullableIpAllowedList) IsSet() bool {
	return v.isSet
}

func (v *NullableIpAllowedList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpAllowedList(val *IpAllowedList) *NullableIpAllowedList {
	return &NullableIpAllowedList{value: val, isSet: true}
}

func (v NullableIpAllowedList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpAllowedList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
