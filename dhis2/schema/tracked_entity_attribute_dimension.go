/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the TrackedEntityAttributeDimension type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackedEntityAttributeDimension{}

// TrackedEntityAttributeDimension struct for TrackedEntityAttributeDimension
type TrackedEntityAttributeDimension struct {
	Attribute *EventVisualizationAttributeValueDimension `json:"attribute,omitempty"`
	Filter    *string                                    `json:"filter,omitempty"`
	LegendSet *CategoryLegendSet                         `json:"legendSet,omitempty"`
}

// NewTrackedEntityAttributeDimension instantiates a new TrackedEntityAttributeDimension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackedEntityAttributeDimension() *TrackedEntityAttributeDimension {
	this := TrackedEntityAttributeDimension{}
	return &this
}

// NewTrackedEntityAttributeDimensionWithDefaults instantiates a new TrackedEntityAttributeDimension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackedEntityAttributeDimensionWithDefaults() *TrackedEntityAttributeDimension {
	this := TrackedEntityAttributeDimension{}
	return &this
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *TrackedEntityAttributeDimension) GetAttribute() EventVisualizationAttributeValueDimension {
	if o == nil || IsNil(o.Attribute) {
		var ret EventVisualizationAttributeValueDimension
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityAttributeDimension) GetAttributeOk() (*EventVisualizationAttributeValueDimension, bool) {
	if o == nil || IsNil(o.Attribute) {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *TrackedEntityAttributeDimension) HasAttribute() bool {
	if o != nil && !IsNil(o.Attribute) {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given EventVisualizationAttributeValueDimension and assigns it to the Attribute field.
func (o *TrackedEntityAttributeDimension) SetAttribute(v EventVisualizationAttributeValueDimension) {
	o.Attribute = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *TrackedEntityAttributeDimension) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityAttributeDimension) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *TrackedEntityAttributeDimension) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *TrackedEntityAttributeDimension) SetFilter(v string) {
	o.Filter = &v
}

// GetLegendSet returns the LegendSet field value if set, zero value otherwise.
func (o *TrackedEntityAttributeDimension) GetLegendSet() CategoryLegendSet {
	if o == nil || IsNil(o.LegendSet) {
		var ret CategoryLegendSet
		return ret
	}
	return *o.LegendSet
}

// GetLegendSetOk returns a tuple with the LegendSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityAttributeDimension) GetLegendSetOk() (*CategoryLegendSet, bool) {
	if o == nil || IsNil(o.LegendSet) {
		return nil, false
	}
	return o.LegendSet, true
}

// HasLegendSet returns a boolean if a field has been set.
func (o *TrackedEntityAttributeDimension) HasLegendSet() bool {
	if o != nil && !IsNil(o.LegendSet) {
		return true
	}

	return false
}

// SetLegendSet gets a reference to the given CategoryLegendSet and assigns it to the LegendSet field.
func (o *TrackedEntityAttributeDimension) SetLegendSet(v CategoryLegendSet) {
	o.LegendSet = &v
}

func (o TrackedEntityAttributeDimension) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackedEntityAttributeDimension) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attribute) {
		toSerialize["attribute"] = o.Attribute
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.LegendSet) {
		toSerialize["legendSet"] = o.LegendSet
	}
	return toSerialize, nil
}

type NullableTrackedEntityAttributeDimension struct {
	value *TrackedEntityAttributeDimension
	isSet bool
}

func (v NullableTrackedEntityAttributeDimension) Get() *TrackedEntityAttributeDimension {
	return v.value
}

func (v *NullableTrackedEntityAttributeDimension) Set(val *TrackedEntityAttributeDimension) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackedEntityAttributeDimension) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackedEntityAttributeDimension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackedEntityAttributeDimension(val *TrackedEntityAttributeDimension) *NullableTrackedEntityAttributeDimension {
	return &NullableTrackedEntityAttributeDimension{value: val, isSet: true}
}

func (v NullableTrackedEntityAttributeDimension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackedEntityAttributeDimension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
