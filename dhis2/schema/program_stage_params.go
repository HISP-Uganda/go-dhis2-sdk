/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ProgramStageParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramStageParams{}

// ProgramStageParams struct for ProgramStageParams
type ProgramStageParams struct {
	AllowGenerateNextVisit    *bool                                         `json:"allowGenerateNextVisit,omitempty"`
	AttributeValues           []AttributeValueParams                        `json:"attributeValues,omitempty"`
	AutoGenerateEvent         *bool                                         `json:"autoGenerateEvent,omitempty"`
	BlockEntryForm            *bool                                         `json:"blockEntryForm,omitempty"`
	Code                      *string                                       `json:"code,omitempty"`
	Created                   *time.Time                                    `json:"created,omitempty"`
	CreatedBy                 *AggregateDataExchangeParamsCreatedBy         `json:"createdBy,omitempty"`
	DataEntryForm             *DataSetParamsDataEntryForm                   `json:"dataEntryForm,omitempty"`
	Description               *string                                       `json:"description,omitempty"`
	DisplayDescription        *string                                       `json:"displayDescription,omitempty"`
	DisplayDueDateLabel       *string                                       `json:"displayDueDateLabel,omitempty"`
	DisplayEventLabel         *string                                       `json:"displayEventLabel,omitempty"`
	DisplayExecutionDateLabel *string                                       `json:"displayExecutionDateLabel,omitempty"`
	DisplayFormName           *string                                       `json:"displayFormName,omitempty"`
	DisplayGenerateEventBox   *bool                                         `json:"displayGenerateEventBox,omitempty"`
	DisplayName               *string                                       `json:"displayName,omitempty"`
	DisplayProgramStageLabel  *string                                       `json:"displayProgramStageLabel,omitempty"`
	DisplayShortName          *string                                       `json:"displayShortName,omitempty"`
	DueDateLabel              *string                                       `json:"dueDateLabel,omitempty"`
	EnableUserAssignment      *bool                                         `json:"enableUserAssignment,omitempty"`
	EventLabel                *string                                       `json:"eventLabel,omitempty"`
	ExecutionDateLabel        *string                                       `json:"executionDateLabel,omitempty"`
	Favorite                  *bool                                         `json:"favorite,omitempty"`
	Favorites                 []string                                      `json:"favorites,omitempty"`
	FeatureType               FeatureType                                   `json:"featureType"`
	FormName                  *string                                       `json:"formName,omitempty"`
	FormType                  FormType                                      `json:"formType"`
	GeneratedByEnrollmentDate *bool                                         `json:"generatedByEnrollmentDate,omitempty"`
	HideDueDate               *bool                                         `json:"hideDueDate,omitempty"`
	Id                        *string                                       `json:"id,omitempty"`
	LastUpdated               *time.Time                                    `json:"lastUpdated,omitempty"`
	LastUpdatedBy             *AggregateDataExchangeParamsCreatedBy         `json:"lastUpdatedBy,omitempty"`
	MinDaysFromStart          int32                                         `json:"minDaysFromStart"`
	Name                      *string                                       `json:"name,omitempty"`
	NextScheduleDate          *DataElementGroupParamsDataElementsInner      `json:"nextScheduleDate,omitempty"`
	NotificationTemplates     []ProgramParamsNotificationTemplatesInner     `json:"notificationTemplates,omitempty"`
	OpenAfterEnrollment       *bool                                         `json:"openAfterEnrollment,omitempty"`
	PeriodType                *string                                       `json:"periodType,omitempty"`
	PreGenerateUID            *bool                                         `json:"preGenerateUID,omitempty"`
	Program                   *ProgramParams                                `json:"program,omitempty"`
	ProgramStageDataElements  []ProgramStageDataElementParams               `json:"programStageDataElements,omitempty"`
	ProgramStageLabel         *string                                       `json:"programStageLabel,omitempty"`
	ProgramStageSections      []ProgramStageParamsProgramStageSectionsInner `json:"programStageSections,omitempty"`
	Referral                  *bool                                         `json:"referral,omitempty"`
	RemindCompleted           *bool                                         `json:"remindCompleted,omitempty"`
	Repeatable                *bool                                         `json:"repeatable,omitempty"`
	ReportDateToUse           *string                                       `json:"reportDateToUse,omitempty"`
	Sharing                   *Sharing                                      `json:"sharing,omitempty"`
	ShortName                 *string                                       `json:"shortName,omitempty"`
	SortOrder                 *int32                                        `json:"sortOrder,omitempty"`
	StandardInterval          *int32                                        `json:"standardInterval,omitempty"`
	Style                     *ObjectStyle                                  `json:"style,omitempty"`
	Translations              []Translation                                 `json:"translations,omitempty"`
	ValidationStrategy        ValidationStrategy                            `json:"validationStrategy"`
}

type _ProgramStageParams ProgramStageParams

// NewProgramStageParams instantiates a new ProgramStageParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramStageParams(featureType FeatureType, formType FormType, minDaysFromStart int32, validationStrategy ValidationStrategy) *ProgramStageParams {
	this := ProgramStageParams{}
	this.FeatureType = featureType
	this.FormType = formType
	this.MinDaysFromStart = minDaysFromStart
	this.ValidationStrategy = validationStrategy
	return &this
}

// NewProgramStageParamsWithDefaults instantiates a new ProgramStageParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramStageParamsWithDefaults() *ProgramStageParams {
	this := ProgramStageParams{}
	return &this
}

// GetAllowGenerateNextVisit returns the AllowGenerateNextVisit field value if set, zero value otherwise.
func (o *ProgramStageParams) GetAllowGenerateNextVisit() bool {
	if o == nil || IsNil(o.AllowGenerateNextVisit) {
		var ret bool
		return ret
	}
	return *o.AllowGenerateNextVisit
}

// GetAllowGenerateNextVisitOk returns a tuple with the AllowGenerateNextVisit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetAllowGenerateNextVisitOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowGenerateNextVisit) {
		return nil, false
	}
	return o.AllowGenerateNextVisit, true
}

// HasAllowGenerateNextVisit returns a boolean if a field has been set.
func (o *ProgramStageParams) HasAllowGenerateNextVisit() bool {
	if o != nil && !IsNil(o.AllowGenerateNextVisit) {
		return true
	}

	return false
}

// SetAllowGenerateNextVisit gets a reference to the given bool and assigns it to the AllowGenerateNextVisit field.
func (o *ProgramStageParams) SetAllowGenerateNextVisit(v bool) {
	o.AllowGenerateNextVisit = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *ProgramStageParams) GetAttributeValues() []AttributeValueParams {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValueParams
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetAttributeValuesOk() ([]AttributeValueParams, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *ProgramStageParams) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValueParams and assigns it to the AttributeValues field.
func (o *ProgramStageParams) SetAttributeValues(v []AttributeValueParams) {
	o.AttributeValues = v
}

// GetAutoGenerateEvent returns the AutoGenerateEvent field value if set, zero value otherwise.
func (o *ProgramStageParams) GetAutoGenerateEvent() bool {
	if o == nil || IsNil(o.AutoGenerateEvent) {
		var ret bool
		return ret
	}
	return *o.AutoGenerateEvent
}

// GetAutoGenerateEventOk returns a tuple with the AutoGenerateEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetAutoGenerateEventOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoGenerateEvent) {
		return nil, false
	}
	return o.AutoGenerateEvent, true
}

// HasAutoGenerateEvent returns a boolean if a field has been set.
func (o *ProgramStageParams) HasAutoGenerateEvent() bool {
	if o != nil && !IsNil(o.AutoGenerateEvent) {
		return true
	}

	return false
}

// SetAutoGenerateEvent gets a reference to the given bool and assigns it to the AutoGenerateEvent field.
func (o *ProgramStageParams) SetAutoGenerateEvent(v bool) {
	o.AutoGenerateEvent = &v
}

// GetBlockEntryForm returns the BlockEntryForm field value if set, zero value otherwise.
func (o *ProgramStageParams) GetBlockEntryForm() bool {
	if o == nil || IsNil(o.BlockEntryForm) {
		var ret bool
		return ret
	}
	return *o.BlockEntryForm
}

// GetBlockEntryFormOk returns a tuple with the BlockEntryForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetBlockEntryFormOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockEntryForm) {
		return nil, false
	}
	return o.BlockEntryForm, true
}

// HasBlockEntryForm returns a boolean if a field has been set.
func (o *ProgramStageParams) HasBlockEntryForm() bool {
	if o != nil && !IsNil(o.BlockEntryForm) {
		return true
	}

	return false
}

// SetBlockEntryForm gets a reference to the given bool and assigns it to the BlockEntryForm field.
func (o *ProgramStageParams) SetBlockEntryForm(v bool) {
	o.BlockEntryForm = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProgramStageParams) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProgramStageParams) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProgramStageParams) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ProgramStageParams) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ProgramStageParams) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ProgramStageParams) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProgramStageParams) GetCreatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetCreatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProgramStageParams) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the CreatedBy field.
func (o *ProgramStageParams) SetCreatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.CreatedBy = &v
}

// GetDataEntryForm returns the DataEntryForm field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDataEntryForm() DataSetParamsDataEntryForm {
	if o == nil || IsNil(o.DataEntryForm) {
		var ret DataSetParamsDataEntryForm
		return ret
	}
	return *o.DataEntryForm
}

// GetDataEntryFormOk returns a tuple with the DataEntryForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDataEntryFormOk() (*DataSetParamsDataEntryForm, bool) {
	if o == nil || IsNil(o.DataEntryForm) {
		return nil, false
	}
	return o.DataEntryForm, true
}

// HasDataEntryForm returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDataEntryForm() bool {
	if o != nil && !IsNil(o.DataEntryForm) {
		return true
	}

	return false
}

// SetDataEntryForm gets a reference to the given DataSetParamsDataEntryForm and assigns it to the DataEntryForm field.
func (o *ProgramStageParams) SetDataEntryForm(v DataSetParamsDataEntryForm) {
	o.DataEntryForm = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProgramStageParams) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayDescription returns the DisplayDescription field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDisplayDescription() string {
	if o == nil || IsNil(o.DisplayDescription) {
		var ret string
		return ret
	}
	return *o.DisplayDescription
}

// GetDisplayDescriptionOk returns a tuple with the DisplayDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDisplayDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDescription) {
		return nil, false
	}
	return o.DisplayDescription, true
}

// HasDisplayDescription returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDisplayDescription() bool {
	if o != nil && !IsNil(o.DisplayDescription) {
		return true
	}

	return false
}

// SetDisplayDescription gets a reference to the given string and assigns it to the DisplayDescription field.
func (o *ProgramStageParams) SetDisplayDescription(v string) {
	o.DisplayDescription = &v
}

// GetDisplayDueDateLabel returns the DisplayDueDateLabel field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDisplayDueDateLabel() string {
	if o == nil || IsNil(o.DisplayDueDateLabel) {
		var ret string
		return ret
	}
	return *o.DisplayDueDateLabel
}

// GetDisplayDueDateLabelOk returns a tuple with the DisplayDueDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDisplayDueDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDueDateLabel) {
		return nil, false
	}
	return o.DisplayDueDateLabel, true
}

// HasDisplayDueDateLabel returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDisplayDueDateLabel() bool {
	if o != nil && !IsNil(o.DisplayDueDateLabel) {
		return true
	}

	return false
}

// SetDisplayDueDateLabel gets a reference to the given string and assigns it to the DisplayDueDateLabel field.
func (o *ProgramStageParams) SetDisplayDueDateLabel(v string) {
	o.DisplayDueDateLabel = &v
}

// GetDisplayEventLabel returns the DisplayEventLabel field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDisplayEventLabel() string {
	if o == nil || IsNil(o.DisplayEventLabel) {
		var ret string
		return ret
	}
	return *o.DisplayEventLabel
}

// GetDisplayEventLabelOk returns a tuple with the DisplayEventLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDisplayEventLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayEventLabel) {
		return nil, false
	}
	return o.DisplayEventLabel, true
}

// HasDisplayEventLabel returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDisplayEventLabel() bool {
	if o != nil && !IsNil(o.DisplayEventLabel) {
		return true
	}

	return false
}

// SetDisplayEventLabel gets a reference to the given string and assigns it to the DisplayEventLabel field.
func (o *ProgramStageParams) SetDisplayEventLabel(v string) {
	o.DisplayEventLabel = &v
}

// GetDisplayExecutionDateLabel returns the DisplayExecutionDateLabel field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDisplayExecutionDateLabel() string {
	if o == nil || IsNil(o.DisplayExecutionDateLabel) {
		var ret string
		return ret
	}
	return *o.DisplayExecutionDateLabel
}

// GetDisplayExecutionDateLabelOk returns a tuple with the DisplayExecutionDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDisplayExecutionDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayExecutionDateLabel) {
		return nil, false
	}
	return o.DisplayExecutionDateLabel, true
}

// HasDisplayExecutionDateLabel returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDisplayExecutionDateLabel() bool {
	if o != nil && !IsNil(o.DisplayExecutionDateLabel) {
		return true
	}

	return false
}

// SetDisplayExecutionDateLabel gets a reference to the given string and assigns it to the DisplayExecutionDateLabel field.
func (o *ProgramStageParams) SetDisplayExecutionDateLabel(v string) {
	o.DisplayExecutionDateLabel = &v
}

// GetDisplayFormName returns the DisplayFormName field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDisplayFormName() string {
	if o == nil || IsNil(o.DisplayFormName) {
		var ret string
		return ret
	}
	return *o.DisplayFormName
}

// GetDisplayFormNameOk returns a tuple with the DisplayFormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDisplayFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayFormName) {
		return nil, false
	}
	return o.DisplayFormName, true
}

// HasDisplayFormName returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDisplayFormName() bool {
	if o != nil && !IsNil(o.DisplayFormName) {
		return true
	}

	return false
}

// SetDisplayFormName gets a reference to the given string and assigns it to the DisplayFormName field.
func (o *ProgramStageParams) SetDisplayFormName(v string) {
	o.DisplayFormName = &v
}

// GetDisplayGenerateEventBox returns the DisplayGenerateEventBox field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDisplayGenerateEventBox() bool {
	if o == nil || IsNil(o.DisplayGenerateEventBox) {
		var ret bool
		return ret
	}
	return *o.DisplayGenerateEventBox
}

// GetDisplayGenerateEventBoxOk returns a tuple with the DisplayGenerateEventBox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDisplayGenerateEventBoxOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayGenerateEventBox) {
		return nil, false
	}
	return o.DisplayGenerateEventBox, true
}

// HasDisplayGenerateEventBox returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDisplayGenerateEventBox() bool {
	if o != nil && !IsNil(o.DisplayGenerateEventBox) {
		return true
	}

	return false
}

// SetDisplayGenerateEventBox gets a reference to the given bool and assigns it to the DisplayGenerateEventBox field.
func (o *ProgramStageParams) SetDisplayGenerateEventBox(v bool) {
	o.DisplayGenerateEventBox = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProgramStageParams) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayProgramStageLabel returns the DisplayProgramStageLabel field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDisplayProgramStageLabel() string {
	if o == nil || IsNil(o.DisplayProgramStageLabel) {
		var ret string
		return ret
	}
	return *o.DisplayProgramStageLabel
}

// GetDisplayProgramStageLabelOk returns a tuple with the DisplayProgramStageLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDisplayProgramStageLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayProgramStageLabel) {
		return nil, false
	}
	return o.DisplayProgramStageLabel, true
}

// HasDisplayProgramStageLabel returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDisplayProgramStageLabel() bool {
	if o != nil && !IsNil(o.DisplayProgramStageLabel) {
		return true
	}

	return false
}

// SetDisplayProgramStageLabel gets a reference to the given string and assigns it to the DisplayProgramStageLabel field.
func (o *ProgramStageParams) SetDisplayProgramStageLabel(v string) {
	o.DisplayProgramStageLabel = &v
}

// GetDisplayShortName returns the DisplayShortName field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDisplayShortName() string {
	if o == nil || IsNil(o.DisplayShortName) {
		var ret string
		return ret
	}
	return *o.DisplayShortName
}

// GetDisplayShortNameOk returns a tuple with the DisplayShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDisplayShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayShortName) {
		return nil, false
	}
	return o.DisplayShortName, true
}

// HasDisplayShortName returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDisplayShortName() bool {
	if o != nil && !IsNil(o.DisplayShortName) {
		return true
	}

	return false
}

// SetDisplayShortName gets a reference to the given string and assigns it to the DisplayShortName field.
func (o *ProgramStageParams) SetDisplayShortName(v string) {
	o.DisplayShortName = &v
}

// GetDueDateLabel returns the DueDateLabel field value if set, zero value otherwise.
func (o *ProgramStageParams) GetDueDateLabel() string {
	if o == nil || IsNil(o.DueDateLabel) {
		var ret string
		return ret
	}
	return *o.DueDateLabel
}

// GetDueDateLabelOk returns a tuple with the DueDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetDueDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DueDateLabel) {
		return nil, false
	}
	return o.DueDateLabel, true
}

// HasDueDateLabel returns a boolean if a field has been set.
func (o *ProgramStageParams) HasDueDateLabel() bool {
	if o != nil && !IsNil(o.DueDateLabel) {
		return true
	}

	return false
}

// SetDueDateLabel gets a reference to the given string and assigns it to the DueDateLabel field.
func (o *ProgramStageParams) SetDueDateLabel(v string) {
	o.DueDateLabel = &v
}

// GetEnableUserAssignment returns the EnableUserAssignment field value if set, zero value otherwise.
func (o *ProgramStageParams) GetEnableUserAssignment() bool {
	if o == nil || IsNil(o.EnableUserAssignment) {
		var ret bool
		return ret
	}
	return *o.EnableUserAssignment
}

// GetEnableUserAssignmentOk returns a tuple with the EnableUserAssignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetEnableUserAssignmentOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableUserAssignment) {
		return nil, false
	}
	return o.EnableUserAssignment, true
}

// HasEnableUserAssignment returns a boolean if a field has been set.
func (o *ProgramStageParams) HasEnableUserAssignment() bool {
	if o != nil && !IsNil(o.EnableUserAssignment) {
		return true
	}

	return false
}

// SetEnableUserAssignment gets a reference to the given bool and assigns it to the EnableUserAssignment field.
func (o *ProgramStageParams) SetEnableUserAssignment(v bool) {
	o.EnableUserAssignment = &v
}

// GetEventLabel returns the EventLabel field value if set, zero value otherwise.
func (o *ProgramStageParams) GetEventLabel() string {
	if o == nil || IsNil(o.EventLabel) {
		var ret string
		return ret
	}
	return *o.EventLabel
}

// GetEventLabelOk returns a tuple with the EventLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetEventLabelOk() (*string, bool) {
	if o == nil || IsNil(o.EventLabel) {
		return nil, false
	}
	return o.EventLabel, true
}

// HasEventLabel returns a boolean if a field has been set.
func (o *ProgramStageParams) HasEventLabel() bool {
	if o != nil && !IsNil(o.EventLabel) {
		return true
	}

	return false
}

// SetEventLabel gets a reference to the given string and assigns it to the EventLabel field.
func (o *ProgramStageParams) SetEventLabel(v string) {
	o.EventLabel = &v
}

// GetExecutionDateLabel returns the ExecutionDateLabel field value if set, zero value otherwise.
func (o *ProgramStageParams) GetExecutionDateLabel() string {
	if o == nil || IsNil(o.ExecutionDateLabel) {
		var ret string
		return ret
	}
	return *o.ExecutionDateLabel
}

// GetExecutionDateLabelOk returns a tuple with the ExecutionDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetExecutionDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionDateLabel) {
		return nil, false
	}
	return o.ExecutionDateLabel, true
}

// HasExecutionDateLabel returns a boolean if a field has been set.
func (o *ProgramStageParams) HasExecutionDateLabel() bool {
	if o != nil && !IsNil(o.ExecutionDateLabel) {
		return true
	}

	return false
}

// SetExecutionDateLabel gets a reference to the given string and assigns it to the ExecutionDateLabel field.
func (o *ProgramStageParams) SetExecutionDateLabel(v string) {
	o.ExecutionDateLabel = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ProgramStageParams) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ProgramStageParams) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ProgramStageParams) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *ProgramStageParams) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *ProgramStageParams) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *ProgramStageParams) SetFavorites(v []string) {
	o.Favorites = v
}

// GetFeatureType returns the FeatureType field value
func (o *ProgramStageParams) GetFeatureType() FeatureType {
	if o == nil {
		var ret FeatureType
		return ret
	}

	return o.FeatureType
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetFeatureTypeOk() (*FeatureType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureType, true
}

// SetFeatureType sets field value
func (o *ProgramStageParams) SetFeatureType(v FeatureType) {
	o.FeatureType = v
}

// GetFormName returns the FormName field value if set, zero value otherwise.
func (o *ProgramStageParams) GetFormName() string {
	if o == nil || IsNil(o.FormName) {
		var ret string
		return ret
	}
	return *o.FormName
}

// GetFormNameOk returns a tuple with the FormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.FormName) {
		return nil, false
	}
	return o.FormName, true
}

// HasFormName returns a boolean if a field has been set.
func (o *ProgramStageParams) HasFormName() bool {
	if o != nil && !IsNil(o.FormName) {
		return true
	}

	return false
}

// SetFormName gets a reference to the given string and assigns it to the FormName field.
func (o *ProgramStageParams) SetFormName(v string) {
	o.FormName = &v
}

// GetFormType returns the FormType field value
func (o *ProgramStageParams) GetFormType() FormType {
	if o == nil {
		var ret FormType
		return ret
	}

	return o.FormType
}

// GetFormTypeOk returns a tuple with the FormType field value
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetFormTypeOk() (*FormType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FormType, true
}

// SetFormType sets field value
func (o *ProgramStageParams) SetFormType(v FormType) {
	o.FormType = v
}

// GetGeneratedByEnrollmentDate returns the GeneratedByEnrollmentDate field value if set, zero value otherwise.
func (o *ProgramStageParams) GetGeneratedByEnrollmentDate() bool {
	if o == nil || IsNil(o.GeneratedByEnrollmentDate) {
		var ret bool
		return ret
	}
	return *o.GeneratedByEnrollmentDate
}

// GetGeneratedByEnrollmentDateOk returns a tuple with the GeneratedByEnrollmentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetGeneratedByEnrollmentDateOk() (*bool, bool) {
	if o == nil || IsNil(o.GeneratedByEnrollmentDate) {
		return nil, false
	}
	return o.GeneratedByEnrollmentDate, true
}

// HasGeneratedByEnrollmentDate returns a boolean if a field has been set.
func (o *ProgramStageParams) HasGeneratedByEnrollmentDate() bool {
	if o != nil && !IsNil(o.GeneratedByEnrollmentDate) {
		return true
	}

	return false
}

// SetGeneratedByEnrollmentDate gets a reference to the given bool and assigns it to the GeneratedByEnrollmentDate field.
func (o *ProgramStageParams) SetGeneratedByEnrollmentDate(v bool) {
	o.GeneratedByEnrollmentDate = &v
}

// GetHideDueDate returns the HideDueDate field value if set, zero value otherwise.
func (o *ProgramStageParams) GetHideDueDate() bool {
	if o == nil || IsNil(o.HideDueDate) {
		var ret bool
		return ret
	}
	return *o.HideDueDate
}

// GetHideDueDateOk returns a tuple with the HideDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetHideDueDateOk() (*bool, bool) {
	if o == nil || IsNil(o.HideDueDate) {
		return nil, false
	}
	return o.HideDueDate, true
}

// HasHideDueDate returns a boolean if a field has been set.
func (o *ProgramStageParams) HasHideDueDate() bool {
	if o != nil && !IsNil(o.HideDueDate) {
		return true
	}

	return false
}

// SetHideDueDate gets a reference to the given bool and assigns it to the HideDueDate field.
func (o *ProgramStageParams) SetHideDueDate(v bool) {
	o.HideDueDate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProgramStageParams) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProgramStageParams) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProgramStageParams) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ProgramStageParams) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ProgramStageParams) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ProgramStageParams) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *ProgramStageParams) GetLastUpdatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetLastUpdatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *ProgramStageParams) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the LastUpdatedBy field.
func (o *ProgramStageParams) SetLastUpdatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetMinDaysFromStart returns the MinDaysFromStart field value
func (o *ProgramStageParams) GetMinDaysFromStart() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinDaysFromStart
}

// GetMinDaysFromStartOk returns a tuple with the MinDaysFromStart field value
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetMinDaysFromStartOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinDaysFromStart, true
}

// SetMinDaysFromStart sets field value
func (o *ProgramStageParams) SetMinDaysFromStart(v int32) {
	o.MinDaysFromStart = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProgramStageParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProgramStageParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProgramStageParams) SetName(v string) {
	o.Name = &v
}

// GetNextScheduleDate returns the NextScheduleDate field value if set, zero value otherwise.
func (o *ProgramStageParams) GetNextScheduleDate() DataElementGroupParamsDataElementsInner {
	if o == nil || IsNil(o.NextScheduleDate) {
		var ret DataElementGroupParamsDataElementsInner
		return ret
	}
	return *o.NextScheduleDate
}

// GetNextScheduleDateOk returns a tuple with the NextScheduleDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetNextScheduleDateOk() (*DataElementGroupParamsDataElementsInner, bool) {
	if o == nil || IsNil(o.NextScheduleDate) {
		return nil, false
	}
	return o.NextScheduleDate, true
}

// HasNextScheduleDate returns a boolean if a field has been set.
func (o *ProgramStageParams) HasNextScheduleDate() bool {
	if o != nil && !IsNil(o.NextScheduleDate) {
		return true
	}

	return false
}

// SetNextScheduleDate gets a reference to the given DataElementGroupParamsDataElementsInner and assigns it to the NextScheduleDate field.
func (o *ProgramStageParams) SetNextScheduleDate(v DataElementGroupParamsDataElementsInner) {
	o.NextScheduleDate = &v
}

// GetNotificationTemplates returns the NotificationTemplates field value if set, zero value otherwise.
func (o *ProgramStageParams) GetNotificationTemplates() []ProgramParamsNotificationTemplatesInner {
	if o == nil || IsNil(o.NotificationTemplates) {
		var ret []ProgramParamsNotificationTemplatesInner
		return ret
	}
	return o.NotificationTemplates
}

// GetNotificationTemplatesOk returns a tuple with the NotificationTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetNotificationTemplatesOk() ([]ProgramParamsNotificationTemplatesInner, bool) {
	if o == nil || IsNil(o.NotificationTemplates) {
		return nil, false
	}
	return o.NotificationTemplates, true
}

// HasNotificationTemplates returns a boolean if a field has been set.
func (o *ProgramStageParams) HasNotificationTemplates() bool {
	if o != nil && !IsNil(o.NotificationTemplates) {
		return true
	}

	return false
}

// SetNotificationTemplates gets a reference to the given []ProgramParamsNotificationTemplatesInner and assigns it to the NotificationTemplates field.
func (o *ProgramStageParams) SetNotificationTemplates(v []ProgramParamsNotificationTemplatesInner) {
	o.NotificationTemplates = v
}

// GetOpenAfterEnrollment returns the OpenAfterEnrollment field value if set, zero value otherwise.
func (o *ProgramStageParams) GetOpenAfterEnrollment() bool {
	if o == nil || IsNil(o.OpenAfterEnrollment) {
		var ret bool
		return ret
	}
	return *o.OpenAfterEnrollment
}

// GetOpenAfterEnrollmentOk returns a tuple with the OpenAfterEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetOpenAfterEnrollmentOk() (*bool, bool) {
	if o == nil || IsNil(o.OpenAfterEnrollment) {
		return nil, false
	}
	return o.OpenAfterEnrollment, true
}

// HasOpenAfterEnrollment returns a boolean if a field has been set.
func (o *ProgramStageParams) HasOpenAfterEnrollment() bool {
	if o != nil && !IsNil(o.OpenAfterEnrollment) {
		return true
	}

	return false
}

// SetOpenAfterEnrollment gets a reference to the given bool and assigns it to the OpenAfterEnrollment field.
func (o *ProgramStageParams) SetOpenAfterEnrollment(v bool) {
	o.OpenAfterEnrollment = &v
}

// GetPeriodType returns the PeriodType field value if set, zero value otherwise.
func (o *ProgramStageParams) GetPeriodType() string {
	if o == nil || IsNil(o.PeriodType) {
		var ret string
		return ret
	}
	return *o.PeriodType
}

// GetPeriodTypeOk returns a tuple with the PeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetPeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodType) {
		return nil, false
	}
	return o.PeriodType, true
}

// HasPeriodType returns a boolean if a field has been set.
func (o *ProgramStageParams) HasPeriodType() bool {
	if o != nil && !IsNil(o.PeriodType) {
		return true
	}

	return false
}

// SetPeriodType gets a reference to the given string and assigns it to the PeriodType field.
func (o *ProgramStageParams) SetPeriodType(v string) {
	o.PeriodType = &v
}

// GetPreGenerateUID returns the PreGenerateUID field value if set, zero value otherwise.
func (o *ProgramStageParams) GetPreGenerateUID() bool {
	if o == nil || IsNil(o.PreGenerateUID) {
		var ret bool
		return ret
	}
	return *o.PreGenerateUID
}

// GetPreGenerateUIDOk returns a tuple with the PreGenerateUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetPreGenerateUIDOk() (*bool, bool) {
	if o == nil || IsNil(o.PreGenerateUID) {
		return nil, false
	}
	return o.PreGenerateUID, true
}

// HasPreGenerateUID returns a boolean if a field has been set.
func (o *ProgramStageParams) HasPreGenerateUID() bool {
	if o != nil && !IsNil(o.PreGenerateUID) {
		return true
	}

	return false
}

// SetPreGenerateUID gets a reference to the given bool and assigns it to the PreGenerateUID field.
func (o *ProgramStageParams) SetPreGenerateUID(v bool) {
	o.PreGenerateUID = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *ProgramStageParams) GetProgram() ProgramParams {
	if o == nil || IsNil(o.Program) {
		var ret ProgramParams
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetProgramOk() (*ProgramParams, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *ProgramStageParams) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given ProgramParams and assigns it to the Program field.
func (o *ProgramStageParams) SetProgram(v ProgramParams) {
	o.Program = &v
}

// GetProgramStageDataElements returns the ProgramStageDataElements field value if set, zero value otherwise.
func (o *ProgramStageParams) GetProgramStageDataElements() []ProgramStageDataElementParams {
	if o == nil || IsNil(o.ProgramStageDataElements) {
		var ret []ProgramStageDataElementParams
		return ret
	}
	return o.ProgramStageDataElements
}

// GetProgramStageDataElementsOk returns a tuple with the ProgramStageDataElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetProgramStageDataElementsOk() ([]ProgramStageDataElementParams, bool) {
	if o == nil || IsNil(o.ProgramStageDataElements) {
		return nil, false
	}
	return o.ProgramStageDataElements, true
}

// HasProgramStageDataElements returns a boolean if a field has been set.
func (o *ProgramStageParams) HasProgramStageDataElements() bool {
	if o != nil && !IsNil(o.ProgramStageDataElements) {
		return true
	}

	return false
}

// SetProgramStageDataElements gets a reference to the given []ProgramStageDataElementParams and assigns it to the ProgramStageDataElements field.
func (o *ProgramStageParams) SetProgramStageDataElements(v []ProgramStageDataElementParams) {
	o.ProgramStageDataElements = v
}

// GetProgramStageLabel returns the ProgramStageLabel field value if set, zero value otherwise.
func (o *ProgramStageParams) GetProgramStageLabel() string {
	if o == nil || IsNil(o.ProgramStageLabel) {
		var ret string
		return ret
	}
	return *o.ProgramStageLabel
}

// GetProgramStageLabelOk returns a tuple with the ProgramStageLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetProgramStageLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ProgramStageLabel) {
		return nil, false
	}
	return o.ProgramStageLabel, true
}

// HasProgramStageLabel returns a boolean if a field has been set.
func (o *ProgramStageParams) HasProgramStageLabel() bool {
	if o != nil && !IsNil(o.ProgramStageLabel) {
		return true
	}

	return false
}

// SetProgramStageLabel gets a reference to the given string and assigns it to the ProgramStageLabel field.
func (o *ProgramStageParams) SetProgramStageLabel(v string) {
	o.ProgramStageLabel = &v
}

// GetProgramStageSections returns the ProgramStageSections field value if set, zero value otherwise.
func (o *ProgramStageParams) GetProgramStageSections() []ProgramStageParamsProgramStageSectionsInner {
	if o == nil || IsNil(o.ProgramStageSections) {
		var ret []ProgramStageParamsProgramStageSectionsInner
		return ret
	}
	return o.ProgramStageSections
}

// GetProgramStageSectionsOk returns a tuple with the ProgramStageSections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetProgramStageSectionsOk() ([]ProgramStageParamsProgramStageSectionsInner, bool) {
	if o == nil || IsNil(o.ProgramStageSections) {
		return nil, false
	}
	return o.ProgramStageSections, true
}

// HasProgramStageSections returns a boolean if a field has been set.
func (o *ProgramStageParams) HasProgramStageSections() bool {
	if o != nil && !IsNil(o.ProgramStageSections) {
		return true
	}

	return false
}

// SetProgramStageSections gets a reference to the given []ProgramStageParamsProgramStageSectionsInner and assigns it to the ProgramStageSections field.
func (o *ProgramStageParams) SetProgramStageSections(v []ProgramStageParamsProgramStageSectionsInner) {
	o.ProgramStageSections = v
}

// GetReferral returns the Referral field value if set, zero value otherwise.
func (o *ProgramStageParams) GetReferral() bool {
	if o == nil || IsNil(o.Referral) {
		var ret bool
		return ret
	}
	return *o.Referral
}

// GetReferralOk returns a tuple with the Referral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetReferralOk() (*bool, bool) {
	if o == nil || IsNil(o.Referral) {
		return nil, false
	}
	return o.Referral, true
}

// HasReferral returns a boolean if a field has been set.
func (o *ProgramStageParams) HasReferral() bool {
	if o != nil && !IsNil(o.Referral) {
		return true
	}

	return false
}

// SetReferral gets a reference to the given bool and assigns it to the Referral field.
func (o *ProgramStageParams) SetReferral(v bool) {
	o.Referral = &v
}

// GetRemindCompleted returns the RemindCompleted field value if set, zero value otherwise.
func (o *ProgramStageParams) GetRemindCompleted() bool {
	if o == nil || IsNil(o.RemindCompleted) {
		var ret bool
		return ret
	}
	return *o.RemindCompleted
}

// GetRemindCompletedOk returns a tuple with the RemindCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetRemindCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.RemindCompleted) {
		return nil, false
	}
	return o.RemindCompleted, true
}

// HasRemindCompleted returns a boolean if a field has been set.
func (o *ProgramStageParams) HasRemindCompleted() bool {
	if o != nil && !IsNil(o.RemindCompleted) {
		return true
	}

	return false
}

// SetRemindCompleted gets a reference to the given bool and assigns it to the RemindCompleted field.
func (o *ProgramStageParams) SetRemindCompleted(v bool) {
	o.RemindCompleted = &v
}

// GetRepeatable returns the Repeatable field value if set, zero value otherwise.
func (o *ProgramStageParams) GetRepeatable() bool {
	if o == nil || IsNil(o.Repeatable) {
		var ret bool
		return ret
	}
	return *o.Repeatable
}

// GetRepeatableOk returns a tuple with the Repeatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetRepeatableOk() (*bool, bool) {
	if o == nil || IsNil(o.Repeatable) {
		return nil, false
	}
	return o.Repeatable, true
}

// HasRepeatable returns a boolean if a field has been set.
func (o *ProgramStageParams) HasRepeatable() bool {
	if o != nil && !IsNil(o.Repeatable) {
		return true
	}

	return false
}

// SetRepeatable gets a reference to the given bool and assigns it to the Repeatable field.
func (o *ProgramStageParams) SetRepeatable(v bool) {
	o.Repeatable = &v
}

// GetReportDateToUse returns the ReportDateToUse field value if set, zero value otherwise.
func (o *ProgramStageParams) GetReportDateToUse() string {
	if o == nil || IsNil(o.ReportDateToUse) {
		var ret string
		return ret
	}
	return *o.ReportDateToUse
}

// GetReportDateToUseOk returns a tuple with the ReportDateToUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetReportDateToUseOk() (*string, bool) {
	if o == nil || IsNil(o.ReportDateToUse) {
		return nil, false
	}
	return o.ReportDateToUse, true
}

// HasReportDateToUse returns a boolean if a field has been set.
func (o *ProgramStageParams) HasReportDateToUse() bool {
	if o != nil && !IsNil(o.ReportDateToUse) {
		return true
	}

	return false
}

// SetReportDateToUse gets a reference to the given string and assigns it to the ReportDateToUse field.
func (o *ProgramStageParams) SetReportDateToUse(v string) {
	o.ReportDateToUse = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ProgramStageParams) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ProgramStageParams) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ProgramStageParams) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *ProgramStageParams) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *ProgramStageParams) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *ProgramStageParams) SetShortName(v string) {
	o.ShortName = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ProgramStageParams) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *ProgramStageParams) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *ProgramStageParams) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetStandardInterval returns the StandardInterval field value if set, zero value otherwise.
func (o *ProgramStageParams) GetStandardInterval() int32 {
	if o == nil || IsNil(o.StandardInterval) {
		var ret int32
		return ret
	}
	return *o.StandardInterval
}

// GetStandardIntervalOk returns a tuple with the StandardInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetStandardIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.StandardInterval) {
		return nil, false
	}
	return o.StandardInterval, true
}

// HasStandardInterval returns a boolean if a field has been set.
func (o *ProgramStageParams) HasStandardInterval() bool {
	if o != nil && !IsNil(o.StandardInterval) {
		return true
	}

	return false
}

// SetStandardInterval gets a reference to the given int32 and assigns it to the StandardInterval field.
func (o *ProgramStageParams) SetStandardInterval(v int32) {
	o.StandardInterval = &v
}

// GetStyle returns the Style field value if set, zero value otherwise.
func (o *ProgramStageParams) GetStyle() ObjectStyle {
	if o == nil || IsNil(o.Style) {
		var ret ObjectStyle
		return ret
	}
	return *o.Style
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetStyleOk() (*ObjectStyle, bool) {
	if o == nil || IsNil(o.Style) {
		return nil, false
	}
	return o.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (o *ProgramStageParams) HasStyle() bool {
	if o != nil && !IsNil(o.Style) {
		return true
	}

	return false
}

// SetStyle gets a reference to the given ObjectStyle and assigns it to the Style field.
func (o *ProgramStageParams) SetStyle(v ObjectStyle) {
	o.Style = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ProgramStageParams) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ProgramStageParams) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *ProgramStageParams) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetValidationStrategy returns the ValidationStrategy field value
func (o *ProgramStageParams) GetValidationStrategy() ValidationStrategy {
	if o == nil {
		var ret ValidationStrategy
		return ret
	}

	return o.ValidationStrategy
}

// GetValidationStrategyOk returns a tuple with the ValidationStrategy field value
// and a boolean to check if the value has been set.
func (o *ProgramStageParams) GetValidationStrategyOk() (*ValidationStrategy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidationStrategy, true
}

// SetValidationStrategy sets field value
func (o *ProgramStageParams) SetValidationStrategy(v ValidationStrategy) {
	o.ValidationStrategy = v
}

func (o ProgramStageParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramStageParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowGenerateNextVisit) {
		toSerialize["allowGenerateNextVisit"] = o.AllowGenerateNextVisit
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.AutoGenerateEvent) {
		toSerialize["autoGenerateEvent"] = o.AutoGenerateEvent
	}
	if !IsNil(o.BlockEntryForm) {
		toSerialize["blockEntryForm"] = o.BlockEntryForm
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DataEntryForm) {
		toSerialize["dataEntryForm"] = o.DataEntryForm
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayDescription) {
		toSerialize["displayDescription"] = o.DisplayDescription
	}
	if !IsNil(o.DisplayDueDateLabel) {
		toSerialize["displayDueDateLabel"] = o.DisplayDueDateLabel
	}
	if !IsNil(o.DisplayEventLabel) {
		toSerialize["displayEventLabel"] = o.DisplayEventLabel
	}
	if !IsNil(o.DisplayExecutionDateLabel) {
		toSerialize["displayExecutionDateLabel"] = o.DisplayExecutionDateLabel
	}
	if !IsNil(o.DisplayFormName) {
		toSerialize["displayFormName"] = o.DisplayFormName
	}
	if !IsNil(o.DisplayGenerateEventBox) {
		toSerialize["displayGenerateEventBox"] = o.DisplayGenerateEventBox
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplayProgramStageLabel) {
		toSerialize["displayProgramStageLabel"] = o.DisplayProgramStageLabel
	}
	if !IsNil(o.DisplayShortName) {
		toSerialize["displayShortName"] = o.DisplayShortName
	}
	if !IsNil(o.DueDateLabel) {
		toSerialize["dueDateLabel"] = o.DueDateLabel
	}
	if !IsNil(o.EnableUserAssignment) {
		toSerialize["enableUserAssignment"] = o.EnableUserAssignment
	}
	if !IsNil(o.EventLabel) {
		toSerialize["eventLabel"] = o.EventLabel
	}
	if !IsNil(o.ExecutionDateLabel) {
		toSerialize["executionDateLabel"] = o.ExecutionDateLabel
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	toSerialize["featureType"] = o.FeatureType
	if !IsNil(o.FormName) {
		toSerialize["formName"] = o.FormName
	}
	toSerialize["formType"] = o.FormType
	if !IsNil(o.GeneratedByEnrollmentDate) {
		toSerialize["generatedByEnrollmentDate"] = o.GeneratedByEnrollmentDate
	}
	if !IsNil(o.HideDueDate) {
		toSerialize["hideDueDate"] = o.HideDueDate
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	toSerialize["minDaysFromStart"] = o.MinDaysFromStart
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NextScheduleDate) {
		toSerialize["nextScheduleDate"] = o.NextScheduleDate
	}
	if !IsNil(o.NotificationTemplates) {
		toSerialize["notificationTemplates"] = o.NotificationTemplates
	}
	if !IsNil(o.OpenAfterEnrollment) {
		toSerialize["openAfterEnrollment"] = o.OpenAfterEnrollment
	}
	if !IsNil(o.PeriodType) {
		toSerialize["periodType"] = o.PeriodType
	}
	if !IsNil(o.PreGenerateUID) {
		toSerialize["preGenerateUID"] = o.PreGenerateUID
	}
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.ProgramStageDataElements) {
		toSerialize["programStageDataElements"] = o.ProgramStageDataElements
	}
	if !IsNil(o.ProgramStageLabel) {
		toSerialize["programStageLabel"] = o.ProgramStageLabel
	}
	if !IsNil(o.ProgramStageSections) {
		toSerialize["programStageSections"] = o.ProgramStageSections
	}
	if !IsNil(o.Referral) {
		toSerialize["referral"] = o.Referral
	}
	if !IsNil(o.RemindCompleted) {
		toSerialize["remindCompleted"] = o.RemindCompleted
	}
	if !IsNil(o.Repeatable) {
		toSerialize["repeatable"] = o.Repeatable
	}
	if !IsNil(o.ReportDateToUse) {
		toSerialize["reportDateToUse"] = o.ReportDateToUse
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sortOrder"] = o.SortOrder
	}
	if !IsNil(o.StandardInterval) {
		toSerialize["standardInterval"] = o.StandardInterval
	}
	if !IsNil(o.Style) {
		toSerialize["style"] = o.Style
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	toSerialize["validationStrategy"] = o.ValidationStrategy
	return toSerialize, nil
}

func (o *ProgramStageParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"featureType",
		"formType",
		"minDaysFromStart",
		"validationStrategy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramStageParams := _ProgramStageParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgramStageParams)

	if err != nil {
		return err
	}

	*o = ProgramStageParams(varProgramStageParams)

	return err
}

type NullableProgramStageParams struct {
	value *ProgramStageParams
	isSet bool
}

func (v NullableProgramStageParams) Get() *ProgramStageParams {
	return v.value
}

func (v *NullableProgramStageParams) Set(val *ProgramStageParams) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramStageParams) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramStageParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramStageParams(val *ProgramStageParams) *NullableProgramStageParams {
	return &NullableProgramStageParams{value: val, isSet: true}
}

func (v NullableProgramStageParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramStageParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
