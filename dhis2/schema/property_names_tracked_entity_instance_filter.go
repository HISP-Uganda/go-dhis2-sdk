/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesTrackedEntityInstanceFilter the model 'PropertyNamesTrackedEntityInstanceFilter'
type PropertyNamesTrackedEntityInstanceFilter string

// List of PropertyNames_TrackedEntityInstanceFilter
const (
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_ACCESS                    PropertyNamesTrackedEntityInstanceFilter = "access"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_ATTRIBUTE_VALUES          PropertyNamesTrackedEntityInstanceFilter = "attributeValues"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_CODE                      PropertyNamesTrackedEntityInstanceFilter = "code"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_CREATED                   PropertyNamesTrackedEntityInstanceFilter = "created"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_CREATED_BY                PropertyNamesTrackedEntityInstanceFilter = "createdBy"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_DESCRIPTION               PropertyNamesTrackedEntityInstanceFilter = "description"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_DISPLAY_DESCRIPTION       PropertyNamesTrackedEntityInstanceFilter = "displayDescription"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_DISPLAY_NAME              PropertyNamesTrackedEntityInstanceFilter = "displayName"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_ENROLLMENT_CREATED_PERIOD PropertyNamesTrackedEntityInstanceFilter = "enrollmentCreatedPeriod"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_ENROLLMENT_STATUS         PropertyNamesTrackedEntityInstanceFilter = "enrollmentStatus"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_ENTITY_QUERY_CRITERIA     PropertyNamesTrackedEntityInstanceFilter = "entityQueryCriteria"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_EVENT_FILTERS             PropertyNamesTrackedEntityInstanceFilter = "eventFilters"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_EXTERNAL_ACCESS           PropertyNamesTrackedEntityInstanceFilter = "externalAccess"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_FAVORITE                  PropertyNamesTrackedEntityInstanceFilter = "favorite"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_FAVORITES                 PropertyNamesTrackedEntityInstanceFilter = "favorites"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_FOLLOWUP                  PropertyNamesTrackedEntityInstanceFilter = "followup"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_HREF                      PropertyNamesTrackedEntityInstanceFilter = "href"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_ID                        PropertyNamesTrackedEntityInstanceFilter = "id"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_LAST_UPDATED              PropertyNamesTrackedEntityInstanceFilter = "lastUpdated"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_LAST_UPDATED_BY           PropertyNamesTrackedEntityInstanceFilter = "lastUpdatedBy"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_NAME                      PropertyNamesTrackedEntityInstanceFilter = "name"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_PROGRAM                   PropertyNamesTrackedEntityInstanceFilter = "program"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_PUBLIC_ACCESS             PropertyNamesTrackedEntityInstanceFilter = "publicAccess"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_SHARING                   PropertyNamesTrackedEntityInstanceFilter = "sharing"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_SORT_ORDER                PropertyNamesTrackedEntityInstanceFilter = "sortOrder"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_STYLE                     PropertyNamesTrackedEntityInstanceFilter = "style"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_TRANSLATIONS              PropertyNamesTrackedEntityInstanceFilter = "translations"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_USER                      PropertyNamesTrackedEntityInstanceFilter = "user"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_USER_ACCESSES             PropertyNamesTrackedEntityInstanceFilter = "userAccesses"
	PROPERTYNAMESTRACKEDENTITYINSTANCEFILTER_USER_GROUP_ACCESSES       PropertyNamesTrackedEntityInstanceFilter = "userGroupAccesses"
)

// All allowed values of PropertyNamesTrackedEntityInstanceFilter enum
var AllowedPropertyNamesTrackedEntityInstanceFilterEnumValues = []PropertyNamesTrackedEntityInstanceFilter{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"description",
	"displayDescription",
	"displayName",
	"enrollmentCreatedPeriod",
	"enrollmentStatus",
	"entityQueryCriteria",
	"eventFilters",
	"externalAccess",
	"favorite",
	"favorites",
	"followup",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"program",
	"publicAccess",
	"sharing",
	"sortOrder",
	"style",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesTrackedEntityInstanceFilter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesTrackedEntityInstanceFilter(value)
	for _, existing := range AllowedPropertyNamesTrackedEntityInstanceFilterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesTrackedEntityInstanceFilter", value)
}

// NewPropertyNamesTrackedEntityInstanceFilterFromValue returns a pointer to a valid PropertyNamesTrackedEntityInstanceFilter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesTrackedEntityInstanceFilterFromValue(v string) (*PropertyNamesTrackedEntityInstanceFilter, error) {
	ev := PropertyNamesTrackedEntityInstanceFilter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesTrackedEntityInstanceFilter: valid values are %v", v, AllowedPropertyNamesTrackedEntityInstanceFilterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesTrackedEntityInstanceFilter) IsValid() bool {
	for _, existing := range AllowedPropertyNamesTrackedEntityInstanceFilterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_TrackedEntityInstanceFilter value
func (v PropertyNamesTrackedEntityInstanceFilter) Ptr() *PropertyNamesTrackedEntityInstanceFilter {
	return &v
}

type NullablePropertyNamesTrackedEntityInstanceFilter struct {
	value *PropertyNamesTrackedEntityInstanceFilter
	isSet bool
}

func (v NullablePropertyNamesTrackedEntityInstanceFilter) Get() *PropertyNamesTrackedEntityInstanceFilter {
	return v.value
}

func (v *NullablePropertyNamesTrackedEntityInstanceFilter) Set(val *PropertyNamesTrackedEntityInstanceFilter) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesTrackedEntityInstanceFilter) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesTrackedEntityInstanceFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesTrackedEntityInstanceFilter(val *PropertyNamesTrackedEntityInstanceFilter) *NullablePropertyNamesTrackedEntityInstanceFilter {
	return &NullablePropertyNamesTrackedEntityInstanceFilter{value: val, isSet: true}
}

func (v NullablePropertyNamesTrackedEntityInstanceFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesTrackedEntityInstanceFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
