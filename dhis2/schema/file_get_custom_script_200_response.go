/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// FileGetCustomScript200Response - struct for FileGetCustomScript200Response
type FileGetCustomScript200Response struct {
	Bool    *bool
	Float32 *float32
	String  *string
}

// boolAsFileGetCustomScript200Response is a convenience function that returns bool wrapped in FileGetCustomScript200Response
func BoolAsFileGetCustomScript200Response(v *bool) FileGetCustomScript200Response {
	return FileGetCustomScript200Response{
		Bool: v,
	}
}

// float32AsFileGetCustomScript200Response is a convenience function that returns float32 wrapped in FileGetCustomScript200Response
func Float32AsFileGetCustomScript200Response(v *float32) FileGetCustomScript200Response {
	return FileGetCustomScript200Response{
		Float32: v,
	}
}

// stringAsFileGetCustomScript200Response is a convenience function that returns string wrapped in FileGetCustomScript200Response
func StringAsFileGetCustomScript200Response(v *string) FileGetCustomScript200Response {
	return FileGetCustomScript200Response{
		String: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *FileGetCustomScript200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Bool
	err = newStrictDecoder(data).Decode(&dst.Bool)
	if err == nil {
		jsonBool, _ := json.Marshal(dst.Bool)
		if string(jsonBool) == "{}" { // empty struct
			dst.Bool = nil
		} else {
			match++
		}
	} else {
		dst.Bool = nil
	}

	// try to unmarshal data into Float32
	err = newStrictDecoder(data).Decode(&dst.Float32)
	if err == nil {
		jsonFloat32, _ := json.Marshal(dst.Float32)
		if string(jsonFloat32) == "{}" { // empty struct
			dst.Float32 = nil
		} else {
			match++
		}
	} else {
		dst.Float32 = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Bool = nil
		dst.Float32 = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(FileGetCustomScript200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(FileGetCustomScript200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src FileGetCustomScript200Response) MarshalJSON() ([]byte, error) {
	if src.Bool != nil {
		return json.Marshal(&src.Bool)
	}

	if src.Float32 != nil {
		return json.Marshal(&src.Float32)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *FileGetCustomScript200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Bool != nil {
		return obj.Bool
	}

	if obj.Float32 != nil {
		return obj.Float32
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableFileGetCustomScript200Response struct {
	value *FileGetCustomScript200Response
	isSet bool
}

func (v NullableFileGetCustomScript200Response) Get() *FileGetCustomScript200Response {
	return v.value
}

func (v *NullableFileGetCustomScript200Response) Set(val *FileGetCustomScript200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableFileGetCustomScript200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableFileGetCustomScript200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileGetCustomScript200Response(val *FileGetCustomScript200Response) *NullableFileGetCustomScript200Response {
	return &NullableFileGetCustomScript200Response{value: val, isSet: true}
}

func (v NullableFileGetCustomScript200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileGetCustomScript200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
