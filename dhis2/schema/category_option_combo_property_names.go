/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// CategoryOptionComboPropertyNames the model 'CategoryOptionComboPropertyNames'
type CategoryOptionComboPropertyNames string

// List of CategoryOptionComboPropertyNames
const (
	CATEGORYOPTIONCOMBOPROPERTYNAMES_ACCESS              CategoryOptionComboPropertyNames = "access"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_AGGREGATION_TYPE    CategoryOptionComboPropertyNames = "aggregationType"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_ATTRIBUTE_VALUES    CategoryOptionComboPropertyNames = "attributeValues"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_CATEGORY_COMBO      CategoryOptionComboPropertyNames = "categoryCombo"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_CATEGORY_OPTIONS    CategoryOptionComboPropertyNames = "categoryOptions"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_CODE                CategoryOptionComboPropertyNames = "code"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_CREATED             CategoryOptionComboPropertyNames = "created"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_CREATED_BY          CategoryOptionComboPropertyNames = "createdBy"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_DESCRIPTION         CategoryOptionComboPropertyNames = "description"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_DIMENSION_ITEM      CategoryOptionComboPropertyNames = "dimensionItem"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_DIMENSION_ITEM_TYPE CategoryOptionComboPropertyNames = "dimensionItemType"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_DISPLAY_DESCRIPTION CategoryOptionComboPropertyNames = "displayDescription"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_DISPLAY_FORM_NAME   CategoryOptionComboPropertyNames = "displayFormName"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_DISPLAY_NAME        CategoryOptionComboPropertyNames = "displayName"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_DISPLAY_SHORT_NAME  CategoryOptionComboPropertyNames = "displayShortName"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_FAVORITE            CategoryOptionComboPropertyNames = "favorite"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_FAVORITES           CategoryOptionComboPropertyNames = "favorites"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_FORM_NAME           CategoryOptionComboPropertyNames = "formName"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_HREF                CategoryOptionComboPropertyNames = "href"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_ID                  CategoryOptionComboPropertyNames = "id"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_IGNORE_APPROVAL     CategoryOptionComboPropertyNames = "ignoreApproval"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_LAST_UPDATED        CategoryOptionComboPropertyNames = "lastUpdated"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_LAST_UPDATED_BY     CategoryOptionComboPropertyNames = "lastUpdatedBy"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_LEGEND_SET          CategoryOptionComboPropertyNames = "legendSet"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_LEGEND_SETS         CategoryOptionComboPropertyNames = "legendSets"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_QUERY_MODS          CategoryOptionComboPropertyNames = "queryMods"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_SHARING             CategoryOptionComboPropertyNames = "sharing"
	CATEGORYOPTIONCOMBOPROPERTYNAMES_TRANSLATIONS        CategoryOptionComboPropertyNames = "translations"
)

// All allowed values of CategoryOptionComboPropertyNames enum
var AllowedCategoryOptionComboPropertyNamesEnumValues = []CategoryOptionComboPropertyNames{
	"access",
	"aggregationType",
	"attributeValues",
	"categoryCombo",
	"categoryOptions",
	"code",
	"created",
	"createdBy",
	"description",
	"dimensionItem",
	"dimensionItemType",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"favorite",
	"favorites",
	"formName",
	"href",
	"id",
	"ignoreApproval",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"queryMods",
	"sharing",
	"translations",
}

func (v *CategoryOptionComboPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CategoryOptionComboPropertyNames(value)
	for _, existing := range AllowedCategoryOptionComboPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CategoryOptionComboPropertyNames", value)
}

// NewCategoryOptionComboPropertyNamesFromValue returns a pointer to a valid CategoryOptionComboPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCategoryOptionComboPropertyNamesFromValue(v string) (*CategoryOptionComboPropertyNames, error) {
	ev := CategoryOptionComboPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CategoryOptionComboPropertyNames: valid values are %v", v, AllowedCategoryOptionComboPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CategoryOptionComboPropertyNames) IsValid() bool {
	for _, existing := range AllowedCategoryOptionComboPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CategoryOptionComboPropertyNames value
func (v CategoryOptionComboPropertyNames) Ptr() *CategoryOptionComboPropertyNames {
	return &v
}

type NullableCategoryOptionComboPropertyNames struct {
	value *CategoryOptionComboPropertyNames
	isSet bool
}

func (v NullableCategoryOptionComboPropertyNames) Get() *CategoryOptionComboPropertyNames {
	return v.value
}

func (v *NullableCategoryOptionComboPropertyNames) Set(val *CategoryOptionComboPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryOptionComboPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryOptionComboPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryOptionComboPropertyNames(val *CategoryOptionComboPropertyNames) *NullableCategoryOptionComboPropertyNames {
	return &NullableCategoryOptionComboPropertyNames{value: val, isSet: true}
}

func (v NullableCategoryOptionComboPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryOptionComboPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
