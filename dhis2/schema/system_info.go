/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the SystemInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemInfo{}

// SystemInfo struct for SystemInfo
type SystemInfo struct {
	BuildTime                                       *time.Time    `json:"buildTime,omitempty"`
	Calendar                                        *string       `json:"calendar,omitempty"`
	ClusterHostname                                 *string       `json:"clusterHostname,omitempty"`
	ContextPath                                     *string       `json:"contextPath,omitempty"`
	CpuCores                                        *int32        `json:"cpuCores,omitempty"`
	DatabaseInfo                                    *DatabaseInfo `json:"databaseInfo,omitempty"`
	DateFormat                                      *string       `json:"dateFormat,omitempty"`
	EmailConfigured                                 *bool         `json:"emailConfigured,omitempty"`
	Encryption                                      *bool         `json:"encryption,omitempty"`
	EnvironmentVariable                             *string       `json:"environmentVariable,omitempty"`
	ExternalDirectory                               *string       `json:"externalDirectory,omitempty"`
	FileStoreProvider                               *string       `json:"fileStoreProvider,omitempty"`
	InstanceBaseUrl                                 *string       `json:"instanceBaseUrl,omitempty"`
	IntervalSinceLastAnalyticsTablePartitionSuccess *string       `json:"intervalSinceLastAnalyticsTablePartitionSuccess,omitempty"`
	IntervalSinceLastAnalyticsTableSuccess          *string       `json:"intervalSinceLastAnalyticsTableSuccess,omitempty"`
	IsMetadataSyncEnabled                           *bool         `json:"isMetadataSyncEnabled,omitempty"`
	IsMetadataVersionEnabled                        *bool         `json:"isMetadataVersionEnabled,omitempty"`
	JasperReportsVersion                            *string       `json:"jasperReportsVersion,omitempty"`
	JavaOpts                                        *string       `json:"javaOpts,omitempty"`
	JavaVendor                                      *string       `json:"javaVendor,omitempty"`
	JavaVersion                                     *string       `json:"javaVersion,omitempty"`
	LastAnalyticsTablePartitionRuntime              *string       `json:"lastAnalyticsTablePartitionRuntime,omitempty"`
	LastAnalyticsTablePartitionSuccess              *time.Time    `json:"lastAnalyticsTablePartitionSuccess,omitempty"`
	LastAnalyticsTableRuntime                       *string       `json:"lastAnalyticsTableRuntime,omitempty"`
	LastAnalyticsTableSuccess                       *time.Time    `json:"lastAnalyticsTableSuccess,omitempty"`
	LastMetadataVersionSyncAttempt                  *time.Time    `json:"lastMetadataVersionSyncAttempt,omitempty"`
	LastSystemMonitoringSuccess                     *time.Time    `json:"lastSystemMonitoringSuccess,omitempty"`
	MemoryInfo                                      *string       `json:"memoryInfo,omitempty"`
	NodeId                                          *string       `json:"nodeId,omitempty"`
	OsArchitecture                                  *string       `json:"osArchitecture,omitempty"`
	OsName                                          *string       `json:"osName,omitempty"`
	OsVersion                                       *string       `json:"osVersion,omitempty"`
	ReadOnlyMode                                    *string       `json:"readOnlyMode,omitempty"`
	ReadReplicaCount                                *int32        `json:"readReplicaCount,omitempty"`
	RedisEnabled                                    *bool         `json:"redisEnabled,omitempty"`
	RedisHostname                                   *string       `json:"redisHostname,omitempty"`
	Revision                                        *string       `json:"revision,omitempty"`
	ServerDate                                      *time.Time    `json:"serverDate,omitempty"`
	ServerTimeZoneDisplayName                       *string       `json:"serverTimeZoneDisplayName,omitempty"`
	ServerTimeZoneId                                *string       `json:"serverTimeZoneId,omitempty"`
	SystemId                                        *string       `json:"systemId,omitempty"`
	SystemMetadataVersion                           *string       `json:"systemMetadataVersion,omitempty"`
	SystemMonitoringUrl                             *string       `json:"systemMonitoringUrl,omitempty"`
	SystemName                                      *string       `json:"systemName,omitempty"`
	UserAgent                                       *string       `json:"userAgent,omitempty"`
	Version                                         *string       `json:"version,omitempty"`
}

// NewSystemInfo instantiates a new SystemInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemInfo() *SystemInfo {
	this := SystemInfo{}
	return &this
}

// NewSystemInfoWithDefaults instantiates a new SystemInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemInfoWithDefaults() *SystemInfo {
	this := SystemInfo{}
	return &this
}

// GetBuildTime returns the BuildTime field value if set, zero value otherwise.
func (o *SystemInfo) GetBuildTime() time.Time {
	if o == nil || IsNil(o.BuildTime) {
		var ret time.Time
		return ret
	}
	return *o.BuildTime
}

// GetBuildTimeOk returns a tuple with the BuildTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetBuildTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.BuildTime) {
		return nil, false
	}
	return o.BuildTime, true
}

// HasBuildTime returns a boolean if a field has been set.
func (o *SystemInfo) HasBuildTime() bool {
	if o != nil && !IsNil(o.BuildTime) {
		return true
	}

	return false
}

// SetBuildTime gets a reference to the given time.Time and assigns it to the BuildTime field.
func (o *SystemInfo) SetBuildTime(v time.Time) {
	o.BuildTime = &v
}

// GetCalendar returns the Calendar field value if set, zero value otherwise.
func (o *SystemInfo) GetCalendar() string {
	if o == nil || IsNil(o.Calendar) {
		var ret string
		return ret
	}
	return *o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetCalendarOk() (*string, bool) {
	if o == nil || IsNil(o.Calendar) {
		return nil, false
	}
	return o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *SystemInfo) HasCalendar() bool {
	if o != nil && !IsNil(o.Calendar) {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given string and assigns it to the Calendar field.
func (o *SystemInfo) SetCalendar(v string) {
	o.Calendar = &v
}

// GetClusterHostname returns the ClusterHostname field value if set, zero value otherwise.
func (o *SystemInfo) GetClusterHostname() string {
	if o == nil || IsNil(o.ClusterHostname) {
		var ret string
		return ret
	}
	return *o.ClusterHostname
}

// GetClusterHostnameOk returns a tuple with the ClusterHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetClusterHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterHostname) {
		return nil, false
	}
	return o.ClusterHostname, true
}

// HasClusterHostname returns a boolean if a field has been set.
func (o *SystemInfo) HasClusterHostname() bool {
	if o != nil && !IsNil(o.ClusterHostname) {
		return true
	}

	return false
}

// SetClusterHostname gets a reference to the given string and assigns it to the ClusterHostname field.
func (o *SystemInfo) SetClusterHostname(v string) {
	o.ClusterHostname = &v
}

// GetContextPath returns the ContextPath field value if set, zero value otherwise.
func (o *SystemInfo) GetContextPath() string {
	if o == nil || IsNil(o.ContextPath) {
		var ret string
		return ret
	}
	return *o.ContextPath
}

// GetContextPathOk returns a tuple with the ContextPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetContextPathOk() (*string, bool) {
	if o == nil || IsNil(o.ContextPath) {
		return nil, false
	}
	return o.ContextPath, true
}

// HasContextPath returns a boolean if a field has been set.
func (o *SystemInfo) HasContextPath() bool {
	if o != nil && !IsNil(o.ContextPath) {
		return true
	}

	return false
}

// SetContextPath gets a reference to the given string and assigns it to the ContextPath field.
func (o *SystemInfo) SetContextPath(v string) {
	o.ContextPath = &v
}

// GetCpuCores returns the CpuCores field value if set, zero value otherwise.
func (o *SystemInfo) GetCpuCores() int32 {
	if o == nil || IsNil(o.CpuCores) {
		var ret int32
		return ret
	}
	return *o.CpuCores
}

// GetCpuCoresOk returns a tuple with the CpuCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetCpuCoresOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuCores) {
		return nil, false
	}
	return o.CpuCores, true
}

// HasCpuCores returns a boolean if a field has been set.
func (o *SystemInfo) HasCpuCores() bool {
	if o != nil && !IsNil(o.CpuCores) {
		return true
	}

	return false
}

// SetCpuCores gets a reference to the given int32 and assigns it to the CpuCores field.
func (o *SystemInfo) SetCpuCores(v int32) {
	o.CpuCores = &v
}

// GetDatabaseInfo returns the DatabaseInfo field value if set, zero value otherwise.
func (o *SystemInfo) GetDatabaseInfo() DatabaseInfo {
	if o == nil || IsNil(o.DatabaseInfo) {
		var ret DatabaseInfo
		return ret
	}
	return *o.DatabaseInfo
}

// GetDatabaseInfoOk returns a tuple with the DatabaseInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetDatabaseInfoOk() (*DatabaseInfo, bool) {
	if o == nil || IsNil(o.DatabaseInfo) {
		return nil, false
	}
	return o.DatabaseInfo, true
}

// HasDatabaseInfo returns a boolean if a field has been set.
func (o *SystemInfo) HasDatabaseInfo() bool {
	if o != nil && !IsNil(o.DatabaseInfo) {
		return true
	}

	return false
}

// SetDatabaseInfo gets a reference to the given DatabaseInfo and assigns it to the DatabaseInfo field.
func (o *SystemInfo) SetDatabaseInfo(v DatabaseInfo) {
	o.DatabaseInfo = &v
}

// GetDateFormat returns the DateFormat field value if set, zero value otherwise.
func (o *SystemInfo) GetDateFormat() string {
	if o == nil || IsNil(o.DateFormat) {
		var ret string
		return ret
	}
	return *o.DateFormat
}

// GetDateFormatOk returns a tuple with the DateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetDateFormatOk() (*string, bool) {
	if o == nil || IsNil(o.DateFormat) {
		return nil, false
	}
	return o.DateFormat, true
}

// HasDateFormat returns a boolean if a field has been set.
func (o *SystemInfo) HasDateFormat() bool {
	if o != nil && !IsNil(o.DateFormat) {
		return true
	}

	return false
}

// SetDateFormat gets a reference to the given string and assigns it to the DateFormat field.
func (o *SystemInfo) SetDateFormat(v string) {
	o.DateFormat = &v
}

// GetEmailConfigured returns the EmailConfigured field value if set, zero value otherwise.
func (o *SystemInfo) GetEmailConfigured() bool {
	if o == nil || IsNil(o.EmailConfigured) {
		var ret bool
		return ret
	}
	return *o.EmailConfigured
}

// GetEmailConfiguredOk returns a tuple with the EmailConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetEmailConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailConfigured) {
		return nil, false
	}
	return o.EmailConfigured, true
}

// HasEmailConfigured returns a boolean if a field has been set.
func (o *SystemInfo) HasEmailConfigured() bool {
	if o != nil && !IsNil(o.EmailConfigured) {
		return true
	}

	return false
}

// SetEmailConfigured gets a reference to the given bool and assigns it to the EmailConfigured field.
func (o *SystemInfo) SetEmailConfigured(v bool) {
	o.EmailConfigured = &v
}

// GetEncryption returns the Encryption field value if set, zero value otherwise.
func (o *SystemInfo) GetEncryption() bool {
	if o == nil || IsNil(o.Encryption) {
		var ret bool
		return ret
	}
	return *o.Encryption
}

// GetEncryptionOk returns a tuple with the Encryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetEncryptionOk() (*bool, bool) {
	if o == nil || IsNil(o.Encryption) {
		return nil, false
	}
	return o.Encryption, true
}

// HasEncryption returns a boolean if a field has been set.
func (o *SystemInfo) HasEncryption() bool {
	if o != nil && !IsNil(o.Encryption) {
		return true
	}

	return false
}

// SetEncryption gets a reference to the given bool and assigns it to the Encryption field.
func (o *SystemInfo) SetEncryption(v bool) {
	o.Encryption = &v
}

// GetEnvironmentVariable returns the EnvironmentVariable field value if set, zero value otherwise.
func (o *SystemInfo) GetEnvironmentVariable() string {
	if o == nil || IsNil(o.EnvironmentVariable) {
		var ret string
		return ret
	}
	return *o.EnvironmentVariable
}

// GetEnvironmentVariableOk returns a tuple with the EnvironmentVariable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetEnvironmentVariableOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentVariable) {
		return nil, false
	}
	return o.EnvironmentVariable, true
}

// HasEnvironmentVariable returns a boolean if a field has been set.
func (o *SystemInfo) HasEnvironmentVariable() bool {
	if o != nil && !IsNil(o.EnvironmentVariable) {
		return true
	}

	return false
}

// SetEnvironmentVariable gets a reference to the given string and assigns it to the EnvironmentVariable field.
func (o *SystemInfo) SetEnvironmentVariable(v string) {
	o.EnvironmentVariable = &v
}

// GetExternalDirectory returns the ExternalDirectory field value if set, zero value otherwise.
func (o *SystemInfo) GetExternalDirectory() string {
	if o == nil || IsNil(o.ExternalDirectory) {
		var ret string
		return ret
	}
	return *o.ExternalDirectory
}

// GetExternalDirectoryOk returns a tuple with the ExternalDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetExternalDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalDirectory) {
		return nil, false
	}
	return o.ExternalDirectory, true
}

// HasExternalDirectory returns a boolean if a field has been set.
func (o *SystemInfo) HasExternalDirectory() bool {
	if o != nil && !IsNil(o.ExternalDirectory) {
		return true
	}

	return false
}

// SetExternalDirectory gets a reference to the given string and assigns it to the ExternalDirectory field.
func (o *SystemInfo) SetExternalDirectory(v string) {
	o.ExternalDirectory = &v
}

// GetFileStoreProvider returns the FileStoreProvider field value if set, zero value otherwise.
func (o *SystemInfo) GetFileStoreProvider() string {
	if o == nil || IsNil(o.FileStoreProvider) {
		var ret string
		return ret
	}
	return *o.FileStoreProvider
}

// GetFileStoreProviderOk returns a tuple with the FileStoreProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetFileStoreProviderOk() (*string, bool) {
	if o == nil || IsNil(o.FileStoreProvider) {
		return nil, false
	}
	return o.FileStoreProvider, true
}

// HasFileStoreProvider returns a boolean if a field has been set.
func (o *SystemInfo) HasFileStoreProvider() bool {
	if o != nil && !IsNil(o.FileStoreProvider) {
		return true
	}

	return false
}

// SetFileStoreProvider gets a reference to the given string and assigns it to the FileStoreProvider field.
func (o *SystemInfo) SetFileStoreProvider(v string) {
	o.FileStoreProvider = &v
}

// GetInstanceBaseUrl returns the InstanceBaseUrl field value if set, zero value otherwise.
func (o *SystemInfo) GetInstanceBaseUrl() string {
	if o == nil || IsNil(o.InstanceBaseUrl) {
		var ret string
		return ret
	}
	return *o.InstanceBaseUrl
}

// GetInstanceBaseUrlOk returns a tuple with the InstanceBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetInstanceBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceBaseUrl) {
		return nil, false
	}
	return o.InstanceBaseUrl, true
}

// HasInstanceBaseUrl returns a boolean if a field has been set.
func (o *SystemInfo) HasInstanceBaseUrl() bool {
	if o != nil && !IsNil(o.InstanceBaseUrl) {
		return true
	}

	return false
}

// SetInstanceBaseUrl gets a reference to the given string and assigns it to the InstanceBaseUrl field.
func (o *SystemInfo) SetInstanceBaseUrl(v string) {
	o.InstanceBaseUrl = &v
}

// GetIntervalSinceLastAnalyticsTablePartitionSuccess returns the IntervalSinceLastAnalyticsTablePartitionSuccess field value if set, zero value otherwise.
func (o *SystemInfo) GetIntervalSinceLastAnalyticsTablePartitionSuccess() string {
	if o == nil || IsNil(o.IntervalSinceLastAnalyticsTablePartitionSuccess) {
		var ret string
		return ret
	}
	return *o.IntervalSinceLastAnalyticsTablePartitionSuccess
}

// GetIntervalSinceLastAnalyticsTablePartitionSuccessOk returns a tuple with the IntervalSinceLastAnalyticsTablePartitionSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetIntervalSinceLastAnalyticsTablePartitionSuccessOk() (*string, bool) {
	if o == nil || IsNil(o.IntervalSinceLastAnalyticsTablePartitionSuccess) {
		return nil, false
	}
	return o.IntervalSinceLastAnalyticsTablePartitionSuccess, true
}

// HasIntervalSinceLastAnalyticsTablePartitionSuccess returns a boolean if a field has been set.
func (o *SystemInfo) HasIntervalSinceLastAnalyticsTablePartitionSuccess() bool {
	if o != nil && !IsNil(o.IntervalSinceLastAnalyticsTablePartitionSuccess) {
		return true
	}

	return false
}

// SetIntervalSinceLastAnalyticsTablePartitionSuccess gets a reference to the given string and assigns it to the IntervalSinceLastAnalyticsTablePartitionSuccess field.
func (o *SystemInfo) SetIntervalSinceLastAnalyticsTablePartitionSuccess(v string) {
	o.IntervalSinceLastAnalyticsTablePartitionSuccess = &v
}

// GetIntervalSinceLastAnalyticsTableSuccess returns the IntervalSinceLastAnalyticsTableSuccess field value if set, zero value otherwise.
func (o *SystemInfo) GetIntervalSinceLastAnalyticsTableSuccess() string {
	if o == nil || IsNil(o.IntervalSinceLastAnalyticsTableSuccess) {
		var ret string
		return ret
	}
	return *o.IntervalSinceLastAnalyticsTableSuccess
}

// GetIntervalSinceLastAnalyticsTableSuccessOk returns a tuple with the IntervalSinceLastAnalyticsTableSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetIntervalSinceLastAnalyticsTableSuccessOk() (*string, bool) {
	if o == nil || IsNil(o.IntervalSinceLastAnalyticsTableSuccess) {
		return nil, false
	}
	return o.IntervalSinceLastAnalyticsTableSuccess, true
}

// HasIntervalSinceLastAnalyticsTableSuccess returns a boolean if a field has been set.
func (o *SystemInfo) HasIntervalSinceLastAnalyticsTableSuccess() bool {
	if o != nil && !IsNil(o.IntervalSinceLastAnalyticsTableSuccess) {
		return true
	}

	return false
}

// SetIntervalSinceLastAnalyticsTableSuccess gets a reference to the given string and assigns it to the IntervalSinceLastAnalyticsTableSuccess field.
func (o *SystemInfo) SetIntervalSinceLastAnalyticsTableSuccess(v string) {
	o.IntervalSinceLastAnalyticsTableSuccess = &v
}

// GetIsMetadataSyncEnabled returns the IsMetadataSyncEnabled field value if set, zero value otherwise.
func (o *SystemInfo) GetIsMetadataSyncEnabled() bool {
	if o == nil || IsNil(o.IsMetadataSyncEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMetadataSyncEnabled
}

// GetIsMetadataSyncEnabledOk returns a tuple with the IsMetadataSyncEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetIsMetadataSyncEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMetadataSyncEnabled) {
		return nil, false
	}
	return o.IsMetadataSyncEnabled, true
}

// HasIsMetadataSyncEnabled returns a boolean if a field has been set.
func (o *SystemInfo) HasIsMetadataSyncEnabled() bool {
	if o != nil && !IsNil(o.IsMetadataSyncEnabled) {
		return true
	}

	return false
}

// SetIsMetadataSyncEnabled gets a reference to the given bool and assigns it to the IsMetadataSyncEnabled field.
func (o *SystemInfo) SetIsMetadataSyncEnabled(v bool) {
	o.IsMetadataSyncEnabled = &v
}

// GetIsMetadataVersionEnabled returns the IsMetadataVersionEnabled field value if set, zero value otherwise.
func (o *SystemInfo) GetIsMetadataVersionEnabled() bool {
	if o == nil || IsNil(o.IsMetadataVersionEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMetadataVersionEnabled
}

// GetIsMetadataVersionEnabledOk returns a tuple with the IsMetadataVersionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetIsMetadataVersionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMetadataVersionEnabled) {
		return nil, false
	}
	return o.IsMetadataVersionEnabled, true
}

// HasIsMetadataVersionEnabled returns a boolean if a field has been set.
func (o *SystemInfo) HasIsMetadataVersionEnabled() bool {
	if o != nil && !IsNil(o.IsMetadataVersionEnabled) {
		return true
	}

	return false
}

// SetIsMetadataVersionEnabled gets a reference to the given bool and assigns it to the IsMetadataVersionEnabled field.
func (o *SystemInfo) SetIsMetadataVersionEnabled(v bool) {
	o.IsMetadataVersionEnabled = &v
}

// GetJasperReportsVersion returns the JasperReportsVersion field value if set, zero value otherwise.
func (o *SystemInfo) GetJasperReportsVersion() string {
	if o == nil || IsNil(o.JasperReportsVersion) {
		var ret string
		return ret
	}
	return *o.JasperReportsVersion
}

// GetJasperReportsVersionOk returns a tuple with the JasperReportsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetJasperReportsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.JasperReportsVersion) {
		return nil, false
	}
	return o.JasperReportsVersion, true
}

// HasJasperReportsVersion returns a boolean if a field has been set.
func (o *SystemInfo) HasJasperReportsVersion() bool {
	if o != nil && !IsNil(o.JasperReportsVersion) {
		return true
	}

	return false
}

// SetJasperReportsVersion gets a reference to the given string and assigns it to the JasperReportsVersion field.
func (o *SystemInfo) SetJasperReportsVersion(v string) {
	o.JasperReportsVersion = &v
}

// GetJavaOpts returns the JavaOpts field value if set, zero value otherwise.
func (o *SystemInfo) GetJavaOpts() string {
	if o == nil || IsNil(o.JavaOpts) {
		var ret string
		return ret
	}
	return *o.JavaOpts
}

// GetJavaOptsOk returns a tuple with the JavaOpts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetJavaOptsOk() (*string, bool) {
	if o == nil || IsNil(o.JavaOpts) {
		return nil, false
	}
	return o.JavaOpts, true
}

// HasJavaOpts returns a boolean if a field has been set.
func (o *SystemInfo) HasJavaOpts() bool {
	if o != nil && !IsNil(o.JavaOpts) {
		return true
	}

	return false
}

// SetJavaOpts gets a reference to the given string and assigns it to the JavaOpts field.
func (o *SystemInfo) SetJavaOpts(v string) {
	o.JavaOpts = &v
}

// GetJavaVendor returns the JavaVendor field value if set, zero value otherwise.
func (o *SystemInfo) GetJavaVendor() string {
	if o == nil || IsNil(o.JavaVendor) {
		var ret string
		return ret
	}
	return *o.JavaVendor
}

// GetJavaVendorOk returns a tuple with the JavaVendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetJavaVendorOk() (*string, bool) {
	if o == nil || IsNil(o.JavaVendor) {
		return nil, false
	}
	return o.JavaVendor, true
}

// HasJavaVendor returns a boolean if a field has been set.
func (o *SystemInfo) HasJavaVendor() bool {
	if o != nil && !IsNil(o.JavaVendor) {
		return true
	}

	return false
}

// SetJavaVendor gets a reference to the given string and assigns it to the JavaVendor field.
func (o *SystemInfo) SetJavaVendor(v string) {
	o.JavaVendor = &v
}

// GetJavaVersion returns the JavaVersion field value if set, zero value otherwise.
func (o *SystemInfo) GetJavaVersion() string {
	if o == nil || IsNil(o.JavaVersion) {
		var ret string
		return ret
	}
	return *o.JavaVersion
}

// GetJavaVersionOk returns a tuple with the JavaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetJavaVersionOk() (*string, bool) {
	if o == nil || IsNil(o.JavaVersion) {
		return nil, false
	}
	return o.JavaVersion, true
}

// HasJavaVersion returns a boolean if a field has been set.
func (o *SystemInfo) HasJavaVersion() bool {
	if o != nil && !IsNil(o.JavaVersion) {
		return true
	}

	return false
}

// SetJavaVersion gets a reference to the given string and assigns it to the JavaVersion field.
func (o *SystemInfo) SetJavaVersion(v string) {
	o.JavaVersion = &v
}

// GetLastAnalyticsTablePartitionRuntime returns the LastAnalyticsTablePartitionRuntime field value if set, zero value otherwise.
func (o *SystemInfo) GetLastAnalyticsTablePartitionRuntime() string {
	if o == nil || IsNil(o.LastAnalyticsTablePartitionRuntime) {
		var ret string
		return ret
	}
	return *o.LastAnalyticsTablePartitionRuntime
}

// GetLastAnalyticsTablePartitionRuntimeOk returns a tuple with the LastAnalyticsTablePartitionRuntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetLastAnalyticsTablePartitionRuntimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastAnalyticsTablePartitionRuntime) {
		return nil, false
	}
	return o.LastAnalyticsTablePartitionRuntime, true
}

// HasLastAnalyticsTablePartitionRuntime returns a boolean if a field has been set.
func (o *SystemInfo) HasLastAnalyticsTablePartitionRuntime() bool {
	if o != nil && !IsNil(o.LastAnalyticsTablePartitionRuntime) {
		return true
	}

	return false
}

// SetLastAnalyticsTablePartitionRuntime gets a reference to the given string and assigns it to the LastAnalyticsTablePartitionRuntime field.
func (o *SystemInfo) SetLastAnalyticsTablePartitionRuntime(v string) {
	o.LastAnalyticsTablePartitionRuntime = &v
}

// GetLastAnalyticsTablePartitionSuccess returns the LastAnalyticsTablePartitionSuccess field value if set, zero value otherwise.
func (o *SystemInfo) GetLastAnalyticsTablePartitionSuccess() time.Time {
	if o == nil || IsNil(o.LastAnalyticsTablePartitionSuccess) {
		var ret time.Time
		return ret
	}
	return *o.LastAnalyticsTablePartitionSuccess
}

// GetLastAnalyticsTablePartitionSuccessOk returns a tuple with the LastAnalyticsTablePartitionSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetLastAnalyticsTablePartitionSuccessOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastAnalyticsTablePartitionSuccess) {
		return nil, false
	}
	return o.LastAnalyticsTablePartitionSuccess, true
}

// HasLastAnalyticsTablePartitionSuccess returns a boolean if a field has been set.
func (o *SystemInfo) HasLastAnalyticsTablePartitionSuccess() bool {
	if o != nil && !IsNil(o.LastAnalyticsTablePartitionSuccess) {
		return true
	}

	return false
}

// SetLastAnalyticsTablePartitionSuccess gets a reference to the given time.Time and assigns it to the LastAnalyticsTablePartitionSuccess field.
func (o *SystemInfo) SetLastAnalyticsTablePartitionSuccess(v time.Time) {
	o.LastAnalyticsTablePartitionSuccess = &v
}

// GetLastAnalyticsTableRuntime returns the LastAnalyticsTableRuntime field value if set, zero value otherwise.
func (o *SystemInfo) GetLastAnalyticsTableRuntime() string {
	if o == nil || IsNil(o.LastAnalyticsTableRuntime) {
		var ret string
		return ret
	}
	return *o.LastAnalyticsTableRuntime
}

// GetLastAnalyticsTableRuntimeOk returns a tuple with the LastAnalyticsTableRuntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetLastAnalyticsTableRuntimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastAnalyticsTableRuntime) {
		return nil, false
	}
	return o.LastAnalyticsTableRuntime, true
}

// HasLastAnalyticsTableRuntime returns a boolean if a field has been set.
func (o *SystemInfo) HasLastAnalyticsTableRuntime() bool {
	if o != nil && !IsNil(o.LastAnalyticsTableRuntime) {
		return true
	}

	return false
}

// SetLastAnalyticsTableRuntime gets a reference to the given string and assigns it to the LastAnalyticsTableRuntime field.
func (o *SystemInfo) SetLastAnalyticsTableRuntime(v string) {
	o.LastAnalyticsTableRuntime = &v
}

// GetLastAnalyticsTableSuccess returns the LastAnalyticsTableSuccess field value if set, zero value otherwise.
func (o *SystemInfo) GetLastAnalyticsTableSuccess() time.Time {
	if o == nil || IsNil(o.LastAnalyticsTableSuccess) {
		var ret time.Time
		return ret
	}
	return *o.LastAnalyticsTableSuccess
}

// GetLastAnalyticsTableSuccessOk returns a tuple with the LastAnalyticsTableSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetLastAnalyticsTableSuccessOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastAnalyticsTableSuccess) {
		return nil, false
	}
	return o.LastAnalyticsTableSuccess, true
}

// HasLastAnalyticsTableSuccess returns a boolean if a field has been set.
func (o *SystemInfo) HasLastAnalyticsTableSuccess() bool {
	if o != nil && !IsNil(o.LastAnalyticsTableSuccess) {
		return true
	}

	return false
}

// SetLastAnalyticsTableSuccess gets a reference to the given time.Time and assigns it to the LastAnalyticsTableSuccess field.
func (o *SystemInfo) SetLastAnalyticsTableSuccess(v time.Time) {
	o.LastAnalyticsTableSuccess = &v
}

// GetLastMetadataVersionSyncAttempt returns the LastMetadataVersionSyncAttempt field value if set, zero value otherwise.
func (o *SystemInfo) GetLastMetadataVersionSyncAttempt() time.Time {
	if o == nil || IsNil(o.LastMetadataVersionSyncAttempt) {
		var ret time.Time
		return ret
	}
	return *o.LastMetadataVersionSyncAttempt
}

// GetLastMetadataVersionSyncAttemptOk returns a tuple with the LastMetadataVersionSyncAttempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetLastMetadataVersionSyncAttemptOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastMetadataVersionSyncAttempt) {
		return nil, false
	}
	return o.LastMetadataVersionSyncAttempt, true
}

// HasLastMetadataVersionSyncAttempt returns a boolean if a field has been set.
func (o *SystemInfo) HasLastMetadataVersionSyncAttempt() bool {
	if o != nil && !IsNil(o.LastMetadataVersionSyncAttempt) {
		return true
	}

	return false
}

// SetLastMetadataVersionSyncAttempt gets a reference to the given time.Time and assigns it to the LastMetadataVersionSyncAttempt field.
func (o *SystemInfo) SetLastMetadataVersionSyncAttempt(v time.Time) {
	o.LastMetadataVersionSyncAttempt = &v
}

// GetLastSystemMonitoringSuccess returns the LastSystemMonitoringSuccess field value if set, zero value otherwise.
func (o *SystemInfo) GetLastSystemMonitoringSuccess() time.Time {
	if o == nil || IsNil(o.LastSystemMonitoringSuccess) {
		var ret time.Time
		return ret
	}
	return *o.LastSystemMonitoringSuccess
}

// GetLastSystemMonitoringSuccessOk returns a tuple with the LastSystemMonitoringSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetLastSystemMonitoringSuccessOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSystemMonitoringSuccess) {
		return nil, false
	}
	return o.LastSystemMonitoringSuccess, true
}

// HasLastSystemMonitoringSuccess returns a boolean if a field has been set.
func (o *SystemInfo) HasLastSystemMonitoringSuccess() bool {
	if o != nil && !IsNil(o.LastSystemMonitoringSuccess) {
		return true
	}

	return false
}

// SetLastSystemMonitoringSuccess gets a reference to the given time.Time and assigns it to the LastSystemMonitoringSuccess field.
func (o *SystemInfo) SetLastSystemMonitoringSuccess(v time.Time) {
	o.LastSystemMonitoringSuccess = &v
}

// GetMemoryInfo returns the MemoryInfo field value if set, zero value otherwise.
func (o *SystemInfo) GetMemoryInfo() string {
	if o == nil || IsNil(o.MemoryInfo) {
		var ret string
		return ret
	}
	return *o.MemoryInfo
}

// GetMemoryInfoOk returns a tuple with the MemoryInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetMemoryInfoOk() (*string, bool) {
	if o == nil || IsNil(o.MemoryInfo) {
		return nil, false
	}
	return o.MemoryInfo, true
}

// HasMemoryInfo returns a boolean if a field has been set.
func (o *SystemInfo) HasMemoryInfo() bool {
	if o != nil && !IsNil(o.MemoryInfo) {
		return true
	}

	return false
}

// SetMemoryInfo gets a reference to the given string and assigns it to the MemoryInfo field.
func (o *SystemInfo) SetMemoryInfo(v string) {
	o.MemoryInfo = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *SystemInfo) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *SystemInfo) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *SystemInfo) SetNodeId(v string) {
	o.NodeId = &v
}

// GetOsArchitecture returns the OsArchitecture field value if set, zero value otherwise.
func (o *SystemInfo) GetOsArchitecture() string {
	if o == nil || IsNil(o.OsArchitecture) {
		var ret string
		return ret
	}
	return *o.OsArchitecture
}

// GetOsArchitectureOk returns a tuple with the OsArchitecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetOsArchitectureOk() (*string, bool) {
	if o == nil || IsNil(o.OsArchitecture) {
		return nil, false
	}
	return o.OsArchitecture, true
}

// HasOsArchitecture returns a boolean if a field has been set.
func (o *SystemInfo) HasOsArchitecture() bool {
	if o != nil && !IsNil(o.OsArchitecture) {
		return true
	}

	return false
}

// SetOsArchitecture gets a reference to the given string and assigns it to the OsArchitecture field.
func (o *SystemInfo) SetOsArchitecture(v string) {
	o.OsArchitecture = &v
}

// GetOsName returns the OsName field value if set, zero value otherwise.
func (o *SystemInfo) GetOsName() string {
	if o == nil || IsNil(o.OsName) {
		var ret string
		return ret
	}
	return *o.OsName
}

// GetOsNameOk returns a tuple with the OsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetOsNameOk() (*string, bool) {
	if o == nil || IsNil(o.OsName) {
		return nil, false
	}
	return o.OsName, true
}

// HasOsName returns a boolean if a field has been set.
func (o *SystemInfo) HasOsName() bool {
	if o != nil && !IsNil(o.OsName) {
		return true
	}

	return false
}

// SetOsName gets a reference to the given string and assigns it to the OsName field.
func (o *SystemInfo) SetOsName(v string) {
	o.OsName = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *SystemInfo) GetOsVersion() string {
	if o == nil || IsNil(o.OsVersion) {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsVersion) {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *SystemInfo) HasOsVersion() bool {
	if o != nil && !IsNil(o.OsVersion) {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *SystemInfo) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetReadOnlyMode returns the ReadOnlyMode field value if set, zero value otherwise.
func (o *SystemInfo) GetReadOnlyMode() string {
	if o == nil || IsNil(o.ReadOnlyMode) {
		var ret string
		return ret
	}
	return *o.ReadOnlyMode
}

// GetReadOnlyModeOk returns a tuple with the ReadOnlyMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetReadOnlyModeOk() (*string, bool) {
	if o == nil || IsNil(o.ReadOnlyMode) {
		return nil, false
	}
	return o.ReadOnlyMode, true
}

// HasReadOnlyMode returns a boolean if a field has been set.
func (o *SystemInfo) HasReadOnlyMode() bool {
	if o != nil && !IsNil(o.ReadOnlyMode) {
		return true
	}

	return false
}

// SetReadOnlyMode gets a reference to the given string and assigns it to the ReadOnlyMode field.
func (o *SystemInfo) SetReadOnlyMode(v string) {
	o.ReadOnlyMode = &v
}

// GetReadReplicaCount returns the ReadReplicaCount field value if set, zero value otherwise.
func (o *SystemInfo) GetReadReplicaCount() int32 {
	if o == nil || IsNil(o.ReadReplicaCount) {
		var ret int32
		return ret
	}
	return *o.ReadReplicaCount
}

// GetReadReplicaCountOk returns a tuple with the ReadReplicaCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetReadReplicaCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ReadReplicaCount) {
		return nil, false
	}
	return o.ReadReplicaCount, true
}

// HasReadReplicaCount returns a boolean if a field has been set.
func (o *SystemInfo) HasReadReplicaCount() bool {
	if o != nil && !IsNil(o.ReadReplicaCount) {
		return true
	}

	return false
}

// SetReadReplicaCount gets a reference to the given int32 and assigns it to the ReadReplicaCount field.
func (o *SystemInfo) SetReadReplicaCount(v int32) {
	o.ReadReplicaCount = &v
}

// GetRedisEnabled returns the RedisEnabled field value if set, zero value otherwise.
func (o *SystemInfo) GetRedisEnabled() bool {
	if o == nil || IsNil(o.RedisEnabled) {
		var ret bool
		return ret
	}
	return *o.RedisEnabled
}

// GetRedisEnabledOk returns a tuple with the RedisEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetRedisEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RedisEnabled) {
		return nil, false
	}
	return o.RedisEnabled, true
}

// HasRedisEnabled returns a boolean if a field has been set.
func (o *SystemInfo) HasRedisEnabled() bool {
	if o != nil && !IsNil(o.RedisEnabled) {
		return true
	}

	return false
}

// SetRedisEnabled gets a reference to the given bool and assigns it to the RedisEnabled field.
func (o *SystemInfo) SetRedisEnabled(v bool) {
	o.RedisEnabled = &v
}

// GetRedisHostname returns the RedisHostname field value if set, zero value otherwise.
func (o *SystemInfo) GetRedisHostname() string {
	if o == nil || IsNil(o.RedisHostname) {
		var ret string
		return ret
	}
	return *o.RedisHostname
}

// GetRedisHostnameOk returns a tuple with the RedisHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetRedisHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.RedisHostname) {
		return nil, false
	}
	return o.RedisHostname, true
}

// HasRedisHostname returns a boolean if a field has been set.
func (o *SystemInfo) HasRedisHostname() bool {
	if o != nil && !IsNil(o.RedisHostname) {
		return true
	}

	return false
}

// SetRedisHostname gets a reference to the given string and assigns it to the RedisHostname field.
func (o *SystemInfo) SetRedisHostname(v string) {
	o.RedisHostname = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *SystemInfo) GetRevision() string {
	if o == nil || IsNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *SystemInfo) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *SystemInfo) SetRevision(v string) {
	o.Revision = &v
}

// GetServerDate returns the ServerDate field value if set, zero value otherwise.
func (o *SystemInfo) GetServerDate() time.Time {
	if o == nil || IsNil(o.ServerDate) {
		var ret time.Time
		return ret
	}
	return *o.ServerDate
}

// GetServerDateOk returns a tuple with the ServerDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetServerDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ServerDate) {
		return nil, false
	}
	return o.ServerDate, true
}

// HasServerDate returns a boolean if a field has been set.
func (o *SystemInfo) HasServerDate() bool {
	if o != nil && !IsNil(o.ServerDate) {
		return true
	}

	return false
}

// SetServerDate gets a reference to the given time.Time and assigns it to the ServerDate field.
func (o *SystemInfo) SetServerDate(v time.Time) {
	o.ServerDate = &v
}

// GetServerTimeZoneDisplayName returns the ServerTimeZoneDisplayName field value if set, zero value otherwise.
func (o *SystemInfo) GetServerTimeZoneDisplayName() string {
	if o == nil || IsNil(o.ServerTimeZoneDisplayName) {
		var ret string
		return ret
	}
	return *o.ServerTimeZoneDisplayName
}

// GetServerTimeZoneDisplayNameOk returns a tuple with the ServerTimeZoneDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetServerTimeZoneDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerTimeZoneDisplayName) {
		return nil, false
	}
	return o.ServerTimeZoneDisplayName, true
}

// HasServerTimeZoneDisplayName returns a boolean if a field has been set.
func (o *SystemInfo) HasServerTimeZoneDisplayName() bool {
	if o != nil && !IsNil(o.ServerTimeZoneDisplayName) {
		return true
	}

	return false
}

// SetServerTimeZoneDisplayName gets a reference to the given string and assigns it to the ServerTimeZoneDisplayName field.
func (o *SystemInfo) SetServerTimeZoneDisplayName(v string) {
	o.ServerTimeZoneDisplayName = &v
}

// GetServerTimeZoneId returns the ServerTimeZoneId field value if set, zero value otherwise.
func (o *SystemInfo) GetServerTimeZoneId() string {
	if o == nil || IsNil(o.ServerTimeZoneId) {
		var ret string
		return ret
	}
	return *o.ServerTimeZoneId
}

// GetServerTimeZoneIdOk returns a tuple with the ServerTimeZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetServerTimeZoneIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerTimeZoneId) {
		return nil, false
	}
	return o.ServerTimeZoneId, true
}

// HasServerTimeZoneId returns a boolean if a field has been set.
func (o *SystemInfo) HasServerTimeZoneId() bool {
	if o != nil && !IsNil(o.ServerTimeZoneId) {
		return true
	}

	return false
}

// SetServerTimeZoneId gets a reference to the given string and assigns it to the ServerTimeZoneId field.
func (o *SystemInfo) SetServerTimeZoneId(v string) {
	o.ServerTimeZoneId = &v
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *SystemInfo) GetSystemId() string {
	if o == nil || IsNil(o.SystemId) {
		var ret string
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetSystemIdOk() (*string, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *SystemInfo) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given string and assigns it to the SystemId field.
func (o *SystemInfo) SetSystemId(v string) {
	o.SystemId = &v
}

// GetSystemMetadataVersion returns the SystemMetadataVersion field value if set, zero value otherwise.
func (o *SystemInfo) GetSystemMetadataVersion() string {
	if o == nil || IsNil(o.SystemMetadataVersion) {
		var ret string
		return ret
	}
	return *o.SystemMetadataVersion
}

// GetSystemMetadataVersionOk returns a tuple with the SystemMetadataVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetSystemMetadataVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SystemMetadataVersion) {
		return nil, false
	}
	return o.SystemMetadataVersion, true
}

// HasSystemMetadataVersion returns a boolean if a field has been set.
func (o *SystemInfo) HasSystemMetadataVersion() bool {
	if o != nil && !IsNil(o.SystemMetadataVersion) {
		return true
	}

	return false
}

// SetSystemMetadataVersion gets a reference to the given string and assigns it to the SystemMetadataVersion field.
func (o *SystemInfo) SetSystemMetadataVersion(v string) {
	o.SystemMetadataVersion = &v
}

// GetSystemMonitoringUrl returns the SystemMonitoringUrl field value if set, zero value otherwise.
func (o *SystemInfo) GetSystemMonitoringUrl() string {
	if o == nil || IsNil(o.SystemMonitoringUrl) {
		var ret string
		return ret
	}
	return *o.SystemMonitoringUrl
}

// GetSystemMonitoringUrlOk returns a tuple with the SystemMonitoringUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetSystemMonitoringUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SystemMonitoringUrl) {
		return nil, false
	}
	return o.SystemMonitoringUrl, true
}

// HasSystemMonitoringUrl returns a boolean if a field has been set.
func (o *SystemInfo) HasSystemMonitoringUrl() bool {
	if o != nil && !IsNil(o.SystemMonitoringUrl) {
		return true
	}

	return false
}

// SetSystemMonitoringUrl gets a reference to the given string and assigns it to the SystemMonitoringUrl field.
func (o *SystemInfo) SetSystemMonitoringUrl(v string) {
	o.SystemMonitoringUrl = &v
}

// GetSystemName returns the SystemName field value if set, zero value otherwise.
func (o *SystemInfo) GetSystemName() string {
	if o == nil || IsNil(o.SystemName) {
		var ret string
		return ret
	}
	return *o.SystemName
}

// GetSystemNameOk returns a tuple with the SystemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetSystemNameOk() (*string, bool) {
	if o == nil || IsNil(o.SystemName) {
		return nil, false
	}
	return o.SystemName, true
}

// HasSystemName returns a boolean if a field has been set.
func (o *SystemInfo) HasSystemName() bool {
	if o != nil && !IsNil(o.SystemName) {
		return true
	}

	return false
}

// SetSystemName gets a reference to the given string and assigns it to the SystemName field.
func (o *SystemInfo) SetSystemName(v string) {
	o.SystemName = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *SystemInfo) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *SystemInfo) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *SystemInfo) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SystemInfo) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemInfo) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SystemInfo) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *SystemInfo) SetVersion(v string) {
	o.Version = &v
}

func (o SystemInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildTime) {
		toSerialize["buildTime"] = o.BuildTime
	}
	if !IsNil(o.Calendar) {
		toSerialize["calendar"] = o.Calendar
	}
	if !IsNil(o.ClusterHostname) {
		toSerialize["clusterHostname"] = o.ClusterHostname
	}
	if !IsNil(o.ContextPath) {
		toSerialize["contextPath"] = o.ContextPath
	}
	if !IsNil(o.CpuCores) {
		toSerialize["cpuCores"] = o.CpuCores
	}
	if !IsNil(o.DatabaseInfo) {
		toSerialize["databaseInfo"] = o.DatabaseInfo
	}
	if !IsNil(o.DateFormat) {
		toSerialize["dateFormat"] = o.DateFormat
	}
	if !IsNil(o.EmailConfigured) {
		toSerialize["emailConfigured"] = o.EmailConfigured
	}
	if !IsNil(o.Encryption) {
		toSerialize["encryption"] = o.Encryption
	}
	if !IsNil(o.EnvironmentVariable) {
		toSerialize["environmentVariable"] = o.EnvironmentVariable
	}
	if !IsNil(o.ExternalDirectory) {
		toSerialize["externalDirectory"] = o.ExternalDirectory
	}
	if !IsNil(o.FileStoreProvider) {
		toSerialize["fileStoreProvider"] = o.FileStoreProvider
	}
	if !IsNil(o.InstanceBaseUrl) {
		toSerialize["instanceBaseUrl"] = o.InstanceBaseUrl
	}
	if !IsNil(o.IntervalSinceLastAnalyticsTablePartitionSuccess) {
		toSerialize["intervalSinceLastAnalyticsTablePartitionSuccess"] = o.IntervalSinceLastAnalyticsTablePartitionSuccess
	}
	if !IsNil(o.IntervalSinceLastAnalyticsTableSuccess) {
		toSerialize["intervalSinceLastAnalyticsTableSuccess"] = o.IntervalSinceLastAnalyticsTableSuccess
	}
	if !IsNil(o.IsMetadataSyncEnabled) {
		toSerialize["isMetadataSyncEnabled"] = o.IsMetadataSyncEnabled
	}
	if !IsNil(o.IsMetadataVersionEnabled) {
		toSerialize["isMetadataVersionEnabled"] = o.IsMetadataVersionEnabled
	}
	if !IsNil(o.JasperReportsVersion) {
		toSerialize["jasperReportsVersion"] = o.JasperReportsVersion
	}
	if !IsNil(o.JavaOpts) {
		toSerialize["javaOpts"] = o.JavaOpts
	}
	if !IsNil(o.JavaVendor) {
		toSerialize["javaVendor"] = o.JavaVendor
	}
	if !IsNil(o.JavaVersion) {
		toSerialize["javaVersion"] = o.JavaVersion
	}
	if !IsNil(o.LastAnalyticsTablePartitionRuntime) {
		toSerialize["lastAnalyticsTablePartitionRuntime"] = o.LastAnalyticsTablePartitionRuntime
	}
	if !IsNil(o.LastAnalyticsTablePartitionSuccess) {
		toSerialize["lastAnalyticsTablePartitionSuccess"] = o.LastAnalyticsTablePartitionSuccess
	}
	if !IsNil(o.LastAnalyticsTableRuntime) {
		toSerialize["lastAnalyticsTableRuntime"] = o.LastAnalyticsTableRuntime
	}
	if !IsNil(o.LastAnalyticsTableSuccess) {
		toSerialize["lastAnalyticsTableSuccess"] = o.LastAnalyticsTableSuccess
	}
	if !IsNil(o.LastMetadataVersionSyncAttempt) {
		toSerialize["lastMetadataVersionSyncAttempt"] = o.LastMetadataVersionSyncAttempt
	}
	if !IsNil(o.LastSystemMonitoringSuccess) {
		toSerialize["lastSystemMonitoringSuccess"] = o.LastSystemMonitoringSuccess
	}
	if !IsNil(o.MemoryInfo) {
		toSerialize["memoryInfo"] = o.MemoryInfo
	}
	if !IsNil(o.NodeId) {
		toSerialize["nodeId"] = o.NodeId
	}
	if !IsNil(o.OsArchitecture) {
		toSerialize["osArchitecture"] = o.OsArchitecture
	}
	if !IsNil(o.OsName) {
		toSerialize["osName"] = o.OsName
	}
	if !IsNil(o.OsVersion) {
		toSerialize["osVersion"] = o.OsVersion
	}
	if !IsNil(o.ReadOnlyMode) {
		toSerialize["readOnlyMode"] = o.ReadOnlyMode
	}
	if !IsNil(o.ReadReplicaCount) {
		toSerialize["readReplicaCount"] = o.ReadReplicaCount
	}
	if !IsNil(o.RedisEnabled) {
		toSerialize["redisEnabled"] = o.RedisEnabled
	}
	if !IsNil(o.RedisHostname) {
		toSerialize["redisHostname"] = o.RedisHostname
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.ServerDate) {
		toSerialize["serverDate"] = o.ServerDate
	}
	if !IsNil(o.ServerTimeZoneDisplayName) {
		toSerialize["serverTimeZoneDisplayName"] = o.ServerTimeZoneDisplayName
	}
	if !IsNil(o.ServerTimeZoneId) {
		toSerialize["serverTimeZoneId"] = o.ServerTimeZoneId
	}
	if !IsNil(o.SystemId) {
		toSerialize["systemId"] = o.SystemId
	}
	if !IsNil(o.SystemMetadataVersion) {
		toSerialize["systemMetadataVersion"] = o.SystemMetadataVersion
	}
	if !IsNil(o.SystemMonitoringUrl) {
		toSerialize["systemMonitoringUrl"] = o.SystemMonitoringUrl
	}
	if !IsNil(o.SystemName) {
		toSerialize["systemName"] = o.SystemName
	}
	if !IsNil(o.UserAgent) {
		toSerialize["userAgent"] = o.UserAgent
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableSystemInfo struct {
	value *SystemInfo
	isSet bool
}

func (v NullableSystemInfo) Get() *SystemInfo {
	return v.value
}

func (v *NullableSystemInfo) Set(val *SystemInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemInfo(val *SystemInfo) *NullableSystemInfo {
	return &NullableSystemInfo{value: val, isSet: true}
}

func (v NullableSystemInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
