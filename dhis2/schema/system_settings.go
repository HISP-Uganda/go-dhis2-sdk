/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the SystemSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemSettings{}

// SystemSettings struct for SystemSettings
type SystemSettings struct {
	AcceptanceRequiredForApproval                         *bool                          `json:"acceptanceRequiredForApproval,omitempty"`
	AccountExpiresInDays                                  int32                          `json:"accountExpiresInDays"`
	AccountExpiryAlert                                    *bool                          `json:"accountExpiryAlert,omitempty"`
	AccountRecoveryEnabled                                *bool                          `json:"accountRecoveryEnabled,omitempty"`
	AllowObjectAssignment                                 *bool                          `json:"allowObjectAssignment,omitempty"`
	AnalysisDigitGroupSeparator                           DigitGroupSeparator            `json:"analysisDigitGroupSeparator"`
	AnalysisDisplayProperty                               DisplayProperty                `json:"analysisDisplayProperty"`
	AnalysisRelativePeriod                                RelativePeriodEnum             `json:"analysisRelativePeriod"`
	AnalyticsCacheProgressiveTtlFactor                    int32                          `json:"analyticsCacheProgressiveTtlFactor"`
	AnalyticsCacheTtlMode                                 AnalyticsCacheTtlMode          `json:"analyticsCacheTtlMode"`
	AnalyticsFinancialYearStart                           AnalyticsFinancialYearStartKey `json:"analyticsFinancialYearStart"`
	AnalyticsMaxLimit                                     int32                          `json:"analyticsMaxLimit"`
	AnalyticsPeriodYearsOffset                            int32                          `json:"analyticsPeriodYearsOffset"`
	ApplicationFooter                                     *string                        `json:"applicationFooter,omitempty"`
	ApplicationIntro                                      *string                        `json:"applicationIntro,omitempty"`
	ApplicationNotification                               *string                        `json:"applicationNotification,omitempty"`
	ApplicationRightFooter                                *string                        `json:"applicationRightFooter,omitempty"`
	ApplicationTitle                                      *string                        `json:"applicationTitle,omitempty"`
	BingMapsApiKey                                        *string                        `json:"bingMapsApiKey,omitempty"`
	CacheStrategy                                         CacheStrategy                  `json:"cacheStrategy"`
	Cacheability                                          Cacheability                   `json:"cacheability"`
	Calendar                                              *string                        `json:"calendar,omitempty"`
	CanGrantOwnUserRoles                                  *bool                          `json:"canGrantOwnUserRoles,omitempty"`
	CountPassiveDashboardViewsInUsageAnalytics            *bool                          `json:"countPassiveDashboardViewsInUsageAnalytics,omitempty"`
	CredentialsExpires                                    int32                          `json:"credentialsExpires"`
	CredentialsExpiresReminderInDays                      int32                          `json:"credentialsExpiresReminderInDays"`
	CredentialsExpiryAlert                                *bool                          `json:"credentialsExpiryAlert,omitempty"`
	CurrentDomainType                                     *string                        `json:"currentDomainType,omitempty"`
	CustomCss                                             *string                        `json:"customCss,omitempty"`
	CustomJs                                              *string                        `json:"customJs,omitempty"`
	CustomLoginPageLogo                                   *bool                          `json:"customLoginPageLogo,omitempty"`
	CustomTopMenuLogo                                     *bool                          `json:"customTopMenuLogo,omitempty"`
	DashboardContextMenuItemOpenInRelevantApp             *bool                          `json:"dashboardContextMenuItemOpenInRelevantApp,omitempty"`
	DashboardContextMenuItemShowInterpretationsAndDetails *bool                          `json:"dashboardContextMenuItemShowInterpretationsAndDetails,omitempty"`
	DashboardContextMenuItemSwitchViewType                *bool                          `json:"dashboardContextMenuItemSwitchViewType,omitempty"`
	DashboardContextMenuItemViewFullscreen                *bool                          `json:"dashboardContextMenuItemViewFullscreen,omitempty"`
	DataImportRequireAttributeOptionCombo                 *bool                          `json:"dataImportRequireAttributeOptionCombo,omitempty"`
	DataImportRequireCategoryOptionCombo                  *bool                          `json:"dataImportRequireCategoryOptionCombo,omitempty"`
	DataImportStrictAttributeOptionCombos                 *bool                          `json:"dataImportStrictAttributeOptionCombos,omitempty"`
	DataImportStrictCategoryOptionCombos                  *bool                          `json:"dataImportStrictCategoryOptionCombos,omitempty"`
	DataImportStrictDataElements                          *bool                          `json:"dataImportStrictDataElements,omitempty"`
	DataImportStrictDataSetApproval                       *bool                          `json:"dataImportStrictDataSetApproval,omitempty"`
	DataImportStrictDataSetInputPeriods                   *bool                          `json:"dataImportStrictDataSetInputPeriods,omitempty"`
	DataImportStrictDataSetLocking                        *bool                          `json:"dataImportStrictDataSetLocking,omitempty"`
	DataImportStrictOrganisationUnits                     *bool                          `json:"dataImportStrictOrganisationUnits,omitempty"`
	DataImportStrictPeriods                               *bool                          `json:"dataImportStrictPeriods,omitempty"`
	DatabaseServerCpus                                    int32                          `json:"databaseServerCpus"`
	DateFormat                                            *string                        `json:"dateFormat,omitempty"`
	DbLocale                                              *string                        `json:"dbLocale,omitempty"`
	DefaultBaseMap                                        *string                        `json:"defaultBaseMap,omitempty"`
	EmailConfigured                                       *bool                          `json:"emailConfigured,omitempty"`
	EmailHostName                                         *string                        `json:"emailHostName,omitempty"`
	EmailPassword                                         *string                        `json:"emailPassword,omitempty"`
	EmailPort                                             int32                          `json:"emailPort"`
	EmailSender                                           *string                        `json:"emailSender,omitempty"`
	EmailTls                                              *bool                          `json:"emailTls,omitempty"`
	EmailUsername                                         *string                        `json:"emailUsername,omitempty"`
	EmbeddedDashboardsEnabled                             *bool                          `json:"embeddedDashboardsEnabled,omitempty"`
	EnforceVerifiedEmail                                  *bool                          `json:"enforceVerifiedEmail,omitempty"`
	FactorOfDeviation                                     float64                        `json:"factorOfDeviation"`
	FileResourceRetentionStrategy                         FileResourceRetentionStrategy  `json:"fileResourceRetentionStrategy"`
	Flag                                                  *string                        `json:"flag,omitempty"`
	FlagImage                                             *string                        `json:"flagImage,omitempty"`
	GatherAnalyticalObjectStatisticsInDashboardViews      *bool                          `json:"gatherAnalyticalObjectStatisticsInDashboardViews,omitempty"`
	GlobalShellAppName                                    *string                        `json:"globalShellAppName,omitempty"`
	GlobalShellEnabled                                    *bool                          `json:"globalShellEnabled,omitempty"`
	GoogleAnalyticsUA                                     *string                        `json:"googleAnalyticsUA,omitempty"`
	GoogleMapsApiKey                                      *string                        `json:"googleMapsApiKey,omitempty"`
	HelpPageLink                                          *string                        `json:"helpPageLink,omitempty"`
	HideBiMonthlyPeriods                                  *bool                          `json:"hideBiMonthlyPeriods,omitempty"`
	HideBiWeeklyPeriods                                   *bool                          `json:"hideBiWeeklyPeriods,omitempty"`
	HideDailyPeriods                                      *bool                          `json:"hideDailyPeriods,omitempty"`
	HideMonthlyPeriods                                    *bool                          `json:"hideMonthlyPeriods,omitempty"`
	HideUnapprovedDataInAnalytics                         *bool                          `json:"hideUnapprovedDataInAnalytics,omitempty"`
	HideWeeklyPeriods                                     *bool                          `json:"hideWeeklyPeriods,omitempty"`
	HtmlPushAnalyticsUrl                                  *string                        `json:"htmlPushAnalyticsUrl,omitempty"`
	IgnoreAnalyticsApprovalYearThreshold                  int32                          `json:"ignoreAnalyticsApprovalYearThreshold"`
	IncludeZeroValuesInAnalytics                          *bool                          `json:"includeZeroValuesInAnalytics,omitempty"`
	JobsCleanupAfterMinutes                               int32                          `json:"jobsCleanupAfterMinutes"`
	JobsLogDebugBelowSeconds                              int32                          `json:"jobsLogDebugBelowSeconds"`
	JobsMaxCronDelayHours                                 int32                          `json:"jobsMaxCronDelayHours"`
	JobsRescheduleAfterMinutes                            int32                          `json:"jobsRescheduleAfterMinutes"`
	LastCompleteDataSetRegistrationSyncSuccess            *time.Time                     `json:"lastCompleteDataSetRegistrationSyncSuccess,omitempty"`
	LastMetaDataSyncSuccess                               *time.Time                     `json:"lastMetaDataSyncSuccess,omitempty"`
	LastMonitoringRun                                     *time.Time                     `json:"lastMonitoringRun,omitempty"`
	LastSuccessfulAnalyticsTablesRuntime                  *string                        `json:"lastSuccessfulAnalyticsTablesRuntime,omitempty"`
	LastSuccessfulAnalyticsTablesUpdate                   *time.Time                     `json:"lastSuccessfulAnalyticsTablesUpdate,omitempty"`
	LastSuccessfulDataStatistics                          *time.Time                     `json:"lastSuccessfulDataStatistics,omitempty"`
	LastSuccessfulDataSynch                               *time.Time                     `json:"lastSuccessfulDataSynch,omitempty"`
	LastSuccessfulEventsDataSynch                         *time.Time                     `json:"lastSuccessfulEventsDataSynch,omitempty"`
	LastSuccessfulLatestAnalyticsPartitionRuntime         *string                        `json:"lastSuccessfulLatestAnalyticsPartitionRuntime,omitempty"`
	LastSuccessfulLatestAnalyticsPartitionUpdate          *time.Time                     `json:"lastSuccessfulLatestAnalyticsPartitionUpdate,omitempty"`
	LastSuccessfulMonitoring                              *time.Time                     `json:"lastSuccessfulMonitoring,omitempty"`
	LastSuccessfulResourceTablesUpdate                    *time.Time                     `json:"lastSuccessfulResourceTablesUpdate,omitempty"`
	LastSuccessfulScheduledDataSetNotifications           *time.Time                     `json:"lastSuccessfulScheduledDataSetNotifications,omitempty"`
	LastSuccessfulScheduledProgramNotifications           *time.Time                     `json:"lastSuccessfulScheduledProgramNotifications,omitempty"`
	LastSuccessfulSystemMonitoringPush                    *time.Time                     `json:"lastSuccessfulSystemMonitoringPush,omitempty"`
	LockMultipleFailedLogins                              *bool                          `json:"lockMultipleFailedLogins,omitempty"`
	LoginPageLayout                                       LoginPageLayout                `json:"loginPageLayout"`
	LoginPageTemplate                                     *string                        `json:"loginPageTemplate,omitempty"`
	LoginPopup                                            *string                        `json:"loginPopup,omitempty"`
	MaxPasswordLength                                     int32                          `json:"maxPasswordLength"`
	MetaDataRepoUrl                                       *string                        `json:"metaDataRepoUrl,omitempty"`
	MetadataFailedVersion                                 *string                        `json:"metadataFailedVersion,omitempty"`
	MetadataLastFailedTime                                *time.Time                     `json:"metadataLastFailedTime,omitempty"`
	MinPasswordLength                                     int32                          `json:"minPasswordLength"`
	MultiOrganisationUnitForms                            *bool                          `json:"multiOrganisationUnitForms,omitempty"`
	NextAnalyticsTableUpdate                              *time.Time                     `json:"nextAnalyticsTableUpdate,omitempty"`
	NotifierCleanAfterIdleTime                            int64                          `json:"notifierCleanAfterIdleTime"`
	NotifierGistOverview                                  *bool                          `json:"notifierGistOverview,omitempty"`
	NotifierLogLevel                                      NotificationLevel              `json:"notifierLogLevel"`
	NotifierMaxAgeDays                                    int32                          `json:"notifierMaxAgeDays"`
	NotifierMaxJobsPerType                                int32                          `json:"notifierMaxJobsPerType"`
	NotifierMaxMessagesPerJob                             int32                          `json:"notifierMaxMessagesPerJob"`
	ParallelJobsInAnalyticsTableExport                    int32                          `json:"parallelJobsInAnalyticsTableExport"`
	PhoneNumberAreaCode                                   *string                        `json:"phoneNumberAreaCode,omitempty"`
	RecaptchaSecret                                       *string                        `json:"recaptchaSecret,omitempty"`
	RecaptchaSite                                         *string                        `json:"recaptchaSite,omitempty"`
	RemoteInstancePassword                                *string                        `json:"remoteInstancePassword,omitempty"`
	RemoteInstanceUrl                                     *string                        `json:"remoteInstanceUrl,omitempty"`
	RemoteInstanceUsername                                *string                        `json:"remoteInstanceUsername,omitempty"`
	RemoteMetadataVersion                                 *string                        `json:"remoteMetadataVersion,omitempty"`
	RequireAddToView                                      *bool                          `json:"requireAddToView,omitempty"`
	RespectMetaDataStartEndDatesInAnalyticsTableExport    *bool                          `json:"respectMetaDataStartEndDatesInAnalyticsTableExport,omitempty"`
	RuleEngineAssignOverwrite                             *bool                          `json:"ruleEngineAssignOverwrite,omitempty"`
	SelfRegistrationNoRecaptcha                           *bool                          `json:"selfRegistrationNoRecaptcha,omitempty"`
	SkipDataTypeValidationInAnalyticsTableExport          *bool                          `json:"skipDataTypeValidationInAnalyticsTableExport,omitempty"`
	SmsMaxLength                                          int32                          `json:"smsMaxLength"`
	SqlViewMaxLimit                                       int32                          `json:"sqlViewMaxLimit"`
	StartModule                                           *string                        `json:"startModule,omitempty"`
	StartModuleEnableLightweight                          *bool                          `json:"startModuleEnableLightweight,omitempty"`
	StopMetadataSync                                      *bool                          `json:"stopMetadataSync,omitempty"`
	Style                                                 *string                        `json:"style,omitempty"`
	SyncDelayBetweenRemoteServerAvailabilityCheckAttempts int32                          `json:"syncDelayBetweenRemoteServerAvailabilityCheckAttempts"`
	SyncMaxAttempts                                       int32                          `json:"syncMaxAttempts"`
	SyncMaxRemoteServerAvailabilityCheckAttempts          int32                          `json:"syncMaxRemoteServerAvailabilityCheckAttempts"`
	SyncSkipSyncForDataChangedBefore                      *time.Time                     `json:"syncSkipSyncForDataChangedBefore,omitempty"`
	SystemMetadataVersion                                 *string                        `json:"systemMetadataVersion,omitempty"`
	SystemNotificationsEmail                              *string                        `json:"systemNotificationsEmail,omitempty"`
	TrackedEntityMaxLimit                                 int32                          `json:"trackedEntityMaxLimit"`
	TrackerDashboardLayout                                *string                        `json:"trackerDashboardLayout,omitempty"`
	UiLocale                                              *string                        `json:"uiLocale,omitempty"`
	UseCustomLogoBanner                                   *bool                          `json:"useCustomLogoBanner,omitempty"`
	UseCustomLogoFront                                    *bool                          `json:"useCustomLogoFront,omitempty"`
	UseExperimentalAnalyticsQueryEngine                   *bool                          `json:"useExperimentalAnalyticsQueryEngine,omitempty"`
	VersionEnabled                                        *bool                          `json:"versionEnabled,omitempty"`
}

type _SystemSettings SystemSettings

// NewSystemSettings instantiates a new SystemSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemSettings(accountExpiresInDays int32, analysisDigitGroupSeparator DigitGroupSeparator, analysisDisplayProperty DisplayProperty, analysisRelativePeriod RelativePeriodEnum, analyticsCacheProgressiveTtlFactor int32, analyticsCacheTtlMode AnalyticsCacheTtlMode, analyticsFinancialYearStart AnalyticsFinancialYearStartKey, analyticsMaxLimit int32, analyticsPeriodYearsOffset int32, cacheStrategy CacheStrategy, cacheability Cacheability, credentialsExpires int32, credentialsExpiresReminderInDays int32, databaseServerCpus int32, emailPort int32, factorOfDeviation float64, fileResourceRetentionStrategy FileResourceRetentionStrategy, ignoreAnalyticsApprovalYearThreshold int32, jobsCleanupAfterMinutes int32, jobsLogDebugBelowSeconds int32, jobsMaxCronDelayHours int32, jobsRescheduleAfterMinutes int32, loginPageLayout LoginPageLayout, maxPasswordLength int32, minPasswordLength int32, notifierCleanAfterIdleTime int64, notifierLogLevel NotificationLevel, notifierMaxAgeDays int32, notifierMaxJobsPerType int32, notifierMaxMessagesPerJob int32, parallelJobsInAnalyticsTableExport int32, smsMaxLength int32, sqlViewMaxLimit int32, syncDelayBetweenRemoteServerAvailabilityCheckAttempts int32, syncMaxAttempts int32, syncMaxRemoteServerAvailabilityCheckAttempts int32, trackedEntityMaxLimit int32) *SystemSettings {
	this := SystemSettings{}
	this.AccountExpiresInDays = accountExpiresInDays
	this.AnalysisDigitGroupSeparator = analysisDigitGroupSeparator
	this.AnalysisDisplayProperty = analysisDisplayProperty
	this.AnalysisRelativePeriod = analysisRelativePeriod
	this.AnalyticsCacheProgressiveTtlFactor = analyticsCacheProgressiveTtlFactor
	this.AnalyticsCacheTtlMode = analyticsCacheTtlMode
	this.AnalyticsFinancialYearStart = analyticsFinancialYearStart
	this.AnalyticsMaxLimit = analyticsMaxLimit
	this.AnalyticsPeriodYearsOffset = analyticsPeriodYearsOffset
	this.CacheStrategy = cacheStrategy
	this.Cacheability = cacheability
	this.CredentialsExpires = credentialsExpires
	this.CredentialsExpiresReminderInDays = credentialsExpiresReminderInDays
	this.DatabaseServerCpus = databaseServerCpus
	this.EmailPort = emailPort
	this.FactorOfDeviation = factorOfDeviation
	this.FileResourceRetentionStrategy = fileResourceRetentionStrategy
	this.IgnoreAnalyticsApprovalYearThreshold = ignoreAnalyticsApprovalYearThreshold
	this.JobsCleanupAfterMinutes = jobsCleanupAfterMinutes
	this.JobsLogDebugBelowSeconds = jobsLogDebugBelowSeconds
	this.JobsMaxCronDelayHours = jobsMaxCronDelayHours
	this.JobsRescheduleAfterMinutes = jobsRescheduleAfterMinutes
	this.LoginPageLayout = loginPageLayout
	this.MaxPasswordLength = maxPasswordLength
	this.MinPasswordLength = minPasswordLength
	this.NotifierCleanAfterIdleTime = notifierCleanAfterIdleTime
	this.NotifierLogLevel = notifierLogLevel
	this.NotifierMaxAgeDays = notifierMaxAgeDays
	this.NotifierMaxJobsPerType = notifierMaxJobsPerType
	this.NotifierMaxMessagesPerJob = notifierMaxMessagesPerJob
	this.ParallelJobsInAnalyticsTableExport = parallelJobsInAnalyticsTableExport
	this.SmsMaxLength = smsMaxLength
	this.SqlViewMaxLimit = sqlViewMaxLimit
	this.SyncDelayBetweenRemoteServerAvailabilityCheckAttempts = syncDelayBetweenRemoteServerAvailabilityCheckAttempts
	this.SyncMaxAttempts = syncMaxAttempts
	this.SyncMaxRemoteServerAvailabilityCheckAttempts = syncMaxRemoteServerAvailabilityCheckAttempts
	this.TrackedEntityMaxLimit = trackedEntityMaxLimit
	return &this
}

// NewSystemSettingsWithDefaults instantiates a new SystemSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemSettingsWithDefaults() *SystemSettings {
	this := SystemSettings{}
	return &this
}

// GetAcceptanceRequiredForApproval returns the AcceptanceRequiredForApproval field value if set, zero value otherwise.
func (o *SystemSettings) GetAcceptanceRequiredForApproval() bool {
	if o == nil || IsNil(o.AcceptanceRequiredForApproval) {
		var ret bool
		return ret
	}
	return *o.AcceptanceRequiredForApproval
}

// GetAcceptanceRequiredForApprovalOk returns a tuple with the AcceptanceRequiredForApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAcceptanceRequiredForApprovalOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptanceRequiredForApproval) {
		return nil, false
	}
	return o.AcceptanceRequiredForApproval, true
}

// HasAcceptanceRequiredForApproval returns a boolean if a field has been set.
func (o *SystemSettings) HasAcceptanceRequiredForApproval() bool {
	if o != nil && !IsNil(o.AcceptanceRequiredForApproval) {
		return true
	}

	return false
}

// SetAcceptanceRequiredForApproval gets a reference to the given bool and assigns it to the AcceptanceRequiredForApproval field.
func (o *SystemSettings) SetAcceptanceRequiredForApproval(v bool) {
	o.AcceptanceRequiredForApproval = &v
}

// GetAccountExpiresInDays returns the AccountExpiresInDays field value
func (o *SystemSettings) GetAccountExpiresInDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountExpiresInDays
}

// GetAccountExpiresInDaysOk returns a tuple with the AccountExpiresInDays field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAccountExpiresInDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountExpiresInDays, true
}

// SetAccountExpiresInDays sets field value
func (o *SystemSettings) SetAccountExpiresInDays(v int32) {
	o.AccountExpiresInDays = v
}

// GetAccountExpiryAlert returns the AccountExpiryAlert field value if set, zero value otherwise.
func (o *SystemSettings) GetAccountExpiryAlert() bool {
	if o == nil || IsNil(o.AccountExpiryAlert) {
		var ret bool
		return ret
	}
	return *o.AccountExpiryAlert
}

// GetAccountExpiryAlertOk returns a tuple with the AccountExpiryAlert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAccountExpiryAlertOk() (*bool, bool) {
	if o == nil || IsNil(o.AccountExpiryAlert) {
		return nil, false
	}
	return o.AccountExpiryAlert, true
}

// HasAccountExpiryAlert returns a boolean if a field has been set.
func (o *SystemSettings) HasAccountExpiryAlert() bool {
	if o != nil && !IsNil(o.AccountExpiryAlert) {
		return true
	}

	return false
}

// SetAccountExpiryAlert gets a reference to the given bool and assigns it to the AccountExpiryAlert field.
func (o *SystemSettings) SetAccountExpiryAlert(v bool) {
	o.AccountExpiryAlert = &v
}

// GetAccountRecoveryEnabled returns the AccountRecoveryEnabled field value if set, zero value otherwise.
func (o *SystemSettings) GetAccountRecoveryEnabled() bool {
	if o == nil || IsNil(o.AccountRecoveryEnabled) {
		var ret bool
		return ret
	}
	return *o.AccountRecoveryEnabled
}

// GetAccountRecoveryEnabledOk returns a tuple with the AccountRecoveryEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAccountRecoveryEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AccountRecoveryEnabled) {
		return nil, false
	}
	return o.AccountRecoveryEnabled, true
}

// HasAccountRecoveryEnabled returns a boolean if a field has been set.
func (o *SystemSettings) HasAccountRecoveryEnabled() bool {
	if o != nil && !IsNil(o.AccountRecoveryEnabled) {
		return true
	}

	return false
}

// SetAccountRecoveryEnabled gets a reference to the given bool and assigns it to the AccountRecoveryEnabled field.
func (o *SystemSettings) SetAccountRecoveryEnabled(v bool) {
	o.AccountRecoveryEnabled = &v
}

// GetAllowObjectAssignment returns the AllowObjectAssignment field value if set, zero value otherwise.
func (o *SystemSettings) GetAllowObjectAssignment() bool {
	if o == nil || IsNil(o.AllowObjectAssignment) {
		var ret bool
		return ret
	}
	return *o.AllowObjectAssignment
}

// GetAllowObjectAssignmentOk returns a tuple with the AllowObjectAssignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAllowObjectAssignmentOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowObjectAssignment) {
		return nil, false
	}
	return o.AllowObjectAssignment, true
}

// HasAllowObjectAssignment returns a boolean if a field has been set.
func (o *SystemSettings) HasAllowObjectAssignment() bool {
	if o != nil && !IsNil(o.AllowObjectAssignment) {
		return true
	}

	return false
}

// SetAllowObjectAssignment gets a reference to the given bool and assigns it to the AllowObjectAssignment field.
func (o *SystemSettings) SetAllowObjectAssignment(v bool) {
	o.AllowObjectAssignment = &v
}

// GetAnalysisDigitGroupSeparator returns the AnalysisDigitGroupSeparator field value
func (o *SystemSettings) GetAnalysisDigitGroupSeparator() DigitGroupSeparator {
	if o == nil {
		var ret DigitGroupSeparator
		return ret
	}

	return o.AnalysisDigitGroupSeparator
}

// GetAnalysisDigitGroupSeparatorOk returns a tuple with the AnalysisDigitGroupSeparator field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAnalysisDigitGroupSeparatorOk() (*DigitGroupSeparator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalysisDigitGroupSeparator, true
}

// SetAnalysisDigitGroupSeparator sets field value
func (o *SystemSettings) SetAnalysisDigitGroupSeparator(v DigitGroupSeparator) {
	o.AnalysisDigitGroupSeparator = v
}

// GetAnalysisDisplayProperty returns the AnalysisDisplayProperty field value
func (o *SystemSettings) GetAnalysisDisplayProperty() DisplayProperty {
	if o == nil {
		var ret DisplayProperty
		return ret
	}

	return o.AnalysisDisplayProperty
}

// GetAnalysisDisplayPropertyOk returns a tuple with the AnalysisDisplayProperty field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAnalysisDisplayPropertyOk() (*DisplayProperty, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalysisDisplayProperty, true
}

// SetAnalysisDisplayProperty sets field value
func (o *SystemSettings) SetAnalysisDisplayProperty(v DisplayProperty) {
	o.AnalysisDisplayProperty = v
}

// GetAnalysisRelativePeriod returns the AnalysisRelativePeriod field value
func (o *SystemSettings) GetAnalysisRelativePeriod() RelativePeriodEnum {
	if o == nil {
		var ret RelativePeriodEnum
		return ret
	}

	return o.AnalysisRelativePeriod
}

// GetAnalysisRelativePeriodOk returns a tuple with the AnalysisRelativePeriod field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAnalysisRelativePeriodOk() (*RelativePeriodEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalysisRelativePeriod, true
}

// SetAnalysisRelativePeriod sets field value
func (o *SystemSettings) SetAnalysisRelativePeriod(v RelativePeriodEnum) {
	o.AnalysisRelativePeriod = v
}

// GetAnalyticsCacheProgressiveTtlFactor returns the AnalyticsCacheProgressiveTtlFactor field value
func (o *SystemSettings) GetAnalyticsCacheProgressiveTtlFactor() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AnalyticsCacheProgressiveTtlFactor
}

// GetAnalyticsCacheProgressiveTtlFactorOk returns a tuple with the AnalyticsCacheProgressiveTtlFactor field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAnalyticsCacheProgressiveTtlFactorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalyticsCacheProgressiveTtlFactor, true
}

// SetAnalyticsCacheProgressiveTtlFactor sets field value
func (o *SystemSettings) SetAnalyticsCacheProgressiveTtlFactor(v int32) {
	o.AnalyticsCacheProgressiveTtlFactor = v
}

// GetAnalyticsCacheTtlMode returns the AnalyticsCacheTtlMode field value
func (o *SystemSettings) GetAnalyticsCacheTtlMode() AnalyticsCacheTtlMode {
	if o == nil {
		var ret AnalyticsCacheTtlMode
		return ret
	}

	return o.AnalyticsCacheTtlMode
}

// GetAnalyticsCacheTtlModeOk returns a tuple with the AnalyticsCacheTtlMode field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAnalyticsCacheTtlModeOk() (*AnalyticsCacheTtlMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalyticsCacheTtlMode, true
}

// SetAnalyticsCacheTtlMode sets field value
func (o *SystemSettings) SetAnalyticsCacheTtlMode(v AnalyticsCacheTtlMode) {
	o.AnalyticsCacheTtlMode = v
}

// GetAnalyticsFinancialYearStart returns the AnalyticsFinancialYearStart field value
func (o *SystemSettings) GetAnalyticsFinancialYearStart() AnalyticsFinancialYearStartKey {
	if o == nil {
		var ret AnalyticsFinancialYearStartKey
		return ret
	}

	return o.AnalyticsFinancialYearStart
}

// GetAnalyticsFinancialYearStartOk returns a tuple with the AnalyticsFinancialYearStart field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAnalyticsFinancialYearStartOk() (*AnalyticsFinancialYearStartKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalyticsFinancialYearStart, true
}

// SetAnalyticsFinancialYearStart sets field value
func (o *SystemSettings) SetAnalyticsFinancialYearStart(v AnalyticsFinancialYearStartKey) {
	o.AnalyticsFinancialYearStart = v
}

// GetAnalyticsMaxLimit returns the AnalyticsMaxLimit field value
func (o *SystemSettings) GetAnalyticsMaxLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AnalyticsMaxLimit
}

// GetAnalyticsMaxLimitOk returns a tuple with the AnalyticsMaxLimit field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAnalyticsMaxLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalyticsMaxLimit, true
}

// SetAnalyticsMaxLimit sets field value
func (o *SystemSettings) SetAnalyticsMaxLimit(v int32) {
	o.AnalyticsMaxLimit = v
}

// GetAnalyticsPeriodYearsOffset returns the AnalyticsPeriodYearsOffset field value
func (o *SystemSettings) GetAnalyticsPeriodYearsOffset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AnalyticsPeriodYearsOffset
}

// GetAnalyticsPeriodYearsOffsetOk returns a tuple with the AnalyticsPeriodYearsOffset field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetAnalyticsPeriodYearsOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalyticsPeriodYearsOffset, true
}

// SetAnalyticsPeriodYearsOffset sets field value
func (o *SystemSettings) SetAnalyticsPeriodYearsOffset(v int32) {
	o.AnalyticsPeriodYearsOffset = v
}

// GetApplicationFooter returns the ApplicationFooter field value if set, zero value otherwise.
func (o *SystemSettings) GetApplicationFooter() string {
	if o == nil || IsNil(o.ApplicationFooter) {
		var ret string
		return ret
	}
	return *o.ApplicationFooter
}

// GetApplicationFooterOk returns a tuple with the ApplicationFooter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetApplicationFooterOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationFooter) {
		return nil, false
	}
	return o.ApplicationFooter, true
}

// HasApplicationFooter returns a boolean if a field has been set.
func (o *SystemSettings) HasApplicationFooter() bool {
	if o != nil && !IsNil(o.ApplicationFooter) {
		return true
	}

	return false
}

// SetApplicationFooter gets a reference to the given string and assigns it to the ApplicationFooter field.
func (o *SystemSettings) SetApplicationFooter(v string) {
	o.ApplicationFooter = &v
}

// GetApplicationIntro returns the ApplicationIntro field value if set, zero value otherwise.
func (o *SystemSettings) GetApplicationIntro() string {
	if o == nil || IsNil(o.ApplicationIntro) {
		var ret string
		return ret
	}
	return *o.ApplicationIntro
}

// GetApplicationIntroOk returns a tuple with the ApplicationIntro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetApplicationIntroOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationIntro) {
		return nil, false
	}
	return o.ApplicationIntro, true
}

// HasApplicationIntro returns a boolean if a field has been set.
func (o *SystemSettings) HasApplicationIntro() bool {
	if o != nil && !IsNil(o.ApplicationIntro) {
		return true
	}

	return false
}

// SetApplicationIntro gets a reference to the given string and assigns it to the ApplicationIntro field.
func (o *SystemSettings) SetApplicationIntro(v string) {
	o.ApplicationIntro = &v
}

// GetApplicationNotification returns the ApplicationNotification field value if set, zero value otherwise.
func (o *SystemSettings) GetApplicationNotification() string {
	if o == nil || IsNil(o.ApplicationNotification) {
		var ret string
		return ret
	}
	return *o.ApplicationNotification
}

// GetApplicationNotificationOk returns a tuple with the ApplicationNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetApplicationNotificationOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationNotification) {
		return nil, false
	}
	return o.ApplicationNotification, true
}

// HasApplicationNotification returns a boolean if a field has been set.
func (o *SystemSettings) HasApplicationNotification() bool {
	if o != nil && !IsNil(o.ApplicationNotification) {
		return true
	}

	return false
}

// SetApplicationNotification gets a reference to the given string and assigns it to the ApplicationNotification field.
func (o *SystemSettings) SetApplicationNotification(v string) {
	o.ApplicationNotification = &v
}

// GetApplicationRightFooter returns the ApplicationRightFooter field value if set, zero value otherwise.
func (o *SystemSettings) GetApplicationRightFooter() string {
	if o == nil || IsNil(o.ApplicationRightFooter) {
		var ret string
		return ret
	}
	return *o.ApplicationRightFooter
}

// GetApplicationRightFooterOk returns a tuple with the ApplicationRightFooter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetApplicationRightFooterOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationRightFooter) {
		return nil, false
	}
	return o.ApplicationRightFooter, true
}

// HasApplicationRightFooter returns a boolean if a field has been set.
func (o *SystemSettings) HasApplicationRightFooter() bool {
	if o != nil && !IsNil(o.ApplicationRightFooter) {
		return true
	}

	return false
}

// SetApplicationRightFooter gets a reference to the given string and assigns it to the ApplicationRightFooter field.
func (o *SystemSettings) SetApplicationRightFooter(v string) {
	o.ApplicationRightFooter = &v
}

// GetApplicationTitle returns the ApplicationTitle field value if set, zero value otherwise.
func (o *SystemSettings) GetApplicationTitle() string {
	if o == nil || IsNil(o.ApplicationTitle) {
		var ret string
		return ret
	}
	return *o.ApplicationTitle
}

// GetApplicationTitleOk returns a tuple with the ApplicationTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetApplicationTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationTitle) {
		return nil, false
	}
	return o.ApplicationTitle, true
}

// HasApplicationTitle returns a boolean if a field has been set.
func (o *SystemSettings) HasApplicationTitle() bool {
	if o != nil && !IsNil(o.ApplicationTitle) {
		return true
	}

	return false
}

// SetApplicationTitle gets a reference to the given string and assigns it to the ApplicationTitle field.
func (o *SystemSettings) SetApplicationTitle(v string) {
	o.ApplicationTitle = &v
}

// GetBingMapsApiKey returns the BingMapsApiKey field value if set, zero value otherwise.
func (o *SystemSettings) GetBingMapsApiKey() string {
	if o == nil || IsNil(o.BingMapsApiKey) {
		var ret string
		return ret
	}
	return *o.BingMapsApiKey
}

// GetBingMapsApiKeyOk returns a tuple with the BingMapsApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetBingMapsApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.BingMapsApiKey) {
		return nil, false
	}
	return o.BingMapsApiKey, true
}

// HasBingMapsApiKey returns a boolean if a field has been set.
func (o *SystemSettings) HasBingMapsApiKey() bool {
	if o != nil && !IsNil(o.BingMapsApiKey) {
		return true
	}

	return false
}

// SetBingMapsApiKey gets a reference to the given string and assigns it to the BingMapsApiKey field.
func (o *SystemSettings) SetBingMapsApiKey(v string) {
	o.BingMapsApiKey = &v
}

// GetCacheStrategy returns the CacheStrategy field value
func (o *SystemSettings) GetCacheStrategy() CacheStrategy {
	if o == nil {
		var ret CacheStrategy
		return ret
	}

	return o.CacheStrategy
}

// GetCacheStrategyOk returns a tuple with the CacheStrategy field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCacheStrategyOk() (*CacheStrategy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CacheStrategy, true
}

// SetCacheStrategy sets field value
func (o *SystemSettings) SetCacheStrategy(v CacheStrategy) {
	o.CacheStrategy = v
}

// GetCacheability returns the Cacheability field value
func (o *SystemSettings) GetCacheability() Cacheability {
	if o == nil {
		var ret Cacheability
		return ret
	}

	return o.Cacheability
}

// GetCacheabilityOk returns a tuple with the Cacheability field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCacheabilityOk() (*Cacheability, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cacheability, true
}

// SetCacheability sets field value
func (o *SystemSettings) SetCacheability(v Cacheability) {
	o.Cacheability = v
}

// GetCalendar returns the Calendar field value if set, zero value otherwise.
func (o *SystemSettings) GetCalendar() string {
	if o == nil || IsNil(o.Calendar) {
		var ret string
		return ret
	}
	return *o.Calendar
}

// GetCalendarOk returns a tuple with the Calendar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCalendarOk() (*string, bool) {
	if o == nil || IsNil(o.Calendar) {
		return nil, false
	}
	return o.Calendar, true
}

// HasCalendar returns a boolean if a field has been set.
func (o *SystemSettings) HasCalendar() bool {
	if o != nil && !IsNil(o.Calendar) {
		return true
	}

	return false
}

// SetCalendar gets a reference to the given string and assigns it to the Calendar field.
func (o *SystemSettings) SetCalendar(v string) {
	o.Calendar = &v
}

// GetCanGrantOwnUserRoles returns the CanGrantOwnUserRoles field value if set, zero value otherwise.
func (o *SystemSettings) GetCanGrantOwnUserRoles() bool {
	if o == nil || IsNil(o.CanGrantOwnUserRoles) {
		var ret bool
		return ret
	}
	return *o.CanGrantOwnUserRoles
}

// GetCanGrantOwnUserRolesOk returns a tuple with the CanGrantOwnUserRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCanGrantOwnUserRolesOk() (*bool, bool) {
	if o == nil || IsNil(o.CanGrantOwnUserRoles) {
		return nil, false
	}
	return o.CanGrantOwnUserRoles, true
}

// HasCanGrantOwnUserRoles returns a boolean if a field has been set.
func (o *SystemSettings) HasCanGrantOwnUserRoles() bool {
	if o != nil && !IsNil(o.CanGrantOwnUserRoles) {
		return true
	}

	return false
}

// SetCanGrantOwnUserRoles gets a reference to the given bool and assigns it to the CanGrantOwnUserRoles field.
func (o *SystemSettings) SetCanGrantOwnUserRoles(v bool) {
	o.CanGrantOwnUserRoles = &v
}

// GetCountPassiveDashboardViewsInUsageAnalytics returns the CountPassiveDashboardViewsInUsageAnalytics field value if set, zero value otherwise.
func (o *SystemSettings) GetCountPassiveDashboardViewsInUsageAnalytics() bool {
	if o == nil || IsNil(o.CountPassiveDashboardViewsInUsageAnalytics) {
		var ret bool
		return ret
	}
	return *o.CountPassiveDashboardViewsInUsageAnalytics
}

// GetCountPassiveDashboardViewsInUsageAnalyticsOk returns a tuple with the CountPassiveDashboardViewsInUsageAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCountPassiveDashboardViewsInUsageAnalyticsOk() (*bool, bool) {
	if o == nil || IsNil(o.CountPassiveDashboardViewsInUsageAnalytics) {
		return nil, false
	}
	return o.CountPassiveDashboardViewsInUsageAnalytics, true
}

// HasCountPassiveDashboardViewsInUsageAnalytics returns a boolean if a field has been set.
func (o *SystemSettings) HasCountPassiveDashboardViewsInUsageAnalytics() bool {
	if o != nil && !IsNil(o.CountPassiveDashboardViewsInUsageAnalytics) {
		return true
	}

	return false
}

// SetCountPassiveDashboardViewsInUsageAnalytics gets a reference to the given bool and assigns it to the CountPassiveDashboardViewsInUsageAnalytics field.
func (o *SystemSettings) SetCountPassiveDashboardViewsInUsageAnalytics(v bool) {
	o.CountPassiveDashboardViewsInUsageAnalytics = &v
}

// GetCredentialsExpires returns the CredentialsExpires field value
func (o *SystemSettings) GetCredentialsExpires() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CredentialsExpires
}

// GetCredentialsExpiresOk returns a tuple with the CredentialsExpires field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCredentialsExpiresOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CredentialsExpires, true
}

// SetCredentialsExpires sets field value
func (o *SystemSettings) SetCredentialsExpires(v int32) {
	o.CredentialsExpires = v
}

// GetCredentialsExpiresReminderInDays returns the CredentialsExpiresReminderInDays field value
func (o *SystemSettings) GetCredentialsExpiresReminderInDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CredentialsExpiresReminderInDays
}

// GetCredentialsExpiresReminderInDaysOk returns a tuple with the CredentialsExpiresReminderInDays field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCredentialsExpiresReminderInDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CredentialsExpiresReminderInDays, true
}

// SetCredentialsExpiresReminderInDays sets field value
func (o *SystemSettings) SetCredentialsExpiresReminderInDays(v int32) {
	o.CredentialsExpiresReminderInDays = v
}

// GetCredentialsExpiryAlert returns the CredentialsExpiryAlert field value if set, zero value otherwise.
func (o *SystemSettings) GetCredentialsExpiryAlert() bool {
	if o == nil || IsNil(o.CredentialsExpiryAlert) {
		var ret bool
		return ret
	}
	return *o.CredentialsExpiryAlert
}

// GetCredentialsExpiryAlertOk returns a tuple with the CredentialsExpiryAlert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCredentialsExpiryAlertOk() (*bool, bool) {
	if o == nil || IsNil(o.CredentialsExpiryAlert) {
		return nil, false
	}
	return o.CredentialsExpiryAlert, true
}

// HasCredentialsExpiryAlert returns a boolean if a field has been set.
func (o *SystemSettings) HasCredentialsExpiryAlert() bool {
	if o != nil && !IsNil(o.CredentialsExpiryAlert) {
		return true
	}

	return false
}

// SetCredentialsExpiryAlert gets a reference to the given bool and assigns it to the CredentialsExpiryAlert field.
func (o *SystemSettings) SetCredentialsExpiryAlert(v bool) {
	o.CredentialsExpiryAlert = &v
}

// GetCurrentDomainType returns the CurrentDomainType field value if set, zero value otherwise.
func (o *SystemSettings) GetCurrentDomainType() string {
	if o == nil || IsNil(o.CurrentDomainType) {
		var ret string
		return ret
	}
	return *o.CurrentDomainType
}

// GetCurrentDomainTypeOk returns a tuple with the CurrentDomainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCurrentDomainTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentDomainType) {
		return nil, false
	}
	return o.CurrentDomainType, true
}

// HasCurrentDomainType returns a boolean if a field has been set.
func (o *SystemSettings) HasCurrentDomainType() bool {
	if o != nil && !IsNil(o.CurrentDomainType) {
		return true
	}

	return false
}

// SetCurrentDomainType gets a reference to the given string and assigns it to the CurrentDomainType field.
func (o *SystemSettings) SetCurrentDomainType(v string) {
	o.CurrentDomainType = &v
}

// GetCustomCss returns the CustomCss field value if set, zero value otherwise.
func (o *SystemSettings) GetCustomCss() string {
	if o == nil || IsNil(o.CustomCss) {
		var ret string
		return ret
	}
	return *o.CustomCss
}

// GetCustomCssOk returns a tuple with the CustomCss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCustomCssOk() (*string, bool) {
	if o == nil || IsNil(o.CustomCss) {
		return nil, false
	}
	return o.CustomCss, true
}

// HasCustomCss returns a boolean if a field has been set.
func (o *SystemSettings) HasCustomCss() bool {
	if o != nil && !IsNil(o.CustomCss) {
		return true
	}

	return false
}

// SetCustomCss gets a reference to the given string and assigns it to the CustomCss field.
func (o *SystemSettings) SetCustomCss(v string) {
	o.CustomCss = &v
}

// GetCustomJs returns the CustomJs field value if set, zero value otherwise.
func (o *SystemSettings) GetCustomJs() string {
	if o == nil || IsNil(o.CustomJs) {
		var ret string
		return ret
	}
	return *o.CustomJs
}

// GetCustomJsOk returns a tuple with the CustomJs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCustomJsOk() (*string, bool) {
	if o == nil || IsNil(o.CustomJs) {
		return nil, false
	}
	return o.CustomJs, true
}

// HasCustomJs returns a boolean if a field has been set.
func (o *SystemSettings) HasCustomJs() bool {
	if o != nil && !IsNil(o.CustomJs) {
		return true
	}

	return false
}

// SetCustomJs gets a reference to the given string and assigns it to the CustomJs field.
func (o *SystemSettings) SetCustomJs(v string) {
	o.CustomJs = &v
}

// GetCustomLoginPageLogo returns the CustomLoginPageLogo field value if set, zero value otherwise.
func (o *SystemSettings) GetCustomLoginPageLogo() bool {
	if o == nil || IsNil(o.CustomLoginPageLogo) {
		var ret bool
		return ret
	}
	return *o.CustomLoginPageLogo
}

// GetCustomLoginPageLogoOk returns a tuple with the CustomLoginPageLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCustomLoginPageLogoOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomLoginPageLogo) {
		return nil, false
	}
	return o.CustomLoginPageLogo, true
}

// HasCustomLoginPageLogo returns a boolean if a field has been set.
func (o *SystemSettings) HasCustomLoginPageLogo() bool {
	if o != nil && !IsNil(o.CustomLoginPageLogo) {
		return true
	}

	return false
}

// SetCustomLoginPageLogo gets a reference to the given bool and assigns it to the CustomLoginPageLogo field.
func (o *SystemSettings) SetCustomLoginPageLogo(v bool) {
	o.CustomLoginPageLogo = &v
}

// GetCustomTopMenuLogo returns the CustomTopMenuLogo field value if set, zero value otherwise.
func (o *SystemSettings) GetCustomTopMenuLogo() bool {
	if o == nil || IsNil(o.CustomTopMenuLogo) {
		var ret bool
		return ret
	}
	return *o.CustomTopMenuLogo
}

// GetCustomTopMenuLogoOk returns a tuple with the CustomTopMenuLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetCustomTopMenuLogoOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomTopMenuLogo) {
		return nil, false
	}
	return o.CustomTopMenuLogo, true
}

// HasCustomTopMenuLogo returns a boolean if a field has been set.
func (o *SystemSettings) HasCustomTopMenuLogo() bool {
	if o != nil && !IsNil(o.CustomTopMenuLogo) {
		return true
	}

	return false
}

// SetCustomTopMenuLogo gets a reference to the given bool and assigns it to the CustomTopMenuLogo field.
func (o *SystemSettings) SetCustomTopMenuLogo(v bool) {
	o.CustomTopMenuLogo = &v
}

// GetDashboardContextMenuItemOpenInRelevantApp returns the DashboardContextMenuItemOpenInRelevantApp field value if set, zero value otherwise.
func (o *SystemSettings) GetDashboardContextMenuItemOpenInRelevantApp() bool {
	if o == nil || IsNil(o.DashboardContextMenuItemOpenInRelevantApp) {
		var ret bool
		return ret
	}
	return *o.DashboardContextMenuItemOpenInRelevantApp
}

// GetDashboardContextMenuItemOpenInRelevantAppOk returns a tuple with the DashboardContextMenuItemOpenInRelevantApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDashboardContextMenuItemOpenInRelevantAppOk() (*bool, bool) {
	if o == nil || IsNil(o.DashboardContextMenuItemOpenInRelevantApp) {
		return nil, false
	}
	return o.DashboardContextMenuItemOpenInRelevantApp, true
}

// HasDashboardContextMenuItemOpenInRelevantApp returns a boolean if a field has been set.
func (o *SystemSettings) HasDashboardContextMenuItemOpenInRelevantApp() bool {
	if o != nil && !IsNil(o.DashboardContextMenuItemOpenInRelevantApp) {
		return true
	}

	return false
}

// SetDashboardContextMenuItemOpenInRelevantApp gets a reference to the given bool and assigns it to the DashboardContextMenuItemOpenInRelevantApp field.
func (o *SystemSettings) SetDashboardContextMenuItemOpenInRelevantApp(v bool) {
	o.DashboardContextMenuItemOpenInRelevantApp = &v
}

// GetDashboardContextMenuItemShowInterpretationsAndDetails returns the DashboardContextMenuItemShowInterpretationsAndDetails field value if set, zero value otherwise.
func (o *SystemSettings) GetDashboardContextMenuItemShowInterpretationsAndDetails() bool {
	if o == nil || IsNil(o.DashboardContextMenuItemShowInterpretationsAndDetails) {
		var ret bool
		return ret
	}
	return *o.DashboardContextMenuItemShowInterpretationsAndDetails
}

// GetDashboardContextMenuItemShowInterpretationsAndDetailsOk returns a tuple with the DashboardContextMenuItemShowInterpretationsAndDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDashboardContextMenuItemShowInterpretationsAndDetailsOk() (*bool, bool) {
	if o == nil || IsNil(o.DashboardContextMenuItemShowInterpretationsAndDetails) {
		return nil, false
	}
	return o.DashboardContextMenuItemShowInterpretationsAndDetails, true
}

// HasDashboardContextMenuItemShowInterpretationsAndDetails returns a boolean if a field has been set.
func (o *SystemSettings) HasDashboardContextMenuItemShowInterpretationsAndDetails() bool {
	if o != nil && !IsNil(o.DashboardContextMenuItemShowInterpretationsAndDetails) {
		return true
	}

	return false
}

// SetDashboardContextMenuItemShowInterpretationsAndDetails gets a reference to the given bool and assigns it to the DashboardContextMenuItemShowInterpretationsAndDetails field.
func (o *SystemSettings) SetDashboardContextMenuItemShowInterpretationsAndDetails(v bool) {
	o.DashboardContextMenuItemShowInterpretationsAndDetails = &v
}

// GetDashboardContextMenuItemSwitchViewType returns the DashboardContextMenuItemSwitchViewType field value if set, zero value otherwise.
func (o *SystemSettings) GetDashboardContextMenuItemSwitchViewType() bool {
	if o == nil || IsNil(o.DashboardContextMenuItemSwitchViewType) {
		var ret bool
		return ret
	}
	return *o.DashboardContextMenuItemSwitchViewType
}

// GetDashboardContextMenuItemSwitchViewTypeOk returns a tuple with the DashboardContextMenuItemSwitchViewType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDashboardContextMenuItemSwitchViewTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.DashboardContextMenuItemSwitchViewType) {
		return nil, false
	}
	return o.DashboardContextMenuItemSwitchViewType, true
}

// HasDashboardContextMenuItemSwitchViewType returns a boolean if a field has been set.
func (o *SystemSettings) HasDashboardContextMenuItemSwitchViewType() bool {
	if o != nil && !IsNil(o.DashboardContextMenuItemSwitchViewType) {
		return true
	}

	return false
}

// SetDashboardContextMenuItemSwitchViewType gets a reference to the given bool and assigns it to the DashboardContextMenuItemSwitchViewType field.
func (o *SystemSettings) SetDashboardContextMenuItemSwitchViewType(v bool) {
	o.DashboardContextMenuItemSwitchViewType = &v
}

// GetDashboardContextMenuItemViewFullscreen returns the DashboardContextMenuItemViewFullscreen field value if set, zero value otherwise.
func (o *SystemSettings) GetDashboardContextMenuItemViewFullscreen() bool {
	if o == nil || IsNil(o.DashboardContextMenuItemViewFullscreen) {
		var ret bool
		return ret
	}
	return *o.DashboardContextMenuItemViewFullscreen
}

// GetDashboardContextMenuItemViewFullscreenOk returns a tuple with the DashboardContextMenuItemViewFullscreen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDashboardContextMenuItemViewFullscreenOk() (*bool, bool) {
	if o == nil || IsNil(o.DashboardContextMenuItemViewFullscreen) {
		return nil, false
	}
	return o.DashboardContextMenuItemViewFullscreen, true
}

// HasDashboardContextMenuItemViewFullscreen returns a boolean if a field has been set.
func (o *SystemSettings) HasDashboardContextMenuItemViewFullscreen() bool {
	if o != nil && !IsNil(o.DashboardContextMenuItemViewFullscreen) {
		return true
	}

	return false
}

// SetDashboardContextMenuItemViewFullscreen gets a reference to the given bool and assigns it to the DashboardContextMenuItemViewFullscreen field.
func (o *SystemSettings) SetDashboardContextMenuItemViewFullscreen(v bool) {
	o.DashboardContextMenuItemViewFullscreen = &v
}

// GetDataImportRequireAttributeOptionCombo returns the DataImportRequireAttributeOptionCombo field value if set, zero value otherwise.
func (o *SystemSettings) GetDataImportRequireAttributeOptionCombo() bool {
	if o == nil || IsNil(o.DataImportRequireAttributeOptionCombo) {
		var ret bool
		return ret
	}
	return *o.DataImportRequireAttributeOptionCombo
}

// GetDataImportRequireAttributeOptionComboOk returns a tuple with the DataImportRequireAttributeOptionCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDataImportRequireAttributeOptionComboOk() (*bool, bool) {
	if o == nil || IsNil(o.DataImportRequireAttributeOptionCombo) {
		return nil, false
	}
	return o.DataImportRequireAttributeOptionCombo, true
}

// HasDataImportRequireAttributeOptionCombo returns a boolean if a field has been set.
func (o *SystemSettings) HasDataImportRequireAttributeOptionCombo() bool {
	if o != nil && !IsNil(o.DataImportRequireAttributeOptionCombo) {
		return true
	}

	return false
}

// SetDataImportRequireAttributeOptionCombo gets a reference to the given bool and assigns it to the DataImportRequireAttributeOptionCombo field.
func (o *SystemSettings) SetDataImportRequireAttributeOptionCombo(v bool) {
	o.DataImportRequireAttributeOptionCombo = &v
}

// GetDataImportRequireCategoryOptionCombo returns the DataImportRequireCategoryOptionCombo field value if set, zero value otherwise.
func (o *SystemSettings) GetDataImportRequireCategoryOptionCombo() bool {
	if o == nil || IsNil(o.DataImportRequireCategoryOptionCombo) {
		var ret bool
		return ret
	}
	return *o.DataImportRequireCategoryOptionCombo
}

// GetDataImportRequireCategoryOptionComboOk returns a tuple with the DataImportRequireCategoryOptionCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDataImportRequireCategoryOptionComboOk() (*bool, bool) {
	if o == nil || IsNil(o.DataImportRequireCategoryOptionCombo) {
		return nil, false
	}
	return o.DataImportRequireCategoryOptionCombo, true
}

// HasDataImportRequireCategoryOptionCombo returns a boolean if a field has been set.
func (o *SystemSettings) HasDataImportRequireCategoryOptionCombo() bool {
	if o != nil && !IsNil(o.DataImportRequireCategoryOptionCombo) {
		return true
	}

	return false
}

// SetDataImportRequireCategoryOptionCombo gets a reference to the given bool and assigns it to the DataImportRequireCategoryOptionCombo field.
func (o *SystemSettings) SetDataImportRequireCategoryOptionCombo(v bool) {
	o.DataImportRequireCategoryOptionCombo = &v
}

// GetDataImportStrictAttributeOptionCombos returns the DataImportStrictAttributeOptionCombos field value if set, zero value otherwise.
func (o *SystemSettings) GetDataImportStrictAttributeOptionCombos() bool {
	if o == nil || IsNil(o.DataImportStrictAttributeOptionCombos) {
		var ret bool
		return ret
	}
	return *o.DataImportStrictAttributeOptionCombos
}

// GetDataImportStrictAttributeOptionCombosOk returns a tuple with the DataImportStrictAttributeOptionCombos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDataImportStrictAttributeOptionCombosOk() (*bool, bool) {
	if o == nil || IsNil(o.DataImportStrictAttributeOptionCombos) {
		return nil, false
	}
	return o.DataImportStrictAttributeOptionCombos, true
}

// HasDataImportStrictAttributeOptionCombos returns a boolean if a field has been set.
func (o *SystemSettings) HasDataImportStrictAttributeOptionCombos() bool {
	if o != nil && !IsNil(o.DataImportStrictAttributeOptionCombos) {
		return true
	}

	return false
}

// SetDataImportStrictAttributeOptionCombos gets a reference to the given bool and assigns it to the DataImportStrictAttributeOptionCombos field.
func (o *SystemSettings) SetDataImportStrictAttributeOptionCombos(v bool) {
	o.DataImportStrictAttributeOptionCombos = &v
}

// GetDataImportStrictCategoryOptionCombos returns the DataImportStrictCategoryOptionCombos field value if set, zero value otherwise.
func (o *SystemSettings) GetDataImportStrictCategoryOptionCombos() bool {
	if o == nil || IsNil(o.DataImportStrictCategoryOptionCombos) {
		var ret bool
		return ret
	}
	return *o.DataImportStrictCategoryOptionCombos
}

// GetDataImportStrictCategoryOptionCombosOk returns a tuple with the DataImportStrictCategoryOptionCombos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDataImportStrictCategoryOptionCombosOk() (*bool, bool) {
	if o == nil || IsNil(o.DataImportStrictCategoryOptionCombos) {
		return nil, false
	}
	return o.DataImportStrictCategoryOptionCombos, true
}

// HasDataImportStrictCategoryOptionCombos returns a boolean if a field has been set.
func (o *SystemSettings) HasDataImportStrictCategoryOptionCombos() bool {
	if o != nil && !IsNil(o.DataImportStrictCategoryOptionCombos) {
		return true
	}

	return false
}

// SetDataImportStrictCategoryOptionCombos gets a reference to the given bool and assigns it to the DataImportStrictCategoryOptionCombos field.
func (o *SystemSettings) SetDataImportStrictCategoryOptionCombos(v bool) {
	o.DataImportStrictCategoryOptionCombos = &v
}

// GetDataImportStrictDataElements returns the DataImportStrictDataElements field value if set, zero value otherwise.
func (o *SystemSettings) GetDataImportStrictDataElements() bool {
	if o == nil || IsNil(o.DataImportStrictDataElements) {
		var ret bool
		return ret
	}
	return *o.DataImportStrictDataElements
}

// GetDataImportStrictDataElementsOk returns a tuple with the DataImportStrictDataElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDataImportStrictDataElementsOk() (*bool, bool) {
	if o == nil || IsNil(o.DataImportStrictDataElements) {
		return nil, false
	}
	return o.DataImportStrictDataElements, true
}

// HasDataImportStrictDataElements returns a boolean if a field has been set.
func (o *SystemSettings) HasDataImportStrictDataElements() bool {
	if o != nil && !IsNil(o.DataImportStrictDataElements) {
		return true
	}

	return false
}

// SetDataImportStrictDataElements gets a reference to the given bool and assigns it to the DataImportStrictDataElements field.
func (o *SystemSettings) SetDataImportStrictDataElements(v bool) {
	o.DataImportStrictDataElements = &v
}

// GetDataImportStrictDataSetApproval returns the DataImportStrictDataSetApproval field value if set, zero value otherwise.
func (o *SystemSettings) GetDataImportStrictDataSetApproval() bool {
	if o == nil || IsNil(o.DataImportStrictDataSetApproval) {
		var ret bool
		return ret
	}
	return *o.DataImportStrictDataSetApproval
}

// GetDataImportStrictDataSetApprovalOk returns a tuple with the DataImportStrictDataSetApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDataImportStrictDataSetApprovalOk() (*bool, bool) {
	if o == nil || IsNil(o.DataImportStrictDataSetApproval) {
		return nil, false
	}
	return o.DataImportStrictDataSetApproval, true
}

// HasDataImportStrictDataSetApproval returns a boolean if a field has been set.
func (o *SystemSettings) HasDataImportStrictDataSetApproval() bool {
	if o != nil && !IsNil(o.DataImportStrictDataSetApproval) {
		return true
	}

	return false
}

// SetDataImportStrictDataSetApproval gets a reference to the given bool and assigns it to the DataImportStrictDataSetApproval field.
func (o *SystemSettings) SetDataImportStrictDataSetApproval(v bool) {
	o.DataImportStrictDataSetApproval = &v
}

// GetDataImportStrictDataSetInputPeriods returns the DataImportStrictDataSetInputPeriods field value if set, zero value otherwise.
func (o *SystemSettings) GetDataImportStrictDataSetInputPeriods() bool {
	if o == nil || IsNil(o.DataImportStrictDataSetInputPeriods) {
		var ret bool
		return ret
	}
	return *o.DataImportStrictDataSetInputPeriods
}

// GetDataImportStrictDataSetInputPeriodsOk returns a tuple with the DataImportStrictDataSetInputPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDataImportStrictDataSetInputPeriodsOk() (*bool, bool) {
	if o == nil || IsNil(o.DataImportStrictDataSetInputPeriods) {
		return nil, false
	}
	return o.DataImportStrictDataSetInputPeriods, true
}

// HasDataImportStrictDataSetInputPeriods returns a boolean if a field has been set.
func (o *SystemSettings) HasDataImportStrictDataSetInputPeriods() bool {
	if o != nil && !IsNil(o.DataImportStrictDataSetInputPeriods) {
		return true
	}

	return false
}

// SetDataImportStrictDataSetInputPeriods gets a reference to the given bool and assigns it to the DataImportStrictDataSetInputPeriods field.
func (o *SystemSettings) SetDataImportStrictDataSetInputPeriods(v bool) {
	o.DataImportStrictDataSetInputPeriods = &v
}

// GetDataImportStrictDataSetLocking returns the DataImportStrictDataSetLocking field value if set, zero value otherwise.
func (o *SystemSettings) GetDataImportStrictDataSetLocking() bool {
	if o == nil || IsNil(o.DataImportStrictDataSetLocking) {
		var ret bool
		return ret
	}
	return *o.DataImportStrictDataSetLocking
}

// GetDataImportStrictDataSetLockingOk returns a tuple with the DataImportStrictDataSetLocking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDataImportStrictDataSetLockingOk() (*bool, bool) {
	if o == nil || IsNil(o.DataImportStrictDataSetLocking) {
		return nil, false
	}
	return o.DataImportStrictDataSetLocking, true
}

// HasDataImportStrictDataSetLocking returns a boolean if a field has been set.
func (o *SystemSettings) HasDataImportStrictDataSetLocking() bool {
	if o != nil && !IsNil(o.DataImportStrictDataSetLocking) {
		return true
	}

	return false
}

// SetDataImportStrictDataSetLocking gets a reference to the given bool and assigns it to the DataImportStrictDataSetLocking field.
func (o *SystemSettings) SetDataImportStrictDataSetLocking(v bool) {
	o.DataImportStrictDataSetLocking = &v
}

// GetDataImportStrictOrganisationUnits returns the DataImportStrictOrganisationUnits field value if set, zero value otherwise.
func (o *SystemSettings) GetDataImportStrictOrganisationUnits() bool {
	if o == nil || IsNil(o.DataImportStrictOrganisationUnits) {
		var ret bool
		return ret
	}
	return *o.DataImportStrictOrganisationUnits
}

// GetDataImportStrictOrganisationUnitsOk returns a tuple with the DataImportStrictOrganisationUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDataImportStrictOrganisationUnitsOk() (*bool, bool) {
	if o == nil || IsNil(o.DataImportStrictOrganisationUnits) {
		return nil, false
	}
	return o.DataImportStrictOrganisationUnits, true
}

// HasDataImportStrictOrganisationUnits returns a boolean if a field has been set.
func (o *SystemSettings) HasDataImportStrictOrganisationUnits() bool {
	if o != nil && !IsNil(o.DataImportStrictOrganisationUnits) {
		return true
	}

	return false
}

// SetDataImportStrictOrganisationUnits gets a reference to the given bool and assigns it to the DataImportStrictOrganisationUnits field.
func (o *SystemSettings) SetDataImportStrictOrganisationUnits(v bool) {
	o.DataImportStrictOrganisationUnits = &v
}

// GetDataImportStrictPeriods returns the DataImportStrictPeriods field value if set, zero value otherwise.
func (o *SystemSettings) GetDataImportStrictPeriods() bool {
	if o == nil || IsNil(o.DataImportStrictPeriods) {
		var ret bool
		return ret
	}
	return *o.DataImportStrictPeriods
}

// GetDataImportStrictPeriodsOk returns a tuple with the DataImportStrictPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDataImportStrictPeriodsOk() (*bool, bool) {
	if o == nil || IsNil(o.DataImportStrictPeriods) {
		return nil, false
	}
	return o.DataImportStrictPeriods, true
}

// HasDataImportStrictPeriods returns a boolean if a field has been set.
func (o *SystemSettings) HasDataImportStrictPeriods() bool {
	if o != nil && !IsNil(o.DataImportStrictPeriods) {
		return true
	}

	return false
}

// SetDataImportStrictPeriods gets a reference to the given bool and assigns it to the DataImportStrictPeriods field.
func (o *SystemSettings) SetDataImportStrictPeriods(v bool) {
	o.DataImportStrictPeriods = &v
}

// GetDatabaseServerCpus returns the DatabaseServerCpus field value
func (o *SystemSettings) GetDatabaseServerCpus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DatabaseServerCpus
}

// GetDatabaseServerCpusOk returns a tuple with the DatabaseServerCpus field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDatabaseServerCpusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatabaseServerCpus, true
}

// SetDatabaseServerCpus sets field value
func (o *SystemSettings) SetDatabaseServerCpus(v int32) {
	o.DatabaseServerCpus = v
}

// GetDateFormat returns the DateFormat field value if set, zero value otherwise.
func (o *SystemSettings) GetDateFormat() string {
	if o == nil || IsNil(o.DateFormat) {
		var ret string
		return ret
	}
	return *o.DateFormat
}

// GetDateFormatOk returns a tuple with the DateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDateFormatOk() (*string, bool) {
	if o == nil || IsNil(o.DateFormat) {
		return nil, false
	}
	return o.DateFormat, true
}

// HasDateFormat returns a boolean if a field has been set.
func (o *SystemSettings) HasDateFormat() bool {
	if o != nil && !IsNil(o.DateFormat) {
		return true
	}

	return false
}

// SetDateFormat gets a reference to the given string and assigns it to the DateFormat field.
func (o *SystemSettings) SetDateFormat(v string) {
	o.DateFormat = &v
}

// GetDbLocale returns the DbLocale field value if set, zero value otherwise.
func (o *SystemSettings) GetDbLocale() string {
	if o == nil || IsNil(o.DbLocale) {
		var ret string
		return ret
	}
	return *o.DbLocale
}

// GetDbLocaleOk returns a tuple with the DbLocale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDbLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.DbLocale) {
		return nil, false
	}
	return o.DbLocale, true
}

// HasDbLocale returns a boolean if a field has been set.
func (o *SystemSettings) HasDbLocale() bool {
	if o != nil && !IsNil(o.DbLocale) {
		return true
	}

	return false
}

// SetDbLocale gets a reference to the given string and assigns it to the DbLocale field.
func (o *SystemSettings) SetDbLocale(v string) {
	o.DbLocale = &v
}

// GetDefaultBaseMap returns the DefaultBaseMap field value if set, zero value otherwise.
func (o *SystemSettings) GetDefaultBaseMap() string {
	if o == nil || IsNil(o.DefaultBaseMap) {
		var ret string
		return ret
	}
	return *o.DefaultBaseMap
}

// GetDefaultBaseMapOk returns a tuple with the DefaultBaseMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetDefaultBaseMapOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultBaseMap) {
		return nil, false
	}
	return o.DefaultBaseMap, true
}

// HasDefaultBaseMap returns a boolean if a field has been set.
func (o *SystemSettings) HasDefaultBaseMap() bool {
	if o != nil && !IsNil(o.DefaultBaseMap) {
		return true
	}

	return false
}

// SetDefaultBaseMap gets a reference to the given string and assigns it to the DefaultBaseMap field.
func (o *SystemSettings) SetDefaultBaseMap(v string) {
	o.DefaultBaseMap = &v
}

// GetEmailConfigured returns the EmailConfigured field value if set, zero value otherwise.
func (o *SystemSettings) GetEmailConfigured() bool {
	if o == nil || IsNil(o.EmailConfigured) {
		var ret bool
		return ret
	}
	return *o.EmailConfigured
}

// GetEmailConfiguredOk returns a tuple with the EmailConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetEmailConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailConfigured) {
		return nil, false
	}
	return o.EmailConfigured, true
}

// HasEmailConfigured returns a boolean if a field has been set.
func (o *SystemSettings) HasEmailConfigured() bool {
	if o != nil && !IsNil(o.EmailConfigured) {
		return true
	}

	return false
}

// SetEmailConfigured gets a reference to the given bool and assigns it to the EmailConfigured field.
func (o *SystemSettings) SetEmailConfigured(v bool) {
	o.EmailConfigured = &v
}

// GetEmailHostName returns the EmailHostName field value if set, zero value otherwise.
func (o *SystemSettings) GetEmailHostName() string {
	if o == nil || IsNil(o.EmailHostName) {
		var ret string
		return ret
	}
	return *o.EmailHostName
}

// GetEmailHostNameOk returns a tuple with the EmailHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetEmailHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.EmailHostName) {
		return nil, false
	}
	return o.EmailHostName, true
}

// HasEmailHostName returns a boolean if a field has been set.
func (o *SystemSettings) HasEmailHostName() bool {
	if o != nil && !IsNil(o.EmailHostName) {
		return true
	}

	return false
}

// SetEmailHostName gets a reference to the given string and assigns it to the EmailHostName field.
func (o *SystemSettings) SetEmailHostName(v string) {
	o.EmailHostName = &v
}

// GetEmailPassword returns the EmailPassword field value if set, zero value otherwise.
func (o *SystemSettings) GetEmailPassword() string {
	if o == nil || IsNil(o.EmailPassword) {
		var ret string
		return ret
	}
	return *o.EmailPassword
}

// GetEmailPasswordOk returns a tuple with the EmailPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetEmailPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.EmailPassword) {
		return nil, false
	}
	return o.EmailPassword, true
}

// HasEmailPassword returns a boolean if a field has been set.
func (o *SystemSettings) HasEmailPassword() bool {
	if o != nil && !IsNil(o.EmailPassword) {
		return true
	}

	return false
}

// SetEmailPassword gets a reference to the given string and assigns it to the EmailPassword field.
func (o *SystemSettings) SetEmailPassword(v string) {
	o.EmailPassword = &v
}

// GetEmailPort returns the EmailPort field value
func (o *SystemSettings) GetEmailPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EmailPort
}

// GetEmailPortOk returns a tuple with the EmailPort field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetEmailPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailPort, true
}

// SetEmailPort sets field value
func (o *SystemSettings) SetEmailPort(v int32) {
	o.EmailPort = v
}

// GetEmailSender returns the EmailSender field value if set, zero value otherwise.
func (o *SystemSettings) GetEmailSender() string {
	if o == nil || IsNil(o.EmailSender) {
		var ret string
		return ret
	}
	return *o.EmailSender
}

// GetEmailSenderOk returns a tuple with the EmailSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetEmailSenderOk() (*string, bool) {
	if o == nil || IsNil(o.EmailSender) {
		return nil, false
	}
	return o.EmailSender, true
}

// HasEmailSender returns a boolean if a field has been set.
func (o *SystemSettings) HasEmailSender() bool {
	if o != nil && !IsNil(o.EmailSender) {
		return true
	}

	return false
}

// SetEmailSender gets a reference to the given string and assigns it to the EmailSender field.
func (o *SystemSettings) SetEmailSender(v string) {
	o.EmailSender = &v
}

// GetEmailTls returns the EmailTls field value if set, zero value otherwise.
func (o *SystemSettings) GetEmailTls() bool {
	if o == nil || IsNil(o.EmailTls) {
		var ret bool
		return ret
	}
	return *o.EmailTls
}

// GetEmailTlsOk returns a tuple with the EmailTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetEmailTlsOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailTls) {
		return nil, false
	}
	return o.EmailTls, true
}

// HasEmailTls returns a boolean if a field has been set.
func (o *SystemSettings) HasEmailTls() bool {
	if o != nil && !IsNil(o.EmailTls) {
		return true
	}

	return false
}

// SetEmailTls gets a reference to the given bool and assigns it to the EmailTls field.
func (o *SystemSettings) SetEmailTls(v bool) {
	o.EmailTls = &v
}

// GetEmailUsername returns the EmailUsername field value if set, zero value otherwise.
func (o *SystemSettings) GetEmailUsername() string {
	if o == nil || IsNil(o.EmailUsername) {
		var ret string
		return ret
	}
	return *o.EmailUsername
}

// GetEmailUsernameOk returns a tuple with the EmailUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetEmailUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.EmailUsername) {
		return nil, false
	}
	return o.EmailUsername, true
}

// HasEmailUsername returns a boolean if a field has been set.
func (o *SystemSettings) HasEmailUsername() bool {
	if o != nil && !IsNil(o.EmailUsername) {
		return true
	}

	return false
}

// SetEmailUsername gets a reference to the given string and assigns it to the EmailUsername field.
func (o *SystemSettings) SetEmailUsername(v string) {
	o.EmailUsername = &v
}

// GetEmbeddedDashboardsEnabled returns the EmbeddedDashboardsEnabled field value if set, zero value otherwise.
func (o *SystemSettings) GetEmbeddedDashboardsEnabled() bool {
	if o == nil || IsNil(o.EmbeddedDashboardsEnabled) {
		var ret bool
		return ret
	}
	return *o.EmbeddedDashboardsEnabled
}

// GetEmbeddedDashboardsEnabledOk returns a tuple with the EmbeddedDashboardsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetEmbeddedDashboardsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.EmbeddedDashboardsEnabled) {
		return nil, false
	}
	return o.EmbeddedDashboardsEnabled, true
}

// HasEmbeddedDashboardsEnabled returns a boolean if a field has been set.
func (o *SystemSettings) HasEmbeddedDashboardsEnabled() bool {
	if o != nil && !IsNil(o.EmbeddedDashboardsEnabled) {
		return true
	}

	return false
}

// SetEmbeddedDashboardsEnabled gets a reference to the given bool and assigns it to the EmbeddedDashboardsEnabled field.
func (o *SystemSettings) SetEmbeddedDashboardsEnabled(v bool) {
	o.EmbeddedDashboardsEnabled = &v
}

// GetEnforceVerifiedEmail returns the EnforceVerifiedEmail field value if set, zero value otherwise.
func (o *SystemSettings) GetEnforceVerifiedEmail() bool {
	if o == nil || IsNil(o.EnforceVerifiedEmail) {
		var ret bool
		return ret
	}
	return *o.EnforceVerifiedEmail
}

// GetEnforceVerifiedEmailOk returns a tuple with the EnforceVerifiedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetEnforceVerifiedEmailOk() (*bool, bool) {
	if o == nil || IsNil(o.EnforceVerifiedEmail) {
		return nil, false
	}
	return o.EnforceVerifiedEmail, true
}

// HasEnforceVerifiedEmail returns a boolean if a field has been set.
func (o *SystemSettings) HasEnforceVerifiedEmail() bool {
	if o != nil && !IsNil(o.EnforceVerifiedEmail) {
		return true
	}

	return false
}

// SetEnforceVerifiedEmail gets a reference to the given bool and assigns it to the EnforceVerifiedEmail field.
func (o *SystemSettings) SetEnforceVerifiedEmail(v bool) {
	o.EnforceVerifiedEmail = &v
}

// GetFactorOfDeviation returns the FactorOfDeviation field value
func (o *SystemSettings) GetFactorOfDeviation() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.FactorOfDeviation
}

// GetFactorOfDeviationOk returns a tuple with the FactorOfDeviation field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetFactorOfDeviationOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FactorOfDeviation, true
}

// SetFactorOfDeviation sets field value
func (o *SystemSettings) SetFactorOfDeviation(v float64) {
	o.FactorOfDeviation = v
}

// GetFileResourceRetentionStrategy returns the FileResourceRetentionStrategy field value
func (o *SystemSettings) GetFileResourceRetentionStrategy() FileResourceRetentionStrategy {
	if o == nil {
		var ret FileResourceRetentionStrategy
		return ret
	}

	return o.FileResourceRetentionStrategy
}

// GetFileResourceRetentionStrategyOk returns a tuple with the FileResourceRetentionStrategy field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetFileResourceRetentionStrategyOk() (*FileResourceRetentionStrategy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileResourceRetentionStrategy, true
}

// SetFileResourceRetentionStrategy sets field value
func (o *SystemSettings) SetFileResourceRetentionStrategy(v FileResourceRetentionStrategy) {
	o.FileResourceRetentionStrategy = v
}

// GetFlag returns the Flag field value if set, zero value otherwise.
func (o *SystemSettings) GetFlag() string {
	if o == nil || IsNil(o.Flag) {
		var ret string
		return ret
	}
	return *o.Flag
}

// GetFlagOk returns a tuple with the Flag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetFlagOk() (*string, bool) {
	if o == nil || IsNil(o.Flag) {
		return nil, false
	}
	return o.Flag, true
}

// HasFlag returns a boolean if a field has been set.
func (o *SystemSettings) HasFlag() bool {
	if o != nil && !IsNil(o.Flag) {
		return true
	}

	return false
}

// SetFlag gets a reference to the given string and assigns it to the Flag field.
func (o *SystemSettings) SetFlag(v string) {
	o.Flag = &v
}

// GetFlagImage returns the FlagImage field value if set, zero value otherwise.
func (o *SystemSettings) GetFlagImage() string {
	if o == nil || IsNil(o.FlagImage) {
		var ret string
		return ret
	}
	return *o.FlagImage
}

// GetFlagImageOk returns a tuple with the FlagImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetFlagImageOk() (*string, bool) {
	if o == nil || IsNil(o.FlagImage) {
		return nil, false
	}
	return o.FlagImage, true
}

// HasFlagImage returns a boolean if a field has been set.
func (o *SystemSettings) HasFlagImage() bool {
	if o != nil && !IsNil(o.FlagImage) {
		return true
	}

	return false
}

// SetFlagImage gets a reference to the given string and assigns it to the FlagImage field.
func (o *SystemSettings) SetFlagImage(v string) {
	o.FlagImage = &v
}

// GetGatherAnalyticalObjectStatisticsInDashboardViews returns the GatherAnalyticalObjectStatisticsInDashboardViews field value if set, zero value otherwise.
func (o *SystemSettings) GetGatherAnalyticalObjectStatisticsInDashboardViews() bool {
	if o == nil || IsNil(o.GatherAnalyticalObjectStatisticsInDashboardViews) {
		var ret bool
		return ret
	}
	return *o.GatherAnalyticalObjectStatisticsInDashboardViews
}

// GetGatherAnalyticalObjectStatisticsInDashboardViewsOk returns a tuple with the GatherAnalyticalObjectStatisticsInDashboardViews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetGatherAnalyticalObjectStatisticsInDashboardViewsOk() (*bool, bool) {
	if o == nil || IsNil(o.GatherAnalyticalObjectStatisticsInDashboardViews) {
		return nil, false
	}
	return o.GatherAnalyticalObjectStatisticsInDashboardViews, true
}

// HasGatherAnalyticalObjectStatisticsInDashboardViews returns a boolean if a field has been set.
func (o *SystemSettings) HasGatherAnalyticalObjectStatisticsInDashboardViews() bool {
	if o != nil && !IsNil(o.GatherAnalyticalObjectStatisticsInDashboardViews) {
		return true
	}

	return false
}

// SetGatherAnalyticalObjectStatisticsInDashboardViews gets a reference to the given bool and assigns it to the GatherAnalyticalObjectStatisticsInDashboardViews field.
func (o *SystemSettings) SetGatherAnalyticalObjectStatisticsInDashboardViews(v bool) {
	o.GatherAnalyticalObjectStatisticsInDashboardViews = &v
}

// GetGlobalShellAppName returns the GlobalShellAppName field value if set, zero value otherwise.
func (o *SystemSettings) GetGlobalShellAppName() string {
	if o == nil || IsNil(o.GlobalShellAppName) {
		var ret string
		return ret
	}
	return *o.GlobalShellAppName
}

// GetGlobalShellAppNameOk returns a tuple with the GlobalShellAppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetGlobalShellAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalShellAppName) {
		return nil, false
	}
	return o.GlobalShellAppName, true
}

// HasGlobalShellAppName returns a boolean if a field has been set.
func (o *SystemSettings) HasGlobalShellAppName() bool {
	if o != nil && !IsNil(o.GlobalShellAppName) {
		return true
	}

	return false
}

// SetGlobalShellAppName gets a reference to the given string and assigns it to the GlobalShellAppName field.
func (o *SystemSettings) SetGlobalShellAppName(v string) {
	o.GlobalShellAppName = &v
}

// GetGlobalShellEnabled returns the GlobalShellEnabled field value if set, zero value otherwise.
func (o *SystemSettings) GetGlobalShellEnabled() bool {
	if o == nil || IsNil(o.GlobalShellEnabled) {
		var ret bool
		return ret
	}
	return *o.GlobalShellEnabled
}

// GetGlobalShellEnabledOk returns a tuple with the GlobalShellEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetGlobalShellEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.GlobalShellEnabled) {
		return nil, false
	}
	return o.GlobalShellEnabled, true
}

// HasGlobalShellEnabled returns a boolean if a field has been set.
func (o *SystemSettings) HasGlobalShellEnabled() bool {
	if o != nil && !IsNil(o.GlobalShellEnabled) {
		return true
	}

	return false
}

// SetGlobalShellEnabled gets a reference to the given bool and assigns it to the GlobalShellEnabled field.
func (o *SystemSettings) SetGlobalShellEnabled(v bool) {
	o.GlobalShellEnabled = &v
}

// GetGoogleAnalyticsUA returns the GoogleAnalyticsUA field value if set, zero value otherwise.
func (o *SystemSettings) GetGoogleAnalyticsUA() string {
	if o == nil || IsNil(o.GoogleAnalyticsUA) {
		var ret string
		return ret
	}
	return *o.GoogleAnalyticsUA
}

// GetGoogleAnalyticsUAOk returns a tuple with the GoogleAnalyticsUA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetGoogleAnalyticsUAOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleAnalyticsUA) {
		return nil, false
	}
	return o.GoogleAnalyticsUA, true
}

// HasGoogleAnalyticsUA returns a boolean if a field has been set.
func (o *SystemSettings) HasGoogleAnalyticsUA() bool {
	if o != nil && !IsNil(o.GoogleAnalyticsUA) {
		return true
	}

	return false
}

// SetGoogleAnalyticsUA gets a reference to the given string and assigns it to the GoogleAnalyticsUA field.
func (o *SystemSettings) SetGoogleAnalyticsUA(v string) {
	o.GoogleAnalyticsUA = &v
}

// GetGoogleMapsApiKey returns the GoogleMapsApiKey field value if set, zero value otherwise.
func (o *SystemSettings) GetGoogleMapsApiKey() string {
	if o == nil || IsNil(o.GoogleMapsApiKey) {
		var ret string
		return ret
	}
	return *o.GoogleMapsApiKey
}

// GetGoogleMapsApiKeyOk returns a tuple with the GoogleMapsApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetGoogleMapsApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleMapsApiKey) {
		return nil, false
	}
	return o.GoogleMapsApiKey, true
}

// HasGoogleMapsApiKey returns a boolean if a field has been set.
func (o *SystemSettings) HasGoogleMapsApiKey() bool {
	if o != nil && !IsNil(o.GoogleMapsApiKey) {
		return true
	}

	return false
}

// SetGoogleMapsApiKey gets a reference to the given string and assigns it to the GoogleMapsApiKey field.
func (o *SystemSettings) SetGoogleMapsApiKey(v string) {
	o.GoogleMapsApiKey = &v
}

// GetHelpPageLink returns the HelpPageLink field value if set, zero value otherwise.
func (o *SystemSettings) GetHelpPageLink() string {
	if o == nil || IsNil(o.HelpPageLink) {
		var ret string
		return ret
	}
	return *o.HelpPageLink
}

// GetHelpPageLinkOk returns a tuple with the HelpPageLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetHelpPageLinkOk() (*string, bool) {
	if o == nil || IsNil(o.HelpPageLink) {
		return nil, false
	}
	return o.HelpPageLink, true
}

// HasHelpPageLink returns a boolean if a field has been set.
func (o *SystemSettings) HasHelpPageLink() bool {
	if o != nil && !IsNil(o.HelpPageLink) {
		return true
	}

	return false
}

// SetHelpPageLink gets a reference to the given string and assigns it to the HelpPageLink field.
func (o *SystemSettings) SetHelpPageLink(v string) {
	o.HelpPageLink = &v
}

// GetHideBiMonthlyPeriods returns the HideBiMonthlyPeriods field value if set, zero value otherwise.
func (o *SystemSettings) GetHideBiMonthlyPeriods() bool {
	if o == nil || IsNil(o.HideBiMonthlyPeriods) {
		var ret bool
		return ret
	}
	return *o.HideBiMonthlyPeriods
}

// GetHideBiMonthlyPeriodsOk returns a tuple with the HideBiMonthlyPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetHideBiMonthlyPeriodsOk() (*bool, bool) {
	if o == nil || IsNil(o.HideBiMonthlyPeriods) {
		return nil, false
	}
	return o.HideBiMonthlyPeriods, true
}

// HasHideBiMonthlyPeriods returns a boolean if a field has been set.
func (o *SystemSettings) HasHideBiMonthlyPeriods() bool {
	if o != nil && !IsNil(o.HideBiMonthlyPeriods) {
		return true
	}

	return false
}

// SetHideBiMonthlyPeriods gets a reference to the given bool and assigns it to the HideBiMonthlyPeriods field.
func (o *SystemSettings) SetHideBiMonthlyPeriods(v bool) {
	o.HideBiMonthlyPeriods = &v
}

// GetHideBiWeeklyPeriods returns the HideBiWeeklyPeriods field value if set, zero value otherwise.
func (o *SystemSettings) GetHideBiWeeklyPeriods() bool {
	if o == nil || IsNil(o.HideBiWeeklyPeriods) {
		var ret bool
		return ret
	}
	return *o.HideBiWeeklyPeriods
}

// GetHideBiWeeklyPeriodsOk returns a tuple with the HideBiWeeklyPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetHideBiWeeklyPeriodsOk() (*bool, bool) {
	if o == nil || IsNil(o.HideBiWeeklyPeriods) {
		return nil, false
	}
	return o.HideBiWeeklyPeriods, true
}

// HasHideBiWeeklyPeriods returns a boolean if a field has been set.
func (o *SystemSettings) HasHideBiWeeklyPeriods() bool {
	if o != nil && !IsNil(o.HideBiWeeklyPeriods) {
		return true
	}

	return false
}

// SetHideBiWeeklyPeriods gets a reference to the given bool and assigns it to the HideBiWeeklyPeriods field.
func (o *SystemSettings) SetHideBiWeeklyPeriods(v bool) {
	o.HideBiWeeklyPeriods = &v
}

// GetHideDailyPeriods returns the HideDailyPeriods field value if set, zero value otherwise.
func (o *SystemSettings) GetHideDailyPeriods() bool {
	if o == nil || IsNil(o.HideDailyPeriods) {
		var ret bool
		return ret
	}
	return *o.HideDailyPeriods
}

// GetHideDailyPeriodsOk returns a tuple with the HideDailyPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetHideDailyPeriodsOk() (*bool, bool) {
	if o == nil || IsNil(o.HideDailyPeriods) {
		return nil, false
	}
	return o.HideDailyPeriods, true
}

// HasHideDailyPeriods returns a boolean if a field has been set.
func (o *SystemSettings) HasHideDailyPeriods() bool {
	if o != nil && !IsNil(o.HideDailyPeriods) {
		return true
	}

	return false
}

// SetHideDailyPeriods gets a reference to the given bool and assigns it to the HideDailyPeriods field.
func (o *SystemSettings) SetHideDailyPeriods(v bool) {
	o.HideDailyPeriods = &v
}

// GetHideMonthlyPeriods returns the HideMonthlyPeriods field value if set, zero value otherwise.
func (o *SystemSettings) GetHideMonthlyPeriods() bool {
	if o == nil || IsNil(o.HideMonthlyPeriods) {
		var ret bool
		return ret
	}
	return *o.HideMonthlyPeriods
}

// GetHideMonthlyPeriodsOk returns a tuple with the HideMonthlyPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetHideMonthlyPeriodsOk() (*bool, bool) {
	if o == nil || IsNil(o.HideMonthlyPeriods) {
		return nil, false
	}
	return o.HideMonthlyPeriods, true
}

// HasHideMonthlyPeriods returns a boolean if a field has been set.
func (o *SystemSettings) HasHideMonthlyPeriods() bool {
	if o != nil && !IsNil(o.HideMonthlyPeriods) {
		return true
	}

	return false
}

// SetHideMonthlyPeriods gets a reference to the given bool and assigns it to the HideMonthlyPeriods field.
func (o *SystemSettings) SetHideMonthlyPeriods(v bool) {
	o.HideMonthlyPeriods = &v
}

// GetHideUnapprovedDataInAnalytics returns the HideUnapprovedDataInAnalytics field value if set, zero value otherwise.
func (o *SystemSettings) GetHideUnapprovedDataInAnalytics() bool {
	if o == nil || IsNil(o.HideUnapprovedDataInAnalytics) {
		var ret bool
		return ret
	}
	return *o.HideUnapprovedDataInAnalytics
}

// GetHideUnapprovedDataInAnalyticsOk returns a tuple with the HideUnapprovedDataInAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetHideUnapprovedDataInAnalyticsOk() (*bool, bool) {
	if o == nil || IsNil(o.HideUnapprovedDataInAnalytics) {
		return nil, false
	}
	return o.HideUnapprovedDataInAnalytics, true
}

// HasHideUnapprovedDataInAnalytics returns a boolean if a field has been set.
func (o *SystemSettings) HasHideUnapprovedDataInAnalytics() bool {
	if o != nil && !IsNil(o.HideUnapprovedDataInAnalytics) {
		return true
	}

	return false
}

// SetHideUnapprovedDataInAnalytics gets a reference to the given bool and assigns it to the HideUnapprovedDataInAnalytics field.
func (o *SystemSettings) SetHideUnapprovedDataInAnalytics(v bool) {
	o.HideUnapprovedDataInAnalytics = &v
}

// GetHideWeeklyPeriods returns the HideWeeklyPeriods field value if set, zero value otherwise.
func (o *SystemSettings) GetHideWeeklyPeriods() bool {
	if o == nil || IsNil(o.HideWeeklyPeriods) {
		var ret bool
		return ret
	}
	return *o.HideWeeklyPeriods
}

// GetHideWeeklyPeriodsOk returns a tuple with the HideWeeklyPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetHideWeeklyPeriodsOk() (*bool, bool) {
	if o == nil || IsNil(o.HideWeeklyPeriods) {
		return nil, false
	}
	return o.HideWeeklyPeriods, true
}

// HasHideWeeklyPeriods returns a boolean if a field has been set.
func (o *SystemSettings) HasHideWeeklyPeriods() bool {
	if o != nil && !IsNil(o.HideWeeklyPeriods) {
		return true
	}

	return false
}

// SetHideWeeklyPeriods gets a reference to the given bool and assigns it to the HideWeeklyPeriods field.
func (o *SystemSettings) SetHideWeeklyPeriods(v bool) {
	o.HideWeeklyPeriods = &v
}

// GetHtmlPushAnalyticsUrl returns the HtmlPushAnalyticsUrl field value if set, zero value otherwise.
func (o *SystemSettings) GetHtmlPushAnalyticsUrl() string {
	if o == nil || IsNil(o.HtmlPushAnalyticsUrl) {
		var ret string
		return ret
	}
	return *o.HtmlPushAnalyticsUrl
}

// GetHtmlPushAnalyticsUrlOk returns a tuple with the HtmlPushAnalyticsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetHtmlPushAnalyticsUrlOk() (*string, bool) {
	if o == nil || IsNil(o.HtmlPushAnalyticsUrl) {
		return nil, false
	}
	return o.HtmlPushAnalyticsUrl, true
}

// HasHtmlPushAnalyticsUrl returns a boolean if a field has been set.
func (o *SystemSettings) HasHtmlPushAnalyticsUrl() bool {
	if o != nil && !IsNil(o.HtmlPushAnalyticsUrl) {
		return true
	}

	return false
}

// SetHtmlPushAnalyticsUrl gets a reference to the given string and assigns it to the HtmlPushAnalyticsUrl field.
func (o *SystemSettings) SetHtmlPushAnalyticsUrl(v string) {
	o.HtmlPushAnalyticsUrl = &v
}

// GetIgnoreAnalyticsApprovalYearThreshold returns the IgnoreAnalyticsApprovalYearThreshold field value
func (o *SystemSettings) GetIgnoreAnalyticsApprovalYearThreshold() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IgnoreAnalyticsApprovalYearThreshold
}

// GetIgnoreAnalyticsApprovalYearThresholdOk returns a tuple with the IgnoreAnalyticsApprovalYearThreshold field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetIgnoreAnalyticsApprovalYearThresholdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IgnoreAnalyticsApprovalYearThreshold, true
}

// SetIgnoreAnalyticsApprovalYearThreshold sets field value
func (o *SystemSettings) SetIgnoreAnalyticsApprovalYearThreshold(v int32) {
	o.IgnoreAnalyticsApprovalYearThreshold = v
}

// GetIncludeZeroValuesInAnalytics returns the IncludeZeroValuesInAnalytics field value if set, zero value otherwise.
func (o *SystemSettings) GetIncludeZeroValuesInAnalytics() bool {
	if o == nil || IsNil(o.IncludeZeroValuesInAnalytics) {
		var ret bool
		return ret
	}
	return *o.IncludeZeroValuesInAnalytics
}

// GetIncludeZeroValuesInAnalyticsOk returns a tuple with the IncludeZeroValuesInAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetIncludeZeroValuesInAnalyticsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeZeroValuesInAnalytics) {
		return nil, false
	}
	return o.IncludeZeroValuesInAnalytics, true
}

// HasIncludeZeroValuesInAnalytics returns a boolean if a field has been set.
func (o *SystemSettings) HasIncludeZeroValuesInAnalytics() bool {
	if o != nil && !IsNil(o.IncludeZeroValuesInAnalytics) {
		return true
	}

	return false
}

// SetIncludeZeroValuesInAnalytics gets a reference to the given bool and assigns it to the IncludeZeroValuesInAnalytics field.
func (o *SystemSettings) SetIncludeZeroValuesInAnalytics(v bool) {
	o.IncludeZeroValuesInAnalytics = &v
}

// GetJobsCleanupAfterMinutes returns the JobsCleanupAfterMinutes field value
func (o *SystemSettings) GetJobsCleanupAfterMinutes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.JobsCleanupAfterMinutes
}

// GetJobsCleanupAfterMinutesOk returns a tuple with the JobsCleanupAfterMinutes field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetJobsCleanupAfterMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobsCleanupAfterMinutes, true
}

// SetJobsCleanupAfterMinutes sets field value
func (o *SystemSettings) SetJobsCleanupAfterMinutes(v int32) {
	o.JobsCleanupAfterMinutes = v
}

// GetJobsLogDebugBelowSeconds returns the JobsLogDebugBelowSeconds field value
func (o *SystemSettings) GetJobsLogDebugBelowSeconds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.JobsLogDebugBelowSeconds
}

// GetJobsLogDebugBelowSecondsOk returns a tuple with the JobsLogDebugBelowSeconds field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetJobsLogDebugBelowSecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobsLogDebugBelowSeconds, true
}

// SetJobsLogDebugBelowSeconds sets field value
func (o *SystemSettings) SetJobsLogDebugBelowSeconds(v int32) {
	o.JobsLogDebugBelowSeconds = v
}

// GetJobsMaxCronDelayHours returns the JobsMaxCronDelayHours field value
func (o *SystemSettings) GetJobsMaxCronDelayHours() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.JobsMaxCronDelayHours
}

// GetJobsMaxCronDelayHoursOk returns a tuple with the JobsMaxCronDelayHours field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetJobsMaxCronDelayHoursOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobsMaxCronDelayHours, true
}

// SetJobsMaxCronDelayHours sets field value
func (o *SystemSettings) SetJobsMaxCronDelayHours(v int32) {
	o.JobsMaxCronDelayHours = v
}

// GetJobsRescheduleAfterMinutes returns the JobsRescheduleAfterMinutes field value
func (o *SystemSettings) GetJobsRescheduleAfterMinutes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.JobsRescheduleAfterMinutes
}

// GetJobsRescheduleAfterMinutesOk returns a tuple with the JobsRescheduleAfterMinutes field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetJobsRescheduleAfterMinutesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobsRescheduleAfterMinutes, true
}

// SetJobsRescheduleAfterMinutes sets field value
func (o *SystemSettings) SetJobsRescheduleAfterMinutes(v int32) {
	o.JobsRescheduleAfterMinutes = v
}

// GetLastCompleteDataSetRegistrationSyncSuccess returns the LastCompleteDataSetRegistrationSyncSuccess field value if set, zero value otherwise.
func (o *SystemSettings) GetLastCompleteDataSetRegistrationSyncSuccess() time.Time {
	if o == nil || IsNil(o.LastCompleteDataSetRegistrationSyncSuccess) {
		var ret time.Time
		return ret
	}
	return *o.LastCompleteDataSetRegistrationSyncSuccess
}

// GetLastCompleteDataSetRegistrationSyncSuccessOk returns a tuple with the LastCompleteDataSetRegistrationSyncSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastCompleteDataSetRegistrationSyncSuccessOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastCompleteDataSetRegistrationSyncSuccess) {
		return nil, false
	}
	return o.LastCompleteDataSetRegistrationSyncSuccess, true
}

// HasLastCompleteDataSetRegistrationSyncSuccess returns a boolean if a field has been set.
func (o *SystemSettings) HasLastCompleteDataSetRegistrationSyncSuccess() bool {
	if o != nil && !IsNil(o.LastCompleteDataSetRegistrationSyncSuccess) {
		return true
	}

	return false
}

// SetLastCompleteDataSetRegistrationSyncSuccess gets a reference to the given time.Time and assigns it to the LastCompleteDataSetRegistrationSyncSuccess field.
func (o *SystemSettings) SetLastCompleteDataSetRegistrationSyncSuccess(v time.Time) {
	o.LastCompleteDataSetRegistrationSyncSuccess = &v
}

// GetLastMetaDataSyncSuccess returns the LastMetaDataSyncSuccess field value if set, zero value otherwise.
func (o *SystemSettings) GetLastMetaDataSyncSuccess() time.Time {
	if o == nil || IsNil(o.LastMetaDataSyncSuccess) {
		var ret time.Time
		return ret
	}
	return *o.LastMetaDataSyncSuccess
}

// GetLastMetaDataSyncSuccessOk returns a tuple with the LastMetaDataSyncSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastMetaDataSyncSuccessOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastMetaDataSyncSuccess) {
		return nil, false
	}
	return o.LastMetaDataSyncSuccess, true
}

// HasLastMetaDataSyncSuccess returns a boolean if a field has been set.
func (o *SystemSettings) HasLastMetaDataSyncSuccess() bool {
	if o != nil && !IsNil(o.LastMetaDataSyncSuccess) {
		return true
	}

	return false
}

// SetLastMetaDataSyncSuccess gets a reference to the given time.Time and assigns it to the LastMetaDataSyncSuccess field.
func (o *SystemSettings) SetLastMetaDataSyncSuccess(v time.Time) {
	o.LastMetaDataSyncSuccess = &v
}

// GetLastMonitoringRun returns the LastMonitoringRun field value if set, zero value otherwise.
func (o *SystemSettings) GetLastMonitoringRun() time.Time {
	if o == nil || IsNil(o.LastMonitoringRun) {
		var ret time.Time
		return ret
	}
	return *o.LastMonitoringRun
}

// GetLastMonitoringRunOk returns a tuple with the LastMonitoringRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastMonitoringRunOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastMonitoringRun) {
		return nil, false
	}
	return o.LastMonitoringRun, true
}

// HasLastMonitoringRun returns a boolean if a field has been set.
func (o *SystemSettings) HasLastMonitoringRun() bool {
	if o != nil && !IsNil(o.LastMonitoringRun) {
		return true
	}

	return false
}

// SetLastMonitoringRun gets a reference to the given time.Time and assigns it to the LastMonitoringRun field.
func (o *SystemSettings) SetLastMonitoringRun(v time.Time) {
	o.LastMonitoringRun = &v
}

// GetLastSuccessfulAnalyticsTablesRuntime returns the LastSuccessfulAnalyticsTablesRuntime field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulAnalyticsTablesRuntime() string {
	if o == nil || IsNil(o.LastSuccessfulAnalyticsTablesRuntime) {
		var ret string
		return ret
	}
	return *o.LastSuccessfulAnalyticsTablesRuntime
}

// GetLastSuccessfulAnalyticsTablesRuntimeOk returns a tuple with the LastSuccessfulAnalyticsTablesRuntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulAnalyticsTablesRuntimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastSuccessfulAnalyticsTablesRuntime) {
		return nil, false
	}
	return o.LastSuccessfulAnalyticsTablesRuntime, true
}

// HasLastSuccessfulAnalyticsTablesRuntime returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulAnalyticsTablesRuntime() bool {
	if o != nil && !IsNil(o.LastSuccessfulAnalyticsTablesRuntime) {
		return true
	}

	return false
}

// SetLastSuccessfulAnalyticsTablesRuntime gets a reference to the given string and assigns it to the LastSuccessfulAnalyticsTablesRuntime field.
func (o *SystemSettings) SetLastSuccessfulAnalyticsTablesRuntime(v string) {
	o.LastSuccessfulAnalyticsTablesRuntime = &v
}

// GetLastSuccessfulAnalyticsTablesUpdate returns the LastSuccessfulAnalyticsTablesUpdate field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulAnalyticsTablesUpdate() time.Time {
	if o == nil || IsNil(o.LastSuccessfulAnalyticsTablesUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulAnalyticsTablesUpdate
}

// GetLastSuccessfulAnalyticsTablesUpdateOk returns a tuple with the LastSuccessfulAnalyticsTablesUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulAnalyticsTablesUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulAnalyticsTablesUpdate) {
		return nil, false
	}
	return o.LastSuccessfulAnalyticsTablesUpdate, true
}

// HasLastSuccessfulAnalyticsTablesUpdate returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulAnalyticsTablesUpdate() bool {
	if o != nil && !IsNil(o.LastSuccessfulAnalyticsTablesUpdate) {
		return true
	}

	return false
}

// SetLastSuccessfulAnalyticsTablesUpdate gets a reference to the given time.Time and assigns it to the LastSuccessfulAnalyticsTablesUpdate field.
func (o *SystemSettings) SetLastSuccessfulAnalyticsTablesUpdate(v time.Time) {
	o.LastSuccessfulAnalyticsTablesUpdate = &v
}

// GetLastSuccessfulDataStatistics returns the LastSuccessfulDataStatistics field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulDataStatistics() time.Time {
	if o == nil || IsNil(o.LastSuccessfulDataStatistics) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulDataStatistics
}

// GetLastSuccessfulDataStatisticsOk returns a tuple with the LastSuccessfulDataStatistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulDataStatisticsOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulDataStatistics) {
		return nil, false
	}
	return o.LastSuccessfulDataStatistics, true
}

// HasLastSuccessfulDataStatistics returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulDataStatistics() bool {
	if o != nil && !IsNil(o.LastSuccessfulDataStatistics) {
		return true
	}

	return false
}

// SetLastSuccessfulDataStatistics gets a reference to the given time.Time and assigns it to the LastSuccessfulDataStatistics field.
func (o *SystemSettings) SetLastSuccessfulDataStatistics(v time.Time) {
	o.LastSuccessfulDataStatistics = &v
}

// GetLastSuccessfulDataSynch returns the LastSuccessfulDataSynch field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulDataSynch() time.Time {
	if o == nil || IsNil(o.LastSuccessfulDataSynch) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulDataSynch
}

// GetLastSuccessfulDataSynchOk returns a tuple with the LastSuccessfulDataSynch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulDataSynchOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulDataSynch) {
		return nil, false
	}
	return o.LastSuccessfulDataSynch, true
}

// HasLastSuccessfulDataSynch returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulDataSynch() bool {
	if o != nil && !IsNil(o.LastSuccessfulDataSynch) {
		return true
	}

	return false
}

// SetLastSuccessfulDataSynch gets a reference to the given time.Time and assigns it to the LastSuccessfulDataSynch field.
func (o *SystemSettings) SetLastSuccessfulDataSynch(v time.Time) {
	o.LastSuccessfulDataSynch = &v
}

// GetLastSuccessfulEventsDataSynch returns the LastSuccessfulEventsDataSynch field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulEventsDataSynch() time.Time {
	if o == nil || IsNil(o.LastSuccessfulEventsDataSynch) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulEventsDataSynch
}

// GetLastSuccessfulEventsDataSynchOk returns a tuple with the LastSuccessfulEventsDataSynch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulEventsDataSynchOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulEventsDataSynch) {
		return nil, false
	}
	return o.LastSuccessfulEventsDataSynch, true
}

// HasLastSuccessfulEventsDataSynch returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulEventsDataSynch() bool {
	if o != nil && !IsNil(o.LastSuccessfulEventsDataSynch) {
		return true
	}

	return false
}

// SetLastSuccessfulEventsDataSynch gets a reference to the given time.Time and assigns it to the LastSuccessfulEventsDataSynch field.
func (o *SystemSettings) SetLastSuccessfulEventsDataSynch(v time.Time) {
	o.LastSuccessfulEventsDataSynch = &v
}

// GetLastSuccessfulLatestAnalyticsPartitionRuntime returns the LastSuccessfulLatestAnalyticsPartitionRuntime field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulLatestAnalyticsPartitionRuntime() string {
	if o == nil || IsNil(o.LastSuccessfulLatestAnalyticsPartitionRuntime) {
		var ret string
		return ret
	}
	return *o.LastSuccessfulLatestAnalyticsPartitionRuntime
}

// GetLastSuccessfulLatestAnalyticsPartitionRuntimeOk returns a tuple with the LastSuccessfulLatestAnalyticsPartitionRuntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulLatestAnalyticsPartitionRuntimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastSuccessfulLatestAnalyticsPartitionRuntime) {
		return nil, false
	}
	return o.LastSuccessfulLatestAnalyticsPartitionRuntime, true
}

// HasLastSuccessfulLatestAnalyticsPartitionRuntime returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulLatestAnalyticsPartitionRuntime() bool {
	if o != nil && !IsNil(o.LastSuccessfulLatestAnalyticsPartitionRuntime) {
		return true
	}

	return false
}

// SetLastSuccessfulLatestAnalyticsPartitionRuntime gets a reference to the given string and assigns it to the LastSuccessfulLatestAnalyticsPartitionRuntime field.
func (o *SystemSettings) SetLastSuccessfulLatestAnalyticsPartitionRuntime(v string) {
	o.LastSuccessfulLatestAnalyticsPartitionRuntime = &v
}

// GetLastSuccessfulLatestAnalyticsPartitionUpdate returns the LastSuccessfulLatestAnalyticsPartitionUpdate field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulLatestAnalyticsPartitionUpdate() time.Time {
	if o == nil || IsNil(o.LastSuccessfulLatestAnalyticsPartitionUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulLatestAnalyticsPartitionUpdate
}

// GetLastSuccessfulLatestAnalyticsPartitionUpdateOk returns a tuple with the LastSuccessfulLatestAnalyticsPartitionUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulLatestAnalyticsPartitionUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulLatestAnalyticsPartitionUpdate) {
		return nil, false
	}
	return o.LastSuccessfulLatestAnalyticsPartitionUpdate, true
}

// HasLastSuccessfulLatestAnalyticsPartitionUpdate returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulLatestAnalyticsPartitionUpdate() bool {
	if o != nil && !IsNil(o.LastSuccessfulLatestAnalyticsPartitionUpdate) {
		return true
	}

	return false
}

// SetLastSuccessfulLatestAnalyticsPartitionUpdate gets a reference to the given time.Time and assigns it to the LastSuccessfulLatestAnalyticsPartitionUpdate field.
func (o *SystemSettings) SetLastSuccessfulLatestAnalyticsPartitionUpdate(v time.Time) {
	o.LastSuccessfulLatestAnalyticsPartitionUpdate = &v
}

// GetLastSuccessfulMonitoring returns the LastSuccessfulMonitoring field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulMonitoring() time.Time {
	if o == nil || IsNil(o.LastSuccessfulMonitoring) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulMonitoring
}

// GetLastSuccessfulMonitoringOk returns a tuple with the LastSuccessfulMonitoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulMonitoringOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulMonitoring) {
		return nil, false
	}
	return o.LastSuccessfulMonitoring, true
}

// HasLastSuccessfulMonitoring returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulMonitoring() bool {
	if o != nil && !IsNil(o.LastSuccessfulMonitoring) {
		return true
	}

	return false
}

// SetLastSuccessfulMonitoring gets a reference to the given time.Time and assigns it to the LastSuccessfulMonitoring field.
func (o *SystemSettings) SetLastSuccessfulMonitoring(v time.Time) {
	o.LastSuccessfulMonitoring = &v
}

// GetLastSuccessfulResourceTablesUpdate returns the LastSuccessfulResourceTablesUpdate field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulResourceTablesUpdate() time.Time {
	if o == nil || IsNil(o.LastSuccessfulResourceTablesUpdate) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulResourceTablesUpdate
}

// GetLastSuccessfulResourceTablesUpdateOk returns a tuple with the LastSuccessfulResourceTablesUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulResourceTablesUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulResourceTablesUpdate) {
		return nil, false
	}
	return o.LastSuccessfulResourceTablesUpdate, true
}

// HasLastSuccessfulResourceTablesUpdate returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulResourceTablesUpdate() bool {
	if o != nil && !IsNil(o.LastSuccessfulResourceTablesUpdate) {
		return true
	}

	return false
}

// SetLastSuccessfulResourceTablesUpdate gets a reference to the given time.Time and assigns it to the LastSuccessfulResourceTablesUpdate field.
func (o *SystemSettings) SetLastSuccessfulResourceTablesUpdate(v time.Time) {
	o.LastSuccessfulResourceTablesUpdate = &v
}

// GetLastSuccessfulScheduledDataSetNotifications returns the LastSuccessfulScheduledDataSetNotifications field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulScheduledDataSetNotifications() time.Time {
	if o == nil || IsNil(o.LastSuccessfulScheduledDataSetNotifications) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulScheduledDataSetNotifications
}

// GetLastSuccessfulScheduledDataSetNotificationsOk returns a tuple with the LastSuccessfulScheduledDataSetNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulScheduledDataSetNotificationsOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulScheduledDataSetNotifications) {
		return nil, false
	}
	return o.LastSuccessfulScheduledDataSetNotifications, true
}

// HasLastSuccessfulScheduledDataSetNotifications returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulScheduledDataSetNotifications() bool {
	if o != nil && !IsNil(o.LastSuccessfulScheduledDataSetNotifications) {
		return true
	}

	return false
}

// SetLastSuccessfulScheduledDataSetNotifications gets a reference to the given time.Time and assigns it to the LastSuccessfulScheduledDataSetNotifications field.
func (o *SystemSettings) SetLastSuccessfulScheduledDataSetNotifications(v time.Time) {
	o.LastSuccessfulScheduledDataSetNotifications = &v
}

// GetLastSuccessfulScheduledProgramNotifications returns the LastSuccessfulScheduledProgramNotifications field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulScheduledProgramNotifications() time.Time {
	if o == nil || IsNil(o.LastSuccessfulScheduledProgramNotifications) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulScheduledProgramNotifications
}

// GetLastSuccessfulScheduledProgramNotificationsOk returns a tuple with the LastSuccessfulScheduledProgramNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulScheduledProgramNotificationsOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulScheduledProgramNotifications) {
		return nil, false
	}
	return o.LastSuccessfulScheduledProgramNotifications, true
}

// HasLastSuccessfulScheduledProgramNotifications returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulScheduledProgramNotifications() bool {
	if o != nil && !IsNil(o.LastSuccessfulScheduledProgramNotifications) {
		return true
	}

	return false
}

// SetLastSuccessfulScheduledProgramNotifications gets a reference to the given time.Time and assigns it to the LastSuccessfulScheduledProgramNotifications field.
func (o *SystemSettings) SetLastSuccessfulScheduledProgramNotifications(v time.Time) {
	o.LastSuccessfulScheduledProgramNotifications = &v
}

// GetLastSuccessfulSystemMonitoringPush returns the LastSuccessfulSystemMonitoringPush field value if set, zero value otherwise.
func (o *SystemSettings) GetLastSuccessfulSystemMonitoringPush() time.Time {
	if o == nil || IsNil(o.LastSuccessfulSystemMonitoringPush) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessfulSystemMonitoringPush
}

// GetLastSuccessfulSystemMonitoringPushOk returns a tuple with the LastSuccessfulSystemMonitoringPush field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLastSuccessfulSystemMonitoringPushOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessfulSystemMonitoringPush) {
		return nil, false
	}
	return o.LastSuccessfulSystemMonitoringPush, true
}

// HasLastSuccessfulSystemMonitoringPush returns a boolean if a field has been set.
func (o *SystemSettings) HasLastSuccessfulSystemMonitoringPush() bool {
	if o != nil && !IsNil(o.LastSuccessfulSystemMonitoringPush) {
		return true
	}

	return false
}

// SetLastSuccessfulSystemMonitoringPush gets a reference to the given time.Time and assigns it to the LastSuccessfulSystemMonitoringPush field.
func (o *SystemSettings) SetLastSuccessfulSystemMonitoringPush(v time.Time) {
	o.LastSuccessfulSystemMonitoringPush = &v
}

// GetLockMultipleFailedLogins returns the LockMultipleFailedLogins field value if set, zero value otherwise.
func (o *SystemSettings) GetLockMultipleFailedLogins() bool {
	if o == nil || IsNil(o.LockMultipleFailedLogins) {
		var ret bool
		return ret
	}
	return *o.LockMultipleFailedLogins
}

// GetLockMultipleFailedLoginsOk returns a tuple with the LockMultipleFailedLogins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLockMultipleFailedLoginsOk() (*bool, bool) {
	if o == nil || IsNil(o.LockMultipleFailedLogins) {
		return nil, false
	}
	return o.LockMultipleFailedLogins, true
}

// HasLockMultipleFailedLogins returns a boolean if a field has been set.
func (o *SystemSettings) HasLockMultipleFailedLogins() bool {
	if o != nil && !IsNil(o.LockMultipleFailedLogins) {
		return true
	}

	return false
}

// SetLockMultipleFailedLogins gets a reference to the given bool and assigns it to the LockMultipleFailedLogins field.
func (o *SystemSettings) SetLockMultipleFailedLogins(v bool) {
	o.LockMultipleFailedLogins = &v
}

// GetLoginPageLayout returns the LoginPageLayout field value
func (o *SystemSettings) GetLoginPageLayout() LoginPageLayout {
	if o == nil {
		var ret LoginPageLayout
		return ret
	}

	return o.LoginPageLayout
}

// GetLoginPageLayoutOk returns a tuple with the LoginPageLayout field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLoginPageLayoutOk() (*LoginPageLayout, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginPageLayout, true
}

// SetLoginPageLayout sets field value
func (o *SystemSettings) SetLoginPageLayout(v LoginPageLayout) {
	o.LoginPageLayout = v
}

// GetLoginPageTemplate returns the LoginPageTemplate field value if set, zero value otherwise.
func (o *SystemSettings) GetLoginPageTemplate() string {
	if o == nil || IsNil(o.LoginPageTemplate) {
		var ret string
		return ret
	}
	return *o.LoginPageTemplate
}

// GetLoginPageTemplateOk returns a tuple with the LoginPageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLoginPageTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.LoginPageTemplate) {
		return nil, false
	}
	return o.LoginPageTemplate, true
}

// HasLoginPageTemplate returns a boolean if a field has been set.
func (o *SystemSettings) HasLoginPageTemplate() bool {
	if o != nil && !IsNil(o.LoginPageTemplate) {
		return true
	}

	return false
}

// SetLoginPageTemplate gets a reference to the given string and assigns it to the LoginPageTemplate field.
func (o *SystemSettings) SetLoginPageTemplate(v string) {
	o.LoginPageTemplate = &v
}

// GetLoginPopup returns the LoginPopup field value if set, zero value otherwise.
func (o *SystemSettings) GetLoginPopup() string {
	if o == nil || IsNil(o.LoginPopup) {
		var ret string
		return ret
	}
	return *o.LoginPopup
}

// GetLoginPopupOk returns a tuple with the LoginPopup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetLoginPopupOk() (*string, bool) {
	if o == nil || IsNil(o.LoginPopup) {
		return nil, false
	}
	return o.LoginPopup, true
}

// HasLoginPopup returns a boolean if a field has been set.
func (o *SystemSettings) HasLoginPopup() bool {
	if o != nil && !IsNil(o.LoginPopup) {
		return true
	}

	return false
}

// SetLoginPopup gets a reference to the given string and assigns it to the LoginPopup field.
func (o *SystemSettings) SetLoginPopup(v string) {
	o.LoginPopup = &v
}

// GetMaxPasswordLength returns the MaxPasswordLength field value
func (o *SystemSettings) GetMaxPasswordLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxPasswordLength
}

// GetMaxPasswordLengthOk returns a tuple with the MaxPasswordLength field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetMaxPasswordLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxPasswordLength, true
}

// SetMaxPasswordLength sets field value
func (o *SystemSettings) SetMaxPasswordLength(v int32) {
	o.MaxPasswordLength = v
}

// GetMetaDataRepoUrl returns the MetaDataRepoUrl field value if set, zero value otherwise.
func (o *SystemSettings) GetMetaDataRepoUrl() string {
	if o == nil || IsNil(o.MetaDataRepoUrl) {
		var ret string
		return ret
	}
	return *o.MetaDataRepoUrl
}

// GetMetaDataRepoUrlOk returns a tuple with the MetaDataRepoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetMetaDataRepoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MetaDataRepoUrl) {
		return nil, false
	}
	return o.MetaDataRepoUrl, true
}

// HasMetaDataRepoUrl returns a boolean if a field has been set.
func (o *SystemSettings) HasMetaDataRepoUrl() bool {
	if o != nil && !IsNil(o.MetaDataRepoUrl) {
		return true
	}

	return false
}

// SetMetaDataRepoUrl gets a reference to the given string and assigns it to the MetaDataRepoUrl field.
func (o *SystemSettings) SetMetaDataRepoUrl(v string) {
	o.MetaDataRepoUrl = &v
}

// GetMetadataFailedVersion returns the MetadataFailedVersion field value if set, zero value otherwise.
func (o *SystemSettings) GetMetadataFailedVersion() string {
	if o == nil || IsNil(o.MetadataFailedVersion) {
		var ret string
		return ret
	}
	return *o.MetadataFailedVersion
}

// GetMetadataFailedVersionOk returns a tuple with the MetadataFailedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetMetadataFailedVersionOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataFailedVersion) {
		return nil, false
	}
	return o.MetadataFailedVersion, true
}

// HasMetadataFailedVersion returns a boolean if a field has been set.
func (o *SystemSettings) HasMetadataFailedVersion() bool {
	if o != nil && !IsNil(o.MetadataFailedVersion) {
		return true
	}

	return false
}

// SetMetadataFailedVersion gets a reference to the given string and assigns it to the MetadataFailedVersion field.
func (o *SystemSettings) SetMetadataFailedVersion(v string) {
	o.MetadataFailedVersion = &v
}

// GetMetadataLastFailedTime returns the MetadataLastFailedTime field value if set, zero value otherwise.
func (o *SystemSettings) GetMetadataLastFailedTime() time.Time {
	if o == nil || IsNil(o.MetadataLastFailedTime) {
		var ret time.Time
		return ret
	}
	return *o.MetadataLastFailedTime
}

// GetMetadataLastFailedTimeOk returns a tuple with the MetadataLastFailedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetMetadataLastFailedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MetadataLastFailedTime) {
		return nil, false
	}
	return o.MetadataLastFailedTime, true
}

// HasMetadataLastFailedTime returns a boolean if a field has been set.
func (o *SystemSettings) HasMetadataLastFailedTime() bool {
	if o != nil && !IsNil(o.MetadataLastFailedTime) {
		return true
	}

	return false
}

// SetMetadataLastFailedTime gets a reference to the given time.Time and assigns it to the MetadataLastFailedTime field.
func (o *SystemSettings) SetMetadataLastFailedTime(v time.Time) {
	o.MetadataLastFailedTime = &v
}

// GetMinPasswordLength returns the MinPasswordLength field value
func (o *SystemSettings) GetMinPasswordLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinPasswordLength
}

// GetMinPasswordLengthOk returns a tuple with the MinPasswordLength field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetMinPasswordLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinPasswordLength, true
}

// SetMinPasswordLength sets field value
func (o *SystemSettings) SetMinPasswordLength(v int32) {
	o.MinPasswordLength = v
}

// GetMultiOrganisationUnitForms returns the MultiOrganisationUnitForms field value if set, zero value otherwise.
func (o *SystemSettings) GetMultiOrganisationUnitForms() bool {
	if o == nil || IsNil(o.MultiOrganisationUnitForms) {
		var ret bool
		return ret
	}
	return *o.MultiOrganisationUnitForms
}

// GetMultiOrganisationUnitFormsOk returns a tuple with the MultiOrganisationUnitForms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetMultiOrganisationUnitFormsOk() (*bool, bool) {
	if o == nil || IsNil(o.MultiOrganisationUnitForms) {
		return nil, false
	}
	return o.MultiOrganisationUnitForms, true
}

// HasMultiOrganisationUnitForms returns a boolean if a field has been set.
func (o *SystemSettings) HasMultiOrganisationUnitForms() bool {
	if o != nil && !IsNil(o.MultiOrganisationUnitForms) {
		return true
	}

	return false
}

// SetMultiOrganisationUnitForms gets a reference to the given bool and assigns it to the MultiOrganisationUnitForms field.
func (o *SystemSettings) SetMultiOrganisationUnitForms(v bool) {
	o.MultiOrganisationUnitForms = &v
}

// GetNextAnalyticsTableUpdate returns the NextAnalyticsTableUpdate field value if set, zero value otherwise.
func (o *SystemSettings) GetNextAnalyticsTableUpdate() time.Time {
	if o == nil || IsNil(o.NextAnalyticsTableUpdate) {
		var ret time.Time
		return ret
	}
	return *o.NextAnalyticsTableUpdate
}

// GetNextAnalyticsTableUpdateOk returns a tuple with the NextAnalyticsTableUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetNextAnalyticsTableUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextAnalyticsTableUpdate) {
		return nil, false
	}
	return o.NextAnalyticsTableUpdate, true
}

// HasNextAnalyticsTableUpdate returns a boolean if a field has been set.
func (o *SystemSettings) HasNextAnalyticsTableUpdate() bool {
	if o != nil && !IsNil(o.NextAnalyticsTableUpdate) {
		return true
	}

	return false
}

// SetNextAnalyticsTableUpdate gets a reference to the given time.Time and assigns it to the NextAnalyticsTableUpdate field.
func (o *SystemSettings) SetNextAnalyticsTableUpdate(v time.Time) {
	o.NextAnalyticsTableUpdate = &v
}

// GetNotifierCleanAfterIdleTime returns the NotifierCleanAfterIdleTime field value
func (o *SystemSettings) GetNotifierCleanAfterIdleTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NotifierCleanAfterIdleTime
}

// GetNotifierCleanAfterIdleTimeOk returns a tuple with the NotifierCleanAfterIdleTime field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetNotifierCleanAfterIdleTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifierCleanAfterIdleTime, true
}

// SetNotifierCleanAfterIdleTime sets field value
func (o *SystemSettings) SetNotifierCleanAfterIdleTime(v int64) {
	o.NotifierCleanAfterIdleTime = v
}

// GetNotifierGistOverview returns the NotifierGistOverview field value if set, zero value otherwise.
func (o *SystemSettings) GetNotifierGistOverview() bool {
	if o == nil || IsNil(o.NotifierGistOverview) {
		var ret bool
		return ret
	}
	return *o.NotifierGistOverview
}

// GetNotifierGistOverviewOk returns a tuple with the NotifierGistOverview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetNotifierGistOverviewOk() (*bool, bool) {
	if o == nil || IsNil(o.NotifierGistOverview) {
		return nil, false
	}
	return o.NotifierGistOverview, true
}

// HasNotifierGistOverview returns a boolean if a field has been set.
func (o *SystemSettings) HasNotifierGistOverview() bool {
	if o != nil && !IsNil(o.NotifierGistOverview) {
		return true
	}

	return false
}

// SetNotifierGistOverview gets a reference to the given bool and assigns it to the NotifierGistOverview field.
func (o *SystemSettings) SetNotifierGistOverview(v bool) {
	o.NotifierGistOverview = &v
}

// GetNotifierLogLevel returns the NotifierLogLevel field value
func (o *SystemSettings) GetNotifierLogLevel() NotificationLevel {
	if o == nil {
		var ret NotificationLevel
		return ret
	}

	return o.NotifierLogLevel
}

// GetNotifierLogLevelOk returns a tuple with the NotifierLogLevel field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetNotifierLogLevelOk() (*NotificationLevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifierLogLevel, true
}

// SetNotifierLogLevel sets field value
func (o *SystemSettings) SetNotifierLogLevel(v NotificationLevel) {
	o.NotifierLogLevel = v
}

// GetNotifierMaxAgeDays returns the NotifierMaxAgeDays field value
func (o *SystemSettings) GetNotifierMaxAgeDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NotifierMaxAgeDays
}

// GetNotifierMaxAgeDaysOk returns a tuple with the NotifierMaxAgeDays field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetNotifierMaxAgeDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifierMaxAgeDays, true
}

// SetNotifierMaxAgeDays sets field value
func (o *SystemSettings) SetNotifierMaxAgeDays(v int32) {
	o.NotifierMaxAgeDays = v
}

// GetNotifierMaxJobsPerType returns the NotifierMaxJobsPerType field value
func (o *SystemSettings) GetNotifierMaxJobsPerType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NotifierMaxJobsPerType
}

// GetNotifierMaxJobsPerTypeOk returns a tuple with the NotifierMaxJobsPerType field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetNotifierMaxJobsPerTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifierMaxJobsPerType, true
}

// SetNotifierMaxJobsPerType sets field value
func (o *SystemSettings) SetNotifierMaxJobsPerType(v int32) {
	o.NotifierMaxJobsPerType = v
}

// GetNotifierMaxMessagesPerJob returns the NotifierMaxMessagesPerJob field value
func (o *SystemSettings) GetNotifierMaxMessagesPerJob() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NotifierMaxMessagesPerJob
}

// GetNotifierMaxMessagesPerJobOk returns a tuple with the NotifierMaxMessagesPerJob field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetNotifierMaxMessagesPerJobOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifierMaxMessagesPerJob, true
}

// SetNotifierMaxMessagesPerJob sets field value
func (o *SystemSettings) SetNotifierMaxMessagesPerJob(v int32) {
	o.NotifierMaxMessagesPerJob = v
}

// GetParallelJobsInAnalyticsTableExport returns the ParallelJobsInAnalyticsTableExport field value
func (o *SystemSettings) GetParallelJobsInAnalyticsTableExport() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ParallelJobsInAnalyticsTableExport
}

// GetParallelJobsInAnalyticsTableExportOk returns a tuple with the ParallelJobsInAnalyticsTableExport field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetParallelJobsInAnalyticsTableExportOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParallelJobsInAnalyticsTableExport, true
}

// SetParallelJobsInAnalyticsTableExport sets field value
func (o *SystemSettings) SetParallelJobsInAnalyticsTableExport(v int32) {
	o.ParallelJobsInAnalyticsTableExport = v
}

// GetPhoneNumberAreaCode returns the PhoneNumberAreaCode field value if set, zero value otherwise.
func (o *SystemSettings) GetPhoneNumberAreaCode() string {
	if o == nil || IsNil(o.PhoneNumberAreaCode) {
		var ret string
		return ret
	}
	return *o.PhoneNumberAreaCode
}

// GetPhoneNumberAreaCodeOk returns a tuple with the PhoneNumberAreaCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetPhoneNumberAreaCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumberAreaCode) {
		return nil, false
	}
	return o.PhoneNumberAreaCode, true
}

// HasPhoneNumberAreaCode returns a boolean if a field has been set.
func (o *SystemSettings) HasPhoneNumberAreaCode() bool {
	if o != nil && !IsNil(o.PhoneNumberAreaCode) {
		return true
	}

	return false
}

// SetPhoneNumberAreaCode gets a reference to the given string and assigns it to the PhoneNumberAreaCode field.
func (o *SystemSettings) SetPhoneNumberAreaCode(v string) {
	o.PhoneNumberAreaCode = &v
}

// GetRecaptchaSecret returns the RecaptchaSecret field value if set, zero value otherwise.
func (o *SystemSettings) GetRecaptchaSecret() string {
	if o == nil || IsNil(o.RecaptchaSecret) {
		var ret string
		return ret
	}
	return *o.RecaptchaSecret
}

// GetRecaptchaSecretOk returns a tuple with the RecaptchaSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetRecaptchaSecretOk() (*string, bool) {
	if o == nil || IsNil(o.RecaptchaSecret) {
		return nil, false
	}
	return o.RecaptchaSecret, true
}

// HasRecaptchaSecret returns a boolean if a field has been set.
func (o *SystemSettings) HasRecaptchaSecret() bool {
	if o != nil && !IsNil(o.RecaptchaSecret) {
		return true
	}

	return false
}

// SetRecaptchaSecret gets a reference to the given string and assigns it to the RecaptchaSecret field.
func (o *SystemSettings) SetRecaptchaSecret(v string) {
	o.RecaptchaSecret = &v
}

// GetRecaptchaSite returns the RecaptchaSite field value if set, zero value otherwise.
func (o *SystemSettings) GetRecaptchaSite() string {
	if o == nil || IsNil(o.RecaptchaSite) {
		var ret string
		return ret
	}
	return *o.RecaptchaSite
}

// GetRecaptchaSiteOk returns a tuple with the RecaptchaSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetRecaptchaSiteOk() (*string, bool) {
	if o == nil || IsNil(o.RecaptchaSite) {
		return nil, false
	}
	return o.RecaptchaSite, true
}

// HasRecaptchaSite returns a boolean if a field has been set.
func (o *SystemSettings) HasRecaptchaSite() bool {
	if o != nil && !IsNil(o.RecaptchaSite) {
		return true
	}

	return false
}

// SetRecaptchaSite gets a reference to the given string and assigns it to the RecaptchaSite field.
func (o *SystemSettings) SetRecaptchaSite(v string) {
	o.RecaptchaSite = &v
}

// GetRemoteInstancePassword returns the RemoteInstancePassword field value if set, zero value otherwise.
func (o *SystemSettings) GetRemoteInstancePassword() string {
	if o == nil || IsNil(o.RemoteInstancePassword) {
		var ret string
		return ret
	}
	return *o.RemoteInstancePassword
}

// GetRemoteInstancePasswordOk returns a tuple with the RemoteInstancePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetRemoteInstancePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteInstancePassword) {
		return nil, false
	}
	return o.RemoteInstancePassword, true
}

// HasRemoteInstancePassword returns a boolean if a field has been set.
func (o *SystemSettings) HasRemoteInstancePassword() bool {
	if o != nil && !IsNil(o.RemoteInstancePassword) {
		return true
	}

	return false
}

// SetRemoteInstancePassword gets a reference to the given string and assigns it to the RemoteInstancePassword field.
func (o *SystemSettings) SetRemoteInstancePassword(v string) {
	o.RemoteInstancePassword = &v
}

// GetRemoteInstanceUrl returns the RemoteInstanceUrl field value if set, zero value otherwise.
func (o *SystemSettings) GetRemoteInstanceUrl() string {
	if o == nil || IsNil(o.RemoteInstanceUrl) {
		var ret string
		return ret
	}
	return *o.RemoteInstanceUrl
}

// GetRemoteInstanceUrlOk returns a tuple with the RemoteInstanceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetRemoteInstanceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteInstanceUrl) {
		return nil, false
	}
	return o.RemoteInstanceUrl, true
}

// HasRemoteInstanceUrl returns a boolean if a field has been set.
func (o *SystemSettings) HasRemoteInstanceUrl() bool {
	if o != nil && !IsNil(o.RemoteInstanceUrl) {
		return true
	}

	return false
}

// SetRemoteInstanceUrl gets a reference to the given string and assigns it to the RemoteInstanceUrl field.
func (o *SystemSettings) SetRemoteInstanceUrl(v string) {
	o.RemoteInstanceUrl = &v
}

// GetRemoteInstanceUsername returns the RemoteInstanceUsername field value if set, zero value otherwise.
func (o *SystemSettings) GetRemoteInstanceUsername() string {
	if o == nil || IsNil(o.RemoteInstanceUsername) {
		var ret string
		return ret
	}
	return *o.RemoteInstanceUsername
}

// GetRemoteInstanceUsernameOk returns a tuple with the RemoteInstanceUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetRemoteInstanceUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteInstanceUsername) {
		return nil, false
	}
	return o.RemoteInstanceUsername, true
}

// HasRemoteInstanceUsername returns a boolean if a field has been set.
func (o *SystemSettings) HasRemoteInstanceUsername() bool {
	if o != nil && !IsNil(o.RemoteInstanceUsername) {
		return true
	}

	return false
}

// SetRemoteInstanceUsername gets a reference to the given string and assigns it to the RemoteInstanceUsername field.
func (o *SystemSettings) SetRemoteInstanceUsername(v string) {
	o.RemoteInstanceUsername = &v
}

// GetRemoteMetadataVersion returns the RemoteMetadataVersion field value if set, zero value otherwise.
func (o *SystemSettings) GetRemoteMetadataVersion() string {
	if o == nil || IsNil(o.RemoteMetadataVersion) {
		var ret string
		return ret
	}
	return *o.RemoteMetadataVersion
}

// GetRemoteMetadataVersionOk returns a tuple with the RemoteMetadataVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetRemoteMetadataVersionOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteMetadataVersion) {
		return nil, false
	}
	return o.RemoteMetadataVersion, true
}

// HasRemoteMetadataVersion returns a boolean if a field has been set.
func (o *SystemSettings) HasRemoteMetadataVersion() bool {
	if o != nil && !IsNil(o.RemoteMetadataVersion) {
		return true
	}

	return false
}

// SetRemoteMetadataVersion gets a reference to the given string and assigns it to the RemoteMetadataVersion field.
func (o *SystemSettings) SetRemoteMetadataVersion(v string) {
	o.RemoteMetadataVersion = &v
}

// GetRequireAddToView returns the RequireAddToView field value if set, zero value otherwise.
func (o *SystemSettings) GetRequireAddToView() bool {
	if o == nil || IsNil(o.RequireAddToView) {
		var ret bool
		return ret
	}
	return *o.RequireAddToView
}

// GetRequireAddToViewOk returns a tuple with the RequireAddToView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetRequireAddToViewOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireAddToView) {
		return nil, false
	}
	return o.RequireAddToView, true
}

// HasRequireAddToView returns a boolean if a field has been set.
func (o *SystemSettings) HasRequireAddToView() bool {
	if o != nil && !IsNil(o.RequireAddToView) {
		return true
	}

	return false
}

// SetRequireAddToView gets a reference to the given bool and assigns it to the RequireAddToView field.
func (o *SystemSettings) SetRequireAddToView(v bool) {
	o.RequireAddToView = &v
}

// GetRespectMetaDataStartEndDatesInAnalyticsTableExport returns the RespectMetaDataStartEndDatesInAnalyticsTableExport field value if set, zero value otherwise.
func (o *SystemSettings) GetRespectMetaDataStartEndDatesInAnalyticsTableExport() bool {
	if o == nil || IsNil(o.RespectMetaDataStartEndDatesInAnalyticsTableExport) {
		var ret bool
		return ret
	}
	return *o.RespectMetaDataStartEndDatesInAnalyticsTableExport
}

// GetRespectMetaDataStartEndDatesInAnalyticsTableExportOk returns a tuple with the RespectMetaDataStartEndDatesInAnalyticsTableExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetRespectMetaDataStartEndDatesInAnalyticsTableExportOk() (*bool, bool) {
	if o == nil || IsNil(o.RespectMetaDataStartEndDatesInAnalyticsTableExport) {
		return nil, false
	}
	return o.RespectMetaDataStartEndDatesInAnalyticsTableExport, true
}

// HasRespectMetaDataStartEndDatesInAnalyticsTableExport returns a boolean if a field has been set.
func (o *SystemSettings) HasRespectMetaDataStartEndDatesInAnalyticsTableExport() bool {
	if o != nil && !IsNil(o.RespectMetaDataStartEndDatesInAnalyticsTableExport) {
		return true
	}

	return false
}

// SetRespectMetaDataStartEndDatesInAnalyticsTableExport gets a reference to the given bool and assigns it to the RespectMetaDataStartEndDatesInAnalyticsTableExport field.
func (o *SystemSettings) SetRespectMetaDataStartEndDatesInAnalyticsTableExport(v bool) {
	o.RespectMetaDataStartEndDatesInAnalyticsTableExport = &v
}

// GetRuleEngineAssignOverwrite returns the RuleEngineAssignOverwrite field value if set, zero value otherwise.
func (o *SystemSettings) GetRuleEngineAssignOverwrite() bool {
	if o == nil || IsNil(o.RuleEngineAssignOverwrite) {
		var ret bool
		return ret
	}
	return *o.RuleEngineAssignOverwrite
}

// GetRuleEngineAssignOverwriteOk returns a tuple with the RuleEngineAssignOverwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetRuleEngineAssignOverwriteOk() (*bool, bool) {
	if o == nil || IsNil(o.RuleEngineAssignOverwrite) {
		return nil, false
	}
	return o.RuleEngineAssignOverwrite, true
}

// HasRuleEngineAssignOverwrite returns a boolean if a field has been set.
func (o *SystemSettings) HasRuleEngineAssignOverwrite() bool {
	if o != nil && !IsNil(o.RuleEngineAssignOverwrite) {
		return true
	}

	return false
}

// SetRuleEngineAssignOverwrite gets a reference to the given bool and assigns it to the RuleEngineAssignOverwrite field.
func (o *SystemSettings) SetRuleEngineAssignOverwrite(v bool) {
	o.RuleEngineAssignOverwrite = &v
}

// GetSelfRegistrationNoRecaptcha returns the SelfRegistrationNoRecaptcha field value if set, zero value otherwise.
func (o *SystemSettings) GetSelfRegistrationNoRecaptcha() bool {
	if o == nil || IsNil(o.SelfRegistrationNoRecaptcha) {
		var ret bool
		return ret
	}
	return *o.SelfRegistrationNoRecaptcha
}

// GetSelfRegistrationNoRecaptchaOk returns a tuple with the SelfRegistrationNoRecaptcha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetSelfRegistrationNoRecaptchaOk() (*bool, bool) {
	if o == nil || IsNil(o.SelfRegistrationNoRecaptcha) {
		return nil, false
	}
	return o.SelfRegistrationNoRecaptcha, true
}

// HasSelfRegistrationNoRecaptcha returns a boolean if a field has been set.
func (o *SystemSettings) HasSelfRegistrationNoRecaptcha() bool {
	if o != nil && !IsNil(o.SelfRegistrationNoRecaptcha) {
		return true
	}

	return false
}

// SetSelfRegistrationNoRecaptcha gets a reference to the given bool and assigns it to the SelfRegistrationNoRecaptcha field.
func (o *SystemSettings) SetSelfRegistrationNoRecaptcha(v bool) {
	o.SelfRegistrationNoRecaptcha = &v
}

// GetSkipDataTypeValidationInAnalyticsTableExport returns the SkipDataTypeValidationInAnalyticsTableExport field value if set, zero value otherwise.
func (o *SystemSettings) GetSkipDataTypeValidationInAnalyticsTableExport() bool {
	if o == nil || IsNil(o.SkipDataTypeValidationInAnalyticsTableExport) {
		var ret bool
		return ret
	}
	return *o.SkipDataTypeValidationInAnalyticsTableExport
}

// GetSkipDataTypeValidationInAnalyticsTableExportOk returns a tuple with the SkipDataTypeValidationInAnalyticsTableExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetSkipDataTypeValidationInAnalyticsTableExportOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipDataTypeValidationInAnalyticsTableExport) {
		return nil, false
	}
	return o.SkipDataTypeValidationInAnalyticsTableExport, true
}

// HasSkipDataTypeValidationInAnalyticsTableExport returns a boolean if a field has been set.
func (o *SystemSettings) HasSkipDataTypeValidationInAnalyticsTableExport() bool {
	if o != nil && !IsNil(o.SkipDataTypeValidationInAnalyticsTableExport) {
		return true
	}

	return false
}

// SetSkipDataTypeValidationInAnalyticsTableExport gets a reference to the given bool and assigns it to the SkipDataTypeValidationInAnalyticsTableExport field.
func (o *SystemSettings) SetSkipDataTypeValidationInAnalyticsTableExport(v bool) {
	o.SkipDataTypeValidationInAnalyticsTableExport = &v
}

// GetSmsMaxLength returns the SmsMaxLength field value
func (o *SystemSettings) GetSmsMaxLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SmsMaxLength
}

// GetSmsMaxLengthOk returns a tuple with the SmsMaxLength field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetSmsMaxLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmsMaxLength, true
}

// SetSmsMaxLength sets field value
func (o *SystemSettings) SetSmsMaxLength(v int32) {
	o.SmsMaxLength = v
}

// GetSqlViewMaxLimit returns the SqlViewMaxLimit field value
func (o *SystemSettings) GetSqlViewMaxLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SqlViewMaxLimit
}

// GetSqlViewMaxLimitOk returns a tuple with the SqlViewMaxLimit field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetSqlViewMaxLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SqlViewMaxLimit, true
}

// SetSqlViewMaxLimit sets field value
func (o *SystemSettings) SetSqlViewMaxLimit(v int32) {
	o.SqlViewMaxLimit = v
}

// GetStartModule returns the StartModule field value if set, zero value otherwise.
func (o *SystemSettings) GetStartModule() string {
	if o == nil || IsNil(o.StartModule) {
		var ret string
		return ret
	}
	return *o.StartModule
}

// GetStartModuleOk returns a tuple with the StartModule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetStartModuleOk() (*string, bool) {
	if o == nil || IsNil(o.StartModule) {
		return nil, false
	}
	return o.StartModule, true
}

// HasStartModule returns a boolean if a field has been set.
func (o *SystemSettings) HasStartModule() bool {
	if o != nil && !IsNil(o.StartModule) {
		return true
	}

	return false
}

// SetStartModule gets a reference to the given string and assigns it to the StartModule field.
func (o *SystemSettings) SetStartModule(v string) {
	o.StartModule = &v
}

// GetStartModuleEnableLightweight returns the StartModuleEnableLightweight field value if set, zero value otherwise.
func (o *SystemSettings) GetStartModuleEnableLightweight() bool {
	if o == nil || IsNil(o.StartModuleEnableLightweight) {
		var ret bool
		return ret
	}
	return *o.StartModuleEnableLightweight
}

// GetStartModuleEnableLightweightOk returns a tuple with the StartModuleEnableLightweight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetStartModuleEnableLightweightOk() (*bool, bool) {
	if o == nil || IsNil(o.StartModuleEnableLightweight) {
		return nil, false
	}
	return o.StartModuleEnableLightweight, true
}

// HasStartModuleEnableLightweight returns a boolean if a field has been set.
func (o *SystemSettings) HasStartModuleEnableLightweight() bool {
	if o != nil && !IsNil(o.StartModuleEnableLightweight) {
		return true
	}

	return false
}

// SetStartModuleEnableLightweight gets a reference to the given bool and assigns it to the StartModuleEnableLightweight field.
func (o *SystemSettings) SetStartModuleEnableLightweight(v bool) {
	o.StartModuleEnableLightweight = &v
}

// GetStopMetadataSync returns the StopMetadataSync field value if set, zero value otherwise.
func (o *SystemSettings) GetStopMetadataSync() bool {
	if o == nil || IsNil(o.StopMetadataSync) {
		var ret bool
		return ret
	}
	return *o.StopMetadataSync
}

// GetStopMetadataSyncOk returns a tuple with the StopMetadataSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetStopMetadataSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.StopMetadataSync) {
		return nil, false
	}
	return o.StopMetadataSync, true
}

// HasStopMetadataSync returns a boolean if a field has been set.
func (o *SystemSettings) HasStopMetadataSync() bool {
	if o != nil && !IsNil(o.StopMetadataSync) {
		return true
	}

	return false
}

// SetStopMetadataSync gets a reference to the given bool and assigns it to the StopMetadataSync field.
func (o *SystemSettings) SetStopMetadataSync(v bool) {
	o.StopMetadataSync = &v
}

// GetStyle returns the Style field value if set, zero value otherwise.
func (o *SystemSettings) GetStyle() string {
	if o == nil || IsNil(o.Style) {
		var ret string
		return ret
	}
	return *o.Style
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetStyleOk() (*string, bool) {
	if o == nil || IsNil(o.Style) {
		return nil, false
	}
	return o.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (o *SystemSettings) HasStyle() bool {
	if o != nil && !IsNil(o.Style) {
		return true
	}

	return false
}

// SetStyle gets a reference to the given string and assigns it to the Style field.
func (o *SystemSettings) SetStyle(v string) {
	o.Style = &v
}

// GetSyncDelayBetweenRemoteServerAvailabilityCheckAttempts returns the SyncDelayBetweenRemoteServerAvailabilityCheckAttempts field value
func (o *SystemSettings) GetSyncDelayBetweenRemoteServerAvailabilityCheckAttempts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SyncDelayBetweenRemoteServerAvailabilityCheckAttempts
}

// GetSyncDelayBetweenRemoteServerAvailabilityCheckAttemptsOk returns a tuple with the SyncDelayBetweenRemoteServerAvailabilityCheckAttempts field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetSyncDelayBetweenRemoteServerAvailabilityCheckAttemptsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SyncDelayBetweenRemoteServerAvailabilityCheckAttempts, true
}

// SetSyncDelayBetweenRemoteServerAvailabilityCheckAttempts sets field value
func (o *SystemSettings) SetSyncDelayBetweenRemoteServerAvailabilityCheckAttempts(v int32) {
	o.SyncDelayBetweenRemoteServerAvailabilityCheckAttempts = v
}

// GetSyncMaxAttempts returns the SyncMaxAttempts field value
func (o *SystemSettings) GetSyncMaxAttempts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SyncMaxAttempts
}

// GetSyncMaxAttemptsOk returns a tuple with the SyncMaxAttempts field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetSyncMaxAttemptsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SyncMaxAttempts, true
}

// SetSyncMaxAttempts sets field value
func (o *SystemSettings) SetSyncMaxAttempts(v int32) {
	o.SyncMaxAttempts = v
}

// GetSyncMaxRemoteServerAvailabilityCheckAttempts returns the SyncMaxRemoteServerAvailabilityCheckAttempts field value
func (o *SystemSettings) GetSyncMaxRemoteServerAvailabilityCheckAttempts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SyncMaxRemoteServerAvailabilityCheckAttempts
}

// GetSyncMaxRemoteServerAvailabilityCheckAttemptsOk returns a tuple with the SyncMaxRemoteServerAvailabilityCheckAttempts field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetSyncMaxRemoteServerAvailabilityCheckAttemptsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SyncMaxRemoteServerAvailabilityCheckAttempts, true
}

// SetSyncMaxRemoteServerAvailabilityCheckAttempts sets field value
func (o *SystemSettings) SetSyncMaxRemoteServerAvailabilityCheckAttempts(v int32) {
	o.SyncMaxRemoteServerAvailabilityCheckAttempts = v
}

// GetSyncSkipSyncForDataChangedBefore returns the SyncSkipSyncForDataChangedBefore field value if set, zero value otherwise.
func (o *SystemSettings) GetSyncSkipSyncForDataChangedBefore() time.Time {
	if o == nil || IsNil(o.SyncSkipSyncForDataChangedBefore) {
		var ret time.Time
		return ret
	}
	return *o.SyncSkipSyncForDataChangedBefore
}

// GetSyncSkipSyncForDataChangedBeforeOk returns a tuple with the SyncSkipSyncForDataChangedBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetSyncSkipSyncForDataChangedBeforeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SyncSkipSyncForDataChangedBefore) {
		return nil, false
	}
	return o.SyncSkipSyncForDataChangedBefore, true
}

// HasSyncSkipSyncForDataChangedBefore returns a boolean if a field has been set.
func (o *SystemSettings) HasSyncSkipSyncForDataChangedBefore() bool {
	if o != nil && !IsNil(o.SyncSkipSyncForDataChangedBefore) {
		return true
	}

	return false
}

// SetSyncSkipSyncForDataChangedBefore gets a reference to the given time.Time and assigns it to the SyncSkipSyncForDataChangedBefore field.
func (o *SystemSettings) SetSyncSkipSyncForDataChangedBefore(v time.Time) {
	o.SyncSkipSyncForDataChangedBefore = &v
}

// GetSystemMetadataVersion returns the SystemMetadataVersion field value if set, zero value otherwise.
func (o *SystemSettings) GetSystemMetadataVersion() string {
	if o == nil || IsNil(o.SystemMetadataVersion) {
		var ret string
		return ret
	}
	return *o.SystemMetadataVersion
}

// GetSystemMetadataVersionOk returns a tuple with the SystemMetadataVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetSystemMetadataVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SystemMetadataVersion) {
		return nil, false
	}
	return o.SystemMetadataVersion, true
}

// HasSystemMetadataVersion returns a boolean if a field has been set.
func (o *SystemSettings) HasSystemMetadataVersion() bool {
	if o != nil && !IsNil(o.SystemMetadataVersion) {
		return true
	}

	return false
}

// SetSystemMetadataVersion gets a reference to the given string and assigns it to the SystemMetadataVersion field.
func (o *SystemSettings) SetSystemMetadataVersion(v string) {
	o.SystemMetadataVersion = &v
}

// GetSystemNotificationsEmail returns the SystemNotificationsEmail field value if set, zero value otherwise.
func (o *SystemSettings) GetSystemNotificationsEmail() string {
	if o == nil || IsNil(o.SystemNotificationsEmail) {
		var ret string
		return ret
	}
	return *o.SystemNotificationsEmail
}

// GetSystemNotificationsEmailOk returns a tuple with the SystemNotificationsEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetSystemNotificationsEmailOk() (*string, bool) {
	if o == nil || IsNil(o.SystemNotificationsEmail) {
		return nil, false
	}
	return o.SystemNotificationsEmail, true
}

// HasSystemNotificationsEmail returns a boolean if a field has been set.
func (o *SystemSettings) HasSystemNotificationsEmail() bool {
	if o != nil && !IsNil(o.SystemNotificationsEmail) {
		return true
	}

	return false
}

// SetSystemNotificationsEmail gets a reference to the given string and assigns it to the SystemNotificationsEmail field.
func (o *SystemSettings) SetSystemNotificationsEmail(v string) {
	o.SystemNotificationsEmail = &v
}

// GetTrackedEntityMaxLimit returns the TrackedEntityMaxLimit field value
func (o *SystemSettings) GetTrackedEntityMaxLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TrackedEntityMaxLimit
}

// GetTrackedEntityMaxLimitOk returns a tuple with the TrackedEntityMaxLimit field value
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetTrackedEntityMaxLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackedEntityMaxLimit, true
}

// SetTrackedEntityMaxLimit sets field value
func (o *SystemSettings) SetTrackedEntityMaxLimit(v int32) {
	o.TrackedEntityMaxLimit = v
}

// GetTrackerDashboardLayout returns the TrackerDashboardLayout field value if set, zero value otherwise.
func (o *SystemSettings) GetTrackerDashboardLayout() string {
	if o == nil || IsNil(o.TrackerDashboardLayout) {
		var ret string
		return ret
	}
	return *o.TrackerDashboardLayout
}

// GetTrackerDashboardLayoutOk returns a tuple with the TrackerDashboardLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetTrackerDashboardLayoutOk() (*string, bool) {
	if o == nil || IsNil(o.TrackerDashboardLayout) {
		return nil, false
	}
	return o.TrackerDashboardLayout, true
}

// HasTrackerDashboardLayout returns a boolean if a field has been set.
func (o *SystemSettings) HasTrackerDashboardLayout() bool {
	if o != nil && !IsNil(o.TrackerDashboardLayout) {
		return true
	}

	return false
}

// SetTrackerDashboardLayout gets a reference to the given string and assigns it to the TrackerDashboardLayout field.
func (o *SystemSettings) SetTrackerDashboardLayout(v string) {
	o.TrackerDashboardLayout = &v
}

// GetUiLocale returns the UiLocale field value if set, zero value otherwise.
func (o *SystemSettings) GetUiLocale() string {
	if o == nil || IsNil(o.UiLocale) {
		var ret string
		return ret
	}
	return *o.UiLocale
}

// GetUiLocaleOk returns a tuple with the UiLocale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetUiLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.UiLocale) {
		return nil, false
	}
	return o.UiLocale, true
}

// HasUiLocale returns a boolean if a field has been set.
func (o *SystemSettings) HasUiLocale() bool {
	if o != nil && !IsNil(o.UiLocale) {
		return true
	}

	return false
}

// SetUiLocale gets a reference to the given string and assigns it to the UiLocale field.
func (o *SystemSettings) SetUiLocale(v string) {
	o.UiLocale = &v
}

// GetUseCustomLogoBanner returns the UseCustomLogoBanner field value if set, zero value otherwise.
func (o *SystemSettings) GetUseCustomLogoBanner() bool {
	if o == nil || IsNil(o.UseCustomLogoBanner) {
		var ret bool
		return ret
	}
	return *o.UseCustomLogoBanner
}

// GetUseCustomLogoBannerOk returns a tuple with the UseCustomLogoBanner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetUseCustomLogoBannerOk() (*bool, bool) {
	if o == nil || IsNil(o.UseCustomLogoBanner) {
		return nil, false
	}
	return o.UseCustomLogoBanner, true
}

// HasUseCustomLogoBanner returns a boolean if a field has been set.
func (o *SystemSettings) HasUseCustomLogoBanner() bool {
	if o != nil && !IsNil(o.UseCustomLogoBanner) {
		return true
	}

	return false
}

// SetUseCustomLogoBanner gets a reference to the given bool and assigns it to the UseCustomLogoBanner field.
func (o *SystemSettings) SetUseCustomLogoBanner(v bool) {
	o.UseCustomLogoBanner = &v
}

// GetUseCustomLogoFront returns the UseCustomLogoFront field value if set, zero value otherwise.
func (o *SystemSettings) GetUseCustomLogoFront() bool {
	if o == nil || IsNil(o.UseCustomLogoFront) {
		var ret bool
		return ret
	}
	return *o.UseCustomLogoFront
}

// GetUseCustomLogoFrontOk returns a tuple with the UseCustomLogoFront field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetUseCustomLogoFrontOk() (*bool, bool) {
	if o == nil || IsNil(o.UseCustomLogoFront) {
		return nil, false
	}
	return o.UseCustomLogoFront, true
}

// HasUseCustomLogoFront returns a boolean if a field has been set.
func (o *SystemSettings) HasUseCustomLogoFront() bool {
	if o != nil && !IsNil(o.UseCustomLogoFront) {
		return true
	}

	return false
}

// SetUseCustomLogoFront gets a reference to the given bool and assigns it to the UseCustomLogoFront field.
func (o *SystemSettings) SetUseCustomLogoFront(v bool) {
	o.UseCustomLogoFront = &v
}

// GetUseExperimentalAnalyticsQueryEngine returns the UseExperimentalAnalyticsQueryEngine field value if set, zero value otherwise.
func (o *SystemSettings) GetUseExperimentalAnalyticsQueryEngine() bool {
	if o == nil || IsNil(o.UseExperimentalAnalyticsQueryEngine) {
		var ret bool
		return ret
	}
	return *o.UseExperimentalAnalyticsQueryEngine
}

// GetUseExperimentalAnalyticsQueryEngineOk returns a tuple with the UseExperimentalAnalyticsQueryEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetUseExperimentalAnalyticsQueryEngineOk() (*bool, bool) {
	if o == nil || IsNil(o.UseExperimentalAnalyticsQueryEngine) {
		return nil, false
	}
	return o.UseExperimentalAnalyticsQueryEngine, true
}

// HasUseExperimentalAnalyticsQueryEngine returns a boolean if a field has been set.
func (o *SystemSettings) HasUseExperimentalAnalyticsQueryEngine() bool {
	if o != nil && !IsNil(o.UseExperimentalAnalyticsQueryEngine) {
		return true
	}

	return false
}

// SetUseExperimentalAnalyticsQueryEngine gets a reference to the given bool and assigns it to the UseExperimentalAnalyticsQueryEngine field.
func (o *SystemSettings) SetUseExperimentalAnalyticsQueryEngine(v bool) {
	o.UseExperimentalAnalyticsQueryEngine = &v
}

// GetVersionEnabled returns the VersionEnabled field value if set, zero value otherwise.
func (o *SystemSettings) GetVersionEnabled() bool {
	if o == nil || IsNil(o.VersionEnabled) {
		var ret bool
		return ret
	}
	return *o.VersionEnabled
}

// GetVersionEnabledOk returns a tuple with the VersionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemSettings) GetVersionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.VersionEnabled) {
		return nil, false
	}
	return o.VersionEnabled, true
}

// HasVersionEnabled returns a boolean if a field has been set.
func (o *SystemSettings) HasVersionEnabled() bool {
	if o != nil && !IsNil(o.VersionEnabled) {
		return true
	}

	return false
}

// SetVersionEnabled gets a reference to the given bool and assigns it to the VersionEnabled field.
func (o *SystemSettings) SetVersionEnabled(v bool) {
	o.VersionEnabled = &v
}

func (o SystemSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcceptanceRequiredForApproval) {
		toSerialize["acceptanceRequiredForApproval"] = o.AcceptanceRequiredForApproval
	}
	toSerialize["accountExpiresInDays"] = o.AccountExpiresInDays
	if !IsNil(o.AccountExpiryAlert) {
		toSerialize["accountExpiryAlert"] = o.AccountExpiryAlert
	}
	if !IsNil(o.AccountRecoveryEnabled) {
		toSerialize["accountRecoveryEnabled"] = o.AccountRecoveryEnabled
	}
	if !IsNil(o.AllowObjectAssignment) {
		toSerialize["allowObjectAssignment"] = o.AllowObjectAssignment
	}
	toSerialize["analysisDigitGroupSeparator"] = o.AnalysisDigitGroupSeparator
	toSerialize["analysisDisplayProperty"] = o.AnalysisDisplayProperty
	toSerialize["analysisRelativePeriod"] = o.AnalysisRelativePeriod
	toSerialize["analyticsCacheProgressiveTtlFactor"] = o.AnalyticsCacheProgressiveTtlFactor
	toSerialize["analyticsCacheTtlMode"] = o.AnalyticsCacheTtlMode
	toSerialize["analyticsFinancialYearStart"] = o.AnalyticsFinancialYearStart
	toSerialize["analyticsMaxLimit"] = o.AnalyticsMaxLimit
	toSerialize["analyticsPeriodYearsOffset"] = o.AnalyticsPeriodYearsOffset
	if !IsNil(o.ApplicationFooter) {
		toSerialize["applicationFooter"] = o.ApplicationFooter
	}
	if !IsNil(o.ApplicationIntro) {
		toSerialize["applicationIntro"] = o.ApplicationIntro
	}
	if !IsNil(o.ApplicationNotification) {
		toSerialize["applicationNotification"] = o.ApplicationNotification
	}
	if !IsNil(o.ApplicationRightFooter) {
		toSerialize["applicationRightFooter"] = o.ApplicationRightFooter
	}
	if !IsNil(o.ApplicationTitle) {
		toSerialize["applicationTitle"] = o.ApplicationTitle
	}
	if !IsNil(o.BingMapsApiKey) {
		toSerialize["bingMapsApiKey"] = o.BingMapsApiKey
	}
	toSerialize["cacheStrategy"] = o.CacheStrategy
	toSerialize["cacheability"] = o.Cacheability
	if !IsNil(o.Calendar) {
		toSerialize["calendar"] = o.Calendar
	}
	if !IsNil(o.CanGrantOwnUserRoles) {
		toSerialize["canGrantOwnUserRoles"] = o.CanGrantOwnUserRoles
	}
	if !IsNil(o.CountPassiveDashboardViewsInUsageAnalytics) {
		toSerialize["countPassiveDashboardViewsInUsageAnalytics"] = o.CountPassiveDashboardViewsInUsageAnalytics
	}
	toSerialize["credentialsExpires"] = o.CredentialsExpires
	toSerialize["credentialsExpiresReminderInDays"] = o.CredentialsExpiresReminderInDays
	if !IsNil(o.CredentialsExpiryAlert) {
		toSerialize["credentialsExpiryAlert"] = o.CredentialsExpiryAlert
	}
	if !IsNil(o.CurrentDomainType) {
		toSerialize["currentDomainType"] = o.CurrentDomainType
	}
	if !IsNil(o.CustomCss) {
		toSerialize["customCss"] = o.CustomCss
	}
	if !IsNil(o.CustomJs) {
		toSerialize["customJs"] = o.CustomJs
	}
	if !IsNil(o.CustomLoginPageLogo) {
		toSerialize["customLoginPageLogo"] = o.CustomLoginPageLogo
	}
	if !IsNil(o.CustomTopMenuLogo) {
		toSerialize["customTopMenuLogo"] = o.CustomTopMenuLogo
	}
	if !IsNil(o.DashboardContextMenuItemOpenInRelevantApp) {
		toSerialize["dashboardContextMenuItemOpenInRelevantApp"] = o.DashboardContextMenuItemOpenInRelevantApp
	}
	if !IsNil(o.DashboardContextMenuItemShowInterpretationsAndDetails) {
		toSerialize["dashboardContextMenuItemShowInterpretationsAndDetails"] = o.DashboardContextMenuItemShowInterpretationsAndDetails
	}
	if !IsNil(o.DashboardContextMenuItemSwitchViewType) {
		toSerialize["dashboardContextMenuItemSwitchViewType"] = o.DashboardContextMenuItemSwitchViewType
	}
	if !IsNil(o.DashboardContextMenuItemViewFullscreen) {
		toSerialize["dashboardContextMenuItemViewFullscreen"] = o.DashboardContextMenuItemViewFullscreen
	}
	if !IsNil(o.DataImportRequireAttributeOptionCombo) {
		toSerialize["dataImportRequireAttributeOptionCombo"] = o.DataImportRequireAttributeOptionCombo
	}
	if !IsNil(o.DataImportRequireCategoryOptionCombo) {
		toSerialize["dataImportRequireCategoryOptionCombo"] = o.DataImportRequireCategoryOptionCombo
	}
	if !IsNil(o.DataImportStrictAttributeOptionCombos) {
		toSerialize["dataImportStrictAttributeOptionCombos"] = o.DataImportStrictAttributeOptionCombos
	}
	if !IsNil(o.DataImportStrictCategoryOptionCombos) {
		toSerialize["dataImportStrictCategoryOptionCombos"] = o.DataImportStrictCategoryOptionCombos
	}
	if !IsNil(o.DataImportStrictDataElements) {
		toSerialize["dataImportStrictDataElements"] = o.DataImportStrictDataElements
	}
	if !IsNil(o.DataImportStrictDataSetApproval) {
		toSerialize["dataImportStrictDataSetApproval"] = o.DataImportStrictDataSetApproval
	}
	if !IsNil(o.DataImportStrictDataSetInputPeriods) {
		toSerialize["dataImportStrictDataSetInputPeriods"] = o.DataImportStrictDataSetInputPeriods
	}
	if !IsNil(o.DataImportStrictDataSetLocking) {
		toSerialize["dataImportStrictDataSetLocking"] = o.DataImportStrictDataSetLocking
	}
	if !IsNil(o.DataImportStrictOrganisationUnits) {
		toSerialize["dataImportStrictOrganisationUnits"] = o.DataImportStrictOrganisationUnits
	}
	if !IsNil(o.DataImportStrictPeriods) {
		toSerialize["dataImportStrictPeriods"] = o.DataImportStrictPeriods
	}
	toSerialize["databaseServerCpus"] = o.DatabaseServerCpus
	if !IsNil(o.DateFormat) {
		toSerialize["dateFormat"] = o.DateFormat
	}
	if !IsNil(o.DbLocale) {
		toSerialize["dbLocale"] = o.DbLocale
	}
	if !IsNil(o.DefaultBaseMap) {
		toSerialize["defaultBaseMap"] = o.DefaultBaseMap
	}
	if !IsNil(o.EmailConfigured) {
		toSerialize["emailConfigured"] = o.EmailConfigured
	}
	if !IsNil(o.EmailHostName) {
		toSerialize["emailHostName"] = o.EmailHostName
	}
	if !IsNil(o.EmailPassword) {
		toSerialize["emailPassword"] = o.EmailPassword
	}
	toSerialize["emailPort"] = o.EmailPort
	if !IsNil(o.EmailSender) {
		toSerialize["emailSender"] = o.EmailSender
	}
	if !IsNil(o.EmailTls) {
		toSerialize["emailTls"] = o.EmailTls
	}
	if !IsNil(o.EmailUsername) {
		toSerialize["emailUsername"] = o.EmailUsername
	}
	if !IsNil(o.EmbeddedDashboardsEnabled) {
		toSerialize["embeddedDashboardsEnabled"] = o.EmbeddedDashboardsEnabled
	}
	if !IsNil(o.EnforceVerifiedEmail) {
		toSerialize["enforceVerifiedEmail"] = o.EnforceVerifiedEmail
	}
	toSerialize["factorOfDeviation"] = o.FactorOfDeviation
	toSerialize["fileResourceRetentionStrategy"] = o.FileResourceRetentionStrategy
	if !IsNil(o.Flag) {
		toSerialize["flag"] = o.Flag
	}
	if !IsNil(o.FlagImage) {
		toSerialize["flagImage"] = o.FlagImage
	}
	if !IsNil(o.GatherAnalyticalObjectStatisticsInDashboardViews) {
		toSerialize["gatherAnalyticalObjectStatisticsInDashboardViews"] = o.GatherAnalyticalObjectStatisticsInDashboardViews
	}
	if !IsNil(o.GlobalShellAppName) {
		toSerialize["globalShellAppName"] = o.GlobalShellAppName
	}
	if !IsNil(o.GlobalShellEnabled) {
		toSerialize["globalShellEnabled"] = o.GlobalShellEnabled
	}
	if !IsNil(o.GoogleAnalyticsUA) {
		toSerialize["googleAnalyticsUA"] = o.GoogleAnalyticsUA
	}
	if !IsNil(o.GoogleMapsApiKey) {
		toSerialize["googleMapsApiKey"] = o.GoogleMapsApiKey
	}
	if !IsNil(o.HelpPageLink) {
		toSerialize["helpPageLink"] = o.HelpPageLink
	}
	if !IsNil(o.HideBiMonthlyPeriods) {
		toSerialize["hideBiMonthlyPeriods"] = o.HideBiMonthlyPeriods
	}
	if !IsNil(o.HideBiWeeklyPeriods) {
		toSerialize["hideBiWeeklyPeriods"] = o.HideBiWeeklyPeriods
	}
	if !IsNil(o.HideDailyPeriods) {
		toSerialize["hideDailyPeriods"] = o.HideDailyPeriods
	}
	if !IsNil(o.HideMonthlyPeriods) {
		toSerialize["hideMonthlyPeriods"] = o.HideMonthlyPeriods
	}
	if !IsNil(o.HideUnapprovedDataInAnalytics) {
		toSerialize["hideUnapprovedDataInAnalytics"] = o.HideUnapprovedDataInAnalytics
	}
	if !IsNil(o.HideWeeklyPeriods) {
		toSerialize["hideWeeklyPeriods"] = o.HideWeeklyPeriods
	}
	if !IsNil(o.HtmlPushAnalyticsUrl) {
		toSerialize["htmlPushAnalyticsUrl"] = o.HtmlPushAnalyticsUrl
	}
	toSerialize["ignoreAnalyticsApprovalYearThreshold"] = o.IgnoreAnalyticsApprovalYearThreshold
	if !IsNil(o.IncludeZeroValuesInAnalytics) {
		toSerialize["includeZeroValuesInAnalytics"] = o.IncludeZeroValuesInAnalytics
	}
	toSerialize["jobsCleanupAfterMinutes"] = o.JobsCleanupAfterMinutes
	toSerialize["jobsLogDebugBelowSeconds"] = o.JobsLogDebugBelowSeconds
	toSerialize["jobsMaxCronDelayHours"] = o.JobsMaxCronDelayHours
	toSerialize["jobsRescheduleAfterMinutes"] = o.JobsRescheduleAfterMinutes
	if !IsNil(o.LastCompleteDataSetRegistrationSyncSuccess) {
		toSerialize["lastCompleteDataSetRegistrationSyncSuccess"] = o.LastCompleteDataSetRegistrationSyncSuccess
	}
	if !IsNil(o.LastMetaDataSyncSuccess) {
		toSerialize["lastMetaDataSyncSuccess"] = o.LastMetaDataSyncSuccess
	}
	if !IsNil(o.LastMonitoringRun) {
		toSerialize["lastMonitoringRun"] = o.LastMonitoringRun
	}
	if !IsNil(o.LastSuccessfulAnalyticsTablesRuntime) {
		toSerialize["lastSuccessfulAnalyticsTablesRuntime"] = o.LastSuccessfulAnalyticsTablesRuntime
	}
	if !IsNil(o.LastSuccessfulAnalyticsTablesUpdate) {
		toSerialize["lastSuccessfulAnalyticsTablesUpdate"] = o.LastSuccessfulAnalyticsTablesUpdate
	}
	if !IsNil(o.LastSuccessfulDataStatistics) {
		toSerialize["lastSuccessfulDataStatistics"] = o.LastSuccessfulDataStatistics
	}
	if !IsNil(o.LastSuccessfulDataSynch) {
		toSerialize["lastSuccessfulDataSynch"] = o.LastSuccessfulDataSynch
	}
	if !IsNil(o.LastSuccessfulEventsDataSynch) {
		toSerialize["lastSuccessfulEventsDataSynch"] = o.LastSuccessfulEventsDataSynch
	}
	if !IsNil(o.LastSuccessfulLatestAnalyticsPartitionRuntime) {
		toSerialize["lastSuccessfulLatestAnalyticsPartitionRuntime"] = o.LastSuccessfulLatestAnalyticsPartitionRuntime
	}
	if !IsNil(o.LastSuccessfulLatestAnalyticsPartitionUpdate) {
		toSerialize["lastSuccessfulLatestAnalyticsPartitionUpdate"] = o.LastSuccessfulLatestAnalyticsPartitionUpdate
	}
	if !IsNil(o.LastSuccessfulMonitoring) {
		toSerialize["lastSuccessfulMonitoring"] = o.LastSuccessfulMonitoring
	}
	if !IsNil(o.LastSuccessfulResourceTablesUpdate) {
		toSerialize["lastSuccessfulResourceTablesUpdate"] = o.LastSuccessfulResourceTablesUpdate
	}
	if !IsNil(o.LastSuccessfulScheduledDataSetNotifications) {
		toSerialize["lastSuccessfulScheduledDataSetNotifications"] = o.LastSuccessfulScheduledDataSetNotifications
	}
	if !IsNil(o.LastSuccessfulScheduledProgramNotifications) {
		toSerialize["lastSuccessfulScheduledProgramNotifications"] = o.LastSuccessfulScheduledProgramNotifications
	}
	if !IsNil(o.LastSuccessfulSystemMonitoringPush) {
		toSerialize["lastSuccessfulSystemMonitoringPush"] = o.LastSuccessfulSystemMonitoringPush
	}
	if !IsNil(o.LockMultipleFailedLogins) {
		toSerialize["lockMultipleFailedLogins"] = o.LockMultipleFailedLogins
	}
	toSerialize["loginPageLayout"] = o.LoginPageLayout
	if !IsNil(o.LoginPageTemplate) {
		toSerialize["loginPageTemplate"] = o.LoginPageTemplate
	}
	if !IsNil(o.LoginPopup) {
		toSerialize["loginPopup"] = o.LoginPopup
	}
	toSerialize["maxPasswordLength"] = o.MaxPasswordLength
	if !IsNil(o.MetaDataRepoUrl) {
		toSerialize["metaDataRepoUrl"] = o.MetaDataRepoUrl
	}
	if !IsNil(o.MetadataFailedVersion) {
		toSerialize["metadataFailedVersion"] = o.MetadataFailedVersion
	}
	if !IsNil(o.MetadataLastFailedTime) {
		toSerialize["metadataLastFailedTime"] = o.MetadataLastFailedTime
	}
	toSerialize["minPasswordLength"] = o.MinPasswordLength
	if !IsNil(o.MultiOrganisationUnitForms) {
		toSerialize["multiOrganisationUnitForms"] = o.MultiOrganisationUnitForms
	}
	if !IsNil(o.NextAnalyticsTableUpdate) {
		toSerialize["nextAnalyticsTableUpdate"] = o.NextAnalyticsTableUpdate
	}
	toSerialize["notifierCleanAfterIdleTime"] = o.NotifierCleanAfterIdleTime
	if !IsNil(o.NotifierGistOverview) {
		toSerialize["notifierGistOverview"] = o.NotifierGistOverview
	}
	toSerialize["notifierLogLevel"] = o.NotifierLogLevel
	toSerialize["notifierMaxAgeDays"] = o.NotifierMaxAgeDays
	toSerialize["notifierMaxJobsPerType"] = o.NotifierMaxJobsPerType
	toSerialize["notifierMaxMessagesPerJob"] = o.NotifierMaxMessagesPerJob
	toSerialize["parallelJobsInAnalyticsTableExport"] = o.ParallelJobsInAnalyticsTableExport
	if !IsNil(o.PhoneNumberAreaCode) {
		toSerialize["phoneNumberAreaCode"] = o.PhoneNumberAreaCode
	}
	if !IsNil(o.RecaptchaSecret) {
		toSerialize["recaptchaSecret"] = o.RecaptchaSecret
	}
	if !IsNil(o.RecaptchaSite) {
		toSerialize["recaptchaSite"] = o.RecaptchaSite
	}
	if !IsNil(o.RemoteInstancePassword) {
		toSerialize["remoteInstancePassword"] = o.RemoteInstancePassword
	}
	if !IsNil(o.RemoteInstanceUrl) {
		toSerialize["remoteInstanceUrl"] = o.RemoteInstanceUrl
	}
	if !IsNil(o.RemoteInstanceUsername) {
		toSerialize["remoteInstanceUsername"] = o.RemoteInstanceUsername
	}
	if !IsNil(o.RemoteMetadataVersion) {
		toSerialize["remoteMetadataVersion"] = o.RemoteMetadataVersion
	}
	if !IsNil(o.RequireAddToView) {
		toSerialize["requireAddToView"] = o.RequireAddToView
	}
	if !IsNil(o.RespectMetaDataStartEndDatesInAnalyticsTableExport) {
		toSerialize["respectMetaDataStartEndDatesInAnalyticsTableExport"] = o.RespectMetaDataStartEndDatesInAnalyticsTableExport
	}
	if !IsNil(o.RuleEngineAssignOverwrite) {
		toSerialize["ruleEngineAssignOverwrite"] = o.RuleEngineAssignOverwrite
	}
	if !IsNil(o.SelfRegistrationNoRecaptcha) {
		toSerialize["selfRegistrationNoRecaptcha"] = o.SelfRegistrationNoRecaptcha
	}
	if !IsNil(o.SkipDataTypeValidationInAnalyticsTableExport) {
		toSerialize["skipDataTypeValidationInAnalyticsTableExport"] = o.SkipDataTypeValidationInAnalyticsTableExport
	}
	toSerialize["smsMaxLength"] = o.SmsMaxLength
	toSerialize["sqlViewMaxLimit"] = o.SqlViewMaxLimit
	if !IsNil(o.StartModule) {
		toSerialize["startModule"] = o.StartModule
	}
	if !IsNil(o.StartModuleEnableLightweight) {
		toSerialize["startModuleEnableLightweight"] = o.StartModuleEnableLightweight
	}
	if !IsNil(o.StopMetadataSync) {
		toSerialize["stopMetadataSync"] = o.StopMetadataSync
	}
	if !IsNil(o.Style) {
		toSerialize["style"] = o.Style
	}
	toSerialize["syncDelayBetweenRemoteServerAvailabilityCheckAttempts"] = o.SyncDelayBetweenRemoteServerAvailabilityCheckAttempts
	toSerialize["syncMaxAttempts"] = o.SyncMaxAttempts
	toSerialize["syncMaxRemoteServerAvailabilityCheckAttempts"] = o.SyncMaxRemoteServerAvailabilityCheckAttempts
	if !IsNil(o.SyncSkipSyncForDataChangedBefore) {
		toSerialize["syncSkipSyncForDataChangedBefore"] = o.SyncSkipSyncForDataChangedBefore
	}
	if !IsNil(o.SystemMetadataVersion) {
		toSerialize["systemMetadataVersion"] = o.SystemMetadataVersion
	}
	if !IsNil(o.SystemNotificationsEmail) {
		toSerialize["systemNotificationsEmail"] = o.SystemNotificationsEmail
	}
	toSerialize["trackedEntityMaxLimit"] = o.TrackedEntityMaxLimit
	if !IsNil(o.TrackerDashboardLayout) {
		toSerialize["trackerDashboardLayout"] = o.TrackerDashboardLayout
	}
	if !IsNil(o.UiLocale) {
		toSerialize["uiLocale"] = o.UiLocale
	}
	if !IsNil(o.UseCustomLogoBanner) {
		toSerialize["useCustomLogoBanner"] = o.UseCustomLogoBanner
	}
	if !IsNil(o.UseCustomLogoFront) {
		toSerialize["useCustomLogoFront"] = o.UseCustomLogoFront
	}
	if !IsNil(o.UseExperimentalAnalyticsQueryEngine) {
		toSerialize["useExperimentalAnalyticsQueryEngine"] = o.UseExperimentalAnalyticsQueryEngine
	}
	if !IsNil(o.VersionEnabled) {
		toSerialize["versionEnabled"] = o.VersionEnabled
	}
	return toSerialize, nil
}

func (o *SystemSettings) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountExpiresInDays",
		"analysisDigitGroupSeparator",
		"analysisDisplayProperty",
		"analysisRelativePeriod",
		"analyticsCacheProgressiveTtlFactor",
		"analyticsCacheTtlMode",
		"analyticsFinancialYearStart",
		"analyticsMaxLimit",
		"analyticsPeriodYearsOffset",
		"cacheStrategy",
		"cacheability",
		"credentialsExpires",
		"credentialsExpiresReminderInDays",
		"databaseServerCpus",
		"emailPort",
		"factorOfDeviation",
		"fileResourceRetentionStrategy",
		"ignoreAnalyticsApprovalYearThreshold",
		"jobsCleanupAfterMinutes",
		"jobsLogDebugBelowSeconds",
		"jobsMaxCronDelayHours",
		"jobsRescheduleAfterMinutes",
		"loginPageLayout",
		"maxPasswordLength",
		"minPasswordLength",
		"notifierCleanAfterIdleTime",
		"notifierLogLevel",
		"notifierMaxAgeDays",
		"notifierMaxJobsPerType",
		"notifierMaxMessagesPerJob",
		"parallelJobsInAnalyticsTableExport",
		"smsMaxLength",
		"sqlViewMaxLimit",
		"syncDelayBetweenRemoteServerAvailabilityCheckAttempts",
		"syncMaxAttempts",
		"syncMaxRemoteServerAvailabilityCheckAttempts",
		"trackedEntityMaxLimit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSystemSettings := _SystemSettings{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSystemSettings)

	if err != nil {
		return err
	}

	*o = SystemSettings(varSystemSettings)

	return err
}

type NullableSystemSettings struct {
	value *SystemSettings
	isSet bool
}

func (v NullableSystemSettings) Get() *SystemSettings {
	return v.value
}

func (v *NullableSystemSettings) Set(val *SystemSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemSettings(val *SystemSettings) *NullableSystemSettings {
	return &NullableSystemSettings{value: val, isSet: true}
}

func (v NullableSystemSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
