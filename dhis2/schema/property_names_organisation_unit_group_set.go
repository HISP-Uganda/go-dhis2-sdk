/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesOrganisationUnitGroupSet the model 'PropertyNamesOrganisationUnitGroupSet'
type PropertyNamesOrganisationUnitGroupSet string

// List of PropertyNames_OrganisationUnitGroupSet
const (
	PROPERTYNAMESORGANISATIONUNITGROUPSET_ACCESS                            PropertyNamesOrganisationUnitGroupSet = "access"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_AGGREGATION_TYPE                  PropertyNamesOrganisationUnitGroupSet = "aggregationType"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_ALL_ITEMS                         PropertyNamesOrganisationUnitGroupSet = "allItems"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_ATTRIBUTE_VALUES                  PropertyNamesOrganisationUnitGroupSet = "attributeValues"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_CODE                              PropertyNamesOrganisationUnitGroupSet = "code"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_COMPULSORY                        PropertyNamesOrganisationUnitGroupSet = "compulsory"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_CREATED                           PropertyNamesOrganisationUnitGroupSet = "created"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_CREATED_BY                        PropertyNamesOrganisationUnitGroupSet = "createdBy"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_DATA_DIMENSION                    PropertyNamesOrganisationUnitGroupSet = "dataDimension"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_DATA_DIMENSION_TYPE               PropertyNamesOrganisationUnitGroupSet = "dataDimensionType"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_DESCRIPTION                       PropertyNamesOrganisationUnitGroupSet = "description"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_DIMENSION                         PropertyNamesOrganisationUnitGroupSet = "dimension"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_DIMENSION_ITEM_KEYWORDS           PropertyNamesOrganisationUnitGroupSet = "dimensionItemKeywords"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_DISPLAY_DESCRIPTION               PropertyNamesOrganisationUnitGroupSet = "displayDescription"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_DISPLAY_FORM_NAME                 PropertyNamesOrganisationUnitGroupSet = "displayFormName"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_DISPLAY_NAME                      PropertyNamesOrganisationUnitGroupSet = "displayName"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_DISPLAY_SHORT_NAME                PropertyNamesOrganisationUnitGroupSet = "displayShortName"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_EXTERNAL_ACCESS                   PropertyNamesOrganisationUnitGroupSet = "externalAccess"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_FAVORITE                          PropertyNamesOrganisationUnitGroupSet = "favorite"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_FAVORITES                         PropertyNamesOrganisationUnitGroupSet = "favorites"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_FILTER                            PropertyNamesOrganisationUnitGroupSet = "filter"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_FORM_NAME                         PropertyNamesOrganisationUnitGroupSet = "formName"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_HREF                              PropertyNamesOrganisationUnitGroupSet = "href"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_ID                                PropertyNamesOrganisationUnitGroupSet = "id"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_INCLUDE_SUBHIERARCHY_IN_ANALYTICS PropertyNamesOrganisationUnitGroupSet = "includeSubhierarchyInAnalytics"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_ITEMS                             PropertyNamesOrganisationUnitGroupSet = "items"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_LAST_UPDATED                      PropertyNamesOrganisationUnitGroupSet = "lastUpdated"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_LAST_UPDATED_BY                   PropertyNamesOrganisationUnitGroupSet = "lastUpdatedBy"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_LEGEND_SET                        PropertyNamesOrganisationUnitGroupSet = "legendSet"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_NAME                              PropertyNamesOrganisationUnitGroupSet = "name"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_OPTION_SET                        PropertyNamesOrganisationUnitGroupSet = "optionSet"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_ORGANISATION_UNIT_GROUPS          PropertyNamesOrganisationUnitGroupSet = "organisationUnitGroups"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_PROGRAM_STAGE                     PropertyNamesOrganisationUnitGroupSet = "programStage"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_PUBLIC_ACCESS                     PropertyNamesOrganisationUnitGroupSet = "publicAccess"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_REPETITION                        PropertyNamesOrganisationUnitGroupSet = "repetition"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_SHARING                           PropertyNamesOrganisationUnitGroupSet = "sharing"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_SHORT_NAME                        PropertyNamesOrganisationUnitGroupSet = "shortName"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_TRANSLATIONS                      PropertyNamesOrganisationUnitGroupSet = "translations"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_USER                              PropertyNamesOrganisationUnitGroupSet = "user"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_USER_ACCESSES                     PropertyNamesOrganisationUnitGroupSet = "userAccesses"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_USER_GROUP_ACCESSES               PropertyNamesOrganisationUnitGroupSet = "userGroupAccesses"
	PROPERTYNAMESORGANISATIONUNITGROUPSET_VALUE_TYPE                        PropertyNamesOrganisationUnitGroupSet = "valueType"
)

// All allowed values of PropertyNamesOrganisationUnitGroupSet enum
var AllowedPropertyNamesOrganisationUnitGroupSetEnumValues = []PropertyNamesOrganisationUnitGroupSet{
	"access",
	"aggregationType",
	"allItems",
	"attributeValues",
	"code",
	"compulsory",
	"created",
	"createdBy",
	"dataDimension",
	"dataDimensionType",
	"description",
	"dimension",
	"dimensionItemKeywords",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"externalAccess",
	"favorite",
	"favorites",
	"filter",
	"formName",
	"href",
	"id",
	"includeSubhierarchyInAnalytics",
	"items",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"name",
	"optionSet",
	"organisationUnitGroups",
	"programStage",
	"publicAccess",
	"repetition",
	"sharing",
	"shortName",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"valueType",
}

func (v *PropertyNamesOrganisationUnitGroupSet) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesOrganisationUnitGroupSet(value)
	for _, existing := range AllowedPropertyNamesOrganisationUnitGroupSetEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesOrganisationUnitGroupSet", value)
}

// NewPropertyNamesOrganisationUnitGroupSetFromValue returns a pointer to a valid PropertyNamesOrganisationUnitGroupSet
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesOrganisationUnitGroupSetFromValue(v string) (*PropertyNamesOrganisationUnitGroupSet, error) {
	ev := PropertyNamesOrganisationUnitGroupSet(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesOrganisationUnitGroupSet: valid values are %v", v, AllowedPropertyNamesOrganisationUnitGroupSetEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesOrganisationUnitGroupSet) IsValid() bool {
	for _, existing := range AllowedPropertyNamesOrganisationUnitGroupSetEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_OrganisationUnitGroupSet value
func (v PropertyNamesOrganisationUnitGroupSet) Ptr() *PropertyNamesOrganisationUnitGroupSet {
	return &v
}

type NullablePropertyNamesOrganisationUnitGroupSet struct {
	value *PropertyNamesOrganisationUnitGroupSet
	isSet bool
}

func (v NullablePropertyNamesOrganisationUnitGroupSet) Get() *PropertyNamesOrganisationUnitGroupSet {
	return v.value
}

func (v *NullablePropertyNamesOrganisationUnitGroupSet) Set(val *PropertyNamesOrganisationUnitGroupSet) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesOrganisationUnitGroupSet) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesOrganisationUnitGroupSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesOrganisationUnitGroupSet(val *PropertyNamesOrganisationUnitGroupSet) *NullablePropertyNamesOrganisationUnitGroupSet {
	return &NullablePropertyNamesOrganisationUnitGroupSet{value: val, isSet: true}
}

func (v NullablePropertyNamesOrganisationUnitGroupSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesOrganisationUnitGroupSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
