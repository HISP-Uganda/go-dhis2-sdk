/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response - struct for ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response
type ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response struct {
	ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfProgramSection                                                 *[]ProgramSection
}

// ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response
func ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response(v *ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response {
	return ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response{
		ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []ProgramSectionAsProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []ProgramSection wrapped in ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfProgramSectionAsProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response(v *[]ProgramSection) ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response {
	return ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfProgramSection: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfProgramSection
	err = newStrictDecoder(data).Decode(&dst.ArrayOfProgramSection)
	if err == nil {
		jsonArrayOfProgramSection, _ := json.Marshal(dst.ArrayOfProgramSection)
		if string(jsonArrayOfProgramSection) == "{}" { // empty struct
			dst.ArrayOfProgramSection = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfProgramSection = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfProgramSection = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfProgramSection != nil {
		return json.Marshal(&src.ArrayOfProgramSection)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.ProgramSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfProgramSection != nil {
		return obj.ArrayOfProgramSection
	}

	// all schemas are nil
	return nil
}

type NullableProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) Get() *ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response(val *ProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) *NullableProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramSectionGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
