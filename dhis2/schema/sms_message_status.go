/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// SmsMessageStatus the model 'SmsMessageStatus'
type SmsMessageStatus string

// List of SmsMessageStatus
const (
	SMSMESSAGESTATUS_INCOMING   SmsMessageStatus = "INCOMING"
	SMSMESSAGESTATUS_PROCESSING SmsMessageStatus = "PROCESSING"
	SMSMESSAGESTATUS_UNHANDLED  SmsMessageStatus = "UNHANDLED"
	SMSMESSAGESTATUS_FAILED     SmsMessageStatus = "FAILED"
	SMSMESSAGESTATUS_PROCESSED  SmsMessageStatus = "PROCESSED"
	SMSMESSAGESTATUS_SENT       SmsMessageStatus = "SENT"
)

// All allowed values of SmsMessageStatus enum
var AllowedSmsMessageStatusEnumValues = []SmsMessageStatus{
	"INCOMING",
	"PROCESSING",
	"UNHANDLED",
	"FAILED",
	"PROCESSED",
	"SENT",
}

func (v *SmsMessageStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SmsMessageStatus(value)
	for _, existing := range AllowedSmsMessageStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SmsMessageStatus", value)
}

// NewSmsMessageStatusFromValue returns a pointer to a valid SmsMessageStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSmsMessageStatusFromValue(v string) (*SmsMessageStatus, error) {
	ev := SmsMessageStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SmsMessageStatus: valid values are %v", v, AllowedSmsMessageStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SmsMessageStatus) IsValid() bool {
	for _, existing := range AllowedSmsMessageStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SmsMessageStatus value
func (v SmsMessageStatus) Ptr() *SmsMessageStatus {
	return &v
}

type NullableSmsMessageStatus struct {
	value *SmsMessageStatus
	isSet bool
}

func (v NullableSmsMessageStatus) Get() *SmsMessageStatus {
	return v.value
}

func (v *NullableSmsMessageStatus) Set(val *SmsMessageStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsMessageStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsMessageStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsMessageStatus(val *SmsMessageStatus) *NullableSmsMessageStatus {
	return &NullableSmsMessageStatus{value: val, isSet: true}
}

func (v NullableSmsMessageStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsMessageStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
