/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the OrgUnitInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgUnitInfo{}

// OrgUnitInfo struct for OrgUnitInfo
type OrgUnitInfo struct {
	Address       *string     `json:"address,omitempty"`
	ClosedDate    *time.Time  `json:"closedDate,omitempty"`
	Code          *string     `json:"code,omitempty"`
	Comment       *string     `json:"comment,omitempty"`
	ContactPerson *string     `json:"contactPerson,omitempty"`
	Description   *string     `json:"description,omitempty"`
	Email         *string     `json:"email,omitempty"`
	FeatureType   FeatureType `json:"featureType"`
	Id            *string     `json:"id,omitempty"`
	ImageId       *string     `json:"imageId,omitempty"`
	Latitude      *float64    `json:"latitude,omitempty"`
	Level         *int32      `json:"level,omitempty"`
	LevelName     *string     `json:"levelName,omitempty"`
	Longitude     *float64    `json:"longitude,omitempty"`
	Name          *string     `json:"name,omitempty"`
	OpeningDate   *time.Time  `json:"openingDate,omitempty"`
	ParentName    *string     `json:"parentName,omitempty"`
	PhoneNumber   *string     `json:"phoneNumber,omitempty"`
	ShortName     *string     `json:"shortName,omitempty"`
	Url           *string     `json:"url,omitempty"`
}

type _OrgUnitInfo OrgUnitInfo

// NewOrgUnitInfo instantiates a new OrgUnitInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgUnitInfo(featureType FeatureType) *OrgUnitInfo {
	this := OrgUnitInfo{}
	this.FeatureType = featureType
	return &this
}

// NewOrgUnitInfoWithDefaults instantiates a new OrgUnitInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgUnitInfoWithDefaults() *OrgUnitInfo {
	this := OrgUnitInfo{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *OrgUnitInfo) SetAddress(v string) {
	o.Address = &v
}

// GetClosedDate returns the ClosedDate field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetClosedDate() time.Time {
	if o == nil || IsNil(o.ClosedDate) {
		var ret time.Time
		return ret
	}
	return *o.ClosedDate
}

// GetClosedDateOk returns a tuple with the ClosedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetClosedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClosedDate) {
		return nil, false
	}
	return o.ClosedDate, true
}

// HasClosedDate returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasClosedDate() bool {
	if o != nil && !IsNil(o.ClosedDate) {
		return true
	}

	return false
}

// SetClosedDate gets a reference to the given time.Time and assigns it to the ClosedDate field.
func (o *OrgUnitInfo) SetClosedDate(v time.Time) {
	o.ClosedDate = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *OrgUnitInfo) SetCode(v string) {
	o.Code = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *OrgUnitInfo) SetComment(v string) {
	o.Comment = &v
}

// GetContactPerson returns the ContactPerson field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetContactPerson() string {
	if o == nil || IsNil(o.ContactPerson) {
		var ret string
		return ret
	}
	return *o.ContactPerson
}

// GetContactPersonOk returns a tuple with the ContactPerson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetContactPersonOk() (*string, bool) {
	if o == nil || IsNil(o.ContactPerson) {
		return nil, false
	}
	return o.ContactPerson, true
}

// HasContactPerson returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasContactPerson() bool {
	if o != nil && !IsNil(o.ContactPerson) {
		return true
	}

	return false
}

// SetContactPerson gets a reference to the given string and assigns it to the ContactPerson field.
func (o *OrgUnitInfo) SetContactPerson(v string) {
	o.ContactPerson = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrgUnitInfo) SetDescription(v string) {
	o.Description = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrgUnitInfo) SetEmail(v string) {
	o.Email = &v
}

// GetFeatureType returns the FeatureType field value
func (o *OrgUnitInfo) GetFeatureType() FeatureType {
	if o == nil {
		var ret FeatureType
		return ret
	}

	return o.FeatureType
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetFeatureTypeOk() (*FeatureType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureType, true
}

// SetFeatureType sets field value
func (o *OrgUnitInfo) SetFeatureType(v FeatureType) {
	o.FeatureType = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrgUnitInfo) SetId(v string) {
	o.Id = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetImageId() string {
	if o == nil || IsNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *OrgUnitInfo) SetImageId(v string) {
	o.ImageId = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetLatitude() float64 {
	if o == nil || IsNil(o.Latitude) {
		var ret float64
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetLatitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float64 and assigns it to the Latitude field.
func (o *OrgUnitInfo) SetLatitude(v float64) {
	o.Latitude = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetLevel() int32 {
	if o == nil || IsNil(o.Level) {
		var ret int32
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given int32 and assigns it to the Level field.
func (o *OrgUnitInfo) SetLevel(v int32) {
	o.Level = &v
}

// GetLevelName returns the LevelName field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetLevelName() string {
	if o == nil || IsNil(o.LevelName) {
		var ret string
		return ret
	}
	return *o.LevelName
}

// GetLevelNameOk returns a tuple with the LevelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetLevelNameOk() (*string, bool) {
	if o == nil || IsNil(o.LevelName) {
		return nil, false
	}
	return o.LevelName, true
}

// HasLevelName returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasLevelName() bool {
	if o != nil && !IsNil(o.LevelName) {
		return true
	}

	return false
}

// SetLevelName gets a reference to the given string and assigns it to the LevelName field.
func (o *OrgUnitInfo) SetLevelName(v string) {
	o.LevelName = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetLongitude() float64 {
	if o == nil || IsNil(o.Longitude) {
		var ret float64
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetLongitudeOk() (*float64, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float64 and assigns it to the Longitude field.
func (o *OrgUnitInfo) SetLongitude(v float64) {
	o.Longitude = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrgUnitInfo) SetName(v string) {
	o.Name = &v
}

// GetOpeningDate returns the OpeningDate field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetOpeningDate() time.Time {
	if o == nil || IsNil(o.OpeningDate) {
		var ret time.Time
		return ret
	}
	return *o.OpeningDate
}

// GetOpeningDateOk returns a tuple with the OpeningDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetOpeningDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OpeningDate) {
		return nil, false
	}
	return o.OpeningDate, true
}

// HasOpeningDate returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasOpeningDate() bool {
	if o != nil && !IsNil(o.OpeningDate) {
		return true
	}

	return false
}

// SetOpeningDate gets a reference to the given time.Time and assigns it to the OpeningDate field.
func (o *OrgUnitInfo) SetOpeningDate(v time.Time) {
	o.OpeningDate = &v
}

// GetParentName returns the ParentName field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetParentName() string {
	if o == nil || IsNil(o.ParentName) {
		var ret string
		return ret
	}
	return *o.ParentName
}

// GetParentNameOk returns a tuple with the ParentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetParentNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentName) {
		return nil, false
	}
	return o.ParentName, true
}

// HasParentName returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasParentName() bool {
	if o != nil && !IsNil(o.ParentName) {
		return true
	}

	return false
}

// SetParentName gets a reference to the given string and assigns it to the ParentName field.
func (o *OrgUnitInfo) SetParentName(v string) {
	o.ParentName = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *OrgUnitInfo) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *OrgUnitInfo) SetShortName(v string) {
	o.ShortName = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OrgUnitInfo) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitInfo) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OrgUnitInfo) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OrgUnitInfo) SetUrl(v string) {
	o.Url = &v
}

func (o OrgUnitInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgUnitInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.ClosedDate) {
		toSerialize["closedDate"] = o.ClosedDate
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ContactPerson) {
		toSerialize["contactPerson"] = o.ContactPerson
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	toSerialize["featureType"] = o.FeatureType
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ImageId) {
		toSerialize["imageId"] = o.ImageId
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.LevelName) {
		toSerialize["levelName"] = o.LevelName
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OpeningDate) {
		toSerialize["openingDate"] = o.OpeningDate
	}
	if !IsNil(o.ParentName) {
		toSerialize["parentName"] = o.ParentName
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

func (o *OrgUnitInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"featureType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrgUnitInfo := _OrgUnitInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrgUnitInfo)

	if err != nil {
		return err
	}

	*o = OrgUnitInfo(varOrgUnitInfo)

	return err
}

type NullableOrgUnitInfo struct {
	value *OrgUnitInfo
	isSet bool
}

func (v NullableOrgUnitInfo) Get() *OrgUnitInfo {
	return v.value
}

func (v *NullableOrgUnitInfo) Set(val *OrgUnitInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgUnitInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgUnitInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgUnitInfo(val *OrgUnitInfo) *NullableOrgUnitInfo {
	return &NullableOrgUnitInfo{value: val, isSet: true}
}

func (v NullableOrgUnitInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgUnitInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
