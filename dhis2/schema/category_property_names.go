/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// CategoryPropertyNames the model 'CategoryPropertyNames'
type CategoryPropertyNames string

// List of CategoryPropertyNames
const (
	CATEGORYPROPERTYNAMES_ACCESS                  CategoryPropertyNames = "access"
	CATEGORYPROPERTYNAMES_AGGREGATION_TYPE        CategoryPropertyNames = "aggregationType"
	CATEGORYPROPERTYNAMES_ALL_ITEMS               CategoryPropertyNames = "allItems"
	CATEGORYPROPERTYNAMES_ATTRIBUTE_VALUES        CategoryPropertyNames = "attributeValues"
	CATEGORYPROPERTYNAMES_CATEGORY_COMBOS         CategoryPropertyNames = "categoryCombos"
	CATEGORYPROPERTYNAMES_CATEGORY_OPTIONS        CategoryPropertyNames = "categoryOptions"
	CATEGORYPROPERTYNAMES_CODE                    CategoryPropertyNames = "code"
	CATEGORYPROPERTYNAMES_CREATED                 CategoryPropertyNames = "created"
	CATEGORYPROPERTYNAMES_CREATED_BY              CategoryPropertyNames = "createdBy"
	CATEGORYPROPERTYNAMES_DATA_DIMENSION          CategoryPropertyNames = "dataDimension"
	CATEGORYPROPERTYNAMES_DATA_DIMENSION_TYPE     CategoryPropertyNames = "dataDimensionType"
	CATEGORYPROPERTYNAMES_DESCRIPTION             CategoryPropertyNames = "description"
	CATEGORYPROPERTYNAMES_DIMENSION               CategoryPropertyNames = "dimension"
	CATEGORYPROPERTYNAMES_DIMENSION_ITEM_KEYWORDS CategoryPropertyNames = "dimensionItemKeywords"
	CATEGORYPROPERTYNAMES_DISPLAY_DESCRIPTION     CategoryPropertyNames = "displayDescription"
	CATEGORYPROPERTYNAMES_DISPLAY_FORM_NAME       CategoryPropertyNames = "displayFormName"
	CATEGORYPROPERTYNAMES_DISPLAY_NAME            CategoryPropertyNames = "displayName"
	CATEGORYPROPERTYNAMES_DISPLAY_SHORT_NAME      CategoryPropertyNames = "displayShortName"
	CATEGORYPROPERTYNAMES_FAVORITE                CategoryPropertyNames = "favorite"
	CATEGORYPROPERTYNAMES_FAVORITES               CategoryPropertyNames = "favorites"
	CATEGORYPROPERTYNAMES_FILTER                  CategoryPropertyNames = "filter"
	CATEGORYPROPERTYNAMES_FORM_NAME               CategoryPropertyNames = "formName"
	CATEGORYPROPERTYNAMES_HREF                    CategoryPropertyNames = "href"
	CATEGORYPROPERTYNAMES_ID                      CategoryPropertyNames = "id"
	CATEGORYPROPERTYNAMES_ITEMS                   CategoryPropertyNames = "items"
	CATEGORYPROPERTYNAMES_LAST_UPDATED            CategoryPropertyNames = "lastUpdated"
	CATEGORYPROPERTYNAMES_LAST_UPDATED_BY         CategoryPropertyNames = "lastUpdatedBy"
	CATEGORYPROPERTYNAMES_LEGEND_SET              CategoryPropertyNames = "legendSet"
	CATEGORYPROPERTYNAMES_NAME                    CategoryPropertyNames = "name"
	CATEGORYPROPERTYNAMES_OPTION_SET              CategoryPropertyNames = "optionSet"
	CATEGORYPROPERTYNAMES_PROGRAM                 CategoryPropertyNames = "program"
	CATEGORYPROPERTYNAMES_PROGRAM_STAGE           CategoryPropertyNames = "programStage"
	CATEGORYPROPERTYNAMES_REPETITION              CategoryPropertyNames = "repetition"
	CATEGORYPROPERTYNAMES_SHARING                 CategoryPropertyNames = "sharing"
	CATEGORYPROPERTYNAMES_SHORT_NAME              CategoryPropertyNames = "shortName"
	CATEGORYPROPERTYNAMES_TRANSLATIONS            CategoryPropertyNames = "translations"
	CATEGORYPROPERTYNAMES_VALUE_TYPE              CategoryPropertyNames = "valueType"
)

// All allowed values of CategoryPropertyNames enum
var AllowedCategoryPropertyNamesEnumValues = []CategoryPropertyNames{
	"access",
	"aggregationType",
	"allItems",
	"attributeValues",
	"categoryCombos",
	"categoryOptions",
	"code",
	"created",
	"createdBy",
	"dataDimension",
	"dataDimensionType",
	"description",
	"dimension",
	"dimensionItemKeywords",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"favorite",
	"favorites",
	"filter",
	"formName",
	"href",
	"id",
	"items",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"name",
	"optionSet",
	"program",
	"programStage",
	"repetition",
	"sharing",
	"shortName",
	"translations",
	"valueType",
}

func (v *CategoryPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CategoryPropertyNames(value)
	for _, existing := range AllowedCategoryPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CategoryPropertyNames", value)
}

// NewCategoryPropertyNamesFromValue returns a pointer to a valid CategoryPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCategoryPropertyNamesFromValue(v string) (*CategoryPropertyNames, error) {
	ev := CategoryPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CategoryPropertyNames: valid values are %v", v, AllowedCategoryPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CategoryPropertyNames) IsValid() bool {
	for _, existing := range AllowedCategoryPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CategoryPropertyNames value
func (v CategoryPropertyNames) Ptr() *CategoryPropertyNames {
	return &v
}

type NullableCategoryPropertyNames struct {
	value *CategoryPropertyNames
	isSet bool
}

func (v NullableCategoryPropertyNames) Get() *CategoryPropertyNames {
	return v.value
}

func (v *NullableCategoryPropertyNames) Set(val *CategoryPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryPropertyNames(val *CategoryPropertyNames) *NullableCategoryPropertyNames {
	return &NullableCategoryPropertyNames{value: val, isSet: true}
}

func (v NullableCategoryPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
