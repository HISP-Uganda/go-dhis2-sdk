/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the JobConfigurationWebMessageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobConfigurationWebMessageResponse{}

// JobConfigurationWebMessageResponse struct for JobConfigurationWebMessageResponse
type JobConfigurationWebMessageResponse struct {
	Created                  *time.Time             `json:"created,omitempty"`
	Id                       *string                `json:"id,omitempty"`
	JobParameters            map[string]interface{} `json:"jobParameters,omitempty"`
	JobStatus                JobStatus              `json:"jobStatus"`
	JobType                  JobType                `json:"jobType"`
	Name                     *string                `json:"name,omitempty"`
	RelativeNotifierEndpoint *string                `json:"relativeNotifierEndpoint,omitempty"`
	ResponseType             *string                `json:"responseType,omitempty"`
}

type _JobConfigurationWebMessageResponse JobConfigurationWebMessageResponse

// NewJobConfigurationWebMessageResponse instantiates a new JobConfigurationWebMessageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobConfigurationWebMessageResponse(jobStatus JobStatus, jobType JobType) *JobConfigurationWebMessageResponse {
	this := JobConfigurationWebMessageResponse{}
	this.JobStatus = jobStatus
	this.JobType = jobType
	return &this
}

// NewJobConfigurationWebMessageResponseWithDefaults instantiates a new JobConfigurationWebMessageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobConfigurationWebMessageResponseWithDefaults() *JobConfigurationWebMessageResponse {
	this := JobConfigurationWebMessageResponse{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *JobConfigurationWebMessageResponse) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobConfigurationWebMessageResponse) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *JobConfigurationWebMessageResponse) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *JobConfigurationWebMessageResponse) SetCreated(v time.Time) {
	o.Created = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JobConfigurationWebMessageResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobConfigurationWebMessageResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JobConfigurationWebMessageResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *JobConfigurationWebMessageResponse) SetId(v string) {
	o.Id = &v
}

// GetJobParameters returns the JobParameters field value if set, zero value otherwise.
func (o *JobConfigurationWebMessageResponse) GetJobParameters() map[string]interface{} {
	if o == nil || IsNil(o.JobParameters) {
		var ret map[string]interface{}
		return ret
	}
	return o.JobParameters
}

// GetJobParametersOk returns a tuple with the JobParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobConfigurationWebMessageResponse) GetJobParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.JobParameters) {
		return map[string]interface{}{}, false
	}
	return o.JobParameters, true
}

// HasJobParameters returns a boolean if a field has been set.
func (o *JobConfigurationWebMessageResponse) HasJobParameters() bool {
	if o != nil && !IsNil(o.JobParameters) {
		return true
	}

	return false
}

// SetJobParameters gets a reference to the given map[string]interface{} and assigns it to the JobParameters field.
func (o *JobConfigurationWebMessageResponse) SetJobParameters(v map[string]interface{}) {
	o.JobParameters = v
}

// GetJobStatus returns the JobStatus field value
func (o *JobConfigurationWebMessageResponse) GetJobStatus() JobStatus {
	if o == nil {
		var ret JobStatus
		return ret
	}

	return o.JobStatus
}

// GetJobStatusOk returns a tuple with the JobStatus field value
// and a boolean to check if the value has been set.
func (o *JobConfigurationWebMessageResponse) GetJobStatusOk() (*JobStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobStatus, true
}

// SetJobStatus sets field value
func (o *JobConfigurationWebMessageResponse) SetJobStatus(v JobStatus) {
	o.JobStatus = v
}

// GetJobType returns the JobType field value
func (o *JobConfigurationWebMessageResponse) GetJobType() JobType {
	if o == nil {
		var ret JobType
		return ret
	}

	return o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value
// and a boolean to check if the value has been set.
func (o *JobConfigurationWebMessageResponse) GetJobTypeOk() (*JobType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobType, true
}

// SetJobType sets field value
func (o *JobConfigurationWebMessageResponse) SetJobType(v JobType) {
	o.JobType = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *JobConfigurationWebMessageResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobConfigurationWebMessageResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *JobConfigurationWebMessageResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *JobConfigurationWebMessageResponse) SetName(v string) {
	o.Name = &v
}

// GetRelativeNotifierEndpoint returns the RelativeNotifierEndpoint field value if set, zero value otherwise.
func (o *JobConfigurationWebMessageResponse) GetRelativeNotifierEndpoint() string {
	if o == nil || IsNil(o.RelativeNotifierEndpoint) {
		var ret string
		return ret
	}
	return *o.RelativeNotifierEndpoint
}

// GetRelativeNotifierEndpointOk returns a tuple with the RelativeNotifierEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobConfigurationWebMessageResponse) GetRelativeNotifierEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.RelativeNotifierEndpoint) {
		return nil, false
	}
	return o.RelativeNotifierEndpoint, true
}

// HasRelativeNotifierEndpoint returns a boolean if a field has been set.
func (o *JobConfigurationWebMessageResponse) HasRelativeNotifierEndpoint() bool {
	if o != nil && !IsNil(o.RelativeNotifierEndpoint) {
		return true
	}

	return false
}

// SetRelativeNotifierEndpoint gets a reference to the given string and assigns it to the RelativeNotifierEndpoint field.
func (o *JobConfigurationWebMessageResponse) SetRelativeNotifierEndpoint(v string) {
	o.RelativeNotifierEndpoint = &v
}

// GetResponseType returns the ResponseType field value if set, zero value otherwise.
func (o *JobConfigurationWebMessageResponse) GetResponseType() string {
	if o == nil || IsNil(o.ResponseType) {
		var ret string
		return ret
	}
	return *o.ResponseType
}

// GetResponseTypeOk returns a tuple with the ResponseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobConfigurationWebMessageResponse) GetResponseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseType) {
		return nil, false
	}
	return o.ResponseType, true
}

// HasResponseType returns a boolean if a field has been set.
func (o *JobConfigurationWebMessageResponse) HasResponseType() bool {
	if o != nil && !IsNil(o.ResponseType) {
		return true
	}

	return false
}

// SetResponseType gets a reference to the given string and assigns it to the ResponseType field.
func (o *JobConfigurationWebMessageResponse) SetResponseType(v string) {
	o.ResponseType = &v
}

func (o JobConfigurationWebMessageResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobConfigurationWebMessageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.JobParameters) {
		toSerialize["jobParameters"] = o.JobParameters
	}
	toSerialize["jobStatus"] = o.JobStatus
	toSerialize["jobType"] = o.JobType
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RelativeNotifierEndpoint) {
		toSerialize["relativeNotifierEndpoint"] = o.RelativeNotifierEndpoint
	}
	if !IsNil(o.ResponseType) {
		toSerialize["responseType"] = o.ResponseType
	}
	return toSerialize, nil
}

func (o *JobConfigurationWebMessageResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"jobStatus",
		"jobType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJobConfigurationWebMessageResponse := _JobConfigurationWebMessageResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varJobConfigurationWebMessageResponse)

	if err != nil {
		return err
	}

	*o = JobConfigurationWebMessageResponse(varJobConfigurationWebMessageResponse)

	return err
}

type NullableJobConfigurationWebMessageResponse struct {
	value *JobConfigurationWebMessageResponse
	isSet bool
}

func (v NullableJobConfigurationWebMessageResponse) Get() *JobConfigurationWebMessageResponse {
	return v.value
}

func (v *NullableJobConfigurationWebMessageResponse) Set(val *JobConfigurationWebMessageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableJobConfigurationWebMessageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableJobConfigurationWebMessageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobConfigurationWebMessageResponse(val *JobConfigurationWebMessageResponse) *NullableJobConfigurationWebMessageResponse {
	return &NullableJobConfigurationWebMessageResponse{value: val, isSet: true}
}

func (v NullableJobConfigurationWebMessageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobConfigurationWebMessageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
