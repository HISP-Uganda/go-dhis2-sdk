/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// MessageConversationPriority the model 'MessageConversationPriority'
type MessageConversationPriority string

// List of MessageConversationPriority
const (
	MESSAGECONVERSATIONPRIORITY_NONE   MessageConversationPriority = "NONE"
	MESSAGECONVERSATIONPRIORITY_LOW    MessageConversationPriority = "LOW"
	MESSAGECONVERSATIONPRIORITY_MEDIUM MessageConversationPriority = "MEDIUM"
	MESSAGECONVERSATIONPRIORITY_HIGH   MessageConversationPriority = "HIGH"
)

// All allowed values of MessageConversationPriority enum
var AllowedMessageConversationPriorityEnumValues = []MessageConversationPriority{
	"NONE",
	"LOW",
	"MEDIUM",
	"HIGH",
}

func (v *MessageConversationPriority) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MessageConversationPriority(value)
	for _, existing := range AllowedMessageConversationPriorityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MessageConversationPriority", value)
}

// NewMessageConversationPriorityFromValue returns a pointer to a valid MessageConversationPriority
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMessageConversationPriorityFromValue(v string) (*MessageConversationPriority, error) {
	ev := MessageConversationPriority(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MessageConversationPriority: valid values are %v", v, AllowedMessageConversationPriorityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MessageConversationPriority) IsValid() bool {
	for _, existing := range AllowedMessageConversationPriorityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MessageConversationPriority value
func (v MessageConversationPriority) Ptr() *MessageConversationPriority {
	return &v
}

type NullableMessageConversationPriority struct {
	value *MessageConversationPriority
	isSet bool
}

func (v NullableMessageConversationPriority) Get() *MessageConversationPriority {
	return v.value
}

func (v *NullableMessageConversationPriority) Set(val *MessageConversationPriority) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageConversationPriority) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageConversationPriority) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageConversationPriority(val *MessageConversationPriority) *NullableMessageConversationPriority {
	return &NullableMessageConversationPriority{value: val, isSet: true}
}

func (v NullableMessageConversationPriority) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageConversationPriority) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
