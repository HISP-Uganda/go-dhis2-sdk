/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// SectionGetObjectListGistGetObjectListGistAsCsv200Response - struct for SectionGetObjectListGistGetObjectListGistAsCsv200Response
type SectionGetObjectListGistGetObjectListGistAsCsv200Response struct {
	SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfSection                                                 *[]Section
}

// SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsSectionGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in SectionGetObjectListGistGetObjectListGistAsCsv200Response
func SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsSectionGetObjectListGistGetObjectListGistAsCsv200Response(v *SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) SectionGetObjectListGistGetObjectListGistAsCsv200Response {
	return SectionGetObjectListGistGetObjectListGistAsCsv200Response{
		SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []SectionAsSectionGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []Section wrapped in SectionGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfSectionAsSectionGetObjectListGistGetObjectListGistAsCsv200Response(v *[]Section) SectionGetObjectListGistGetObjectListGistAsCsv200Response {
	return SectionGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfSection: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *SectionGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonSectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfSection
	err = newStrictDecoder(data).Decode(&dst.ArrayOfSection)
	if err == nil {
		jsonArrayOfSection, _ := json.Marshal(dst.ArrayOfSection)
		if string(jsonArrayOfSection) == "{}" { // empty struct
			dst.ArrayOfSection = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfSection = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfSection = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SectionGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SectionGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SectionGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfSection != nil {
		return json.Marshal(&src.ArrayOfSection)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SectionGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.SectionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfSection != nil {
		return obj.ArrayOfSection
	}

	// all schemas are nil
	return nil
}

type NullableSectionGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *SectionGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableSectionGetObjectListGistGetObjectListGistAsCsv200Response) Get() *SectionGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableSectionGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *SectionGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSectionGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSectionGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSectionGetObjectListGistGetObjectListGistAsCsv200Response(val *SectionGetObjectListGistGetObjectListGistAsCsv200Response) *NullableSectionGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableSectionGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableSectionGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSectionGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
