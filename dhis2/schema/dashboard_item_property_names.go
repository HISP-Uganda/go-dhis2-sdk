/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// DashboardItemPropertyNames the model 'DashboardItemPropertyNames'
type DashboardItemPropertyNames string

// List of DashboardItemPropertyNames
const (
	DASHBOARDITEMPROPERTYNAMES_ACCESS                    DashboardItemPropertyNames = "access"
	DASHBOARDITEMPROPERTYNAMES_APP_KEY                   DashboardItemPropertyNames = "appKey"
	DASHBOARDITEMPROPERTYNAMES_ATTRIBUTE_VALUES          DashboardItemPropertyNames = "attributeValues"
	DASHBOARDITEMPROPERTYNAMES_CODE                      DashboardItemPropertyNames = "code"
	DASHBOARDITEMPROPERTYNAMES_CONTENT_COUNT             DashboardItemPropertyNames = "contentCount"
	DASHBOARDITEMPROPERTYNAMES_CREATED                   DashboardItemPropertyNames = "created"
	DASHBOARDITEMPROPERTYNAMES_CREATED_BY                DashboardItemPropertyNames = "createdBy"
	DASHBOARDITEMPROPERTYNAMES_DISPLAY_NAME              DashboardItemPropertyNames = "displayName"
	DASHBOARDITEMPROPERTYNAMES_EVENT_CHART               DashboardItemPropertyNames = "eventChart"
	DASHBOARDITEMPROPERTYNAMES_EVENT_REPORT              DashboardItemPropertyNames = "eventReport"
	DASHBOARDITEMPROPERTYNAMES_EVENT_VISUALIZATION       DashboardItemPropertyNames = "eventVisualization"
	DASHBOARDITEMPROPERTYNAMES_FAVORITE                  DashboardItemPropertyNames = "favorite"
	DASHBOARDITEMPROPERTYNAMES_FAVORITES                 DashboardItemPropertyNames = "favorites"
	DASHBOARDITEMPROPERTYNAMES_HEIGHT                    DashboardItemPropertyNames = "height"
	DASHBOARDITEMPROPERTYNAMES_HREF                      DashboardItemPropertyNames = "href"
	DASHBOARDITEMPROPERTYNAMES_ID                        DashboardItemPropertyNames = "id"
	DASHBOARDITEMPROPERTYNAMES_INTERPRETATION_COUNT      DashboardItemPropertyNames = "interpretationCount"
	DASHBOARDITEMPROPERTYNAMES_INTERPRETATION_LIKE_COUNT DashboardItemPropertyNames = "interpretationLikeCount"
	DASHBOARDITEMPROPERTYNAMES_LAST_UPDATED              DashboardItemPropertyNames = "lastUpdated"
	DASHBOARDITEMPROPERTYNAMES_LAST_UPDATED_BY           DashboardItemPropertyNames = "lastUpdatedBy"
	DASHBOARDITEMPROPERTYNAMES_MAP                       DashboardItemPropertyNames = "map"
	DASHBOARDITEMPROPERTYNAMES_MESSAGES                  DashboardItemPropertyNames = "messages"
	DASHBOARDITEMPROPERTYNAMES_NAME                      DashboardItemPropertyNames = "name"
	DASHBOARDITEMPROPERTYNAMES_REPORTS                   DashboardItemPropertyNames = "reports"
	DASHBOARDITEMPROPERTYNAMES_RESOURCES                 DashboardItemPropertyNames = "resources"
	DASHBOARDITEMPROPERTYNAMES_SHAPE                     DashboardItemPropertyNames = "shape"
	DASHBOARDITEMPROPERTYNAMES_SHARING                   DashboardItemPropertyNames = "sharing"
	DASHBOARDITEMPROPERTYNAMES_TEXT                      DashboardItemPropertyNames = "text"
	DASHBOARDITEMPROPERTYNAMES_TRANSLATIONS              DashboardItemPropertyNames = "translations"
	DASHBOARDITEMPROPERTYNAMES_TYPE                      DashboardItemPropertyNames = "type"
	DASHBOARDITEMPROPERTYNAMES_USERS                     DashboardItemPropertyNames = "users"
	DASHBOARDITEMPROPERTYNAMES_VISUALIZATION             DashboardItemPropertyNames = "visualization"
	DASHBOARDITEMPROPERTYNAMES_WIDTH                     DashboardItemPropertyNames = "width"
	DASHBOARDITEMPROPERTYNAMES_X                         DashboardItemPropertyNames = "x"
	DASHBOARDITEMPROPERTYNAMES_Y                         DashboardItemPropertyNames = "y"
)

// All allowed values of DashboardItemPropertyNames enum
var AllowedDashboardItemPropertyNamesEnumValues = []DashboardItemPropertyNames{
	"access",
	"appKey",
	"attributeValues",
	"code",
	"contentCount",
	"created",
	"createdBy",
	"displayName",
	"eventChart",
	"eventReport",
	"eventVisualization",
	"favorite",
	"favorites",
	"height",
	"href",
	"id",
	"interpretationCount",
	"interpretationLikeCount",
	"lastUpdated",
	"lastUpdatedBy",
	"map",
	"messages",
	"name",
	"reports",
	"resources",
	"shape",
	"sharing",
	"text",
	"translations",
	"type",
	"users",
	"visualization",
	"width",
	"x",
	"y",
}

func (v *DashboardItemPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DashboardItemPropertyNames(value)
	for _, existing := range AllowedDashboardItemPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DashboardItemPropertyNames", value)
}

// NewDashboardItemPropertyNamesFromValue returns a pointer to a valid DashboardItemPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDashboardItemPropertyNamesFromValue(v string) (*DashboardItemPropertyNames, error) {
	ev := DashboardItemPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DashboardItemPropertyNames: valid values are %v", v, AllowedDashboardItemPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DashboardItemPropertyNames) IsValid() bool {
	for _, existing := range AllowedDashboardItemPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DashboardItemPropertyNames value
func (v DashboardItemPropertyNames) Ptr() *DashboardItemPropertyNames {
	return &v
}

type NullableDashboardItemPropertyNames struct {
	value *DashboardItemPropertyNames
	isSet bool
}

func (v NullableDashboardItemPropertyNames) Get() *DashboardItemPropertyNames {
	return v.value
}

func (v *NullableDashboardItemPropertyNames) Set(val *DashboardItemPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardItemPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardItemPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardItemPropertyNames(val *DashboardItemPropertyNames) *NullableDashboardItemPropertyNames {
	return &NullableDashboardItemPropertyNames{value: val, isSet: true}
}

func (v NullableDashboardItemPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardItemPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
