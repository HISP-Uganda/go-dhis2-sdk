/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesProgramStage the model 'PropertyNamesProgramStage'
type PropertyNamesProgramStage string

// List of PropertyNames_ProgramStage
const (
	PROPERTYNAMESPROGRAMSTAGE_ACCESS                       PropertyNamesProgramStage = "access"
	PROPERTYNAMESPROGRAMSTAGE_ALLOW_GENERATE_NEXT_VISIT    PropertyNamesProgramStage = "allowGenerateNextVisit"
	PROPERTYNAMESPROGRAMSTAGE_ATTRIBUTE_VALUES             PropertyNamesProgramStage = "attributeValues"
	PROPERTYNAMESPROGRAMSTAGE_AUTO_GENERATE_EVENT          PropertyNamesProgramStage = "autoGenerateEvent"
	PROPERTYNAMESPROGRAMSTAGE_BLOCK_ENTRY_FORM             PropertyNamesProgramStage = "blockEntryForm"
	PROPERTYNAMESPROGRAMSTAGE_CODE                         PropertyNamesProgramStage = "code"
	PROPERTYNAMESPROGRAMSTAGE_CREATED                      PropertyNamesProgramStage = "created"
	PROPERTYNAMESPROGRAMSTAGE_CREATED_BY                   PropertyNamesProgramStage = "createdBy"
	PROPERTYNAMESPROGRAMSTAGE_DATA_ENTRY_FORM              PropertyNamesProgramStage = "dataEntryForm"
	PROPERTYNAMESPROGRAMSTAGE_DESCRIPTION                  PropertyNamesProgramStage = "description"
	PROPERTYNAMESPROGRAMSTAGE_DISPLAY_DESCRIPTION          PropertyNamesProgramStage = "displayDescription"
	PROPERTYNAMESPROGRAMSTAGE_DISPLAY_DUE_DATE_LABEL       PropertyNamesProgramStage = "displayDueDateLabel"
	PROPERTYNAMESPROGRAMSTAGE_DISPLAY_EXECUTION_DATE_LABEL PropertyNamesProgramStage = "displayExecutionDateLabel"
	PROPERTYNAMESPROGRAMSTAGE_DISPLAY_FORM_NAME            PropertyNamesProgramStage = "displayFormName"
	PROPERTYNAMESPROGRAMSTAGE_DISPLAY_GENERATE_EVENT_BOX   PropertyNamesProgramStage = "displayGenerateEventBox"
	PROPERTYNAMESPROGRAMSTAGE_DISPLAY_NAME                 PropertyNamesProgramStage = "displayName"
	PROPERTYNAMESPROGRAMSTAGE_DISPLAY_SHORT_NAME           PropertyNamesProgramStage = "displayShortName"
	PROPERTYNAMESPROGRAMSTAGE_DUE_DATE_LABEL               PropertyNamesProgramStage = "dueDateLabel"
	PROPERTYNAMESPROGRAMSTAGE_ENABLE_USER_ASSIGNMENT       PropertyNamesProgramStage = "enableUserAssignment"
	PROPERTYNAMESPROGRAMSTAGE_EXECUTION_DATE_LABEL         PropertyNamesProgramStage = "executionDateLabel"
	PROPERTYNAMESPROGRAMSTAGE_EXTERNAL_ACCESS              PropertyNamesProgramStage = "externalAccess"
	PROPERTYNAMESPROGRAMSTAGE_FAVORITE                     PropertyNamesProgramStage = "favorite"
	PROPERTYNAMESPROGRAMSTAGE_FAVORITES                    PropertyNamesProgramStage = "favorites"
	PROPERTYNAMESPROGRAMSTAGE_FEATURE_TYPE                 PropertyNamesProgramStage = "featureType"
	PROPERTYNAMESPROGRAMSTAGE_FORM_NAME                    PropertyNamesProgramStage = "formName"
	PROPERTYNAMESPROGRAMSTAGE_FORM_TYPE                    PropertyNamesProgramStage = "formType"
	PROPERTYNAMESPROGRAMSTAGE_GENERATED_BY_ENROLLMENT_DATE PropertyNamesProgramStage = "generatedByEnrollmentDate"
	PROPERTYNAMESPROGRAMSTAGE_HIDE_DUE_DATE                PropertyNamesProgramStage = "hideDueDate"
	PROPERTYNAMESPROGRAMSTAGE_HREF                         PropertyNamesProgramStage = "href"
	PROPERTYNAMESPROGRAMSTAGE_ID                           PropertyNamesProgramStage = "id"
	PROPERTYNAMESPROGRAMSTAGE_LAST_UPDATED                 PropertyNamesProgramStage = "lastUpdated"
	PROPERTYNAMESPROGRAMSTAGE_LAST_UPDATED_BY              PropertyNamesProgramStage = "lastUpdatedBy"
	PROPERTYNAMESPROGRAMSTAGE_MIN_DAYS_FROM_START          PropertyNamesProgramStage = "minDaysFromStart"
	PROPERTYNAMESPROGRAMSTAGE_NAME                         PropertyNamesProgramStage = "name"
	PROPERTYNAMESPROGRAMSTAGE_NEXT_SCHEDULE_DATE           PropertyNamesProgramStage = "nextScheduleDate"
	PROPERTYNAMESPROGRAMSTAGE_NOTIFICATION_TEMPLATES       PropertyNamesProgramStage = "notificationTemplates"
	PROPERTYNAMESPROGRAMSTAGE_OPEN_AFTER_ENROLLMENT        PropertyNamesProgramStage = "openAfterEnrollment"
	PROPERTYNAMESPROGRAMSTAGE_PERIOD_TYPE                  PropertyNamesProgramStage = "periodType"
	PROPERTYNAMESPROGRAMSTAGE_PRE_GENERATE_UID             PropertyNamesProgramStage = "preGenerateUID"
	PROPERTYNAMESPROGRAMSTAGE_PROGRAM                      PropertyNamesProgramStage = "program"
	PROPERTYNAMESPROGRAMSTAGE_PROGRAM_STAGE_DATA_ELEMENTS  PropertyNamesProgramStage = "programStageDataElements"
	PROPERTYNAMESPROGRAMSTAGE_PROGRAM_STAGE_SECTIONS       PropertyNamesProgramStage = "programStageSections"
	PROPERTYNAMESPROGRAMSTAGE_PUBLIC_ACCESS                PropertyNamesProgramStage = "publicAccess"
	PROPERTYNAMESPROGRAMSTAGE_REFERRAL                     PropertyNamesProgramStage = "referral"
	PROPERTYNAMESPROGRAMSTAGE_REMIND_COMPLETED             PropertyNamesProgramStage = "remindCompleted"
	PROPERTYNAMESPROGRAMSTAGE_REPEATABLE                   PropertyNamesProgramStage = "repeatable"
	PROPERTYNAMESPROGRAMSTAGE_REPORT_DATE_TO_USE           PropertyNamesProgramStage = "reportDateToUse"
	PROPERTYNAMESPROGRAMSTAGE_SHARING                      PropertyNamesProgramStage = "sharing"
	PROPERTYNAMESPROGRAMSTAGE_SHORT_NAME                   PropertyNamesProgramStage = "shortName"
	PROPERTYNAMESPROGRAMSTAGE_SORT_ORDER                   PropertyNamesProgramStage = "sortOrder"
	PROPERTYNAMESPROGRAMSTAGE_STANDARD_INTERVAL            PropertyNamesProgramStage = "standardInterval"
	PROPERTYNAMESPROGRAMSTAGE_STYLE                        PropertyNamesProgramStage = "style"
	PROPERTYNAMESPROGRAMSTAGE_TRANSLATIONS                 PropertyNamesProgramStage = "translations"
	PROPERTYNAMESPROGRAMSTAGE_USER                         PropertyNamesProgramStage = "user"
	PROPERTYNAMESPROGRAMSTAGE_USER_ACCESSES                PropertyNamesProgramStage = "userAccesses"
	PROPERTYNAMESPROGRAMSTAGE_USER_GROUP_ACCESSES          PropertyNamesProgramStage = "userGroupAccesses"
	PROPERTYNAMESPROGRAMSTAGE_VALIDATION_STRATEGY          PropertyNamesProgramStage = "validationStrategy"
)

// All allowed values of PropertyNamesProgramStage enum
var AllowedPropertyNamesProgramStageEnumValues = []PropertyNamesProgramStage{
	"access",
	"allowGenerateNextVisit",
	"attributeValues",
	"autoGenerateEvent",
	"blockEntryForm",
	"code",
	"created",
	"createdBy",
	"dataEntryForm",
	"description",
	"displayDescription",
	"displayDueDateLabel",
	"displayExecutionDateLabel",
	"displayFormName",
	"displayGenerateEventBox",
	"displayName",
	"displayShortName",
	"dueDateLabel",
	"enableUserAssignment",
	"executionDateLabel",
	"externalAccess",
	"favorite",
	"favorites",
	"featureType",
	"formName",
	"formType",
	"generatedByEnrollmentDate",
	"hideDueDate",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"minDaysFromStart",
	"name",
	"nextScheduleDate",
	"notificationTemplates",
	"openAfterEnrollment",
	"periodType",
	"preGenerateUID",
	"program",
	"programStageDataElements",
	"programStageSections",
	"publicAccess",
	"referral",
	"remindCompleted",
	"repeatable",
	"reportDateToUse",
	"sharing",
	"shortName",
	"sortOrder",
	"standardInterval",
	"style",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"validationStrategy",
}

func (v *PropertyNamesProgramStage) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesProgramStage(value)
	for _, existing := range AllowedPropertyNamesProgramStageEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesProgramStage", value)
}

// NewPropertyNamesProgramStageFromValue returns a pointer to a valid PropertyNamesProgramStage
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesProgramStageFromValue(v string) (*PropertyNamesProgramStage, error) {
	ev := PropertyNamesProgramStage(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesProgramStage: valid values are %v", v, AllowedPropertyNamesProgramStageEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesProgramStage) IsValid() bool {
	for _, existing := range AllowedPropertyNamesProgramStageEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_ProgramStage value
func (v PropertyNamesProgramStage) Ptr() *PropertyNamesProgramStage {
	return &v
}

type NullablePropertyNamesProgramStage struct {
	value *PropertyNamesProgramStage
	isSet bool
}

func (v NullablePropertyNamesProgramStage) Get() *PropertyNamesProgramStage {
	return v.value
}

func (v *NullablePropertyNamesProgramStage) Set(val *PropertyNamesProgramStage) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesProgramStage) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesProgramStage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesProgramStage(val *PropertyNamesProgramStage) *NullablePropertyNamesProgramStage {
	return &NullablePropertyNamesProgramStage{value: val, isSet: true}
}

func (v NullablePropertyNamesProgramStage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesProgramStage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
