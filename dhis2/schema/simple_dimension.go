/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SimpleDimension type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimpleDimension{}

// SimpleDimension struct for SimpleDimension
type SimpleDimension struct {
	Dimension    string             `json:"dimension"`
	Parent       DimensionAttribute `json:"parent"`
	Program      *string            `json:"program,omitempty"`
	ProgramStage *string            `json:"programStage,omitempty"`
	Values       []string           `json:"values"`
}

type _SimpleDimension SimpleDimension

// NewSimpleDimension instantiates a new SimpleDimension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimpleDimension(dimension string, parent DimensionAttribute, values []string) *SimpleDimension {
	this := SimpleDimension{}
	this.Dimension = dimension
	this.Parent = parent
	this.Values = values
	return &this
}

// NewSimpleDimensionWithDefaults instantiates a new SimpleDimension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimpleDimensionWithDefaults() *SimpleDimension {
	this := SimpleDimension{}
	return &this
}

// GetDimension returns the Dimension field value
func (o *SimpleDimension) GetDimension() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dimension
}

// GetDimensionOk returns a tuple with the Dimension field value
// and a boolean to check if the value has been set.
func (o *SimpleDimension) GetDimensionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dimension, true
}

// SetDimension sets field value
func (o *SimpleDimension) SetDimension(v string) {
	o.Dimension = v
}

// GetParent returns the Parent field value
func (o *SimpleDimension) GetParent() DimensionAttribute {
	if o == nil {
		var ret DimensionAttribute
		return ret
	}

	return o.Parent
}

// GetParentOk returns a tuple with the Parent field value
// and a boolean to check if the value has been set.
func (o *SimpleDimension) GetParentOk() (*DimensionAttribute, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parent, true
}

// SetParent sets field value
func (o *SimpleDimension) SetParent(v DimensionAttribute) {
	o.Parent = v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *SimpleDimension) GetProgram() string {
	if o == nil || IsNil(o.Program) {
		var ret string
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleDimension) GetProgramOk() (*string, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *SimpleDimension) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given string and assigns it to the Program field.
func (o *SimpleDimension) SetProgram(v string) {
	o.Program = &v
}

// GetProgramStage returns the ProgramStage field value if set, zero value otherwise.
func (o *SimpleDimension) GetProgramStage() string {
	if o == nil || IsNil(o.ProgramStage) {
		var ret string
		return ret
	}
	return *o.ProgramStage
}

// GetProgramStageOk returns a tuple with the ProgramStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleDimension) GetProgramStageOk() (*string, bool) {
	if o == nil || IsNil(o.ProgramStage) {
		return nil, false
	}
	return o.ProgramStage, true
}

// HasProgramStage returns a boolean if a field has been set.
func (o *SimpleDimension) HasProgramStage() bool {
	if o != nil && !IsNil(o.ProgramStage) {
		return true
	}

	return false
}

// SetProgramStage gets a reference to the given string and assigns it to the ProgramStage field.
func (o *SimpleDimension) SetProgramStage(v string) {
	o.ProgramStage = &v
}

// GetValues returns the Values field value
func (o *SimpleDimension) GetValues() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *SimpleDimension) GetValuesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *SimpleDimension) SetValues(v []string) {
	o.Values = v
}

func (o SimpleDimension) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimpleDimension) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dimension"] = o.Dimension
	toSerialize["parent"] = o.Parent
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.ProgramStage) {
		toSerialize["programStage"] = o.ProgramStage
	}
	toSerialize["values"] = o.Values
	return toSerialize, nil
}

func (o *SimpleDimension) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dimension",
		"parent",
		"values",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSimpleDimension := _SimpleDimension{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSimpleDimension)

	if err != nil {
		return err
	}

	*o = SimpleDimension(varSimpleDimension)

	return err
}

type NullableSimpleDimension struct {
	value *SimpleDimension
	isSet bool
}

func (v NullableSimpleDimension) Get() *SimpleDimension {
	return v.value
}

func (v *NullableSimpleDimension) Set(val *SimpleDimension) {
	v.value = val
	v.isSet = true
}

func (v NullableSimpleDimension) IsSet() bool {
	return v.isSet
}

func (v *NullableSimpleDimension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimpleDimension(val *SimpleDimension) *NullableSimpleDimension {
	return &NullableSimpleDimension{value: val, isSet: true}
}

func (v NullableSimpleDimension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimpleDimension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
