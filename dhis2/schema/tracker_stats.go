/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TrackerStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackerStats{}

// TrackerStats struct for TrackerStats
type TrackerStats struct {
	Created int32 `json:"created"`
	Deleted int32 `json:"deleted"`
	Ignored int32 `json:"ignored"`
	Total   int32 `json:"total"`
	Updated int32 `json:"updated"`
}

type _TrackerStats TrackerStats

// NewTrackerStats instantiates a new TrackerStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackerStats(created int32, deleted int32, ignored int32, total int32, updated int32) *TrackerStats {
	this := TrackerStats{}
	this.Created = created
	this.Deleted = deleted
	this.Ignored = ignored
	this.Total = total
	this.Updated = updated
	return &this
}

// NewTrackerStatsWithDefaults instantiates a new TrackerStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackerStatsWithDefaults() *TrackerStats {
	this := TrackerStats{}
	return &this
}

// GetCreated returns the Created field value
func (o *TrackerStats) GetCreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *TrackerStats) GetCreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *TrackerStats) SetCreated(v int32) {
	o.Created = v
}

// GetDeleted returns the Deleted field value
func (o *TrackerStats) GetDeleted() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *TrackerStats) GetDeletedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *TrackerStats) SetDeleted(v int32) {
	o.Deleted = v
}

// GetIgnored returns the Ignored field value
func (o *TrackerStats) GetIgnored() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Ignored
}

// GetIgnoredOk returns a tuple with the Ignored field value
// and a boolean to check if the value has been set.
func (o *TrackerStats) GetIgnoredOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ignored, true
}

// SetIgnored sets field value
func (o *TrackerStats) SetIgnored(v int32) {
	o.Ignored = v
}

// GetTotal returns the Total field value
func (o *TrackerStats) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *TrackerStats) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *TrackerStats) SetTotal(v int32) {
	o.Total = v
}

// GetUpdated returns the Updated field value
func (o *TrackerStats) GetUpdated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *TrackerStats) GetUpdatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *TrackerStats) SetUpdated(v int32) {
	o.Updated = v
}

func (o TrackerStats) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackerStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	toSerialize["deleted"] = o.Deleted
	toSerialize["ignored"] = o.Ignored
	toSerialize["total"] = o.Total
	toSerialize["updated"] = o.Updated
	return toSerialize, nil
}

func (o *TrackerStats) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created",
		"deleted",
		"ignored",
		"total",
		"updated",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTrackerStats := _TrackerStats{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTrackerStats)

	if err != nil {
		return err
	}

	*o = TrackerStats(varTrackerStats)

	return err
}

type NullableTrackerStats struct {
	value *TrackerStats
	isSet bool
}

func (v NullableTrackerStats) Get() *TrackerStats {
	return v.value
}

func (v *NullableTrackerStats) Set(val *TrackerStats) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackerStats) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackerStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackerStats(val *TrackerStats) *NullableTrackerStats {
	return &NullableTrackerStats{value: val, isSet: true}
}

func (v NullableTrackerStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackerStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
