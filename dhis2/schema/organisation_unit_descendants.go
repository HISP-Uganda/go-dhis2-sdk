/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// OrganisationUnitDescendants the model 'OrganisationUnitDescendants'
type OrganisationUnitDescendants string

// List of OrganisationUnitDescendants
const (
	ORGANISATIONUNITDESCENDANTS_SELECTED    OrganisationUnitDescendants = "SELECTED"
	ORGANISATIONUNITDESCENDANTS_DESCENDANTS OrganisationUnitDescendants = "DESCENDANTS"
)

// All allowed values of OrganisationUnitDescendants enum
var AllowedOrganisationUnitDescendantsEnumValues = []OrganisationUnitDescendants{
	"SELECTED",
	"DESCENDANTS",
}

func (v *OrganisationUnitDescendants) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrganisationUnitDescendants(value)
	for _, existing := range AllowedOrganisationUnitDescendantsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrganisationUnitDescendants", value)
}

// NewOrganisationUnitDescendantsFromValue returns a pointer to a valid OrganisationUnitDescendants
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrganisationUnitDescendantsFromValue(v string) (*OrganisationUnitDescendants, error) {
	ev := OrganisationUnitDescendants(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrganisationUnitDescendants: valid values are %v", v, AllowedOrganisationUnitDescendantsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrganisationUnitDescendants) IsValid() bool {
	for _, existing := range AllowedOrganisationUnitDescendantsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrganisationUnitDescendants value
func (v OrganisationUnitDescendants) Ptr() *OrganisationUnitDescendants {
	return &v
}

type NullableOrganisationUnitDescendants struct {
	value *OrganisationUnitDescendants
	isSet bool
}

func (v NullableOrganisationUnitDescendants) Get() *OrganisationUnitDescendants {
	return v.value
}

func (v *NullableOrganisationUnitDescendants) Set(val *OrganisationUnitDescendants) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganisationUnitDescendants) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganisationUnitDescendants) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganisationUnitDescendants(val *OrganisationUnitDescendants) *NullableOrganisationUnitDescendants {
	return &NullableOrganisationUnitDescendants{value: val, isSet: true}
}

func (v NullableOrganisationUnitDescendants) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganisationUnitDescendants) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
