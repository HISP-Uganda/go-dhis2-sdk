/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// MessageConversationPropertyNames the model 'MessageConversationPropertyNames'
type MessageConversationPropertyNames string

// List of MessageConversationPropertyNames
const (
	MESSAGECONVERSATIONPROPERTYNAMES_ACCESS                MessageConversationPropertyNames = "access"
	MESSAGECONVERSATIONPROPERTYNAMES_ASSIGNEE              MessageConversationPropertyNames = "assignee"
	MESSAGECONVERSATIONPROPERTYNAMES_ATTRIBUTE_VALUES      MessageConversationPropertyNames = "attributeValues"
	MESSAGECONVERSATIONPROPERTYNAMES_CODE                  MessageConversationPropertyNames = "code"
	MESSAGECONVERSATIONPROPERTYNAMES_CREATED               MessageConversationPropertyNames = "created"
	MESSAGECONVERSATIONPROPERTYNAMES_CREATED_BY            MessageConversationPropertyNames = "createdBy"
	MESSAGECONVERSATIONPROPERTYNAMES_DISPLAY_NAME          MessageConversationPropertyNames = "displayName"
	MESSAGECONVERSATIONPROPERTYNAMES_EXT_MESSAGE_ID        MessageConversationPropertyNames = "extMessageId"
	MESSAGECONVERSATIONPROPERTYNAMES_FAVORITE              MessageConversationPropertyNames = "favorite"
	MESSAGECONVERSATIONPROPERTYNAMES_FAVORITES             MessageConversationPropertyNames = "favorites"
	MESSAGECONVERSATIONPROPERTYNAMES_FOLLOW_UP             MessageConversationPropertyNames = "followUp"
	MESSAGECONVERSATIONPROPERTYNAMES_HREF                  MessageConversationPropertyNames = "href"
	MESSAGECONVERSATIONPROPERTYNAMES_ID                    MessageConversationPropertyNames = "id"
	MESSAGECONVERSATIONPROPERTYNAMES_LAST_MESSAGE          MessageConversationPropertyNames = "lastMessage"
	MESSAGECONVERSATIONPROPERTYNAMES_LAST_SENDER           MessageConversationPropertyNames = "lastSender"
	MESSAGECONVERSATIONPROPERTYNAMES_LAST_SENDER_FIRSTNAME MessageConversationPropertyNames = "lastSenderFirstname"
	MESSAGECONVERSATIONPROPERTYNAMES_LAST_SENDER_SURNAME   MessageConversationPropertyNames = "lastSenderSurname"
	MESSAGECONVERSATIONPROPERTYNAMES_LAST_UPDATED          MessageConversationPropertyNames = "lastUpdated"
	MESSAGECONVERSATIONPROPERTYNAMES_LAST_UPDATED_BY       MessageConversationPropertyNames = "lastUpdatedBy"
	MESSAGECONVERSATIONPROPERTYNAMES_MESSAGE_COUNT         MessageConversationPropertyNames = "messageCount"
	MESSAGECONVERSATIONPROPERTYNAMES_MESSAGE_TYPE          MessageConversationPropertyNames = "messageType"
	MESSAGECONVERSATIONPROPERTYNAMES_MESSAGES              MessageConversationPropertyNames = "messages"
	MESSAGECONVERSATIONPROPERTYNAMES_PRIORITY              MessageConversationPropertyNames = "priority"
	MESSAGECONVERSATIONPROPERTYNAMES_READ                  MessageConversationPropertyNames = "read"
	MESSAGECONVERSATIONPROPERTYNAMES_SHARING               MessageConversationPropertyNames = "sharing"
	MESSAGECONVERSATIONPROPERTYNAMES_STATUS                MessageConversationPropertyNames = "status"
	MESSAGECONVERSATIONPROPERTYNAMES_SUBJECT               MessageConversationPropertyNames = "subject"
	MESSAGECONVERSATIONPROPERTYNAMES_TRANSLATIONS          MessageConversationPropertyNames = "translations"
	MESSAGECONVERSATIONPROPERTYNAMES_USER_FIRSTNAME        MessageConversationPropertyNames = "userFirstname"
	MESSAGECONVERSATIONPROPERTYNAMES_USER_MESSAGES         MessageConversationPropertyNames = "userMessages"
	MESSAGECONVERSATIONPROPERTYNAMES_USER_SURNAME          MessageConversationPropertyNames = "userSurname"
)

// All allowed values of MessageConversationPropertyNames enum
var AllowedMessageConversationPropertyNamesEnumValues = []MessageConversationPropertyNames{
	"access",
	"assignee",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"displayName",
	"extMessageId",
	"favorite",
	"favorites",
	"followUp",
	"href",
	"id",
	"lastMessage",
	"lastSender",
	"lastSenderFirstname",
	"lastSenderSurname",
	"lastUpdated",
	"lastUpdatedBy",
	"messageCount",
	"messageType",
	"messages",
	"priority",
	"read",
	"sharing",
	"status",
	"subject",
	"translations",
	"userFirstname",
	"userMessages",
	"userSurname",
}

func (v *MessageConversationPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MessageConversationPropertyNames(value)
	for _, existing := range AllowedMessageConversationPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MessageConversationPropertyNames", value)
}

// NewMessageConversationPropertyNamesFromValue returns a pointer to a valid MessageConversationPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMessageConversationPropertyNamesFromValue(v string) (*MessageConversationPropertyNames, error) {
	ev := MessageConversationPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MessageConversationPropertyNames: valid values are %v", v, AllowedMessageConversationPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MessageConversationPropertyNames) IsValid() bool {
	for _, existing := range AllowedMessageConversationPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MessageConversationPropertyNames value
func (v MessageConversationPropertyNames) Ptr() *MessageConversationPropertyNames {
	return &v
}

type NullableMessageConversationPropertyNames struct {
	value *MessageConversationPropertyNames
	isSet bool
}

func (v NullableMessageConversationPropertyNames) Get() *MessageConversationPropertyNames {
	return v.value
}

func (v *NullableMessageConversationPropertyNames) Set(val *MessageConversationPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageConversationPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageConversationPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageConversationPropertyNames(val *MessageConversationPropertyNames) *NullableMessageConversationPropertyNames {
	return &NullableMessageConversationPropertyNames{value: val, isSet: true}
}

func (v NullableMessageConversationPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageConversationPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
