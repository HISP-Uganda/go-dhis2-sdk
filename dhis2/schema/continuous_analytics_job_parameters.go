/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ContinuousAnalyticsJobParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContinuousAnalyticsJobParameters{}

// ContinuousAnalyticsJobParameters struct for ContinuousAnalyticsJobParameters
type ContinuousAnalyticsJobParameters struct {
	FullUpdateHourOfDay *int32               `json:"fullUpdateHourOfDay,omitempty"`
	LastYears           *int32               `json:"lastYears,omitempty"`
	SkipOutliers        *bool                `json:"skipOutliers,omitempty"`
	SkipTableTypes      []AnalyticsTableType `json:"skipTableTypes,omitempty"`
}

// NewContinuousAnalyticsJobParameters instantiates a new ContinuousAnalyticsJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContinuousAnalyticsJobParameters() *ContinuousAnalyticsJobParameters {
	this := ContinuousAnalyticsJobParameters{}
	return &this
}

// NewContinuousAnalyticsJobParametersWithDefaults instantiates a new ContinuousAnalyticsJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContinuousAnalyticsJobParametersWithDefaults() *ContinuousAnalyticsJobParameters {
	this := ContinuousAnalyticsJobParameters{}
	return &this
}

// GetFullUpdateHourOfDay returns the FullUpdateHourOfDay field value if set, zero value otherwise.
func (o *ContinuousAnalyticsJobParameters) GetFullUpdateHourOfDay() int32 {
	if o == nil || IsNil(o.FullUpdateHourOfDay) {
		var ret int32
		return ret
	}
	return *o.FullUpdateHourOfDay
}

// GetFullUpdateHourOfDayOk returns a tuple with the FullUpdateHourOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContinuousAnalyticsJobParameters) GetFullUpdateHourOfDayOk() (*int32, bool) {
	if o == nil || IsNil(o.FullUpdateHourOfDay) {
		return nil, false
	}
	return o.FullUpdateHourOfDay, true
}

// HasFullUpdateHourOfDay returns a boolean if a field has been set.
func (o *ContinuousAnalyticsJobParameters) HasFullUpdateHourOfDay() bool {
	if o != nil && !IsNil(o.FullUpdateHourOfDay) {
		return true
	}

	return false
}

// SetFullUpdateHourOfDay gets a reference to the given int32 and assigns it to the FullUpdateHourOfDay field.
func (o *ContinuousAnalyticsJobParameters) SetFullUpdateHourOfDay(v int32) {
	o.FullUpdateHourOfDay = &v
}

// GetLastYears returns the LastYears field value if set, zero value otherwise.
func (o *ContinuousAnalyticsJobParameters) GetLastYears() int32 {
	if o == nil || IsNil(o.LastYears) {
		var ret int32
		return ret
	}
	return *o.LastYears
}

// GetLastYearsOk returns a tuple with the LastYears field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContinuousAnalyticsJobParameters) GetLastYearsOk() (*int32, bool) {
	if o == nil || IsNil(o.LastYears) {
		return nil, false
	}
	return o.LastYears, true
}

// HasLastYears returns a boolean if a field has been set.
func (o *ContinuousAnalyticsJobParameters) HasLastYears() bool {
	if o != nil && !IsNil(o.LastYears) {
		return true
	}

	return false
}

// SetLastYears gets a reference to the given int32 and assigns it to the LastYears field.
func (o *ContinuousAnalyticsJobParameters) SetLastYears(v int32) {
	o.LastYears = &v
}

// GetSkipOutliers returns the SkipOutliers field value if set, zero value otherwise.
func (o *ContinuousAnalyticsJobParameters) GetSkipOutliers() bool {
	if o == nil || IsNil(o.SkipOutliers) {
		var ret bool
		return ret
	}
	return *o.SkipOutliers
}

// GetSkipOutliersOk returns a tuple with the SkipOutliers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContinuousAnalyticsJobParameters) GetSkipOutliersOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipOutliers) {
		return nil, false
	}
	return o.SkipOutliers, true
}

// HasSkipOutliers returns a boolean if a field has been set.
func (o *ContinuousAnalyticsJobParameters) HasSkipOutliers() bool {
	if o != nil && !IsNil(o.SkipOutliers) {
		return true
	}

	return false
}

// SetSkipOutliers gets a reference to the given bool and assigns it to the SkipOutliers field.
func (o *ContinuousAnalyticsJobParameters) SetSkipOutliers(v bool) {
	o.SkipOutliers = &v
}

// GetSkipTableTypes returns the SkipTableTypes field value if set, zero value otherwise.
func (o *ContinuousAnalyticsJobParameters) GetSkipTableTypes() []AnalyticsTableType {
	if o == nil || IsNil(o.SkipTableTypes) {
		var ret []AnalyticsTableType
		return ret
	}
	return o.SkipTableTypes
}

// GetSkipTableTypesOk returns a tuple with the SkipTableTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContinuousAnalyticsJobParameters) GetSkipTableTypesOk() ([]AnalyticsTableType, bool) {
	if o == nil || IsNil(o.SkipTableTypes) {
		return nil, false
	}
	return o.SkipTableTypes, true
}

// HasSkipTableTypes returns a boolean if a field has been set.
func (o *ContinuousAnalyticsJobParameters) HasSkipTableTypes() bool {
	if o != nil && !IsNil(o.SkipTableTypes) {
		return true
	}

	return false
}

// SetSkipTableTypes gets a reference to the given []AnalyticsTableType and assigns it to the SkipTableTypes field.
func (o *ContinuousAnalyticsJobParameters) SetSkipTableTypes(v []AnalyticsTableType) {
	o.SkipTableTypes = v
}

func (o ContinuousAnalyticsJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContinuousAnalyticsJobParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FullUpdateHourOfDay) {
		toSerialize["fullUpdateHourOfDay"] = o.FullUpdateHourOfDay
	}
	if !IsNil(o.LastYears) {
		toSerialize["lastYears"] = o.LastYears
	}
	if !IsNil(o.SkipOutliers) {
		toSerialize["skipOutliers"] = o.SkipOutliers
	}
	if !IsNil(o.SkipTableTypes) {
		toSerialize["skipTableTypes"] = o.SkipTableTypes
	}
	return toSerialize, nil
}

type NullableContinuousAnalyticsJobParameters struct {
	value *ContinuousAnalyticsJobParameters
	isSet bool
}

func (v NullableContinuousAnalyticsJobParameters) Get() *ContinuousAnalyticsJobParameters {
	return v.value
}

func (v *NullableContinuousAnalyticsJobParameters) Set(val *ContinuousAnalyticsJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableContinuousAnalyticsJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableContinuousAnalyticsJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContinuousAnalyticsJobParameters(val *ContinuousAnalyticsJobParameters) *NullableContinuousAnalyticsJobParameters {
	return &NullableContinuousAnalyticsJobParameters{value: val, isSet: true}
}

func (v NullableContinuousAnalyticsJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContinuousAnalyticsJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
