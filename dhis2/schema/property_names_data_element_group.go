/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesDataElementGroup the model 'PropertyNamesDataElementGroup'
type PropertyNamesDataElementGroup string

// List of PropertyNames_DataElementGroup
const (
	PROPERTYNAMESDATAELEMENTGROUP_ACCESS              PropertyNamesDataElementGroup = "access"
	PROPERTYNAMESDATAELEMENTGROUP_ATTRIBUTE_VALUES    PropertyNamesDataElementGroup = "attributeValues"
	PROPERTYNAMESDATAELEMENTGROUP_CODE                PropertyNamesDataElementGroup = "code"
	PROPERTYNAMESDATAELEMENTGROUP_CREATED             PropertyNamesDataElementGroup = "created"
	PROPERTYNAMESDATAELEMENTGROUP_CREATED_BY          PropertyNamesDataElementGroup = "createdBy"
	PROPERTYNAMESDATAELEMENTGROUP_DATA_ELEMENTS       PropertyNamesDataElementGroup = "dataElements"
	PROPERTYNAMESDATAELEMENTGROUP_DESCRIPTION         PropertyNamesDataElementGroup = "description"
	PROPERTYNAMESDATAELEMENTGROUP_DIMENSION_ITEM      PropertyNamesDataElementGroup = "dimensionItem"
	PROPERTYNAMESDATAELEMENTGROUP_DISPLAY_DESCRIPTION PropertyNamesDataElementGroup = "displayDescription"
	PROPERTYNAMESDATAELEMENTGROUP_DISPLAY_FORM_NAME   PropertyNamesDataElementGroup = "displayFormName"
	PROPERTYNAMESDATAELEMENTGROUP_DISPLAY_NAME        PropertyNamesDataElementGroup = "displayName"
	PROPERTYNAMESDATAELEMENTGROUP_DISPLAY_SHORT_NAME  PropertyNamesDataElementGroup = "displayShortName"
	PROPERTYNAMESDATAELEMENTGROUP_EXTERNAL_ACCESS     PropertyNamesDataElementGroup = "externalAccess"
	PROPERTYNAMESDATAELEMENTGROUP_FAVORITE            PropertyNamesDataElementGroup = "favorite"
	PROPERTYNAMESDATAELEMENTGROUP_FAVORITES           PropertyNamesDataElementGroup = "favorites"
	PROPERTYNAMESDATAELEMENTGROUP_FORM_NAME           PropertyNamesDataElementGroup = "formName"
	PROPERTYNAMESDATAELEMENTGROUP_GROUP_SETS          PropertyNamesDataElementGroup = "groupSets"
	PROPERTYNAMESDATAELEMENTGROUP_HREF                PropertyNamesDataElementGroup = "href"
	PROPERTYNAMESDATAELEMENTGROUP_ID                  PropertyNamesDataElementGroup = "id"
	PROPERTYNAMESDATAELEMENTGROUP_LAST_UPDATED        PropertyNamesDataElementGroup = "lastUpdated"
	PROPERTYNAMESDATAELEMENTGROUP_LAST_UPDATED_BY     PropertyNamesDataElementGroup = "lastUpdatedBy"
	PROPERTYNAMESDATAELEMENTGROUP_LEGEND_SET          PropertyNamesDataElementGroup = "legendSet"
	PROPERTYNAMESDATAELEMENTGROUP_LEGEND_SETS         PropertyNamesDataElementGroup = "legendSets"
	PROPERTYNAMESDATAELEMENTGROUP_NAME                PropertyNamesDataElementGroup = "name"
	PROPERTYNAMESDATAELEMENTGROUP_PUBLIC_ACCESS       PropertyNamesDataElementGroup = "publicAccess"
	PROPERTYNAMESDATAELEMENTGROUP_QUERY_MODS          PropertyNamesDataElementGroup = "queryMods"
	PROPERTYNAMESDATAELEMENTGROUP_SHARING             PropertyNamesDataElementGroup = "sharing"
	PROPERTYNAMESDATAELEMENTGROUP_SHORT_NAME          PropertyNamesDataElementGroup = "shortName"
	PROPERTYNAMESDATAELEMENTGROUP_TRANSLATIONS        PropertyNamesDataElementGroup = "translations"
	PROPERTYNAMESDATAELEMENTGROUP_USER                PropertyNamesDataElementGroup = "user"
	PROPERTYNAMESDATAELEMENTGROUP_USER_ACCESSES       PropertyNamesDataElementGroup = "userAccesses"
	PROPERTYNAMESDATAELEMENTGROUP_USER_GROUP_ACCESSES PropertyNamesDataElementGroup = "userGroupAccesses"
)

// All allowed values of PropertyNamesDataElementGroup enum
var AllowedPropertyNamesDataElementGroupEnumValues = []PropertyNamesDataElementGroup{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"dataElements",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"externalAccess",
	"favorite",
	"favorites",
	"formName",
	"groupSets",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"name",
	"publicAccess",
	"queryMods",
	"sharing",
	"shortName",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesDataElementGroup) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesDataElementGroup(value)
	for _, existing := range AllowedPropertyNamesDataElementGroupEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesDataElementGroup", value)
}

// NewPropertyNamesDataElementGroupFromValue returns a pointer to a valid PropertyNamesDataElementGroup
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesDataElementGroupFromValue(v string) (*PropertyNamesDataElementGroup, error) {
	ev := PropertyNamesDataElementGroup(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesDataElementGroup: valid values are %v", v, AllowedPropertyNamesDataElementGroupEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesDataElementGroup) IsValid() bool {
	for _, existing := range AllowedPropertyNamesDataElementGroupEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_DataElementGroup value
func (v PropertyNamesDataElementGroup) Ptr() *PropertyNamesDataElementGroup {
	return &v
}

type NullablePropertyNamesDataElementGroup struct {
	value *PropertyNamesDataElementGroup
	isSet bool
}

func (v NullablePropertyNamesDataElementGroup) Get() *PropertyNamesDataElementGroup {
	return v.value
}

func (v *NullablePropertyNamesDataElementGroup) Set(val *PropertyNamesDataElementGroup) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesDataElementGroup) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesDataElementGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesDataElementGroup(val *PropertyNamesDataElementGroup) *NullablePropertyNamesDataElementGroup {
	return &NullablePropertyNamesDataElementGroup{value: val, isSet: true}
}

func (v NullablePropertyNamesDataElementGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesDataElementGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
