/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ProgramStagePropertyNames the model 'ProgramStagePropertyNames'
type ProgramStagePropertyNames string

// List of ProgramStagePropertyNames
const (
	PROGRAMSTAGEPROPERTYNAMES_ACCESS                       ProgramStagePropertyNames = "access"
	PROGRAMSTAGEPROPERTYNAMES_ALLOW_GENERATE_NEXT_VISIT    ProgramStagePropertyNames = "allowGenerateNextVisit"
	PROGRAMSTAGEPROPERTYNAMES_ATTRIBUTE_VALUES             ProgramStagePropertyNames = "attributeValues"
	PROGRAMSTAGEPROPERTYNAMES_AUTO_GENERATE_EVENT          ProgramStagePropertyNames = "autoGenerateEvent"
	PROGRAMSTAGEPROPERTYNAMES_BLOCK_ENTRY_FORM             ProgramStagePropertyNames = "blockEntryForm"
	PROGRAMSTAGEPROPERTYNAMES_CODE                         ProgramStagePropertyNames = "code"
	PROGRAMSTAGEPROPERTYNAMES_CREATED                      ProgramStagePropertyNames = "created"
	PROGRAMSTAGEPROPERTYNAMES_CREATED_BY                   ProgramStagePropertyNames = "createdBy"
	PROGRAMSTAGEPROPERTYNAMES_DATA_ENTRY_FORM              ProgramStagePropertyNames = "dataEntryForm"
	PROGRAMSTAGEPROPERTYNAMES_DESCRIPTION                  ProgramStagePropertyNames = "description"
	PROGRAMSTAGEPROPERTYNAMES_DISPLAY_DESCRIPTION          ProgramStagePropertyNames = "displayDescription"
	PROGRAMSTAGEPROPERTYNAMES_DISPLAY_DUE_DATE_LABEL       ProgramStagePropertyNames = "displayDueDateLabel"
	PROGRAMSTAGEPROPERTYNAMES_DISPLAY_EVENT_LABEL          ProgramStagePropertyNames = "displayEventLabel"
	PROGRAMSTAGEPROPERTYNAMES_DISPLAY_EXECUTION_DATE_LABEL ProgramStagePropertyNames = "displayExecutionDateLabel"
	PROGRAMSTAGEPROPERTYNAMES_DISPLAY_FORM_NAME            ProgramStagePropertyNames = "displayFormName"
	PROGRAMSTAGEPROPERTYNAMES_DISPLAY_GENERATE_EVENT_BOX   ProgramStagePropertyNames = "displayGenerateEventBox"
	PROGRAMSTAGEPROPERTYNAMES_DISPLAY_NAME                 ProgramStagePropertyNames = "displayName"
	PROGRAMSTAGEPROPERTYNAMES_DISPLAY_PROGRAM_STAGE_LABEL  ProgramStagePropertyNames = "displayProgramStageLabel"
	PROGRAMSTAGEPROPERTYNAMES_DISPLAY_SHORT_NAME           ProgramStagePropertyNames = "displayShortName"
	PROGRAMSTAGEPROPERTYNAMES_DUE_DATE_LABEL               ProgramStagePropertyNames = "dueDateLabel"
	PROGRAMSTAGEPROPERTYNAMES_ENABLE_USER_ASSIGNMENT       ProgramStagePropertyNames = "enableUserAssignment"
	PROGRAMSTAGEPROPERTYNAMES_EVENT_LABEL                  ProgramStagePropertyNames = "eventLabel"
	PROGRAMSTAGEPROPERTYNAMES_EXECUTION_DATE_LABEL         ProgramStagePropertyNames = "executionDateLabel"
	PROGRAMSTAGEPROPERTYNAMES_FAVORITE                     ProgramStagePropertyNames = "favorite"
	PROGRAMSTAGEPROPERTYNAMES_FAVORITES                    ProgramStagePropertyNames = "favorites"
	PROGRAMSTAGEPROPERTYNAMES_FEATURE_TYPE                 ProgramStagePropertyNames = "featureType"
	PROGRAMSTAGEPROPERTYNAMES_FORM_NAME                    ProgramStagePropertyNames = "formName"
	PROGRAMSTAGEPROPERTYNAMES_FORM_TYPE                    ProgramStagePropertyNames = "formType"
	PROGRAMSTAGEPROPERTYNAMES_GENERATED_BY_ENROLLMENT_DATE ProgramStagePropertyNames = "generatedByEnrollmentDate"
	PROGRAMSTAGEPROPERTYNAMES_HIDE_DUE_DATE                ProgramStagePropertyNames = "hideDueDate"
	PROGRAMSTAGEPROPERTYNAMES_HREF                         ProgramStagePropertyNames = "href"
	PROGRAMSTAGEPROPERTYNAMES_ID                           ProgramStagePropertyNames = "id"
	PROGRAMSTAGEPROPERTYNAMES_LAST_UPDATED                 ProgramStagePropertyNames = "lastUpdated"
	PROGRAMSTAGEPROPERTYNAMES_LAST_UPDATED_BY              ProgramStagePropertyNames = "lastUpdatedBy"
	PROGRAMSTAGEPROPERTYNAMES_MIN_DAYS_FROM_START          ProgramStagePropertyNames = "minDaysFromStart"
	PROGRAMSTAGEPROPERTYNAMES_NAME                         ProgramStagePropertyNames = "name"
	PROGRAMSTAGEPROPERTYNAMES_NEXT_SCHEDULE_DATE           ProgramStagePropertyNames = "nextScheduleDate"
	PROGRAMSTAGEPROPERTYNAMES_NOTIFICATION_TEMPLATES       ProgramStagePropertyNames = "notificationTemplates"
	PROGRAMSTAGEPROPERTYNAMES_OPEN_AFTER_ENROLLMENT        ProgramStagePropertyNames = "openAfterEnrollment"
	PROGRAMSTAGEPROPERTYNAMES_PERIOD_TYPE                  ProgramStagePropertyNames = "periodType"
	PROGRAMSTAGEPROPERTYNAMES_PRE_GENERATE_UID             ProgramStagePropertyNames = "preGenerateUID"
	PROGRAMSTAGEPROPERTYNAMES_PROGRAM                      ProgramStagePropertyNames = "program"
	PROGRAMSTAGEPROPERTYNAMES_PROGRAM_STAGE_DATA_ELEMENTS  ProgramStagePropertyNames = "programStageDataElements"
	PROGRAMSTAGEPROPERTYNAMES_PROGRAM_STAGE_LABEL          ProgramStagePropertyNames = "programStageLabel"
	PROGRAMSTAGEPROPERTYNAMES_PROGRAM_STAGE_SECTIONS       ProgramStagePropertyNames = "programStageSections"
	PROGRAMSTAGEPROPERTYNAMES_REFERRAL                     ProgramStagePropertyNames = "referral"
	PROGRAMSTAGEPROPERTYNAMES_REMIND_COMPLETED             ProgramStagePropertyNames = "remindCompleted"
	PROGRAMSTAGEPROPERTYNAMES_REPEATABLE                   ProgramStagePropertyNames = "repeatable"
	PROGRAMSTAGEPROPERTYNAMES_REPORT_DATE_TO_USE           ProgramStagePropertyNames = "reportDateToUse"
	PROGRAMSTAGEPROPERTYNAMES_SHARING                      ProgramStagePropertyNames = "sharing"
	PROGRAMSTAGEPROPERTYNAMES_SHORT_NAME                   ProgramStagePropertyNames = "shortName"
	PROGRAMSTAGEPROPERTYNAMES_SORT_ORDER                   ProgramStagePropertyNames = "sortOrder"
	PROGRAMSTAGEPROPERTYNAMES_STANDARD_INTERVAL            ProgramStagePropertyNames = "standardInterval"
	PROGRAMSTAGEPROPERTYNAMES_STYLE                        ProgramStagePropertyNames = "style"
	PROGRAMSTAGEPROPERTYNAMES_TRANSLATIONS                 ProgramStagePropertyNames = "translations"
	PROGRAMSTAGEPROPERTYNAMES_VALIDATION_STRATEGY          ProgramStagePropertyNames = "validationStrategy"
)

// All allowed values of ProgramStagePropertyNames enum
var AllowedProgramStagePropertyNamesEnumValues = []ProgramStagePropertyNames{
	"access",
	"allowGenerateNextVisit",
	"attributeValues",
	"autoGenerateEvent",
	"blockEntryForm",
	"code",
	"created",
	"createdBy",
	"dataEntryForm",
	"description",
	"displayDescription",
	"displayDueDateLabel",
	"displayEventLabel",
	"displayExecutionDateLabel",
	"displayFormName",
	"displayGenerateEventBox",
	"displayName",
	"displayProgramStageLabel",
	"displayShortName",
	"dueDateLabel",
	"enableUserAssignment",
	"eventLabel",
	"executionDateLabel",
	"favorite",
	"favorites",
	"featureType",
	"formName",
	"formType",
	"generatedByEnrollmentDate",
	"hideDueDate",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"minDaysFromStart",
	"name",
	"nextScheduleDate",
	"notificationTemplates",
	"openAfterEnrollment",
	"periodType",
	"preGenerateUID",
	"program",
	"programStageDataElements",
	"programStageLabel",
	"programStageSections",
	"referral",
	"remindCompleted",
	"repeatable",
	"reportDateToUse",
	"sharing",
	"shortName",
	"sortOrder",
	"standardInterval",
	"style",
	"translations",
	"validationStrategy",
}

func (v *ProgramStagePropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProgramStagePropertyNames(value)
	for _, existing := range AllowedProgramStagePropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProgramStagePropertyNames", value)
}

// NewProgramStagePropertyNamesFromValue returns a pointer to a valid ProgramStagePropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProgramStagePropertyNamesFromValue(v string) (*ProgramStagePropertyNames, error) {
	ev := ProgramStagePropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProgramStagePropertyNames: valid values are %v", v, AllowedProgramStagePropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProgramStagePropertyNames) IsValid() bool {
	for _, existing := range AllowedProgramStagePropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProgramStagePropertyNames value
func (v ProgramStagePropertyNames) Ptr() *ProgramStagePropertyNames {
	return &v
}

type NullableProgramStagePropertyNames struct {
	value *ProgramStagePropertyNames
	isSet bool
}

func (v NullableProgramStagePropertyNames) Get() *ProgramStagePropertyNames {
	return v.value
}

func (v *NullableProgramStagePropertyNames) Set(val *ProgramStagePropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramStagePropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramStagePropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramStagePropertyNames(val *ProgramStagePropertyNames) *NullableProgramStagePropertyNames {
	return &NullableProgramStagePropertyNames{value: val, isSet: true}
}

func (v NullableProgramStagePropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramStagePropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
