/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"time"
)

// checks if the DataApprovalStateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataApprovalStateResponse{}

// DataApprovalStateResponse struct for DataApprovalStateResponse
type DataApprovalStateResponse struct {
	CreatedByUsername *string                  `json:"createdByUsername,omitempty"`
	CreatedDate       *time.Time               `json:"createdDate,omitempty"`
	DataSet           *BaseIdentifiableObject  `json:"dataSet,omitempty"`
	OrganisationUnit  *BaseIdentifiableObject  `json:"organisationUnit,omitempty"`
	Period            *BaseIdentifiableObject  `json:"period,omitempty"`
	Permissions       *DataApprovalPermissions `json:"permissions,omitempty"`
	State             *string                  `json:"state,omitempty"`
}

// NewDataApprovalStateResponse instantiates a new DataApprovalStateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataApprovalStateResponse() *DataApprovalStateResponse {
	this := DataApprovalStateResponse{}
	return &this
}

// NewDataApprovalStateResponseWithDefaults instantiates a new DataApprovalStateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataApprovalStateResponseWithDefaults() *DataApprovalStateResponse {
	this := DataApprovalStateResponse{}
	return &this
}

// GetCreatedByUsername returns the CreatedByUsername field value if set, zero value otherwise.
func (o *DataApprovalStateResponse) GetCreatedByUsername() string {
	if o == nil || IsNil(o.CreatedByUsername) {
		var ret string
		return ret
	}
	return *o.CreatedByUsername
}

// GetCreatedByUsernameOk returns a tuple with the CreatedByUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalStateResponse) GetCreatedByUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByUsername) {
		return nil, false
	}
	return o.CreatedByUsername, true
}

// HasCreatedByUsername returns a boolean if a field has been set.
func (o *DataApprovalStateResponse) HasCreatedByUsername() bool {
	if o != nil && !IsNil(o.CreatedByUsername) {
		return true
	}

	return false
}

// SetCreatedByUsername gets a reference to the given string and assigns it to the CreatedByUsername field.
func (o *DataApprovalStateResponse) SetCreatedByUsername(v string) {
	o.CreatedByUsername = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *DataApprovalStateResponse) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalStateResponse) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *DataApprovalStateResponse) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *DataApprovalStateResponse) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetDataSet returns the DataSet field value if set, zero value otherwise.
func (o *DataApprovalStateResponse) GetDataSet() BaseIdentifiableObject {
	if o == nil || IsNil(o.DataSet) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.DataSet
}

// GetDataSetOk returns a tuple with the DataSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalStateResponse) GetDataSetOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.DataSet) {
		return nil, false
	}
	return o.DataSet, true
}

// HasDataSet returns a boolean if a field has been set.
func (o *DataApprovalStateResponse) HasDataSet() bool {
	if o != nil && !IsNil(o.DataSet) {
		return true
	}

	return false
}

// SetDataSet gets a reference to the given BaseIdentifiableObject and assigns it to the DataSet field.
func (o *DataApprovalStateResponse) SetDataSet(v BaseIdentifiableObject) {
	o.DataSet = &v
}

// GetOrganisationUnit returns the OrganisationUnit field value if set, zero value otherwise.
func (o *DataApprovalStateResponse) GetOrganisationUnit() BaseIdentifiableObject {
	if o == nil || IsNil(o.OrganisationUnit) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.OrganisationUnit
}

// GetOrganisationUnitOk returns a tuple with the OrganisationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalStateResponse) GetOrganisationUnitOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.OrganisationUnit) {
		return nil, false
	}
	return o.OrganisationUnit, true
}

// HasOrganisationUnit returns a boolean if a field has been set.
func (o *DataApprovalStateResponse) HasOrganisationUnit() bool {
	if o != nil && !IsNil(o.OrganisationUnit) {
		return true
	}

	return false
}

// SetOrganisationUnit gets a reference to the given BaseIdentifiableObject and assigns it to the OrganisationUnit field.
func (o *DataApprovalStateResponse) SetOrganisationUnit(v BaseIdentifiableObject) {
	o.OrganisationUnit = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *DataApprovalStateResponse) GetPeriod() BaseIdentifiableObject {
	if o == nil || IsNil(o.Period) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalStateResponse) GetPeriodOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *DataApprovalStateResponse) HasPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given BaseIdentifiableObject and assigns it to the Period field.
func (o *DataApprovalStateResponse) SetPeriod(v BaseIdentifiableObject) {
	o.Period = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *DataApprovalStateResponse) GetPermissions() DataApprovalPermissions {
	if o == nil || IsNil(o.Permissions) {
		var ret DataApprovalPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalStateResponse) GetPermissionsOk() (*DataApprovalPermissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *DataApprovalStateResponse) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given DataApprovalPermissions and assigns it to the Permissions field.
func (o *DataApprovalStateResponse) SetPermissions(v DataApprovalPermissions) {
	o.Permissions = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DataApprovalStateResponse) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalStateResponse) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DataApprovalStateResponse) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *DataApprovalStateResponse) SetState(v string) {
	o.State = &v
}

func (o DataApprovalStateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataApprovalStateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedByUsername) {
		toSerialize["createdByUsername"] = o.CreatedByUsername
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.DataSet) {
		toSerialize["dataSet"] = o.DataSet
	}
	if !IsNil(o.OrganisationUnit) {
		toSerialize["organisationUnit"] = o.OrganisationUnit
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableDataApprovalStateResponse struct {
	value *DataApprovalStateResponse
	isSet bool
}

func (v NullableDataApprovalStateResponse) Get() *DataApprovalStateResponse {
	return v.value
}

func (v *NullableDataApprovalStateResponse) Set(val *DataApprovalStateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDataApprovalStateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDataApprovalStateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataApprovalStateResponse(val *DataApprovalStateResponse) *NullableDataApprovalStateResponse {
	return &NullableDataApprovalStateResponse{value: val, isSet: true}
}

func (v NullableDataApprovalStateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataApprovalStateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
