/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// DataSetNotificationTemplatePropertyNames the model 'DataSetNotificationTemplatePropertyNames'
type DataSetNotificationTemplatePropertyNames string

// List of DataSetNotificationTemplatePropertyNames
const (
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_ACCESS                               DataSetNotificationTemplatePropertyNames = "access"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_ATTRIBUTE_VALUES                     DataSetNotificationTemplatePropertyNames = "attributeValues"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_CODE                                 DataSetNotificationTemplatePropertyNames = "code"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_CREATED                              DataSetNotificationTemplatePropertyNames = "created"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_CREATED_BY                           DataSetNotificationTemplatePropertyNames = "createdBy"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_DATA_SET_NOTIFICATION_TRIGGER        DataSetNotificationTemplatePropertyNames = "dataSetNotificationTrigger"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_DATA_SETS                            DataSetNotificationTemplatePropertyNames = "dataSets"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_DELIVERY_CHANNELS                    DataSetNotificationTemplatePropertyNames = "deliveryChannels"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_DISPLAY_MESSAGE_TEMPLATE             DataSetNotificationTemplatePropertyNames = "displayMessageTemplate"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_DISPLAY_NAME                         DataSetNotificationTemplatePropertyNames = "displayName"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_DISPLAY_SUBJECT_TEMPLATE             DataSetNotificationTemplatePropertyNames = "displaySubjectTemplate"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_FAVORITE                             DataSetNotificationTemplatePropertyNames = "favorite"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_FAVORITES                            DataSetNotificationTemplatePropertyNames = "favorites"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_HREF                                 DataSetNotificationTemplatePropertyNames = "href"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_ID                                   DataSetNotificationTemplatePropertyNames = "id"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_LAST_UPDATED                         DataSetNotificationTemplatePropertyNames = "lastUpdated"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_LAST_UPDATED_BY                      DataSetNotificationTemplatePropertyNames = "lastUpdatedBy"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_MESSAGE_TEMPLATE                     DataSetNotificationTemplatePropertyNames = "messageTemplate"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_NAME                                 DataSetNotificationTemplatePropertyNames = "name"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_NOTIFICATION_RECIPIENT               DataSetNotificationTemplatePropertyNames = "notificationRecipient"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_NOTIFY_PARENT_ORGANISATION_UNIT_ONLY DataSetNotificationTemplatePropertyNames = "notifyParentOrganisationUnitOnly"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_NOTIFY_USERS_IN_HIERARCHY_ONLY       DataSetNotificationTemplatePropertyNames = "notifyUsersInHierarchyOnly"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_RECIPIENT_USER_GROUP                 DataSetNotificationTemplatePropertyNames = "recipientUserGroup"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_RELATIVE_SCHEDULED_DAYS              DataSetNotificationTemplatePropertyNames = "relativeScheduledDays"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_SEND_STRATEGY                        DataSetNotificationTemplatePropertyNames = "sendStrategy"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_SHARING                              DataSetNotificationTemplatePropertyNames = "sharing"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_SUBJECT_TEMPLATE                     DataSetNotificationTemplatePropertyNames = "subjectTemplate"
	DATASETNOTIFICATIONTEMPLATEPROPERTYNAMES_TRANSLATIONS                         DataSetNotificationTemplatePropertyNames = "translations"
)

// All allowed values of DataSetNotificationTemplatePropertyNames enum
var AllowedDataSetNotificationTemplatePropertyNamesEnumValues = []DataSetNotificationTemplatePropertyNames{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"dataSetNotificationTrigger",
	"dataSets",
	"deliveryChannels",
	"displayMessageTemplate",
	"displayName",
	"displaySubjectTemplate",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"messageTemplate",
	"name",
	"notificationRecipient",
	"notifyParentOrganisationUnitOnly",
	"notifyUsersInHierarchyOnly",
	"recipientUserGroup",
	"relativeScheduledDays",
	"sendStrategy",
	"sharing",
	"subjectTemplate",
	"translations",
}

func (v *DataSetNotificationTemplatePropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DataSetNotificationTemplatePropertyNames(value)
	for _, existing := range AllowedDataSetNotificationTemplatePropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DataSetNotificationTemplatePropertyNames", value)
}

// NewDataSetNotificationTemplatePropertyNamesFromValue returns a pointer to a valid DataSetNotificationTemplatePropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDataSetNotificationTemplatePropertyNamesFromValue(v string) (*DataSetNotificationTemplatePropertyNames, error) {
	ev := DataSetNotificationTemplatePropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DataSetNotificationTemplatePropertyNames: valid values are %v", v, AllowedDataSetNotificationTemplatePropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DataSetNotificationTemplatePropertyNames) IsValid() bool {
	for _, existing := range AllowedDataSetNotificationTemplatePropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DataSetNotificationTemplatePropertyNames value
func (v DataSetNotificationTemplatePropertyNames) Ptr() *DataSetNotificationTemplatePropertyNames {
	return &v
}

type NullableDataSetNotificationTemplatePropertyNames struct {
	value *DataSetNotificationTemplatePropertyNames
	isSet bool
}

func (v NullableDataSetNotificationTemplatePropertyNames) Get() *DataSetNotificationTemplatePropertyNames {
	return v.value
}

func (v *NullableDataSetNotificationTemplatePropertyNames) Set(val *DataSetNotificationTemplatePropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableDataSetNotificationTemplatePropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableDataSetNotificationTemplatePropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataSetNotificationTemplatePropertyNames(val *DataSetNotificationTemplatePropertyNames) *NullableDataSetNotificationTemplatePropertyNames {
	return &NullableDataSetNotificationTemplatePropertyNames{value: val, isSet: true}
}

func (v NullableDataSetNotificationTemplatePropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataSetNotificationTemplatePropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
