/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// SqlViewGetObjectListGistGetObjectListGistAsCsv200Response - struct for SqlViewGetObjectListGistGetObjectListGistAsCsv200Response
type SqlViewGetObjectListGistGetObjectListGistAsCsv200Response struct {
	SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfSqlView                                                 *[]SqlView
}

// SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsSqlViewGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in SqlViewGetObjectListGistGetObjectListGistAsCsv200Response
func SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsSqlViewGetObjectListGistGetObjectListGistAsCsv200Response(v *SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) SqlViewGetObjectListGistGetObjectListGistAsCsv200Response {
	return SqlViewGetObjectListGistGetObjectListGistAsCsv200Response{
		SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []SqlViewAsSqlViewGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []SqlView wrapped in SqlViewGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfSqlViewAsSqlViewGetObjectListGistGetObjectListGistAsCsv200Response(v *[]SqlView) SqlViewGetObjectListGistGetObjectListGistAsCsv200Response {
	return SqlViewGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfSqlView: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *SqlViewGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonSqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonSqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfSqlView
	err = newStrictDecoder(data).Decode(&dst.ArrayOfSqlView)
	if err == nil {
		jsonArrayOfSqlView, _ := json.Marshal(dst.ArrayOfSqlView)
		if string(jsonArrayOfSqlView) == "{}" { // empty struct
			dst.ArrayOfSqlView = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfSqlView = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfSqlView = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SqlViewGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SqlViewGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SqlViewGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfSqlView != nil {
		return json.Marshal(&src.ArrayOfSqlView)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SqlViewGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.SqlViewGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfSqlView != nil {
		return obj.ArrayOfSqlView
	}

	// all schemas are nil
	return nil
}

type NullableSqlViewGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *SqlViewGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableSqlViewGetObjectListGistGetObjectListGistAsCsv200Response) Get() *SqlViewGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableSqlViewGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *SqlViewGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSqlViewGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSqlViewGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSqlViewGetObjectListGistGetObjectListGistAsCsv200Response(val *SqlViewGetObjectListGistGetObjectListGistAsCsv200Response) *NullableSqlViewGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableSqlViewGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableSqlViewGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSqlViewGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
