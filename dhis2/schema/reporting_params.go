/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ReportingParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportingParams{}

// ReportingParams struct for ReportingParams
type ReportingParams struct {
	GrandParentOrganisationUnit *bool `json:"grandParentOrganisationUnit,omitempty"`
	OrganisationUnit            *bool `json:"organisationUnit,omitempty"`
	ParentOrganisationUnit      *bool `json:"parentOrganisationUnit,omitempty"`
	ReportingPeriod             *bool `json:"reportingPeriod,omitempty"`
}

// NewReportingParams instantiates a new ReportingParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportingParams() *ReportingParams {
	this := ReportingParams{}
	return &this
}

// NewReportingParamsWithDefaults instantiates a new ReportingParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportingParamsWithDefaults() *ReportingParams {
	this := ReportingParams{}
	return &this
}

// GetGrandParentOrganisationUnit returns the GrandParentOrganisationUnit field value if set, zero value otherwise.
func (o *ReportingParams) GetGrandParentOrganisationUnit() bool {
	if o == nil || IsNil(o.GrandParentOrganisationUnit) {
		var ret bool
		return ret
	}
	return *o.GrandParentOrganisationUnit
}

// GetGrandParentOrganisationUnitOk returns a tuple with the GrandParentOrganisationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportingParams) GetGrandParentOrganisationUnitOk() (*bool, bool) {
	if o == nil || IsNil(o.GrandParentOrganisationUnit) {
		return nil, false
	}
	return o.GrandParentOrganisationUnit, true
}

// HasGrandParentOrganisationUnit returns a boolean if a field has been set.
func (o *ReportingParams) HasGrandParentOrganisationUnit() bool {
	if o != nil && !IsNil(o.GrandParentOrganisationUnit) {
		return true
	}

	return false
}

// SetGrandParentOrganisationUnit gets a reference to the given bool and assigns it to the GrandParentOrganisationUnit field.
func (o *ReportingParams) SetGrandParentOrganisationUnit(v bool) {
	o.GrandParentOrganisationUnit = &v
}

// GetOrganisationUnit returns the OrganisationUnit field value if set, zero value otherwise.
func (o *ReportingParams) GetOrganisationUnit() bool {
	if o == nil || IsNil(o.OrganisationUnit) {
		var ret bool
		return ret
	}
	return *o.OrganisationUnit
}

// GetOrganisationUnitOk returns a tuple with the OrganisationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportingParams) GetOrganisationUnitOk() (*bool, bool) {
	if o == nil || IsNil(o.OrganisationUnit) {
		return nil, false
	}
	return o.OrganisationUnit, true
}

// HasOrganisationUnit returns a boolean if a field has been set.
func (o *ReportingParams) HasOrganisationUnit() bool {
	if o != nil && !IsNil(o.OrganisationUnit) {
		return true
	}

	return false
}

// SetOrganisationUnit gets a reference to the given bool and assigns it to the OrganisationUnit field.
func (o *ReportingParams) SetOrganisationUnit(v bool) {
	o.OrganisationUnit = &v
}

// GetParentOrganisationUnit returns the ParentOrganisationUnit field value if set, zero value otherwise.
func (o *ReportingParams) GetParentOrganisationUnit() bool {
	if o == nil || IsNil(o.ParentOrganisationUnit) {
		var ret bool
		return ret
	}
	return *o.ParentOrganisationUnit
}

// GetParentOrganisationUnitOk returns a tuple with the ParentOrganisationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportingParams) GetParentOrganisationUnitOk() (*bool, bool) {
	if o == nil || IsNil(o.ParentOrganisationUnit) {
		return nil, false
	}
	return o.ParentOrganisationUnit, true
}

// HasParentOrganisationUnit returns a boolean if a field has been set.
func (o *ReportingParams) HasParentOrganisationUnit() bool {
	if o != nil && !IsNil(o.ParentOrganisationUnit) {
		return true
	}

	return false
}

// SetParentOrganisationUnit gets a reference to the given bool and assigns it to the ParentOrganisationUnit field.
func (o *ReportingParams) SetParentOrganisationUnit(v bool) {
	o.ParentOrganisationUnit = &v
}

// GetReportingPeriod returns the ReportingPeriod field value if set, zero value otherwise.
func (o *ReportingParams) GetReportingPeriod() bool {
	if o == nil || IsNil(o.ReportingPeriod) {
		var ret bool
		return ret
	}
	return *o.ReportingPeriod
}

// GetReportingPeriodOk returns a tuple with the ReportingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportingParams) GetReportingPeriodOk() (*bool, bool) {
	if o == nil || IsNil(o.ReportingPeriod) {
		return nil, false
	}
	return o.ReportingPeriod, true
}

// HasReportingPeriod returns a boolean if a field has been set.
func (o *ReportingParams) HasReportingPeriod() bool {
	if o != nil && !IsNil(o.ReportingPeriod) {
		return true
	}

	return false
}

// SetReportingPeriod gets a reference to the given bool and assigns it to the ReportingPeriod field.
func (o *ReportingParams) SetReportingPeriod(v bool) {
	o.ReportingPeriod = &v
}

func (o ReportingParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportingParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GrandParentOrganisationUnit) {
		toSerialize["grandParentOrganisationUnit"] = o.GrandParentOrganisationUnit
	}
	if !IsNil(o.OrganisationUnit) {
		toSerialize["organisationUnit"] = o.OrganisationUnit
	}
	if !IsNil(o.ParentOrganisationUnit) {
		toSerialize["parentOrganisationUnit"] = o.ParentOrganisationUnit
	}
	if !IsNil(o.ReportingPeriod) {
		toSerialize["reportingPeriod"] = o.ReportingPeriod
	}
	return toSerialize, nil
}

type NullableReportingParams struct {
	value *ReportingParams
	isSet bool
}

func (v NullableReportingParams) Get() *ReportingParams {
	return v.value
}

func (v *NullableReportingParams) Set(val *ReportingParams) {
	v.value = val
	v.isSet = true
}

func (v NullableReportingParams) IsSet() bool {
	return v.isSet
}

func (v *NullableReportingParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportingParams(val *ReportingParams) *NullableReportingParams {
	return &NullableReportingParams{value: val, isSet: true}
}

func (v NullableReportingParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportingParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
