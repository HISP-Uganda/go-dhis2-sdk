/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the BodyParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BodyParams{}

// BodyParams struct for BodyParams
type BodyParams struct {
	Enrollments     []BodyParamsEnrollmentsInner     `json:"enrollments,omitempty"`
	Events          []BodyParamsEventsInner          `json:"events,omitempty"`
	Relationships   []BodyParamsRelationshipsInner   `json:"relationships,omitempty"`
	TrackedEntities []BodyParamsTrackedEntitiesInner `json:"trackedEntities,omitempty"`
}

// NewBodyParams instantiates a new BodyParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBodyParams() *BodyParams {
	this := BodyParams{}
	return &this
}

// NewBodyParamsWithDefaults instantiates a new BodyParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyParamsWithDefaults() *BodyParams {
	this := BodyParams{}
	return &this
}

// GetEnrollments returns the Enrollments field value if set, zero value otherwise.
func (o *BodyParams) GetEnrollments() []BodyParamsEnrollmentsInner {
	if o == nil || IsNil(o.Enrollments) {
		var ret []BodyParamsEnrollmentsInner
		return ret
	}
	return o.Enrollments
}

// GetEnrollmentsOk returns a tuple with the Enrollments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BodyParams) GetEnrollmentsOk() ([]BodyParamsEnrollmentsInner, bool) {
	if o == nil || IsNil(o.Enrollments) {
		return nil, false
	}
	return o.Enrollments, true
}

// HasEnrollments returns a boolean if a field has been set.
func (o *BodyParams) HasEnrollments() bool {
	if o != nil && !IsNil(o.Enrollments) {
		return true
	}

	return false
}

// SetEnrollments gets a reference to the given []BodyParamsEnrollmentsInner and assigns it to the Enrollments field.
func (o *BodyParams) SetEnrollments(v []BodyParamsEnrollmentsInner) {
	o.Enrollments = v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *BodyParams) GetEvents() []BodyParamsEventsInner {
	if o == nil || IsNil(o.Events) {
		var ret []BodyParamsEventsInner
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BodyParams) GetEventsOk() ([]BodyParamsEventsInner, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *BodyParams) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []BodyParamsEventsInner and assigns it to the Events field.
func (o *BodyParams) SetEvents(v []BodyParamsEventsInner) {
	o.Events = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *BodyParams) GetRelationships() []BodyParamsRelationshipsInner {
	if o == nil || IsNil(o.Relationships) {
		var ret []BodyParamsRelationshipsInner
		return ret
	}
	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BodyParams) GetRelationshipsOk() ([]BodyParamsRelationshipsInner, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *BodyParams) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given []BodyParamsRelationshipsInner and assigns it to the Relationships field.
func (o *BodyParams) SetRelationships(v []BodyParamsRelationshipsInner) {
	o.Relationships = v
}

// GetTrackedEntities returns the TrackedEntities field value if set, zero value otherwise.
func (o *BodyParams) GetTrackedEntities() []BodyParamsTrackedEntitiesInner {
	if o == nil || IsNil(o.TrackedEntities) {
		var ret []BodyParamsTrackedEntitiesInner
		return ret
	}
	return o.TrackedEntities
}

// GetTrackedEntitiesOk returns a tuple with the TrackedEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BodyParams) GetTrackedEntitiesOk() ([]BodyParamsTrackedEntitiesInner, bool) {
	if o == nil || IsNil(o.TrackedEntities) {
		return nil, false
	}
	return o.TrackedEntities, true
}

// HasTrackedEntities returns a boolean if a field has been set.
func (o *BodyParams) HasTrackedEntities() bool {
	if o != nil && !IsNil(o.TrackedEntities) {
		return true
	}

	return false
}

// SetTrackedEntities gets a reference to the given []BodyParamsTrackedEntitiesInner and assigns it to the TrackedEntities field.
func (o *BodyParams) SetTrackedEntities(v []BodyParamsTrackedEntitiesInner) {
	o.TrackedEntities = v
}

func (o BodyParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BodyParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enrollments) {
		toSerialize["enrollments"] = o.Enrollments
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.TrackedEntities) {
		toSerialize["trackedEntities"] = o.TrackedEntities
	}
	return toSerialize, nil
}

type NullableBodyParams struct {
	value *BodyParams
	isSet bool
}

func (v NullableBodyParams) Get() *BodyParams {
	return v.value
}

func (v *NullableBodyParams) Set(val *BodyParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBodyParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBodyParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBodyParams(val *BodyParams) *NullableBodyParams {
	return &NullableBodyParams{value: val, isSet: true}
}

func (v NullableBodyParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBodyParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
