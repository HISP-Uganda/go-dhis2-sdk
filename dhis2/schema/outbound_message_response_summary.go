/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the OutboundMessageResponseSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutboundMessageResponseSummary{}

// OutboundMessageResponseSummary struct for OutboundMessageResponseSummary
type OutboundMessageResponseSummary struct {
	BatchType       string  `json:"batchType"`
	ErrorMessage    *string `json:"errorMessage,omitempty"`
	Failed          int32   `json:"failed"`
	Pending         int32   `json:"pending"`
	ResponseMessage *string `json:"responseMessage,omitempty"`
	Sent            int32   `json:"sent"`
	Status          string  `json:"status"`
	Total           int32   `json:"total"`
}

type _OutboundMessageResponseSummary OutboundMessageResponseSummary

// NewOutboundMessageResponseSummary instantiates a new OutboundMessageResponseSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutboundMessageResponseSummary(batchType string, failed int32, pending int32, sent int32, status string, total int32) *OutboundMessageResponseSummary {
	this := OutboundMessageResponseSummary{}
	this.BatchType = batchType
	this.Failed = failed
	this.Pending = pending
	this.Sent = sent
	this.Status = status
	this.Total = total
	return &this
}

// NewOutboundMessageResponseSummaryWithDefaults instantiates a new OutboundMessageResponseSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutboundMessageResponseSummaryWithDefaults() *OutboundMessageResponseSummary {
	this := OutboundMessageResponseSummary{}
	return &this
}

// GetBatchType returns the BatchType field value
func (o *OutboundMessageResponseSummary) GetBatchType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BatchType
}

// GetBatchTypeOk returns a tuple with the BatchType field value
// and a boolean to check if the value has been set.
func (o *OutboundMessageResponseSummary) GetBatchTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatchType, true
}

// SetBatchType sets field value
func (o *OutboundMessageResponseSummary) SetBatchType(v string) {
	o.BatchType = v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *OutboundMessageResponseSummary) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundMessageResponseSummary) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *OutboundMessageResponseSummary) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *OutboundMessageResponseSummary) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetFailed returns the Failed field value
func (o *OutboundMessageResponseSummary) GetFailed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Failed
}

// GetFailedOk returns a tuple with the Failed field value
// and a boolean to check if the value has been set.
func (o *OutboundMessageResponseSummary) GetFailedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Failed, true
}

// SetFailed sets field value
func (o *OutboundMessageResponseSummary) SetFailed(v int32) {
	o.Failed = v
}

// GetPending returns the Pending field value
func (o *OutboundMessageResponseSummary) GetPending() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Pending
}

// GetPendingOk returns a tuple with the Pending field value
// and a boolean to check if the value has been set.
func (o *OutboundMessageResponseSummary) GetPendingOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pending, true
}

// SetPending sets field value
func (o *OutboundMessageResponseSummary) SetPending(v int32) {
	o.Pending = v
}

// GetResponseMessage returns the ResponseMessage field value if set, zero value otherwise.
func (o *OutboundMessageResponseSummary) GetResponseMessage() string {
	if o == nil || IsNil(o.ResponseMessage) {
		var ret string
		return ret
	}
	return *o.ResponseMessage
}

// GetResponseMessageOk returns a tuple with the ResponseMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutboundMessageResponseSummary) GetResponseMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseMessage) {
		return nil, false
	}
	return o.ResponseMessage, true
}

// HasResponseMessage returns a boolean if a field has been set.
func (o *OutboundMessageResponseSummary) HasResponseMessage() bool {
	if o != nil && !IsNil(o.ResponseMessage) {
		return true
	}

	return false
}

// SetResponseMessage gets a reference to the given string and assigns it to the ResponseMessage field.
func (o *OutboundMessageResponseSummary) SetResponseMessage(v string) {
	o.ResponseMessage = &v
}

// GetSent returns the Sent field value
func (o *OutboundMessageResponseSummary) GetSent() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Sent
}

// GetSentOk returns a tuple with the Sent field value
// and a boolean to check if the value has been set.
func (o *OutboundMessageResponseSummary) GetSentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sent, true
}

// SetSent sets field value
func (o *OutboundMessageResponseSummary) SetSent(v int32) {
	o.Sent = v
}

// GetStatus returns the Status field value
func (o *OutboundMessageResponseSummary) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *OutboundMessageResponseSummary) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *OutboundMessageResponseSummary) SetStatus(v string) {
	o.Status = v
}

// GetTotal returns the Total field value
func (o *OutboundMessageResponseSummary) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *OutboundMessageResponseSummary) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *OutboundMessageResponseSummary) SetTotal(v int32) {
	o.Total = v
}

func (o OutboundMessageResponseSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutboundMessageResponseSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["batchType"] = o.BatchType
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	toSerialize["failed"] = o.Failed
	toSerialize["pending"] = o.Pending
	if !IsNil(o.ResponseMessage) {
		toSerialize["responseMessage"] = o.ResponseMessage
	}
	toSerialize["sent"] = o.Sent
	toSerialize["status"] = o.Status
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

func (o *OutboundMessageResponseSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"batchType",
		"failed",
		"pending",
		"sent",
		"status",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutboundMessageResponseSummary := _OutboundMessageResponseSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutboundMessageResponseSummary)

	if err != nil {
		return err
	}

	*o = OutboundMessageResponseSummary(varOutboundMessageResponseSummary)

	return err
}

type NullableOutboundMessageResponseSummary struct {
	value *OutboundMessageResponseSummary
	isSet bool
}

func (v NullableOutboundMessageResponseSummary) Get() *OutboundMessageResponseSummary {
	return v.value
}

func (v *NullableOutboundMessageResponseSummary) Set(val *OutboundMessageResponseSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableOutboundMessageResponseSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableOutboundMessageResponseSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutboundMessageResponseSummary(val *OutboundMessageResponseSummary) *NullableOutboundMessageResponseSummary {
	return &NullableOutboundMessageResponseSummary{value: val, isSet: true}
}

func (v NullableOutboundMessageResponseSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutboundMessageResponseSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
