/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// SMSCommandPropertyNames the model 'SMSCommandPropertyNames'
type SMSCommandPropertyNames string

// List of SMSCommandPropertyNames
const (
	SMSCOMMANDPROPERTYNAMES_ACCESS                            SMSCommandPropertyNames = "access"
	SMSCOMMANDPROPERTYNAMES_ATTRIBUTE_VALUES                  SMSCommandPropertyNames = "attributeValues"
	SMSCOMMANDPROPERTYNAMES_CODE                              SMSCommandPropertyNames = "code"
	SMSCOMMANDPROPERTYNAMES_CODE_VALUE_SEPARATOR              SMSCommandPropertyNames = "codeValueSeparator"
	SMSCOMMANDPROPERTYNAMES_COMPLETENESS_METHOD               SMSCommandPropertyNames = "completenessMethod"
	SMSCOMMANDPROPERTYNAMES_CREATED                           SMSCommandPropertyNames = "created"
	SMSCOMMANDPROPERTYNAMES_CREATED_BY                        SMSCommandPropertyNames = "createdBy"
	SMSCOMMANDPROPERTYNAMES_CURRENT_PERIOD_USED_FOR_REPORTING SMSCommandPropertyNames = "currentPeriodUsedForReporting"
	SMSCOMMANDPROPERTYNAMES_DATASET                           SMSCommandPropertyNames = "dataset"
	SMSCOMMANDPROPERTYNAMES_DEFAULT_MESSAGE                   SMSCommandPropertyNames = "defaultMessage"
	SMSCOMMANDPROPERTYNAMES_DISPLAY_NAME                      SMSCommandPropertyNames = "displayName"
	SMSCOMMANDPROPERTYNAMES_FAVORITE                          SMSCommandPropertyNames = "favorite"
	SMSCOMMANDPROPERTYNAMES_FAVORITES                         SMSCommandPropertyNames = "favorites"
	SMSCOMMANDPROPERTYNAMES_HREF                              SMSCommandPropertyNames = "href"
	SMSCOMMANDPROPERTYNAMES_ID                                SMSCommandPropertyNames = "id"
	SMSCOMMANDPROPERTYNAMES_LAST_UPDATED                      SMSCommandPropertyNames = "lastUpdated"
	SMSCOMMANDPROPERTYNAMES_LAST_UPDATED_BY                   SMSCommandPropertyNames = "lastUpdatedBy"
	SMSCOMMANDPROPERTYNAMES_MORE_THAN_ONE_ORG_UNIT_MESSAGE    SMSCommandPropertyNames = "moreThanOneOrgUnitMessage"
	SMSCOMMANDPROPERTYNAMES_NAME                              SMSCommandPropertyNames = "name"
	SMSCOMMANDPROPERTYNAMES_NO_USER_MESSAGE                   SMSCommandPropertyNames = "noUserMessage"
	SMSCOMMANDPROPERTYNAMES_PARSER_TYPE                       SMSCommandPropertyNames = "parserType"
	SMSCOMMANDPROPERTYNAMES_PROGRAM                           SMSCommandPropertyNames = "program"
	SMSCOMMANDPROPERTYNAMES_PROGRAM_STAGE                     SMSCommandPropertyNames = "programStage"
	SMSCOMMANDPROPERTYNAMES_RECEIVED_MESSAGE                  SMSCommandPropertyNames = "receivedMessage"
	SMSCOMMANDPROPERTYNAMES_SEPARATOR                         SMSCommandPropertyNames = "separator"
	SMSCOMMANDPROPERTYNAMES_SHARING                           SMSCommandPropertyNames = "sharing"
	SMSCOMMANDPROPERTYNAMES_SMS_CODES                         SMSCommandPropertyNames = "smsCodes"
	SMSCOMMANDPROPERTYNAMES_SPECIAL_CHARACTERS                SMSCommandPropertyNames = "specialCharacters"
	SMSCOMMANDPROPERTYNAMES_SUCCESS_MESSAGE                   SMSCommandPropertyNames = "successMessage"
	SMSCOMMANDPROPERTYNAMES_TRANSLATIONS                      SMSCommandPropertyNames = "translations"
	SMSCOMMANDPROPERTYNAMES_USER_GROUP                        SMSCommandPropertyNames = "userGroup"
	SMSCOMMANDPROPERTYNAMES_WRONG_FORMAT_MESSAGE              SMSCommandPropertyNames = "wrongFormatMessage"
)

// All allowed values of SMSCommandPropertyNames enum
var AllowedSMSCommandPropertyNamesEnumValues = []SMSCommandPropertyNames{
	"access",
	"attributeValues",
	"code",
	"codeValueSeparator",
	"completenessMethod",
	"created",
	"createdBy",
	"currentPeriodUsedForReporting",
	"dataset",
	"defaultMessage",
	"displayName",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"moreThanOneOrgUnitMessage",
	"name",
	"noUserMessage",
	"parserType",
	"program",
	"programStage",
	"receivedMessage",
	"separator",
	"sharing",
	"smsCodes",
	"specialCharacters",
	"successMessage",
	"translations",
	"userGroup",
	"wrongFormatMessage",
}

func (v *SMSCommandPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SMSCommandPropertyNames(value)
	for _, existing := range AllowedSMSCommandPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SMSCommandPropertyNames", value)
}

// NewSMSCommandPropertyNamesFromValue returns a pointer to a valid SMSCommandPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSMSCommandPropertyNamesFromValue(v string) (*SMSCommandPropertyNames, error) {
	ev := SMSCommandPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SMSCommandPropertyNames: valid values are %v", v, AllowedSMSCommandPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SMSCommandPropertyNames) IsValid() bool {
	for _, existing := range AllowedSMSCommandPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SMSCommandPropertyNames value
func (v SMSCommandPropertyNames) Ptr() *SMSCommandPropertyNames {
	return &v
}

type NullableSMSCommandPropertyNames struct {
	value *SMSCommandPropertyNames
	isSet bool
}

func (v NullableSMSCommandPropertyNames) Get() *SMSCommandPropertyNames {
	return v.value
}

func (v *NullableSMSCommandPropertyNames) Set(val *SMSCommandPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableSMSCommandPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableSMSCommandPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSMSCommandPropertyNames(val *SMSCommandPropertyNames) *NullableSMSCommandPropertyNames {
	return &NullableSMSCommandPropertyNames{value: val, isSet: true}
}

func (v NullableSMSCommandPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSMSCommandPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
