/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// InterpretationGetObjectListGistGetObjectListGistAsCsv200Response - struct for InterpretationGetObjectListGistGetObjectListGistAsCsv200Response
type InterpretationGetObjectListGistGetObjectListGistAsCsv200Response struct {
	InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfInterpretation                                                 *[]Interpretation
}

// InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsInterpretationGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in InterpretationGetObjectListGistGetObjectListGistAsCsv200Response
func InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsInterpretationGetObjectListGistGetObjectListGistAsCsv200Response(v *InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) InterpretationGetObjectListGistGetObjectListGistAsCsv200Response {
	return InterpretationGetObjectListGistGetObjectListGistAsCsv200Response{
		InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []InterpretationAsInterpretationGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []Interpretation wrapped in InterpretationGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfInterpretationAsInterpretationGetObjectListGistGetObjectListGistAsCsv200Response(v *[]Interpretation) InterpretationGetObjectListGistGetObjectListGistAsCsv200Response {
	return InterpretationGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfInterpretation: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *InterpretationGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonInterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonInterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfInterpretation
	err = newStrictDecoder(data).Decode(&dst.ArrayOfInterpretation)
	if err == nil {
		jsonArrayOfInterpretation, _ := json.Marshal(dst.ArrayOfInterpretation)
		if string(jsonArrayOfInterpretation) == "{}" { // empty struct
			dst.ArrayOfInterpretation = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfInterpretation = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfInterpretation = nil

		return fmt.Errorf("data matches more than one schema in oneOf(InterpretationGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(InterpretationGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src InterpretationGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfInterpretation != nil {
		return json.Marshal(&src.ArrayOfInterpretation)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *InterpretationGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.InterpretationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfInterpretation != nil {
		return obj.ArrayOfInterpretation
	}

	// all schemas are nil
	return nil
}

type NullableInterpretationGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *InterpretationGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableInterpretationGetObjectListGistGetObjectListGistAsCsv200Response) Get() *InterpretationGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableInterpretationGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *InterpretationGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableInterpretationGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableInterpretationGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterpretationGetObjectListGistGetObjectListGistAsCsv200Response(val *InterpretationGetObjectListGistGetObjectListGistAsCsv200Response) *NullableInterpretationGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableInterpretationGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableInterpretationGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterpretationGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
