/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DataIntegrityCheck type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataIntegrityCheck{}

// DataIntegrityCheck struct for DataIntegrityCheck
type DataIntegrityCheck struct {
	AverageExecutionTime *int64  `json:"averageExecutionTime,omitempty"`
	Code                 *string `json:"code,omitempty"`
	Description          *string `json:"description,omitempty"`
	DisplayName          *string `json:"displayName,omitempty"`
	Introduction         *string `json:"introduction,omitempty"`
	IsProgrammatic       *bool   `json:"isProgrammatic,omitempty"`
	IsSlow               *bool   `json:"isSlow,omitempty"`
	IssuesIdType         *string `json:"issuesIdType,omitempty"`
	Name                 *string `json:"name,omitempty"`
	Recommendation       *string `json:"recommendation,omitempty"`
	Section              *string `json:"section,omitempty"`
	SectionOrder         int32   `json:"sectionOrder"`
	Severity             string  `json:"severity"`
}

type _DataIntegrityCheck DataIntegrityCheck

// NewDataIntegrityCheck instantiates a new DataIntegrityCheck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataIntegrityCheck(sectionOrder int32, severity string) *DataIntegrityCheck {
	this := DataIntegrityCheck{}
	this.SectionOrder = sectionOrder
	this.Severity = severity
	return &this
}

// NewDataIntegrityCheckWithDefaults instantiates a new DataIntegrityCheck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataIntegrityCheckWithDefaults() *DataIntegrityCheck {
	this := DataIntegrityCheck{}
	return &this
}

// GetAverageExecutionTime returns the AverageExecutionTime field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetAverageExecutionTime() int64 {
	if o == nil || IsNil(o.AverageExecutionTime) {
		var ret int64
		return ret
	}
	return *o.AverageExecutionTime
}

// GetAverageExecutionTimeOk returns a tuple with the AverageExecutionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetAverageExecutionTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.AverageExecutionTime) {
		return nil, false
	}
	return o.AverageExecutionTime, true
}

// HasAverageExecutionTime returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasAverageExecutionTime() bool {
	if o != nil && !IsNil(o.AverageExecutionTime) {
		return true
	}

	return false
}

// SetAverageExecutionTime gets a reference to the given int64 and assigns it to the AverageExecutionTime field.
func (o *DataIntegrityCheck) SetAverageExecutionTime(v int64) {
	o.AverageExecutionTime = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *DataIntegrityCheck) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DataIntegrityCheck) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DataIntegrityCheck) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetIntroduction returns the Introduction field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetIntroduction() string {
	if o == nil || IsNil(o.Introduction) {
		var ret string
		return ret
	}
	return *o.Introduction
}

// GetIntroductionOk returns a tuple with the Introduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetIntroductionOk() (*string, bool) {
	if o == nil || IsNil(o.Introduction) {
		return nil, false
	}
	return o.Introduction, true
}

// HasIntroduction returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasIntroduction() bool {
	if o != nil && !IsNil(o.Introduction) {
		return true
	}

	return false
}

// SetIntroduction gets a reference to the given string and assigns it to the Introduction field.
func (o *DataIntegrityCheck) SetIntroduction(v string) {
	o.Introduction = &v
}

// GetIsProgrammatic returns the IsProgrammatic field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetIsProgrammatic() bool {
	if o == nil || IsNil(o.IsProgrammatic) {
		var ret bool
		return ret
	}
	return *o.IsProgrammatic
}

// GetIsProgrammaticOk returns a tuple with the IsProgrammatic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetIsProgrammaticOk() (*bool, bool) {
	if o == nil || IsNil(o.IsProgrammatic) {
		return nil, false
	}
	return o.IsProgrammatic, true
}

// HasIsProgrammatic returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasIsProgrammatic() bool {
	if o != nil && !IsNil(o.IsProgrammatic) {
		return true
	}

	return false
}

// SetIsProgrammatic gets a reference to the given bool and assigns it to the IsProgrammatic field.
func (o *DataIntegrityCheck) SetIsProgrammatic(v bool) {
	o.IsProgrammatic = &v
}

// GetIsSlow returns the IsSlow field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetIsSlow() bool {
	if o == nil || IsNil(o.IsSlow) {
		var ret bool
		return ret
	}
	return *o.IsSlow
}

// GetIsSlowOk returns a tuple with the IsSlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetIsSlowOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSlow) {
		return nil, false
	}
	return o.IsSlow, true
}

// HasIsSlow returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasIsSlow() bool {
	if o != nil && !IsNil(o.IsSlow) {
		return true
	}

	return false
}

// SetIsSlow gets a reference to the given bool and assigns it to the IsSlow field.
func (o *DataIntegrityCheck) SetIsSlow(v bool) {
	o.IsSlow = &v
}

// GetIssuesIdType returns the IssuesIdType field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetIssuesIdType() string {
	if o == nil || IsNil(o.IssuesIdType) {
		var ret string
		return ret
	}
	return *o.IssuesIdType
}

// GetIssuesIdTypeOk returns a tuple with the IssuesIdType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetIssuesIdTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IssuesIdType) {
		return nil, false
	}
	return o.IssuesIdType, true
}

// HasIssuesIdType returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasIssuesIdType() bool {
	if o != nil && !IsNil(o.IssuesIdType) {
		return true
	}

	return false
}

// SetIssuesIdType gets a reference to the given string and assigns it to the IssuesIdType field.
func (o *DataIntegrityCheck) SetIssuesIdType(v string) {
	o.IssuesIdType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DataIntegrityCheck) SetName(v string) {
	o.Name = &v
}

// GetRecommendation returns the Recommendation field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetRecommendation() string {
	if o == nil || IsNil(o.Recommendation) {
		var ret string
		return ret
	}
	return *o.Recommendation
}

// GetRecommendationOk returns a tuple with the Recommendation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetRecommendationOk() (*string, bool) {
	if o == nil || IsNil(o.Recommendation) {
		return nil, false
	}
	return o.Recommendation, true
}

// HasRecommendation returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasRecommendation() bool {
	if o != nil && !IsNil(o.Recommendation) {
		return true
	}

	return false
}

// SetRecommendation gets a reference to the given string and assigns it to the Recommendation field.
func (o *DataIntegrityCheck) SetRecommendation(v string) {
	o.Recommendation = &v
}

// GetSection returns the Section field value if set, zero value otherwise.
func (o *DataIntegrityCheck) GetSection() string {
	if o == nil || IsNil(o.Section) {
		var ret string
		return ret
	}
	return *o.Section
}

// GetSectionOk returns a tuple with the Section field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetSectionOk() (*string, bool) {
	if o == nil || IsNil(o.Section) {
		return nil, false
	}
	return o.Section, true
}

// HasSection returns a boolean if a field has been set.
func (o *DataIntegrityCheck) HasSection() bool {
	if o != nil && !IsNil(o.Section) {
		return true
	}

	return false
}

// SetSection gets a reference to the given string and assigns it to the Section field.
func (o *DataIntegrityCheck) SetSection(v string) {
	o.Section = &v
}

// GetSectionOrder returns the SectionOrder field value
func (o *DataIntegrityCheck) GetSectionOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SectionOrder
}

// GetSectionOrderOk returns a tuple with the SectionOrder field value
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetSectionOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SectionOrder, true
}

// SetSectionOrder sets field value
func (o *DataIntegrityCheck) SetSectionOrder(v int32) {
	o.SectionOrder = v
}

// GetSeverity returns the Severity field value
func (o *DataIntegrityCheck) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *DataIntegrityCheck) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *DataIntegrityCheck) SetSeverity(v string) {
	o.Severity = v
}

func (o DataIntegrityCheck) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataIntegrityCheck) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AverageExecutionTime) {
		toSerialize["averageExecutionTime"] = o.AverageExecutionTime
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Introduction) {
		toSerialize["introduction"] = o.Introduction
	}
	if !IsNil(o.IsProgrammatic) {
		toSerialize["isProgrammatic"] = o.IsProgrammatic
	}
	if !IsNil(o.IsSlow) {
		toSerialize["isSlow"] = o.IsSlow
	}
	if !IsNil(o.IssuesIdType) {
		toSerialize["issuesIdType"] = o.IssuesIdType
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Recommendation) {
		toSerialize["recommendation"] = o.Recommendation
	}
	if !IsNil(o.Section) {
		toSerialize["section"] = o.Section
	}
	toSerialize["sectionOrder"] = o.SectionOrder
	toSerialize["severity"] = o.Severity
	return toSerialize, nil
}

func (o *DataIntegrityCheck) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sectionOrder",
		"severity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDataIntegrityCheck := _DataIntegrityCheck{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDataIntegrityCheck)

	if err != nil {
		return err
	}

	*o = DataIntegrityCheck(varDataIntegrityCheck)

	return err
}

type NullableDataIntegrityCheck struct {
	value *DataIntegrityCheck
	isSet bool
}

func (v NullableDataIntegrityCheck) Get() *DataIntegrityCheck {
	return v.value
}

func (v *NullableDataIntegrityCheck) Set(val *DataIntegrityCheck) {
	v.value = val
	v.isSet = true
}

func (v NullableDataIntegrityCheck) IsSet() bool {
	return v.isSet
}

func (v *NullableDataIntegrityCheck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataIntegrityCheck(val *DataIntegrityCheck) *NullableDataIntegrityCheck {
	return &NullableDataIntegrityCheck{value: val, isSet: true}
}

func (v NullableDataIntegrityCheck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataIntegrityCheck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
