/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// EventHookGetObjectListGistGetObjectListGistAsCsv200Response - struct for EventHookGetObjectListGistGetObjectListGistAsCsv200Response
type EventHookGetObjectListGistGetObjectListGistAsCsv200Response struct {
	EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfEventHook                                                 *[]EventHook
}

// EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsEventHookGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in EventHookGetObjectListGistGetObjectListGistAsCsv200Response
func EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsEventHookGetObjectListGistGetObjectListGistAsCsv200Response(v *EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) EventHookGetObjectListGistGetObjectListGistAsCsv200Response {
	return EventHookGetObjectListGistGetObjectListGistAsCsv200Response{
		EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []EventHookAsEventHookGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []EventHook wrapped in EventHookGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfEventHookAsEventHookGetObjectListGistGetObjectListGistAsCsv200Response(v *[]EventHook) EventHookGetObjectListGistGetObjectListGistAsCsv200Response {
	return EventHookGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfEventHook: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *EventHookGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonEventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonEventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfEventHook
	err = newStrictDecoder(data).Decode(&dst.ArrayOfEventHook)
	if err == nil {
		jsonArrayOfEventHook, _ := json.Marshal(dst.ArrayOfEventHook)
		if string(jsonArrayOfEventHook) == "{}" { // empty struct
			dst.ArrayOfEventHook = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfEventHook = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfEventHook = nil

		return fmt.Errorf("data matches more than one schema in oneOf(EventHookGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(EventHookGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src EventHookGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfEventHook != nil {
		return json.Marshal(&src.ArrayOfEventHook)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *EventHookGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.EventHookGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfEventHook != nil {
		return obj.ArrayOfEventHook
	}

	// all schemas are nil
	return nil
}

type NullableEventHookGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *EventHookGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableEventHookGetObjectListGistGetObjectListGistAsCsv200Response) Get() *EventHookGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableEventHookGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *EventHookGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableEventHookGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableEventHookGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventHookGetObjectListGistGetObjectListGistAsCsv200Response(val *EventHookGetObjectListGistGetObjectListGistAsCsv200Response) *NullableEventHookGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableEventHookGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableEventHookGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventHookGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
