/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the AppActivities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppActivities{}

// AppActivities struct for AppActivities
type AppActivities struct {
	Dhis *AppDhis `json:"dhis,omitempty"`
}

// NewAppActivities instantiates a new AppActivities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppActivities() *AppActivities {
	this := AppActivities{}
	return &this
}

// NewAppActivitiesWithDefaults instantiates a new AppActivities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppActivitiesWithDefaults() *AppActivities {
	this := AppActivities{}
	return &this
}

// GetDhis returns the Dhis field value if set, zero value otherwise.
func (o *AppActivities) GetDhis() AppDhis {
	if o == nil || IsNil(o.Dhis) {
		var ret AppDhis
		return ret
	}
	return *o.Dhis
}

// GetDhisOk returns a tuple with the Dhis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppActivities) GetDhisOk() (*AppDhis, bool) {
	if o == nil || IsNil(o.Dhis) {
		return nil, false
	}
	return o.Dhis, true
}

// HasDhis returns a boolean if a field has been set.
func (o *AppActivities) HasDhis() bool {
	if o != nil && !IsNil(o.Dhis) {
		return true
	}

	return false
}

// SetDhis gets a reference to the given AppDhis and assigns it to the Dhis field.
func (o *AppActivities) SetDhis(v AppDhis) {
	o.Dhis = &v
}

func (o AppActivities) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppActivities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dhis) {
		toSerialize["dhis"] = o.Dhis
	}
	return toSerialize, nil
}

type NullableAppActivities struct {
	value *AppActivities
	isSet bool
}

func (v NullableAppActivities) Get() *AppActivities {
	return v.value
}

func (v *NullableAppActivities) Set(val *AppActivities) {
	v.value = val
	v.isSet = true
}

func (v NullableAppActivities) IsSet() bool {
	return v.isSet
}

func (v *NullableAppActivities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppActivities(val *AppActivities) *NullableAppActivities {
	return &NullableAppActivities{value: val, isSet: true}
}

func (v NullableAppActivities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppActivities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
