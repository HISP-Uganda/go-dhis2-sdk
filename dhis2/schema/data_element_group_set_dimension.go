/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the DataElementGroupSetDimension type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataElementGroupSetDimension{}

// DataElementGroupSetDimension struct for DataElementGroupSetDimension
type DataElementGroupSetDimension struct {
	DataElementGroupSet *BaseIdentifiableObject `json:"dataElementGroupSet,omitempty"`
	DataElementGroups   []DataElementGroup      `json:"dataElementGroups,omitempty"`
}

// NewDataElementGroupSetDimension instantiates a new DataElementGroupSetDimension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataElementGroupSetDimension() *DataElementGroupSetDimension {
	this := DataElementGroupSetDimension{}
	return &this
}

// NewDataElementGroupSetDimensionWithDefaults instantiates a new DataElementGroupSetDimension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataElementGroupSetDimensionWithDefaults() *DataElementGroupSetDimension {
	this := DataElementGroupSetDimension{}
	return &this
}

// GetDataElementGroupSet returns the DataElementGroupSet field value if set, zero value otherwise.
func (o *DataElementGroupSetDimension) GetDataElementGroupSet() BaseIdentifiableObject {
	if o == nil || IsNil(o.DataElementGroupSet) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.DataElementGroupSet
}

// GetDataElementGroupSetOk returns a tuple with the DataElementGroupSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataElementGroupSetDimension) GetDataElementGroupSetOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.DataElementGroupSet) {
		return nil, false
	}
	return o.DataElementGroupSet, true
}

// HasDataElementGroupSet returns a boolean if a field has been set.
func (o *DataElementGroupSetDimension) HasDataElementGroupSet() bool {
	if o != nil && !IsNil(o.DataElementGroupSet) {
		return true
	}

	return false
}

// SetDataElementGroupSet gets a reference to the given BaseIdentifiableObject and assigns it to the DataElementGroupSet field.
func (o *DataElementGroupSetDimension) SetDataElementGroupSet(v BaseIdentifiableObject) {
	o.DataElementGroupSet = &v
}

// GetDataElementGroups returns the DataElementGroups field value if set, zero value otherwise.
func (o *DataElementGroupSetDimension) GetDataElementGroups() []DataElementGroup {
	if o == nil || IsNil(o.DataElementGroups) {
		var ret []DataElementGroup
		return ret
	}
	return o.DataElementGroups
}

// GetDataElementGroupsOk returns a tuple with the DataElementGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataElementGroupSetDimension) GetDataElementGroupsOk() ([]DataElementGroup, bool) {
	if o == nil || IsNil(o.DataElementGroups) {
		return nil, false
	}
	return o.DataElementGroups, true
}

// HasDataElementGroups returns a boolean if a field has been set.
func (o *DataElementGroupSetDimension) HasDataElementGroups() bool {
	if o != nil && !IsNil(o.DataElementGroups) {
		return true
	}

	return false
}

// SetDataElementGroups gets a reference to the given []DataElementGroup and assigns it to the DataElementGroups field.
func (o *DataElementGroupSetDimension) SetDataElementGroups(v []DataElementGroup) {
	o.DataElementGroups = v
}

func (o DataElementGroupSetDimension) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataElementGroupSetDimension) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataElementGroupSet) {
		toSerialize["dataElementGroupSet"] = o.DataElementGroupSet
	}
	if !IsNil(o.DataElementGroups) {
		toSerialize["dataElementGroups"] = o.DataElementGroups
	}
	return toSerialize, nil
}

type NullableDataElementGroupSetDimension struct {
	value *DataElementGroupSetDimension
	isSet bool
}

func (v NullableDataElementGroupSetDimension) Get() *DataElementGroupSetDimension {
	return v.value
}

func (v *NullableDataElementGroupSetDimension) Set(val *DataElementGroupSetDimension) {
	v.value = val
	v.isSet = true
}

func (v NullableDataElementGroupSetDimension) IsSet() bool {
	return v.isSet
}

func (v *NullableDataElementGroupSetDimension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataElementGroupSetDimension(val *DataElementGroupSetDimension) *NullableDataElementGroupSetDimension {
	return &NullableDataElementGroupSetDimension{value: val, isSet: true}
}

func (v NullableDataElementGroupSetDimension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataElementGroupSetDimension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
