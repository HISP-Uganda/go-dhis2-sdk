/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ValidationResultView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidationResultView{}

// ValidationResultView struct for ValidationResultView
type ValidationResultView struct {
	AttributeOptionComboDisplayName *string  `json:"attributeOptionComboDisplayName,omitempty"`
	AttributeOptionComboId          *string  `json:"attributeOptionComboId,omitempty"`
	Importance                      *string  `json:"importance,omitempty"`
	LeftSideValue                   *float64 `json:"leftSideValue,omitempty"`
	Operator                        *string  `json:"operator,omitempty"`
	OrganisationUnitAncestorNames   *string  `json:"organisationUnitAncestorNames,omitempty"`
	OrganisationUnitDisplayName     *string  `json:"organisationUnitDisplayName,omitempty"`
	OrganisationUnitId              *string  `json:"organisationUnitId,omitempty"`
	OrganisationUnitPath            *string  `json:"organisationUnitPath,omitempty"`
	PeriodDisplayName               *string  `json:"periodDisplayName,omitempty"`
	PeriodId                        *string  `json:"periodId,omitempty"`
	RightSideValue                  *float64 `json:"rightSideValue,omitempty"`
	ValidationRuleDescription       *string  `json:"validationRuleDescription,omitempty"`
	ValidationRuleId                *string  `json:"validationRuleId,omitempty"`
}

// NewValidationResultView instantiates a new ValidationResultView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidationResultView() *ValidationResultView {
	this := ValidationResultView{}
	return &this
}

// NewValidationResultViewWithDefaults instantiates a new ValidationResultView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidationResultViewWithDefaults() *ValidationResultView {
	this := ValidationResultView{}
	return &this
}

// GetAttributeOptionComboDisplayName returns the AttributeOptionComboDisplayName field value if set, zero value otherwise.
func (o *ValidationResultView) GetAttributeOptionComboDisplayName() string {
	if o == nil || IsNil(o.AttributeOptionComboDisplayName) {
		var ret string
		return ret
	}
	return *o.AttributeOptionComboDisplayName
}

// GetAttributeOptionComboDisplayNameOk returns a tuple with the AttributeOptionComboDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetAttributeOptionComboDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeOptionComboDisplayName) {
		return nil, false
	}
	return o.AttributeOptionComboDisplayName, true
}

// HasAttributeOptionComboDisplayName returns a boolean if a field has been set.
func (o *ValidationResultView) HasAttributeOptionComboDisplayName() bool {
	if o != nil && !IsNil(o.AttributeOptionComboDisplayName) {
		return true
	}

	return false
}

// SetAttributeOptionComboDisplayName gets a reference to the given string and assigns it to the AttributeOptionComboDisplayName field.
func (o *ValidationResultView) SetAttributeOptionComboDisplayName(v string) {
	o.AttributeOptionComboDisplayName = &v
}

// GetAttributeOptionComboId returns the AttributeOptionComboId field value if set, zero value otherwise.
func (o *ValidationResultView) GetAttributeOptionComboId() string {
	if o == nil || IsNil(o.AttributeOptionComboId) {
		var ret string
		return ret
	}
	return *o.AttributeOptionComboId
}

// GetAttributeOptionComboIdOk returns a tuple with the AttributeOptionComboId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetAttributeOptionComboIdOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeOptionComboId) {
		return nil, false
	}
	return o.AttributeOptionComboId, true
}

// HasAttributeOptionComboId returns a boolean if a field has been set.
func (o *ValidationResultView) HasAttributeOptionComboId() bool {
	if o != nil && !IsNil(o.AttributeOptionComboId) {
		return true
	}

	return false
}

// SetAttributeOptionComboId gets a reference to the given string and assigns it to the AttributeOptionComboId field.
func (o *ValidationResultView) SetAttributeOptionComboId(v string) {
	o.AttributeOptionComboId = &v
}

// GetImportance returns the Importance field value if set, zero value otherwise.
func (o *ValidationResultView) GetImportance() string {
	if o == nil || IsNil(o.Importance) {
		var ret string
		return ret
	}
	return *o.Importance
}

// GetImportanceOk returns a tuple with the Importance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetImportanceOk() (*string, bool) {
	if o == nil || IsNil(o.Importance) {
		return nil, false
	}
	return o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *ValidationResultView) HasImportance() bool {
	if o != nil && !IsNil(o.Importance) {
		return true
	}

	return false
}

// SetImportance gets a reference to the given string and assigns it to the Importance field.
func (o *ValidationResultView) SetImportance(v string) {
	o.Importance = &v
}

// GetLeftSideValue returns the LeftSideValue field value if set, zero value otherwise.
func (o *ValidationResultView) GetLeftSideValue() float64 {
	if o == nil || IsNil(o.LeftSideValue) {
		var ret float64
		return ret
	}
	return *o.LeftSideValue
}

// GetLeftSideValueOk returns a tuple with the LeftSideValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetLeftSideValueOk() (*float64, bool) {
	if o == nil || IsNil(o.LeftSideValue) {
		return nil, false
	}
	return o.LeftSideValue, true
}

// HasLeftSideValue returns a boolean if a field has been set.
func (o *ValidationResultView) HasLeftSideValue() bool {
	if o != nil && !IsNil(o.LeftSideValue) {
		return true
	}

	return false
}

// SetLeftSideValue gets a reference to the given float64 and assigns it to the LeftSideValue field.
func (o *ValidationResultView) SetLeftSideValue(v float64) {
	o.LeftSideValue = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *ValidationResultView) GetOperator() string {
	if o == nil || IsNil(o.Operator) {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetOperatorOk() (*string, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *ValidationResultView) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *ValidationResultView) SetOperator(v string) {
	o.Operator = &v
}

// GetOrganisationUnitAncestorNames returns the OrganisationUnitAncestorNames field value if set, zero value otherwise.
func (o *ValidationResultView) GetOrganisationUnitAncestorNames() string {
	if o == nil || IsNil(o.OrganisationUnitAncestorNames) {
		var ret string
		return ret
	}
	return *o.OrganisationUnitAncestorNames
}

// GetOrganisationUnitAncestorNamesOk returns a tuple with the OrganisationUnitAncestorNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetOrganisationUnitAncestorNamesOk() (*string, bool) {
	if o == nil || IsNil(o.OrganisationUnitAncestorNames) {
		return nil, false
	}
	return o.OrganisationUnitAncestorNames, true
}

// HasOrganisationUnitAncestorNames returns a boolean if a field has been set.
func (o *ValidationResultView) HasOrganisationUnitAncestorNames() bool {
	if o != nil && !IsNil(o.OrganisationUnitAncestorNames) {
		return true
	}

	return false
}

// SetOrganisationUnitAncestorNames gets a reference to the given string and assigns it to the OrganisationUnitAncestorNames field.
func (o *ValidationResultView) SetOrganisationUnitAncestorNames(v string) {
	o.OrganisationUnitAncestorNames = &v
}

// GetOrganisationUnitDisplayName returns the OrganisationUnitDisplayName field value if set, zero value otherwise.
func (o *ValidationResultView) GetOrganisationUnitDisplayName() string {
	if o == nil || IsNil(o.OrganisationUnitDisplayName) {
		var ret string
		return ret
	}
	return *o.OrganisationUnitDisplayName
}

// GetOrganisationUnitDisplayNameOk returns a tuple with the OrganisationUnitDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetOrganisationUnitDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganisationUnitDisplayName) {
		return nil, false
	}
	return o.OrganisationUnitDisplayName, true
}

// HasOrganisationUnitDisplayName returns a boolean if a field has been set.
func (o *ValidationResultView) HasOrganisationUnitDisplayName() bool {
	if o != nil && !IsNil(o.OrganisationUnitDisplayName) {
		return true
	}

	return false
}

// SetOrganisationUnitDisplayName gets a reference to the given string and assigns it to the OrganisationUnitDisplayName field.
func (o *ValidationResultView) SetOrganisationUnitDisplayName(v string) {
	o.OrganisationUnitDisplayName = &v
}

// GetOrganisationUnitId returns the OrganisationUnitId field value if set, zero value otherwise.
func (o *ValidationResultView) GetOrganisationUnitId() string {
	if o == nil || IsNil(o.OrganisationUnitId) {
		var ret string
		return ret
	}
	return *o.OrganisationUnitId
}

// GetOrganisationUnitIdOk returns a tuple with the OrganisationUnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetOrganisationUnitIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganisationUnitId) {
		return nil, false
	}
	return o.OrganisationUnitId, true
}

// HasOrganisationUnitId returns a boolean if a field has been set.
func (o *ValidationResultView) HasOrganisationUnitId() bool {
	if o != nil && !IsNil(o.OrganisationUnitId) {
		return true
	}

	return false
}

// SetOrganisationUnitId gets a reference to the given string and assigns it to the OrganisationUnitId field.
func (o *ValidationResultView) SetOrganisationUnitId(v string) {
	o.OrganisationUnitId = &v
}

// GetOrganisationUnitPath returns the OrganisationUnitPath field value if set, zero value otherwise.
func (o *ValidationResultView) GetOrganisationUnitPath() string {
	if o == nil || IsNil(o.OrganisationUnitPath) {
		var ret string
		return ret
	}
	return *o.OrganisationUnitPath
}

// GetOrganisationUnitPathOk returns a tuple with the OrganisationUnitPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetOrganisationUnitPathOk() (*string, bool) {
	if o == nil || IsNil(o.OrganisationUnitPath) {
		return nil, false
	}
	return o.OrganisationUnitPath, true
}

// HasOrganisationUnitPath returns a boolean if a field has been set.
func (o *ValidationResultView) HasOrganisationUnitPath() bool {
	if o != nil && !IsNil(o.OrganisationUnitPath) {
		return true
	}

	return false
}

// SetOrganisationUnitPath gets a reference to the given string and assigns it to the OrganisationUnitPath field.
func (o *ValidationResultView) SetOrganisationUnitPath(v string) {
	o.OrganisationUnitPath = &v
}

// GetPeriodDisplayName returns the PeriodDisplayName field value if set, zero value otherwise.
func (o *ValidationResultView) GetPeriodDisplayName() string {
	if o == nil || IsNil(o.PeriodDisplayName) {
		var ret string
		return ret
	}
	return *o.PeriodDisplayName
}

// GetPeriodDisplayNameOk returns a tuple with the PeriodDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetPeriodDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodDisplayName) {
		return nil, false
	}
	return o.PeriodDisplayName, true
}

// HasPeriodDisplayName returns a boolean if a field has been set.
func (o *ValidationResultView) HasPeriodDisplayName() bool {
	if o != nil && !IsNil(o.PeriodDisplayName) {
		return true
	}

	return false
}

// SetPeriodDisplayName gets a reference to the given string and assigns it to the PeriodDisplayName field.
func (o *ValidationResultView) SetPeriodDisplayName(v string) {
	o.PeriodDisplayName = &v
}

// GetPeriodId returns the PeriodId field value if set, zero value otherwise.
func (o *ValidationResultView) GetPeriodId() string {
	if o == nil || IsNil(o.PeriodId) {
		var ret string
		return ret
	}
	return *o.PeriodId
}

// GetPeriodIdOk returns a tuple with the PeriodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetPeriodIdOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodId) {
		return nil, false
	}
	return o.PeriodId, true
}

// HasPeriodId returns a boolean if a field has been set.
func (o *ValidationResultView) HasPeriodId() bool {
	if o != nil && !IsNil(o.PeriodId) {
		return true
	}

	return false
}

// SetPeriodId gets a reference to the given string and assigns it to the PeriodId field.
func (o *ValidationResultView) SetPeriodId(v string) {
	o.PeriodId = &v
}

// GetRightSideValue returns the RightSideValue field value if set, zero value otherwise.
func (o *ValidationResultView) GetRightSideValue() float64 {
	if o == nil || IsNil(o.RightSideValue) {
		var ret float64
		return ret
	}
	return *o.RightSideValue
}

// GetRightSideValueOk returns a tuple with the RightSideValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetRightSideValueOk() (*float64, bool) {
	if o == nil || IsNil(o.RightSideValue) {
		return nil, false
	}
	return o.RightSideValue, true
}

// HasRightSideValue returns a boolean if a field has been set.
func (o *ValidationResultView) HasRightSideValue() bool {
	if o != nil && !IsNil(o.RightSideValue) {
		return true
	}

	return false
}

// SetRightSideValue gets a reference to the given float64 and assigns it to the RightSideValue field.
func (o *ValidationResultView) SetRightSideValue(v float64) {
	o.RightSideValue = &v
}

// GetValidationRuleDescription returns the ValidationRuleDescription field value if set, zero value otherwise.
func (o *ValidationResultView) GetValidationRuleDescription() string {
	if o == nil || IsNil(o.ValidationRuleDescription) {
		var ret string
		return ret
	}
	return *o.ValidationRuleDescription
}

// GetValidationRuleDescriptionOk returns a tuple with the ValidationRuleDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetValidationRuleDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationRuleDescription) {
		return nil, false
	}
	return o.ValidationRuleDescription, true
}

// HasValidationRuleDescription returns a boolean if a field has been set.
func (o *ValidationResultView) HasValidationRuleDescription() bool {
	if o != nil && !IsNil(o.ValidationRuleDescription) {
		return true
	}

	return false
}

// SetValidationRuleDescription gets a reference to the given string and assigns it to the ValidationRuleDescription field.
func (o *ValidationResultView) SetValidationRuleDescription(v string) {
	o.ValidationRuleDescription = &v
}

// GetValidationRuleId returns the ValidationRuleId field value if set, zero value otherwise.
func (o *ValidationResultView) GetValidationRuleId() string {
	if o == nil || IsNil(o.ValidationRuleId) {
		var ret string
		return ret
	}
	return *o.ValidationRuleId
}

// GetValidationRuleIdOk returns a tuple with the ValidationRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResultView) GetValidationRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationRuleId) {
		return nil, false
	}
	return o.ValidationRuleId, true
}

// HasValidationRuleId returns a boolean if a field has been set.
func (o *ValidationResultView) HasValidationRuleId() bool {
	if o != nil && !IsNil(o.ValidationRuleId) {
		return true
	}

	return false
}

// SetValidationRuleId gets a reference to the given string and assigns it to the ValidationRuleId field.
func (o *ValidationResultView) SetValidationRuleId(v string) {
	o.ValidationRuleId = &v
}

func (o ValidationResultView) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidationResultView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeOptionComboDisplayName) {
		toSerialize["attributeOptionComboDisplayName"] = o.AttributeOptionComboDisplayName
	}
	if !IsNil(o.AttributeOptionComboId) {
		toSerialize["attributeOptionComboId"] = o.AttributeOptionComboId
	}
	if !IsNil(o.Importance) {
		toSerialize["importance"] = o.Importance
	}
	if !IsNil(o.LeftSideValue) {
		toSerialize["leftSideValue"] = o.LeftSideValue
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	if !IsNil(o.OrganisationUnitAncestorNames) {
		toSerialize["organisationUnitAncestorNames"] = o.OrganisationUnitAncestorNames
	}
	if !IsNil(o.OrganisationUnitDisplayName) {
		toSerialize["organisationUnitDisplayName"] = o.OrganisationUnitDisplayName
	}
	if !IsNil(o.OrganisationUnitId) {
		toSerialize["organisationUnitId"] = o.OrganisationUnitId
	}
	if !IsNil(o.OrganisationUnitPath) {
		toSerialize["organisationUnitPath"] = o.OrganisationUnitPath
	}
	if !IsNil(o.PeriodDisplayName) {
		toSerialize["periodDisplayName"] = o.PeriodDisplayName
	}
	if !IsNil(o.PeriodId) {
		toSerialize["periodId"] = o.PeriodId
	}
	if !IsNil(o.RightSideValue) {
		toSerialize["rightSideValue"] = o.RightSideValue
	}
	if !IsNil(o.ValidationRuleDescription) {
		toSerialize["validationRuleDescription"] = o.ValidationRuleDescription
	}
	if !IsNil(o.ValidationRuleId) {
		toSerialize["validationRuleId"] = o.ValidationRuleId
	}
	return toSerialize, nil
}

type NullableValidationResultView struct {
	value *ValidationResultView
	isSet bool
}

func (v NullableValidationResultView) Get() *ValidationResultView {
	return v.value
}

func (v *NullableValidationResultView) Set(val *ValidationResultView) {
	v.value = val
	v.isSet = true
}

func (v NullableValidationResultView) IsSet() bool {
	return v.isSet
}

func (v *NullableValidationResultView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidationResultView(val *ValidationResultView) *NullableValidationResultView {
	return &NullableValidationResultView{value: val, isSet: true}
}

func (v NullableValidationResultView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidationResultView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
