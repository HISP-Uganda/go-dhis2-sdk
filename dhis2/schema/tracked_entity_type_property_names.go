/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// TrackedEntityTypePropertyNames the model 'TrackedEntityTypePropertyNames'
type TrackedEntityTypePropertyNames string

// List of TrackedEntityTypePropertyNames
const (
	TRACKEDENTITYTYPEPROPERTYNAMES_ACCESS                            TrackedEntityTypePropertyNames = "access"
	TRACKEDENTITYTYPEPROPERTYNAMES_ALLOW_AUDIT_LOG                   TrackedEntityTypePropertyNames = "allowAuditLog"
	TRACKEDENTITYTYPEPROPERTYNAMES_ATTRIBUTE_VALUES                  TrackedEntityTypePropertyNames = "attributeValues"
	TRACKEDENTITYTYPEPROPERTYNAMES_CODE                              TrackedEntityTypePropertyNames = "code"
	TRACKEDENTITYTYPEPROPERTYNAMES_CREATED                           TrackedEntityTypePropertyNames = "created"
	TRACKEDENTITYTYPEPROPERTYNAMES_CREATED_BY                        TrackedEntityTypePropertyNames = "createdBy"
	TRACKEDENTITYTYPEPROPERTYNAMES_DESCRIPTION                       TrackedEntityTypePropertyNames = "description"
	TRACKEDENTITYTYPEPROPERTYNAMES_DISPLAY_DESCRIPTION               TrackedEntityTypePropertyNames = "displayDescription"
	TRACKEDENTITYTYPEPROPERTYNAMES_DISPLAY_FORM_NAME                 TrackedEntityTypePropertyNames = "displayFormName"
	TRACKEDENTITYTYPEPROPERTYNAMES_DISPLAY_NAME                      TrackedEntityTypePropertyNames = "displayName"
	TRACKEDENTITYTYPEPROPERTYNAMES_DISPLAY_SHORT_NAME                TrackedEntityTypePropertyNames = "displayShortName"
	TRACKEDENTITYTYPEPROPERTYNAMES_FAVORITE                          TrackedEntityTypePropertyNames = "favorite"
	TRACKEDENTITYTYPEPROPERTYNAMES_FAVORITES                         TrackedEntityTypePropertyNames = "favorites"
	TRACKEDENTITYTYPEPROPERTYNAMES_FEATURE_TYPE                      TrackedEntityTypePropertyNames = "featureType"
	TRACKEDENTITYTYPEPROPERTYNAMES_FORM_NAME                         TrackedEntityTypePropertyNames = "formName"
	TRACKEDENTITYTYPEPROPERTYNAMES_HREF                              TrackedEntityTypePropertyNames = "href"
	TRACKEDENTITYTYPEPROPERTYNAMES_ID                                TrackedEntityTypePropertyNames = "id"
	TRACKEDENTITYTYPEPROPERTYNAMES_LAST_UPDATED                      TrackedEntityTypePropertyNames = "lastUpdated"
	TRACKEDENTITYTYPEPROPERTYNAMES_LAST_UPDATED_BY                   TrackedEntityTypePropertyNames = "lastUpdatedBy"
	TRACKEDENTITYTYPEPROPERTYNAMES_MAX_TEI_COUNT_TO_RETURN           TrackedEntityTypePropertyNames = "maxTeiCountToReturn"
	TRACKEDENTITYTYPEPROPERTYNAMES_MIN_ATTRIBUTES_REQUIRED_TO_SEARCH TrackedEntityTypePropertyNames = "minAttributesRequiredToSearch"
	TRACKEDENTITYTYPEPROPERTYNAMES_NAME                              TrackedEntityTypePropertyNames = "name"
	TRACKEDENTITYTYPEPROPERTYNAMES_SHARING                           TrackedEntityTypePropertyNames = "sharing"
	TRACKEDENTITYTYPEPROPERTYNAMES_SHORT_NAME                        TrackedEntityTypePropertyNames = "shortName"
	TRACKEDENTITYTYPEPROPERTYNAMES_STYLE                             TrackedEntityTypePropertyNames = "style"
	TRACKEDENTITYTYPEPROPERTYNAMES_TRACKED_ENTITY_TYPE_ATTRIBUTES    TrackedEntityTypePropertyNames = "trackedEntityTypeAttributes"
	TRACKEDENTITYTYPEPROPERTYNAMES_TRANSLATIONS                      TrackedEntityTypePropertyNames = "translations"
)

// All allowed values of TrackedEntityTypePropertyNames enum
var AllowedTrackedEntityTypePropertyNamesEnumValues = []TrackedEntityTypePropertyNames{
	"access",
	"allowAuditLog",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"description",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"favorite",
	"favorites",
	"featureType",
	"formName",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"maxTeiCountToReturn",
	"minAttributesRequiredToSearch",
	"name",
	"sharing",
	"shortName",
	"style",
	"trackedEntityTypeAttributes",
	"translations",
}

func (v *TrackedEntityTypePropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TrackedEntityTypePropertyNames(value)
	for _, existing := range AllowedTrackedEntityTypePropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TrackedEntityTypePropertyNames", value)
}

// NewTrackedEntityTypePropertyNamesFromValue returns a pointer to a valid TrackedEntityTypePropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTrackedEntityTypePropertyNamesFromValue(v string) (*TrackedEntityTypePropertyNames, error) {
	ev := TrackedEntityTypePropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TrackedEntityTypePropertyNames: valid values are %v", v, AllowedTrackedEntityTypePropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TrackedEntityTypePropertyNames) IsValid() bool {
	for _, existing := range AllowedTrackedEntityTypePropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TrackedEntityTypePropertyNames value
func (v TrackedEntityTypePropertyNames) Ptr() *TrackedEntityTypePropertyNames {
	return &v
}

type NullableTrackedEntityTypePropertyNames struct {
	value *TrackedEntityTypePropertyNames
	isSet bool
}

func (v NullableTrackedEntityTypePropertyNames) Get() *TrackedEntityTypePropertyNames {
	return v.value
}

func (v *NullableTrackedEntityTypePropertyNames) Set(val *TrackedEntityTypePropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackedEntityTypePropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackedEntityTypePropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackedEntityTypePropertyNames(val *TrackedEntityTypePropertyNames) *NullableTrackedEntityTypePropertyNames {
	return &NullableTrackedEntityTypePropertyNames{value: val, isSet: true}
}

func (v NullableTrackedEntityTypePropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackedEntityTypePropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
