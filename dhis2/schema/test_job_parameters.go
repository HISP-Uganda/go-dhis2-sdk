/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TestJobParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestJobParameters{}

// TestJobParameters struct for TestJobParameters
type TestJobParameters struct {
	FailAtItem        *int32  `json:"failAtItem,omitempty"`
	FailAtStage       *int32  `json:"failAtStage,omitempty"`
	FailWithException *bool   `json:"failWithException,omitempty"`
	FailWithMessage   *string `json:"failWithMessage,omitempty"`
	FailWithPolicy    string  `json:"failWithPolicy"`
	ItemDuration      *int64  `json:"itemDuration,omitempty"`
	Items             *int32  `json:"items,omitempty"`
	RunStagesParallel *bool   `json:"runStagesParallel,omitempty"`
	Stages            *int32  `json:"stages,omitempty"`
	WaitMillis        *int64  `json:"waitMillis,omitempty"`
}

type _TestJobParameters TestJobParameters

// NewTestJobParameters instantiates a new TestJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestJobParameters(failWithPolicy string) *TestJobParameters {
	this := TestJobParameters{}
	this.FailWithPolicy = failWithPolicy
	return &this
}

// NewTestJobParametersWithDefaults instantiates a new TestJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestJobParametersWithDefaults() *TestJobParameters {
	this := TestJobParameters{}
	return &this
}

// GetFailAtItem returns the FailAtItem field value if set, zero value otherwise.
func (o *TestJobParameters) GetFailAtItem() int32 {
	if o == nil || IsNil(o.FailAtItem) {
		var ret int32
		return ret
	}
	return *o.FailAtItem
}

// GetFailAtItemOk returns a tuple with the FailAtItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestJobParameters) GetFailAtItemOk() (*int32, bool) {
	if o == nil || IsNil(o.FailAtItem) {
		return nil, false
	}
	return o.FailAtItem, true
}

// HasFailAtItem returns a boolean if a field has been set.
func (o *TestJobParameters) HasFailAtItem() bool {
	if o != nil && !IsNil(o.FailAtItem) {
		return true
	}

	return false
}

// SetFailAtItem gets a reference to the given int32 and assigns it to the FailAtItem field.
func (o *TestJobParameters) SetFailAtItem(v int32) {
	o.FailAtItem = &v
}

// GetFailAtStage returns the FailAtStage field value if set, zero value otherwise.
func (o *TestJobParameters) GetFailAtStage() int32 {
	if o == nil || IsNil(o.FailAtStage) {
		var ret int32
		return ret
	}
	return *o.FailAtStage
}

// GetFailAtStageOk returns a tuple with the FailAtStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestJobParameters) GetFailAtStageOk() (*int32, bool) {
	if o == nil || IsNil(o.FailAtStage) {
		return nil, false
	}
	return o.FailAtStage, true
}

// HasFailAtStage returns a boolean if a field has been set.
func (o *TestJobParameters) HasFailAtStage() bool {
	if o != nil && !IsNil(o.FailAtStage) {
		return true
	}

	return false
}

// SetFailAtStage gets a reference to the given int32 and assigns it to the FailAtStage field.
func (o *TestJobParameters) SetFailAtStage(v int32) {
	o.FailAtStage = &v
}

// GetFailWithException returns the FailWithException field value if set, zero value otherwise.
func (o *TestJobParameters) GetFailWithException() bool {
	if o == nil || IsNil(o.FailWithException) {
		var ret bool
		return ret
	}
	return *o.FailWithException
}

// GetFailWithExceptionOk returns a tuple with the FailWithException field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestJobParameters) GetFailWithExceptionOk() (*bool, bool) {
	if o == nil || IsNil(o.FailWithException) {
		return nil, false
	}
	return o.FailWithException, true
}

// HasFailWithException returns a boolean if a field has been set.
func (o *TestJobParameters) HasFailWithException() bool {
	if o != nil && !IsNil(o.FailWithException) {
		return true
	}

	return false
}

// SetFailWithException gets a reference to the given bool and assigns it to the FailWithException field.
func (o *TestJobParameters) SetFailWithException(v bool) {
	o.FailWithException = &v
}

// GetFailWithMessage returns the FailWithMessage field value if set, zero value otherwise.
func (o *TestJobParameters) GetFailWithMessage() string {
	if o == nil || IsNil(o.FailWithMessage) {
		var ret string
		return ret
	}
	return *o.FailWithMessage
}

// GetFailWithMessageOk returns a tuple with the FailWithMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestJobParameters) GetFailWithMessageOk() (*string, bool) {
	if o == nil || IsNil(o.FailWithMessage) {
		return nil, false
	}
	return o.FailWithMessage, true
}

// HasFailWithMessage returns a boolean if a field has been set.
func (o *TestJobParameters) HasFailWithMessage() bool {
	if o != nil && !IsNil(o.FailWithMessage) {
		return true
	}

	return false
}

// SetFailWithMessage gets a reference to the given string and assigns it to the FailWithMessage field.
func (o *TestJobParameters) SetFailWithMessage(v string) {
	o.FailWithMessage = &v
}

// GetFailWithPolicy returns the FailWithPolicy field value
func (o *TestJobParameters) GetFailWithPolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FailWithPolicy
}

// GetFailWithPolicyOk returns a tuple with the FailWithPolicy field value
// and a boolean to check if the value has been set.
func (o *TestJobParameters) GetFailWithPolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailWithPolicy, true
}

// SetFailWithPolicy sets field value
func (o *TestJobParameters) SetFailWithPolicy(v string) {
	o.FailWithPolicy = v
}

// GetItemDuration returns the ItemDuration field value if set, zero value otherwise.
func (o *TestJobParameters) GetItemDuration() int64 {
	if o == nil || IsNil(o.ItemDuration) {
		var ret int64
		return ret
	}
	return *o.ItemDuration
}

// GetItemDurationOk returns a tuple with the ItemDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestJobParameters) GetItemDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.ItemDuration) {
		return nil, false
	}
	return o.ItemDuration, true
}

// HasItemDuration returns a boolean if a field has been set.
func (o *TestJobParameters) HasItemDuration() bool {
	if o != nil && !IsNil(o.ItemDuration) {
		return true
	}

	return false
}

// SetItemDuration gets a reference to the given int64 and assigns it to the ItemDuration field.
func (o *TestJobParameters) SetItemDuration(v int64) {
	o.ItemDuration = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *TestJobParameters) GetItems() int32 {
	if o == nil || IsNil(o.Items) {
		var ret int32
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestJobParameters) GetItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *TestJobParameters) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given int32 and assigns it to the Items field.
func (o *TestJobParameters) SetItems(v int32) {
	o.Items = &v
}

// GetRunStagesParallel returns the RunStagesParallel field value if set, zero value otherwise.
func (o *TestJobParameters) GetRunStagesParallel() bool {
	if o == nil || IsNil(o.RunStagesParallel) {
		var ret bool
		return ret
	}
	return *o.RunStagesParallel
}

// GetRunStagesParallelOk returns a tuple with the RunStagesParallel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestJobParameters) GetRunStagesParallelOk() (*bool, bool) {
	if o == nil || IsNil(o.RunStagesParallel) {
		return nil, false
	}
	return o.RunStagesParallel, true
}

// HasRunStagesParallel returns a boolean if a field has been set.
func (o *TestJobParameters) HasRunStagesParallel() bool {
	if o != nil && !IsNil(o.RunStagesParallel) {
		return true
	}

	return false
}

// SetRunStagesParallel gets a reference to the given bool and assigns it to the RunStagesParallel field.
func (o *TestJobParameters) SetRunStagesParallel(v bool) {
	o.RunStagesParallel = &v
}

// GetStages returns the Stages field value if set, zero value otherwise.
func (o *TestJobParameters) GetStages() int32 {
	if o == nil || IsNil(o.Stages) {
		var ret int32
		return ret
	}
	return *o.Stages
}

// GetStagesOk returns a tuple with the Stages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestJobParameters) GetStagesOk() (*int32, bool) {
	if o == nil || IsNil(o.Stages) {
		return nil, false
	}
	return o.Stages, true
}

// HasStages returns a boolean if a field has been set.
func (o *TestJobParameters) HasStages() bool {
	if o != nil && !IsNil(o.Stages) {
		return true
	}

	return false
}

// SetStages gets a reference to the given int32 and assigns it to the Stages field.
func (o *TestJobParameters) SetStages(v int32) {
	o.Stages = &v
}

// GetWaitMillis returns the WaitMillis field value if set, zero value otherwise.
func (o *TestJobParameters) GetWaitMillis() int64 {
	if o == nil || IsNil(o.WaitMillis) {
		var ret int64
		return ret
	}
	return *o.WaitMillis
}

// GetWaitMillisOk returns a tuple with the WaitMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestJobParameters) GetWaitMillisOk() (*int64, bool) {
	if o == nil || IsNil(o.WaitMillis) {
		return nil, false
	}
	return o.WaitMillis, true
}

// HasWaitMillis returns a boolean if a field has been set.
func (o *TestJobParameters) HasWaitMillis() bool {
	if o != nil && !IsNil(o.WaitMillis) {
		return true
	}

	return false
}

// SetWaitMillis gets a reference to the given int64 and assigns it to the WaitMillis field.
func (o *TestJobParameters) SetWaitMillis(v int64) {
	o.WaitMillis = &v
}

func (o TestJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestJobParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FailAtItem) {
		toSerialize["failAtItem"] = o.FailAtItem
	}
	if !IsNil(o.FailAtStage) {
		toSerialize["failAtStage"] = o.FailAtStage
	}
	if !IsNil(o.FailWithException) {
		toSerialize["failWithException"] = o.FailWithException
	}
	if !IsNil(o.FailWithMessage) {
		toSerialize["failWithMessage"] = o.FailWithMessage
	}
	toSerialize["failWithPolicy"] = o.FailWithPolicy
	if !IsNil(o.ItemDuration) {
		toSerialize["itemDuration"] = o.ItemDuration
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.RunStagesParallel) {
		toSerialize["runStagesParallel"] = o.RunStagesParallel
	}
	if !IsNil(o.Stages) {
		toSerialize["stages"] = o.Stages
	}
	if !IsNil(o.WaitMillis) {
		toSerialize["waitMillis"] = o.WaitMillis
	}
	return toSerialize, nil
}

func (o *TestJobParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"failWithPolicy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestJobParameters := _TestJobParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestJobParameters)

	if err != nil {
		return err
	}

	*o = TestJobParameters(varTestJobParameters)

	return err
}

type NullableTestJobParameters struct {
	value *TestJobParameters
	isSet bool
}

func (v NullableTestJobParameters) Get() *TestJobParameters {
	return v.value
}

func (v *NullableTestJobParameters) Set(val *TestJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableTestJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableTestJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestJobParameters(val *TestJobParameters) *NullableTestJobParameters {
	return &NullableTestJobParameters{value: val, isSet: true}
}

func (v NullableTestJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
