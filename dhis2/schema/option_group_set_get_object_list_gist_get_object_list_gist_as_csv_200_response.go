/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response - struct for OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response
type OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response struct {
	OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfOptionGroupSet                                                 *[]OptionGroupSet
}

// OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response
func OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response(v *OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response {
	return OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response{
		OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []OptionGroupSetAsOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []OptionGroupSet wrapped in OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfOptionGroupSetAsOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response(v *[]OptionGroupSet) OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response {
	return OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfOptionGroupSet: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfOptionGroupSet
	err = newStrictDecoder(data).Decode(&dst.ArrayOfOptionGroupSet)
	if err == nil {
		jsonArrayOfOptionGroupSet, _ := json.Marshal(dst.ArrayOfOptionGroupSet)
		if string(jsonArrayOfOptionGroupSet) == "{}" { // empty struct
			dst.ArrayOfOptionGroupSet = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfOptionGroupSet = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfOptionGroupSet = nil

		return fmt.Errorf("data matches more than one schema in oneOf(OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfOptionGroupSet != nil {
		return json.Marshal(&src.ArrayOfOptionGroupSet)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfOptionGroupSet != nil {
		return obj.ArrayOfOptionGroupSet
	}

	// all schemas are nil
	return nil
}

type NullableOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) Get() *OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response(val *OptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) *NullableOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
