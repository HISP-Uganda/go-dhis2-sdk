/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ProgramIndicatorParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramIndicatorParams{}

// ProgramIndicatorParams struct for ProgramIndicatorParams
type ProgramIndicatorParams struct {
	AggregateExportAttributeOptionCombo *string                                             `json:"aggregateExportAttributeOptionCombo,omitempty"`
	AggregateExportCategoryOptionCombo  *string                                             `json:"aggregateExportCategoryOptionCombo,omitempty"`
	AggregateExportDataElement          *string                                             `json:"aggregateExportDataElement,omitempty"`
	AggregationType                     AggregationType                                     `json:"aggregationType"`
	AnalyticsPeriodBoundaries           []AnalyticsPeriodBoundaryParams                     `json:"analyticsPeriodBoundaries,omitempty"`
	AnalyticsType                       AnalyticsType                                       `json:"analyticsType"`
	AttributeCombo                      *CategoryComboParams                                `json:"attributeCombo,omitempty"`
	AttributeValues                     []AttributeValueParams                              `json:"attributeValues,omitempty"`
	CategoryCombo                       *CategoryComboParams                                `json:"categoryCombo,omitempty"`
	CategoryMappingIds                  []string                                            `json:"categoryMappingIds,omitempty"`
	Code                                *string                                             `json:"code,omitempty"`
	Created                             *time.Time                                          `json:"created,omitempty"`
	CreatedBy                           *AggregateDataExchangeParamsCreatedBy               `json:"createdBy,omitempty"`
	Decimals                            *int32                                              `json:"decimals,omitempty"`
	Description                         *string                                             `json:"description,omitempty"`
	DimensionItem                       *string                                             `json:"dimensionItem,omitempty"`
	DisplayDescription                  *string                                             `json:"displayDescription,omitempty"`
	DisplayFormName                     *string                                             `json:"displayFormName,omitempty"`
	DisplayInForm                       *bool                                               `json:"displayInForm,omitempty"`
	DisplayName                         *string                                             `json:"displayName,omitempty"`
	DisplayShortName                    *string                                             `json:"displayShortName,omitempty"`
	Expression                          *string                                             `json:"expression,omitempty"`
	Favorite                            *bool                                               `json:"favorite,omitempty"`
	Favorites                           []string                                            `json:"favorites,omitempty"`
	Filter                              *string                                             `json:"filter,omitempty"`
	FormName                            *string                                             `json:"formName,omitempty"`
	Id                                  *string                                             `json:"id,omitempty"`
	LastUpdated                         *time.Time                                          `json:"lastUpdated,omitempty"`
	LastUpdatedBy                       *AggregateDataExchangeParamsCreatedBy               `json:"lastUpdatedBy,omitempty"`
	LegendSet                           *CategoryOptionComboParamsLegendSet                 `json:"legendSet,omitempty"`
	LegendSets                          []CategoryOptionComboParamsLegendSet                `json:"legendSets,omitempty"`
	Name                                *string                                             `json:"name,omitempty"`
	OrgUnitField                        *string                                             `json:"orgUnitField,omitempty"`
	Program                             *ProgramParams                                      `json:"program,omitempty"`
	ProgramIndicatorGroups              []ProgramIndicatorParamsProgramIndicatorGroupsInner `json:"programIndicatorGroups,omitempty"`
	QueryMods                           *QueryModifiers                                     `json:"queryMods,omitempty"`
	Sharing                             *Sharing                                            `json:"sharing,omitempty"`
	ShortName                           *string                                             `json:"shortName,omitempty"`
	Style                               *ObjectStyle                                        `json:"style,omitempty"`
	Translations                        []Translation                                       `json:"translations,omitempty"`
}

type _ProgramIndicatorParams ProgramIndicatorParams

// NewProgramIndicatorParams instantiates a new ProgramIndicatorParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramIndicatorParams(aggregationType AggregationType, analyticsType AnalyticsType) *ProgramIndicatorParams {
	this := ProgramIndicatorParams{}
	this.AggregationType = aggregationType
	this.AnalyticsType = analyticsType
	return &this
}

// NewProgramIndicatorParamsWithDefaults instantiates a new ProgramIndicatorParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramIndicatorParamsWithDefaults() *ProgramIndicatorParams {
	this := ProgramIndicatorParams{}
	return &this
}

// GetAggregateExportAttributeOptionCombo returns the AggregateExportAttributeOptionCombo field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetAggregateExportAttributeOptionCombo() string {
	if o == nil || IsNil(o.AggregateExportAttributeOptionCombo) {
		var ret string
		return ret
	}
	return *o.AggregateExportAttributeOptionCombo
}

// GetAggregateExportAttributeOptionComboOk returns a tuple with the AggregateExportAttributeOptionCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetAggregateExportAttributeOptionComboOk() (*string, bool) {
	if o == nil || IsNil(o.AggregateExportAttributeOptionCombo) {
		return nil, false
	}
	return o.AggregateExportAttributeOptionCombo, true
}

// HasAggregateExportAttributeOptionCombo returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasAggregateExportAttributeOptionCombo() bool {
	if o != nil && !IsNil(o.AggregateExportAttributeOptionCombo) {
		return true
	}

	return false
}

// SetAggregateExportAttributeOptionCombo gets a reference to the given string and assigns it to the AggregateExportAttributeOptionCombo field.
func (o *ProgramIndicatorParams) SetAggregateExportAttributeOptionCombo(v string) {
	o.AggregateExportAttributeOptionCombo = &v
}

// GetAggregateExportCategoryOptionCombo returns the AggregateExportCategoryOptionCombo field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetAggregateExportCategoryOptionCombo() string {
	if o == nil || IsNil(o.AggregateExportCategoryOptionCombo) {
		var ret string
		return ret
	}
	return *o.AggregateExportCategoryOptionCombo
}

// GetAggregateExportCategoryOptionComboOk returns a tuple with the AggregateExportCategoryOptionCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetAggregateExportCategoryOptionComboOk() (*string, bool) {
	if o == nil || IsNil(o.AggregateExportCategoryOptionCombo) {
		return nil, false
	}
	return o.AggregateExportCategoryOptionCombo, true
}

// HasAggregateExportCategoryOptionCombo returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasAggregateExportCategoryOptionCombo() bool {
	if o != nil && !IsNil(o.AggregateExportCategoryOptionCombo) {
		return true
	}

	return false
}

// SetAggregateExportCategoryOptionCombo gets a reference to the given string and assigns it to the AggregateExportCategoryOptionCombo field.
func (o *ProgramIndicatorParams) SetAggregateExportCategoryOptionCombo(v string) {
	o.AggregateExportCategoryOptionCombo = &v
}

// GetAggregateExportDataElement returns the AggregateExportDataElement field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetAggregateExportDataElement() string {
	if o == nil || IsNil(o.AggregateExportDataElement) {
		var ret string
		return ret
	}
	return *o.AggregateExportDataElement
}

// GetAggregateExportDataElementOk returns a tuple with the AggregateExportDataElement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetAggregateExportDataElementOk() (*string, bool) {
	if o == nil || IsNil(o.AggregateExportDataElement) {
		return nil, false
	}
	return o.AggregateExportDataElement, true
}

// HasAggregateExportDataElement returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasAggregateExportDataElement() bool {
	if o != nil && !IsNil(o.AggregateExportDataElement) {
		return true
	}

	return false
}

// SetAggregateExportDataElement gets a reference to the given string and assigns it to the AggregateExportDataElement field.
func (o *ProgramIndicatorParams) SetAggregateExportDataElement(v string) {
	o.AggregateExportDataElement = &v
}

// GetAggregationType returns the AggregationType field value
func (o *ProgramIndicatorParams) GetAggregationType() AggregationType {
	if o == nil {
		var ret AggregationType
		return ret
	}

	return o.AggregationType
}

// GetAggregationTypeOk returns a tuple with the AggregationType field value
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetAggregationTypeOk() (*AggregationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationType, true
}

// SetAggregationType sets field value
func (o *ProgramIndicatorParams) SetAggregationType(v AggregationType) {
	o.AggregationType = v
}

// GetAnalyticsPeriodBoundaries returns the AnalyticsPeriodBoundaries field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetAnalyticsPeriodBoundaries() []AnalyticsPeriodBoundaryParams {
	if o == nil || IsNil(o.AnalyticsPeriodBoundaries) {
		var ret []AnalyticsPeriodBoundaryParams
		return ret
	}
	return o.AnalyticsPeriodBoundaries
}

// GetAnalyticsPeriodBoundariesOk returns a tuple with the AnalyticsPeriodBoundaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetAnalyticsPeriodBoundariesOk() ([]AnalyticsPeriodBoundaryParams, bool) {
	if o == nil || IsNil(o.AnalyticsPeriodBoundaries) {
		return nil, false
	}
	return o.AnalyticsPeriodBoundaries, true
}

// HasAnalyticsPeriodBoundaries returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasAnalyticsPeriodBoundaries() bool {
	if o != nil && !IsNil(o.AnalyticsPeriodBoundaries) {
		return true
	}

	return false
}

// SetAnalyticsPeriodBoundaries gets a reference to the given []AnalyticsPeriodBoundaryParams and assigns it to the AnalyticsPeriodBoundaries field.
func (o *ProgramIndicatorParams) SetAnalyticsPeriodBoundaries(v []AnalyticsPeriodBoundaryParams) {
	o.AnalyticsPeriodBoundaries = v
}

// GetAnalyticsType returns the AnalyticsType field value
func (o *ProgramIndicatorParams) GetAnalyticsType() AnalyticsType {
	if o == nil {
		var ret AnalyticsType
		return ret
	}

	return o.AnalyticsType
}

// GetAnalyticsTypeOk returns a tuple with the AnalyticsType field value
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetAnalyticsTypeOk() (*AnalyticsType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalyticsType, true
}

// SetAnalyticsType sets field value
func (o *ProgramIndicatorParams) SetAnalyticsType(v AnalyticsType) {
	o.AnalyticsType = v
}

// GetAttributeCombo returns the AttributeCombo field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetAttributeCombo() CategoryComboParams {
	if o == nil || IsNil(o.AttributeCombo) {
		var ret CategoryComboParams
		return ret
	}
	return *o.AttributeCombo
}

// GetAttributeComboOk returns a tuple with the AttributeCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetAttributeComboOk() (*CategoryComboParams, bool) {
	if o == nil || IsNil(o.AttributeCombo) {
		return nil, false
	}
	return o.AttributeCombo, true
}

// HasAttributeCombo returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasAttributeCombo() bool {
	if o != nil && !IsNil(o.AttributeCombo) {
		return true
	}

	return false
}

// SetAttributeCombo gets a reference to the given CategoryComboParams and assigns it to the AttributeCombo field.
func (o *ProgramIndicatorParams) SetAttributeCombo(v CategoryComboParams) {
	o.AttributeCombo = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetAttributeValues() []AttributeValueParams {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValueParams
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetAttributeValuesOk() ([]AttributeValueParams, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValueParams and assigns it to the AttributeValues field.
func (o *ProgramIndicatorParams) SetAttributeValues(v []AttributeValueParams) {
	o.AttributeValues = v
}

// GetCategoryCombo returns the CategoryCombo field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetCategoryCombo() CategoryComboParams {
	if o == nil || IsNil(o.CategoryCombo) {
		var ret CategoryComboParams
		return ret
	}
	return *o.CategoryCombo
}

// GetCategoryComboOk returns a tuple with the CategoryCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetCategoryComboOk() (*CategoryComboParams, bool) {
	if o == nil || IsNil(o.CategoryCombo) {
		return nil, false
	}
	return o.CategoryCombo, true
}

// HasCategoryCombo returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasCategoryCombo() bool {
	if o != nil && !IsNil(o.CategoryCombo) {
		return true
	}

	return false
}

// SetCategoryCombo gets a reference to the given CategoryComboParams and assigns it to the CategoryCombo field.
func (o *ProgramIndicatorParams) SetCategoryCombo(v CategoryComboParams) {
	o.CategoryCombo = &v
}

// GetCategoryMappingIds returns the CategoryMappingIds field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetCategoryMappingIds() []string {
	if o == nil || IsNil(o.CategoryMappingIds) {
		var ret []string
		return ret
	}
	return o.CategoryMappingIds
}

// GetCategoryMappingIdsOk returns a tuple with the CategoryMappingIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetCategoryMappingIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CategoryMappingIds) {
		return nil, false
	}
	return o.CategoryMappingIds, true
}

// HasCategoryMappingIds returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasCategoryMappingIds() bool {
	if o != nil && !IsNil(o.CategoryMappingIds) {
		return true
	}

	return false
}

// SetCategoryMappingIds gets a reference to the given []string and assigns it to the CategoryMappingIds field.
func (o *ProgramIndicatorParams) SetCategoryMappingIds(v []string) {
	o.CategoryMappingIds = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProgramIndicatorParams) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ProgramIndicatorParams) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetCreatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetCreatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the CreatedBy field.
func (o *ProgramIndicatorParams) SetCreatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.CreatedBy = &v
}

// GetDecimals returns the Decimals field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetDecimals() int32 {
	if o == nil || IsNil(o.Decimals) {
		var ret int32
		return ret
	}
	return *o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetDecimalsOk() (*int32, bool) {
	if o == nil || IsNil(o.Decimals) {
		return nil, false
	}
	return o.Decimals, true
}

// HasDecimals returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasDecimals() bool {
	if o != nil && !IsNil(o.Decimals) {
		return true
	}

	return false
}

// SetDecimals gets a reference to the given int32 and assigns it to the Decimals field.
func (o *ProgramIndicatorParams) SetDecimals(v int32) {
	o.Decimals = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProgramIndicatorParams) SetDescription(v string) {
	o.Description = &v
}

// GetDimensionItem returns the DimensionItem field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetDimensionItem() string {
	if o == nil || IsNil(o.DimensionItem) {
		var ret string
		return ret
	}
	return *o.DimensionItem
}

// GetDimensionItemOk returns a tuple with the DimensionItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetDimensionItemOk() (*string, bool) {
	if o == nil || IsNil(o.DimensionItem) {
		return nil, false
	}
	return o.DimensionItem, true
}

// HasDimensionItem returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasDimensionItem() bool {
	if o != nil && !IsNil(o.DimensionItem) {
		return true
	}

	return false
}

// SetDimensionItem gets a reference to the given string and assigns it to the DimensionItem field.
func (o *ProgramIndicatorParams) SetDimensionItem(v string) {
	o.DimensionItem = &v
}

// GetDisplayDescription returns the DisplayDescription field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetDisplayDescription() string {
	if o == nil || IsNil(o.DisplayDescription) {
		var ret string
		return ret
	}
	return *o.DisplayDescription
}

// GetDisplayDescriptionOk returns a tuple with the DisplayDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetDisplayDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDescription) {
		return nil, false
	}
	return o.DisplayDescription, true
}

// HasDisplayDescription returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasDisplayDescription() bool {
	if o != nil && !IsNil(o.DisplayDescription) {
		return true
	}

	return false
}

// SetDisplayDescription gets a reference to the given string and assigns it to the DisplayDescription field.
func (o *ProgramIndicatorParams) SetDisplayDescription(v string) {
	o.DisplayDescription = &v
}

// GetDisplayFormName returns the DisplayFormName field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetDisplayFormName() string {
	if o == nil || IsNil(o.DisplayFormName) {
		var ret string
		return ret
	}
	return *o.DisplayFormName
}

// GetDisplayFormNameOk returns a tuple with the DisplayFormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetDisplayFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayFormName) {
		return nil, false
	}
	return o.DisplayFormName, true
}

// HasDisplayFormName returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasDisplayFormName() bool {
	if o != nil && !IsNil(o.DisplayFormName) {
		return true
	}

	return false
}

// SetDisplayFormName gets a reference to the given string and assigns it to the DisplayFormName field.
func (o *ProgramIndicatorParams) SetDisplayFormName(v string) {
	o.DisplayFormName = &v
}

// GetDisplayInForm returns the DisplayInForm field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetDisplayInForm() bool {
	if o == nil || IsNil(o.DisplayInForm) {
		var ret bool
		return ret
	}
	return *o.DisplayInForm
}

// GetDisplayInFormOk returns a tuple with the DisplayInForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetDisplayInFormOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayInForm) {
		return nil, false
	}
	return o.DisplayInForm, true
}

// HasDisplayInForm returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasDisplayInForm() bool {
	if o != nil && !IsNil(o.DisplayInForm) {
		return true
	}

	return false
}

// SetDisplayInForm gets a reference to the given bool and assigns it to the DisplayInForm field.
func (o *ProgramIndicatorParams) SetDisplayInForm(v bool) {
	o.DisplayInForm = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProgramIndicatorParams) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayShortName returns the DisplayShortName field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetDisplayShortName() string {
	if o == nil || IsNil(o.DisplayShortName) {
		var ret string
		return ret
	}
	return *o.DisplayShortName
}

// GetDisplayShortNameOk returns a tuple with the DisplayShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetDisplayShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayShortName) {
		return nil, false
	}
	return o.DisplayShortName, true
}

// HasDisplayShortName returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasDisplayShortName() bool {
	if o != nil && !IsNil(o.DisplayShortName) {
		return true
	}

	return false
}

// SetDisplayShortName gets a reference to the given string and assigns it to the DisplayShortName field.
func (o *ProgramIndicatorParams) SetDisplayShortName(v string) {
	o.DisplayShortName = &v
}

// GetExpression returns the Expression field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetExpression() string {
	if o == nil || IsNil(o.Expression) {
		var ret string
		return ret
	}
	return *o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.Expression) {
		return nil, false
	}
	return o.Expression, true
}

// HasExpression returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasExpression() bool {
	if o != nil && !IsNil(o.Expression) {
		return true
	}

	return false
}

// SetExpression gets a reference to the given string and assigns it to the Expression field.
func (o *ProgramIndicatorParams) SetExpression(v string) {
	o.Expression = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ProgramIndicatorParams) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *ProgramIndicatorParams) SetFavorites(v []string) {
	o.Favorites = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *ProgramIndicatorParams) SetFilter(v string) {
	o.Filter = &v
}

// GetFormName returns the FormName field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetFormName() string {
	if o == nil || IsNil(o.FormName) {
		var ret string
		return ret
	}
	return *o.FormName
}

// GetFormNameOk returns a tuple with the FormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.FormName) {
		return nil, false
	}
	return o.FormName, true
}

// HasFormName returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasFormName() bool {
	if o != nil && !IsNil(o.FormName) {
		return true
	}

	return false
}

// SetFormName gets a reference to the given string and assigns it to the FormName field.
func (o *ProgramIndicatorParams) SetFormName(v string) {
	o.FormName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProgramIndicatorParams) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ProgramIndicatorParams) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetLastUpdatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetLastUpdatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the LastUpdatedBy field.
func (o *ProgramIndicatorParams) SetLastUpdatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetLegendSet returns the LegendSet field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetLegendSet() CategoryOptionComboParamsLegendSet {
	if o == nil || IsNil(o.LegendSet) {
		var ret CategoryOptionComboParamsLegendSet
		return ret
	}
	return *o.LegendSet
}

// GetLegendSetOk returns a tuple with the LegendSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetLegendSetOk() (*CategoryOptionComboParamsLegendSet, bool) {
	if o == nil || IsNil(o.LegendSet) {
		return nil, false
	}
	return o.LegendSet, true
}

// HasLegendSet returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasLegendSet() bool {
	if o != nil && !IsNil(o.LegendSet) {
		return true
	}

	return false
}

// SetLegendSet gets a reference to the given CategoryOptionComboParamsLegendSet and assigns it to the LegendSet field.
func (o *ProgramIndicatorParams) SetLegendSet(v CategoryOptionComboParamsLegendSet) {
	o.LegendSet = &v
}

// GetLegendSets returns the LegendSets field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetLegendSets() []CategoryOptionComboParamsLegendSet {
	if o == nil || IsNil(o.LegendSets) {
		var ret []CategoryOptionComboParamsLegendSet
		return ret
	}
	return o.LegendSets
}

// GetLegendSetsOk returns a tuple with the LegendSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetLegendSetsOk() ([]CategoryOptionComboParamsLegendSet, bool) {
	if o == nil || IsNil(o.LegendSets) {
		return nil, false
	}
	return o.LegendSets, true
}

// HasLegendSets returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasLegendSets() bool {
	if o != nil && !IsNil(o.LegendSets) {
		return true
	}

	return false
}

// SetLegendSets gets a reference to the given []CategoryOptionComboParamsLegendSet and assigns it to the LegendSets field.
func (o *ProgramIndicatorParams) SetLegendSets(v []CategoryOptionComboParamsLegendSet) {
	o.LegendSets = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProgramIndicatorParams) SetName(v string) {
	o.Name = &v
}

// GetOrgUnitField returns the OrgUnitField field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetOrgUnitField() string {
	if o == nil || IsNil(o.OrgUnitField) {
		var ret string
		return ret
	}
	return *o.OrgUnitField
}

// GetOrgUnitFieldOk returns a tuple with the OrgUnitField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetOrgUnitFieldOk() (*string, bool) {
	if o == nil || IsNil(o.OrgUnitField) {
		return nil, false
	}
	return o.OrgUnitField, true
}

// HasOrgUnitField returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasOrgUnitField() bool {
	if o != nil && !IsNil(o.OrgUnitField) {
		return true
	}

	return false
}

// SetOrgUnitField gets a reference to the given string and assigns it to the OrgUnitField field.
func (o *ProgramIndicatorParams) SetOrgUnitField(v string) {
	o.OrgUnitField = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetProgram() ProgramParams {
	if o == nil || IsNil(o.Program) {
		var ret ProgramParams
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetProgramOk() (*ProgramParams, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given ProgramParams and assigns it to the Program field.
func (o *ProgramIndicatorParams) SetProgram(v ProgramParams) {
	o.Program = &v
}

// GetProgramIndicatorGroups returns the ProgramIndicatorGroups field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetProgramIndicatorGroups() []ProgramIndicatorParamsProgramIndicatorGroupsInner {
	if o == nil || IsNil(o.ProgramIndicatorGroups) {
		var ret []ProgramIndicatorParamsProgramIndicatorGroupsInner
		return ret
	}
	return o.ProgramIndicatorGroups
}

// GetProgramIndicatorGroupsOk returns a tuple with the ProgramIndicatorGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetProgramIndicatorGroupsOk() ([]ProgramIndicatorParamsProgramIndicatorGroupsInner, bool) {
	if o == nil || IsNil(o.ProgramIndicatorGroups) {
		return nil, false
	}
	return o.ProgramIndicatorGroups, true
}

// HasProgramIndicatorGroups returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasProgramIndicatorGroups() bool {
	if o != nil && !IsNil(o.ProgramIndicatorGroups) {
		return true
	}

	return false
}

// SetProgramIndicatorGroups gets a reference to the given []ProgramIndicatorParamsProgramIndicatorGroupsInner and assigns it to the ProgramIndicatorGroups field.
func (o *ProgramIndicatorParams) SetProgramIndicatorGroups(v []ProgramIndicatorParamsProgramIndicatorGroupsInner) {
	o.ProgramIndicatorGroups = v
}

// GetQueryMods returns the QueryMods field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetQueryMods() QueryModifiers {
	if o == nil || IsNil(o.QueryMods) {
		var ret QueryModifiers
		return ret
	}
	return *o.QueryMods
}

// GetQueryModsOk returns a tuple with the QueryMods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetQueryModsOk() (*QueryModifiers, bool) {
	if o == nil || IsNil(o.QueryMods) {
		return nil, false
	}
	return o.QueryMods, true
}

// HasQueryMods returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasQueryMods() bool {
	if o != nil && !IsNil(o.QueryMods) {
		return true
	}

	return false
}

// SetQueryMods gets a reference to the given QueryModifiers and assigns it to the QueryMods field.
func (o *ProgramIndicatorParams) SetQueryMods(v QueryModifiers) {
	o.QueryMods = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ProgramIndicatorParams) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *ProgramIndicatorParams) SetShortName(v string) {
	o.ShortName = &v
}

// GetStyle returns the Style field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetStyle() ObjectStyle {
	if o == nil || IsNil(o.Style) {
		var ret ObjectStyle
		return ret
	}
	return *o.Style
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetStyleOk() (*ObjectStyle, bool) {
	if o == nil || IsNil(o.Style) {
		return nil, false
	}
	return o.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasStyle() bool {
	if o != nil && !IsNil(o.Style) {
		return true
	}

	return false
}

// SetStyle gets a reference to the given ObjectStyle and assigns it to the Style field.
func (o *ProgramIndicatorParams) SetStyle(v ObjectStyle) {
	o.Style = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ProgramIndicatorParams) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramIndicatorParams) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ProgramIndicatorParams) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *ProgramIndicatorParams) SetTranslations(v []Translation) {
	o.Translations = v
}

func (o ProgramIndicatorParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramIndicatorParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AggregateExportAttributeOptionCombo) {
		toSerialize["aggregateExportAttributeOptionCombo"] = o.AggregateExportAttributeOptionCombo
	}
	if !IsNil(o.AggregateExportCategoryOptionCombo) {
		toSerialize["aggregateExportCategoryOptionCombo"] = o.AggregateExportCategoryOptionCombo
	}
	if !IsNil(o.AggregateExportDataElement) {
		toSerialize["aggregateExportDataElement"] = o.AggregateExportDataElement
	}
	toSerialize["aggregationType"] = o.AggregationType
	if !IsNil(o.AnalyticsPeriodBoundaries) {
		toSerialize["analyticsPeriodBoundaries"] = o.AnalyticsPeriodBoundaries
	}
	toSerialize["analyticsType"] = o.AnalyticsType
	if !IsNil(o.AttributeCombo) {
		toSerialize["attributeCombo"] = o.AttributeCombo
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.CategoryCombo) {
		toSerialize["categoryCombo"] = o.CategoryCombo
	}
	if !IsNil(o.CategoryMappingIds) {
		toSerialize["categoryMappingIds"] = o.CategoryMappingIds
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.Decimals) {
		toSerialize["decimals"] = o.Decimals
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DimensionItem) {
		toSerialize["dimensionItem"] = o.DimensionItem
	}
	if !IsNil(o.DisplayDescription) {
		toSerialize["displayDescription"] = o.DisplayDescription
	}
	if !IsNil(o.DisplayFormName) {
		toSerialize["displayFormName"] = o.DisplayFormName
	}
	if !IsNil(o.DisplayInForm) {
		toSerialize["displayInForm"] = o.DisplayInForm
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplayShortName) {
		toSerialize["displayShortName"] = o.DisplayShortName
	}
	if !IsNil(o.Expression) {
		toSerialize["expression"] = o.Expression
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.FormName) {
		toSerialize["formName"] = o.FormName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.LegendSet) {
		toSerialize["legendSet"] = o.LegendSet
	}
	if !IsNil(o.LegendSets) {
		toSerialize["legendSets"] = o.LegendSets
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrgUnitField) {
		toSerialize["orgUnitField"] = o.OrgUnitField
	}
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.ProgramIndicatorGroups) {
		toSerialize["programIndicatorGroups"] = o.ProgramIndicatorGroups
	}
	if !IsNil(o.QueryMods) {
		toSerialize["queryMods"] = o.QueryMods
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.Style) {
		toSerialize["style"] = o.Style
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	return toSerialize, nil
}

func (o *ProgramIndicatorParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"aggregationType",
		"analyticsType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramIndicatorParams := _ProgramIndicatorParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgramIndicatorParams)

	if err != nil {
		return err
	}

	*o = ProgramIndicatorParams(varProgramIndicatorParams)

	return err
}

type NullableProgramIndicatorParams struct {
	value *ProgramIndicatorParams
	isSet bool
}

func (v NullableProgramIndicatorParams) Get() *ProgramIndicatorParams {
	return v.value
}

func (v *NullableProgramIndicatorParams) Set(val *ProgramIndicatorParams) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramIndicatorParams) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramIndicatorParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramIndicatorParams(val *ProgramIndicatorParams) *NullableProgramIndicatorParams {
	return &NullableProgramIndicatorParams{value: val, isSet: true}
}

func (v NullableProgramIndicatorParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramIndicatorParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
