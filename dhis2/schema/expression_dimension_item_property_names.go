/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// ExpressionDimensionItemPropertyNames the model 'ExpressionDimensionItemPropertyNames'
type ExpressionDimensionItemPropertyNames string

// List of ExpressionDimensionItemPropertyNames
const (
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_ACCESS                                  ExpressionDimensionItemPropertyNames = "access"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_AGGREGATE_EXPORT_ATTRIBUTE_OPTION_COMBO ExpressionDimensionItemPropertyNames = "aggregateExportAttributeOptionCombo"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_AGGREGATE_EXPORT_CATEGORY_OPTION_COMBO  ExpressionDimensionItemPropertyNames = "aggregateExportCategoryOptionCombo"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_AGGREGATION_TYPE                        ExpressionDimensionItemPropertyNames = "aggregationType"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_ATTRIBUTE_VALUES                        ExpressionDimensionItemPropertyNames = "attributeValues"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_CODE                                    ExpressionDimensionItemPropertyNames = "code"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_CREATED                                 ExpressionDimensionItemPropertyNames = "created"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_CREATED_BY                              ExpressionDimensionItemPropertyNames = "createdBy"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_DESCRIPTION                             ExpressionDimensionItemPropertyNames = "description"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_DIMENSION_ITEM                          ExpressionDimensionItemPropertyNames = "dimensionItem"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_DISPLAY_DESCRIPTION                     ExpressionDimensionItemPropertyNames = "displayDescription"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_DISPLAY_FORM_NAME                       ExpressionDimensionItemPropertyNames = "displayFormName"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_DISPLAY_NAME                            ExpressionDimensionItemPropertyNames = "displayName"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_DISPLAY_SHORT_NAME                      ExpressionDimensionItemPropertyNames = "displayShortName"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_EXPRESSION                              ExpressionDimensionItemPropertyNames = "expression"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_FAVORITE                                ExpressionDimensionItemPropertyNames = "favorite"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_FAVORITES                               ExpressionDimensionItemPropertyNames = "favorites"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_FORM_NAME                               ExpressionDimensionItemPropertyNames = "formName"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_HREF                                    ExpressionDimensionItemPropertyNames = "href"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_ID                                      ExpressionDimensionItemPropertyNames = "id"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_LAST_UPDATED                            ExpressionDimensionItemPropertyNames = "lastUpdated"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_LAST_UPDATED_BY                         ExpressionDimensionItemPropertyNames = "lastUpdatedBy"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_LEGEND_SET                              ExpressionDimensionItemPropertyNames = "legendSet"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_LEGEND_SETS                             ExpressionDimensionItemPropertyNames = "legendSets"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_MISSING_VALUE_STRATEGY                  ExpressionDimensionItemPropertyNames = "missingValueStrategy"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_NAME                                    ExpressionDimensionItemPropertyNames = "name"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_QUERY_MODS                              ExpressionDimensionItemPropertyNames = "queryMods"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_SHARING                                 ExpressionDimensionItemPropertyNames = "sharing"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_SHORT_NAME                              ExpressionDimensionItemPropertyNames = "shortName"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_SLIDING_WINDOW                          ExpressionDimensionItemPropertyNames = "slidingWindow"
	EXPRESSIONDIMENSIONITEMPROPERTYNAMES_TRANSLATIONS                            ExpressionDimensionItemPropertyNames = "translations"
)

// All allowed values of ExpressionDimensionItemPropertyNames enum
var AllowedExpressionDimensionItemPropertyNamesEnumValues = []ExpressionDimensionItemPropertyNames{
	"access",
	"aggregateExportAttributeOptionCombo",
	"aggregateExportCategoryOptionCombo",
	"aggregationType",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"expression",
	"favorite",
	"favorites",
	"formName",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"missingValueStrategy",
	"name",
	"queryMods",
	"sharing",
	"shortName",
	"slidingWindow",
	"translations",
}

func (v *ExpressionDimensionItemPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExpressionDimensionItemPropertyNames(value)
	for _, existing := range AllowedExpressionDimensionItemPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ExpressionDimensionItemPropertyNames", value)
}

// NewExpressionDimensionItemPropertyNamesFromValue returns a pointer to a valid ExpressionDimensionItemPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExpressionDimensionItemPropertyNamesFromValue(v string) (*ExpressionDimensionItemPropertyNames, error) {
	ev := ExpressionDimensionItemPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ExpressionDimensionItemPropertyNames: valid values are %v", v, AllowedExpressionDimensionItemPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExpressionDimensionItemPropertyNames) IsValid() bool {
	for _, existing := range AllowedExpressionDimensionItemPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ExpressionDimensionItemPropertyNames value
func (v ExpressionDimensionItemPropertyNames) Ptr() *ExpressionDimensionItemPropertyNames {
	return &v
}

type NullableExpressionDimensionItemPropertyNames struct {
	value *ExpressionDimensionItemPropertyNames
	isSet bool
}

func (v NullableExpressionDimensionItemPropertyNames) Get() *ExpressionDimensionItemPropertyNames {
	return v.value
}

func (v *NullableExpressionDimensionItemPropertyNames) Set(val *ExpressionDimensionItemPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableExpressionDimensionItemPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableExpressionDimensionItemPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpressionDimensionItemPropertyNames(val *ExpressionDimensionItemPropertyNames) *NullableExpressionDimensionItemPropertyNames {
	return &NullableExpressionDimensionItemPropertyNames{value: val, isSet: true}
}

func (v NullableExpressionDimensionItemPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpressionDimensionItemPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
