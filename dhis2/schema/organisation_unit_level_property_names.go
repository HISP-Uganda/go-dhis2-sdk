/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// OrganisationUnitLevelPropertyNames the model 'OrganisationUnitLevelPropertyNames'
type OrganisationUnitLevelPropertyNames string

// List of OrganisationUnitLevelPropertyNames
const (
	ORGANISATIONUNITLEVELPROPERTYNAMES_ACCESS           OrganisationUnitLevelPropertyNames = "access"
	ORGANISATIONUNITLEVELPROPERTYNAMES_ATTRIBUTE_VALUES OrganisationUnitLevelPropertyNames = "attributeValues"
	ORGANISATIONUNITLEVELPROPERTYNAMES_CODE             OrganisationUnitLevelPropertyNames = "code"
	ORGANISATIONUNITLEVELPROPERTYNAMES_CREATED          OrganisationUnitLevelPropertyNames = "created"
	ORGANISATIONUNITLEVELPROPERTYNAMES_CREATED_BY       OrganisationUnitLevelPropertyNames = "createdBy"
	ORGANISATIONUNITLEVELPROPERTYNAMES_DISPLAY_NAME     OrganisationUnitLevelPropertyNames = "displayName"
	ORGANISATIONUNITLEVELPROPERTYNAMES_FAVORITE         OrganisationUnitLevelPropertyNames = "favorite"
	ORGANISATIONUNITLEVELPROPERTYNAMES_FAVORITES        OrganisationUnitLevelPropertyNames = "favorites"
	ORGANISATIONUNITLEVELPROPERTYNAMES_HREF             OrganisationUnitLevelPropertyNames = "href"
	ORGANISATIONUNITLEVELPROPERTYNAMES_ID               OrganisationUnitLevelPropertyNames = "id"
	ORGANISATIONUNITLEVELPROPERTYNAMES_LAST_UPDATED     OrganisationUnitLevelPropertyNames = "lastUpdated"
	ORGANISATIONUNITLEVELPROPERTYNAMES_LAST_UPDATED_BY  OrganisationUnitLevelPropertyNames = "lastUpdatedBy"
	ORGANISATIONUNITLEVELPROPERTYNAMES_LEVEL            OrganisationUnitLevelPropertyNames = "level"
	ORGANISATIONUNITLEVELPROPERTYNAMES_NAME             OrganisationUnitLevelPropertyNames = "name"
	ORGANISATIONUNITLEVELPROPERTYNAMES_OFFLINE_LEVELS   OrganisationUnitLevelPropertyNames = "offlineLevels"
	ORGANISATIONUNITLEVELPROPERTYNAMES_SHARING          OrganisationUnitLevelPropertyNames = "sharing"
	ORGANISATIONUNITLEVELPROPERTYNAMES_TRANSLATIONS     OrganisationUnitLevelPropertyNames = "translations"
)

// All allowed values of OrganisationUnitLevelPropertyNames enum
var AllowedOrganisationUnitLevelPropertyNamesEnumValues = []OrganisationUnitLevelPropertyNames{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"displayName",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"level",
	"name",
	"offlineLevels",
	"sharing",
	"translations",
}

func (v *OrganisationUnitLevelPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrganisationUnitLevelPropertyNames(value)
	for _, existing := range AllowedOrganisationUnitLevelPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrganisationUnitLevelPropertyNames", value)
}

// NewOrganisationUnitLevelPropertyNamesFromValue returns a pointer to a valid OrganisationUnitLevelPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrganisationUnitLevelPropertyNamesFromValue(v string) (*OrganisationUnitLevelPropertyNames, error) {
	ev := OrganisationUnitLevelPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrganisationUnitLevelPropertyNames: valid values are %v", v, AllowedOrganisationUnitLevelPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrganisationUnitLevelPropertyNames) IsValid() bool {
	for _, existing := range AllowedOrganisationUnitLevelPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrganisationUnitLevelPropertyNames value
func (v OrganisationUnitLevelPropertyNames) Ptr() *OrganisationUnitLevelPropertyNames {
	return &v
}

type NullableOrganisationUnitLevelPropertyNames struct {
	value *OrganisationUnitLevelPropertyNames
	isSet bool
}

func (v NullableOrganisationUnitLevelPropertyNames) Get() *OrganisationUnitLevelPropertyNames {
	return v.value
}

func (v *NullableOrganisationUnitLevelPropertyNames) Set(val *OrganisationUnitLevelPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganisationUnitLevelPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganisationUnitLevelPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganisationUnitLevelPropertyNames(val *OrganisationUnitLevelPropertyNames) *NullableOrganisationUnitLevelPropertyNames {
	return &NullableOrganisationUnitLevelPropertyNames{value: val, isSet: true}
}

func (v NullableOrganisationUnitLevelPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganisationUnitLevelPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
