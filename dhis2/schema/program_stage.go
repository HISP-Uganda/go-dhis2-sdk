/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ProgramStage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramStage{}

// ProgramStage struct for ProgramStage
type ProgramStage struct {
	Access                    *Access                                `json:"access,omitempty"`
	AllowGenerateNextVisit    *bool                                  `json:"allowGenerateNextVisit,omitempty"`
	AttributeValues           []AttributeValue                       `json:"attributeValues,omitempty"`
	AutoGenerateEvent         *bool                                  `json:"autoGenerateEvent,omitempty"`
	BlockEntryForm            *bool                                  `json:"blockEntryForm,omitempty"`
	Code                      *string                                `json:"code,omitempty"`
	Created                   *time.Time                             `json:"created,omitempty"`
	CreatedBy                 *AggregateDataExchangeCreatedBy        `json:"createdBy,omitempty"`
	DataEntryForm             *DataSetDataEntryForm                  `json:"dataEntryForm,omitempty"`
	Description               *string                                `json:"description,omitempty"`
	DisplayDescription        *string                                `json:"displayDescription,omitempty"`
	DisplayDueDateLabel       *string                                `json:"displayDueDateLabel,omitempty"`
	DisplayExecutionDateLabel *string                                `json:"displayExecutionDateLabel,omitempty"`
	DisplayFormName           *string                                `json:"displayFormName,omitempty"`
	DisplayGenerateEventBox   *bool                                  `json:"displayGenerateEventBox,omitempty"`
	DisplayName               *string                                `json:"displayName,omitempty"`
	DisplayShortName          *string                                `json:"displayShortName,omitempty"`
	DueDateLabel              *string                                `json:"dueDateLabel,omitempty"`
	EnableUserAssignment      *bool                                  `json:"enableUserAssignment,omitempty"`
	ExecutionDateLabel        *string                                `json:"executionDateLabel,omitempty"`
	ExternalAccess            *bool                                  `json:"externalAccess,omitempty"`
	Favorite                  *bool                                  `json:"favorite,omitempty"`
	Favorites                 []string                               `json:"favorites,omitempty"`
	FeatureType               string                                 `json:"featureType"`
	FormName                  *string                                `json:"formName,omitempty"`
	FormType                  string                                 `json:"formType"`
	GeneratedByEnrollmentDate *bool                                  `json:"generatedByEnrollmentDate,omitempty"`
	HideDueDate               *bool                                  `json:"hideDueDate,omitempty"`
	Href                      *string                                `json:"href,omitempty"`
	Id                        *string                                `json:"id,omitempty"`
	LastUpdated               *time.Time                             `json:"lastUpdated,omitempty"`
	LastUpdatedBy             *AggregateDataExchangeCreatedBy        `json:"lastUpdatedBy,omitempty"`
	MinDaysFromStart          int32                                  `json:"minDaysFromStart"`
	Name                      *string                                `json:"name,omitempty"`
	NextScheduleDate          *DataDimensionItemDataElement          `json:"nextScheduleDate,omitempty"`
	NotificationTemplates     []ProgramNotificationTemplatesInner    `json:"notificationTemplates,omitempty"`
	OpenAfterEnrollment       *bool                                  `json:"openAfterEnrollment,omitempty"`
	PeriodType                *string                                `json:"periodType,omitempty"`
	PreGenerateUID            *bool                                  `json:"preGenerateUID,omitempty"`
	Program                   *EventVisualizationProgram             `json:"program,omitempty"`
	ProgramStageDataElements  []ProgramStageDataElement              `json:"programStageDataElements,omitempty"`
	ProgramStageSections      []ProgramRuleActionProgramStageSection `json:"programStageSections,omitempty"`
	PublicAccess              *string                                `json:"publicAccess,omitempty"`
	Referral                  *bool                                  `json:"referral,omitempty"`
	RemindCompleted           *bool                                  `json:"remindCompleted,omitempty"`
	Repeatable                *bool                                  `json:"repeatable,omitempty"`
	ReportDateToUse           *string                                `json:"reportDateToUse,omitempty"`
	Sharing                   *Sharing                               `json:"sharing,omitempty"`
	ShortName                 *string                                `json:"shortName,omitempty"`
	SortOrder                 *int32                                 `json:"sortOrder,omitempty"`
	StandardInterval          *int32                                 `json:"standardInterval,omitempty"`
	Style                     *ObjectStyle                           `json:"style,omitempty"`
	Translations              []Translation                          `json:"translations,omitempty"`
	User                      *AggregateDataExchangeCreatedBy        `json:"user,omitempty"`
	UserAccesses              []LegacyUserAccess                     `json:"userAccesses,omitempty"`
	UserGroupAccesses         []LegacyUserGroupAccess                `json:"userGroupAccesses,omitempty"`
	ValidationStrategy        string                                 `json:"validationStrategy"`
}

type _ProgramStage ProgramStage

// NewProgramStage instantiates a new ProgramStage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramStage(featureType string, formType string, minDaysFromStart int32, validationStrategy string) *ProgramStage {
	this := ProgramStage{}
	this.FeatureType = featureType
	this.FormType = formType
	this.MinDaysFromStart = minDaysFromStart
	this.ValidationStrategy = validationStrategy
	return &this
}

// NewProgramStageWithDefaults instantiates a new ProgramStage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramStageWithDefaults() *ProgramStage {
	this := ProgramStage{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *ProgramStage) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *ProgramStage) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *ProgramStage) SetAccess(v Access) {
	o.Access = &v
}

// GetAllowGenerateNextVisit returns the AllowGenerateNextVisit field value if set, zero value otherwise.
func (o *ProgramStage) GetAllowGenerateNextVisit() bool {
	if o == nil || IsNil(o.AllowGenerateNextVisit) {
		var ret bool
		return ret
	}
	return *o.AllowGenerateNextVisit
}

// GetAllowGenerateNextVisitOk returns a tuple with the AllowGenerateNextVisit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetAllowGenerateNextVisitOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowGenerateNextVisit) {
		return nil, false
	}
	return o.AllowGenerateNextVisit, true
}

// HasAllowGenerateNextVisit returns a boolean if a field has been set.
func (o *ProgramStage) HasAllowGenerateNextVisit() bool {
	if o != nil && !IsNil(o.AllowGenerateNextVisit) {
		return true
	}

	return false
}

// SetAllowGenerateNextVisit gets a reference to the given bool and assigns it to the AllowGenerateNextVisit field.
func (o *ProgramStage) SetAllowGenerateNextVisit(v bool) {
	o.AllowGenerateNextVisit = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *ProgramStage) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *ProgramStage) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *ProgramStage) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetAutoGenerateEvent returns the AutoGenerateEvent field value if set, zero value otherwise.
func (o *ProgramStage) GetAutoGenerateEvent() bool {
	if o == nil || IsNil(o.AutoGenerateEvent) {
		var ret bool
		return ret
	}
	return *o.AutoGenerateEvent
}

// GetAutoGenerateEventOk returns a tuple with the AutoGenerateEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetAutoGenerateEventOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoGenerateEvent) {
		return nil, false
	}
	return o.AutoGenerateEvent, true
}

// HasAutoGenerateEvent returns a boolean if a field has been set.
func (o *ProgramStage) HasAutoGenerateEvent() bool {
	if o != nil && !IsNil(o.AutoGenerateEvent) {
		return true
	}

	return false
}

// SetAutoGenerateEvent gets a reference to the given bool and assigns it to the AutoGenerateEvent field.
func (o *ProgramStage) SetAutoGenerateEvent(v bool) {
	o.AutoGenerateEvent = &v
}

// GetBlockEntryForm returns the BlockEntryForm field value if set, zero value otherwise.
func (o *ProgramStage) GetBlockEntryForm() bool {
	if o == nil || IsNil(o.BlockEntryForm) {
		var ret bool
		return ret
	}
	return *o.BlockEntryForm
}

// GetBlockEntryFormOk returns a tuple with the BlockEntryForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetBlockEntryFormOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockEntryForm) {
		return nil, false
	}
	return o.BlockEntryForm, true
}

// HasBlockEntryForm returns a boolean if a field has been set.
func (o *ProgramStage) HasBlockEntryForm() bool {
	if o != nil && !IsNil(o.BlockEntryForm) {
		return true
	}

	return false
}

// SetBlockEntryForm gets a reference to the given bool and assigns it to the BlockEntryForm field.
func (o *ProgramStage) SetBlockEntryForm(v bool) {
	o.BlockEntryForm = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProgramStage) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProgramStage) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProgramStage) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ProgramStage) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ProgramStage) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ProgramStage) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProgramStage) GetCreatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetCreatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProgramStage) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the CreatedBy field.
func (o *ProgramStage) SetCreatedBy(v AggregateDataExchangeCreatedBy) {
	o.CreatedBy = &v
}

// GetDataEntryForm returns the DataEntryForm field value if set, zero value otherwise.
func (o *ProgramStage) GetDataEntryForm() DataSetDataEntryForm {
	if o == nil || IsNil(o.DataEntryForm) {
		var ret DataSetDataEntryForm
		return ret
	}
	return *o.DataEntryForm
}

// GetDataEntryFormOk returns a tuple with the DataEntryForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetDataEntryFormOk() (*DataSetDataEntryForm, bool) {
	if o == nil || IsNil(o.DataEntryForm) {
		return nil, false
	}
	return o.DataEntryForm, true
}

// HasDataEntryForm returns a boolean if a field has been set.
func (o *ProgramStage) HasDataEntryForm() bool {
	if o != nil && !IsNil(o.DataEntryForm) {
		return true
	}

	return false
}

// SetDataEntryForm gets a reference to the given DataSetDataEntryForm and assigns it to the DataEntryForm field.
func (o *ProgramStage) SetDataEntryForm(v DataSetDataEntryForm) {
	o.DataEntryForm = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProgramStage) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProgramStage) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProgramStage) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayDescription returns the DisplayDescription field value if set, zero value otherwise.
func (o *ProgramStage) GetDisplayDescription() string {
	if o == nil || IsNil(o.DisplayDescription) {
		var ret string
		return ret
	}
	return *o.DisplayDescription
}

// GetDisplayDescriptionOk returns a tuple with the DisplayDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetDisplayDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDescription) {
		return nil, false
	}
	return o.DisplayDescription, true
}

// HasDisplayDescription returns a boolean if a field has been set.
func (o *ProgramStage) HasDisplayDescription() bool {
	if o != nil && !IsNil(o.DisplayDescription) {
		return true
	}

	return false
}

// SetDisplayDescription gets a reference to the given string and assigns it to the DisplayDescription field.
func (o *ProgramStage) SetDisplayDescription(v string) {
	o.DisplayDescription = &v
}

// GetDisplayDueDateLabel returns the DisplayDueDateLabel field value if set, zero value otherwise.
func (o *ProgramStage) GetDisplayDueDateLabel() string {
	if o == nil || IsNil(o.DisplayDueDateLabel) {
		var ret string
		return ret
	}
	return *o.DisplayDueDateLabel
}

// GetDisplayDueDateLabelOk returns a tuple with the DisplayDueDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetDisplayDueDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDueDateLabel) {
		return nil, false
	}
	return o.DisplayDueDateLabel, true
}

// HasDisplayDueDateLabel returns a boolean if a field has been set.
func (o *ProgramStage) HasDisplayDueDateLabel() bool {
	if o != nil && !IsNil(o.DisplayDueDateLabel) {
		return true
	}

	return false
}

// SetDisplayDueDateLabel gets a reference to the given string and assigns it to the DisplayDueDateLabel field.
func (o *ProgramStage) SetDisplayDueDateLabel(v string) {
	o.DisplayDueDateLabel = &v
}

// GetDisplayExecutionDateLabel returns the DisplayExecutionDateLabel field value if set, zero value otherwise.
func (o *ProgramStage) GetDisplayExecutionDateLabel() string {
	if o == nil || IsNil(o.DisplayExecutionDateLabel) {
		var ret string
		return ret
	}
	return *o.DisplayExecutionDateLabel
}

// GetDisplayExecutionDateLabelOk returns a tuple with the DisplayExecutionDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetDisplayExecutionDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayExecutionDateLabel) {
		return nil, false
	}
	return o.DisplayExecutionDateLabel, true
}

// HasDisplayExecutionDateLabel returns a boolean if a field has been set.
func (o *ProgramStage) HasDisplayExecutionDateLabel() bool {
	if o != nil && !IsNil(o.DisplayExecutionDateLabel) {
		return true
	}

	return false
}

// SetDisplayExecutionDateLabel gets a reference to the given string and assigns it to the DisplayExecutionDateLabel field.
func (o *ProgramStage) SetDisplayExecutionDateLabel(v string) {
	o.DisplayExecutionDateLabel = &v
}

// GetDisplayFormName returns the DisplayFormName field value if set, zero value otherwise.
func (o *ProgramStage) GetDisplayFormName() string {
	if o == nil || IsNil(o.DisplayFormName) {
		var ret string
		return ret
	}
	return *o.DisplayFormName
}

// GetDisplayFormNameOk returns a tuple with the DisplayFormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetDisplayFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayFormName) {
		return nil, false
	}
	return o.DisplayFormName, true
}

// HasDisplayFormName returns a boolean if a field has been set.
func (o *ProgramStage) HasDisplayFormName() bool {
	if o != nil && !IsNil(o.DisplayFormName) {
		return true
	}

	return false
}

// SetDisplayFormName gets a reference to the given string and assigns it to the DisplayFormName field.
func (o *ProgramStage) SetDisplayFormName(v string) {
	o.DisplayFormName = &v
}

// GetDisplayGenerateEventBox returns the DisplayGenerateEventBox field value if set, zero value otherwise.
func (o *ProgramStage) GetDisplayGenerateEventBox() bool {
	if o == nil || IsNil(o.DisplayGenerateEventBox) {
		var ret bool
		return ret
	}
	return *o.DisplayGenerateEventBox
}

// GetDisplayGenerateEventBoxOk returns a tuple with the DisplayGenerateEventBox field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetDisplayGenerateEventBoxOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayGenerateEventBox) {
		return nil, false
	}
	return o.DisplayGenerateEventBox, true
}

// HasDisplayGenerateEventBox returns a boolean if a field has been set.
func (o *ProgramStage) HasDisplayGenerateEventBox() bool {
	if o != nil && !IsNil(o.DisplayGenerateEventBox) {
		return true
	}

	return false
}

// SetDisplayGenerateEventBox gets a reference to the given bool and assigns it to the DisplayGenerateEventBox field.
func (o *ProgramStage) SetDisplayGenerateEventBox(v bool) {
	o.DisplayGenerateEventBox = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProgramStage) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProgramStage) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProgramStage) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayShortName returns the DisplayShortName field value if set, zero value otherwise.
func (o *ProgramStage) GetDisplayShortName() string {
	if o == nil || IsNil(o.DisplayShortName) {
		var ret string
		return ret
	}
	return *o.DisplayShortName
}

// GetDisplayShortNameOk returns a tuple with the DisplayShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetDisplayShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayShortName) {
		return nil, false
	}
	return o.DisplayShortName, true
}

// HasDisplayShortName returns a boolean if a field has been set.
func (o *ProgramStage) HasDisplayShortName() bool {
	if o != nil && !IsNil(o.DisplayShortName) {
		return true
	}

	return false
}

// SetDisplayShortName gets a reference to the given string and assigns it to the DisplayShortName field.
func (o *ProgramStage) SetDisplayShortName(v string) {
	o.DisplayShortName = &v
}

// GetDueDateLabel returns the DueDateLabel field value if set, zero value otherwise.
func (o *ProgramStage) GetDueDateLabel() string {
	if o == nil || IsNil(o.DueDateLabel) {
		var ret string
		return ret
	}
	return *o.DueDateLabel
}

// GetDueDateLabelOk returns a tuple with the DueDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetDueDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DueDateLabel) {
		return nil, false
	}
	return o.DueDateLabel, true
}

// HasDueDateLabel returns a boolean if a field has been set.
func (o *ProgramStage) HasDueDateLabel() bool {
	if o != nil && !IsNil(o.DueDateLabel) {
		return true
	}

	return false
}

// SetDueDateLabel gets a reference to the given string and assigns it to the DueDateLabel field.
func (o *ProgramStage) SetDueDateLabel(v string) {
	o.DueDateLabel = &v
}

// GetEnableUserAssignment returns the EnableUserAssignment field value if set, zero value otherwise.
func (o *ProgramStage) GetEnableUserAssignment() bool {
	if o == nil || IsNil(o.EnableUserAssignment) {
		var ret bool
		return ret
	}
	return *o.EnableUserAssignment
}

// GetEnableUserAssignmentOk returns a tuple with the EnableUserAssignment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetEnableUserAssignmentOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableUserAssignment) {
		return nil, false
	}
	return o.EnableUserAssignment, true
}

// HasEnableUserAssignment returns a boolean if a field has been set.
func (o *ProgramStage) HasEnableUserAssignment() bool {
	if o != nil && !IsNil(o.EnableUserAssignment) {
		return true
	}

	return false
}

// SetEnableUserAssignment gets a reference to the given bool and assigns it to the EnableUserAssignment field.
func (o *ProgramStage) SetEnableUserAssignment(v bool) {
	o.EnableUserAssignment = &v
}

// GetExecutionDateLabel returns the ExecutionDateLabel field value if set, zero value otherwise.
func (o *ProgramStage) GetExecutionDateLabel() string {
	if o == nil || IsNil(o.ExecutionDateLabel) {
		var ret string
		return ret
	}
	return *o.ExecutionDateLabel
}

// GetExecutionDateLabelOk returns a tuple with the ExecutionDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetExecutionDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionDateLabel) {
		return nil, false
	}
	return o.ExecutionDateLabel, true
}

// HasExecutionDateLabel returns a boolean if a field has been set.
func (o *ProgramStage) HasExecutionDateLabel() bool {
	if o != nil && !IsNil(o.ExecutionDateLabel) {
		return true
	}

	return false
}

// SetExecutionDateLabel gets a reference to the given string and assigns it to the ExecutionDateLabel field.
func (o *ProgramStage) SetExecutionDateLabel(v string) {
	o.ExecutionDateLabel = &v
}

// GetExternalAccess returns the ExternalAccess field value if set, zero value otherwise.
func (o *ProgramStage) GetExternalAccess() bool {
	if o == nil || IsNil(o.ExternalAccess) {
		var ret bool
		return ret
	}
	return *o.ExternalAccess
}

// GetExternalAccessOk returns a tuple with the ExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetExternalAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalAccess) {
		return nil, false
	}
	return o.ExternalAccess, true
}

// HasExternalAccess returns a boolean if a field has been set.
func (o *ProgramStage) HasExternalAccess() bool {
	if o != nil && !IsNil(o.ExternalAccess) {
		return true
	}

	return false
}

// SetExternalAccess gets a reference to the given bool and assigns it to the ExternalAccess field.
func (o *ProgramStage) SetExternalAccess(v bool) {
	o.ExternalAccess = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ProgramStage) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ProgramStage) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ProgramStage) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *ProgramStage) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *ProgramStage) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *ProgramStage) SetFavorites(v []string) {
	o.Favorites = v
}

// GetFeatureType returns the FeatureType field value
func (o *ProgramStage) GetFeatureType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeatureType
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetFeatureTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureType, true
}

// SetFeatureType sets field value
func (o *ProgramStage) SetFeatureType(v string) {
	o.FeatureType = v
}

// GetFormName returns the FormName field value if set, zero value otherwise.
func (o *ProgramStage) GetFormName() string {
	if o == nil || IsNil(o.FormName) {
		var ret string
		return ret
	}
	return *o.FormName
}

// GetFormNameOk returns a tuple with the FormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.FormName) {
		return nil, false
	}
	return o.FormName, true
}

// HasFormName returns a boolean if a field has been set.
func (o *ProgramStage) HasFormName() bool {
	if o != nil && !IsNil(o.FormName) {
		return true
	}

	return false
}

// SetFormName gets a reference to the given string and assigns it to the FormName field.
func (o *ProgramStage) SetFormName(v string) {
	o.FormName = &v
}

// GetFormType returns the FormType field value
func (o *ProgramStage) GetFormType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FormType
}

// GetFormTypeOk returns a tuple with the FormType field value
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetFormTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FormType, true
}

// SetFormType sets field value
func (o *ProgramStage) SetFormType(v string) {
	o.FormType = v
}

// GetGeneratedByEnrollmentDate returns the GeneratedByEnrollmentDate field value if set, zero value otherwise.
func (o *ProgramStage) GetGeneratedByEnrollmentDate() bool {
	if o == nil || IsNil(o.GeneratedByEnrollmentDate) {
		var ret bool
		return ret
	}
	return *o.GeneratedByEnrollmentDate
}

// GetGeneratedByEnrollmentDateOk returns a tuple with the GeneratedByEnrollmentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetGeneratedByEnrollmentDateOk() (*bool, bool) {
	if o == nil || IsNil(o.GeneratedByEnrollmentDate) {
		return nil, false
	}
	return o.GeneratedByEnrollmentDate, true
}

// HasGeneratedByEnrollmentDate returns a boolean if a field has been set.
func (o *ProgramStage) HasGeneratedByEnrollmentDate() bool {
	if o != nil && !IsNil(o.GeneratedByEnrollmentDate) {
		return true
	}

	return false
}

// SetGeneratedByEnrollmentDate gets a reference to the given bool and assigns it to the GeneratedByEnrollmentDate field.
func (o *ProgramStage) SetGeneratedByEnrollmentDate(v bool) {
	o.GeneratedByEnrollmentDate = &v
}

// GetHideDueDate returns the HideDueDate field value if set, zero value otherwise.
func (o *ProgramStage) GetHideDueDate() bool {
	if o == nil || IsNil(o.HideDueDate) {
		var ret bool
		return ret
	}
	return *o.HideDueDate
}

// GetHideDueDateOk returns a tuple with the HideDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetHideDueDateOk() (*bool, bool) {
	if o == nil || IsNil(o.HideDueDate) {
		return nil, false
	}
	return o.HideDueDate, true
}

// HasHideDueDate returns a boolean if a field has been set.
func (o *ProgramStage) HasHideDueDate() bool {
	if o != nil && !IsNil(o.HideDueDate) {
		return true
	}

	return false
}

// SetHideDueDate gets a reference to the given bool and assigns it to the HideDueDate field.
func (o *ProgramStage) SetHideDueDate(v bool) {
	o.HideDueDate = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ProgramStage) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ProgramStage) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ProgramStage) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProgramStage) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProgramStage) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProgramStage) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ProgramStage) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ProgramStage) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ProgramStage) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *ProgramStage) GetLastUpdatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetLastUpdatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *ProgramStage) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the LastUpdatedBy field.
func (o *ProgramStage) SetLastUpdatedBy(v AggregateDataExchangeCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetMinDaysFromStart returns the MinDaysFromStart field value
func (o *ProgramStage) GetMinDaysFromStart() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinDaysFromStart
}

// GetMinDaysFromStartOk returns a tuple with the MinDaysFromStart field value
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetMinDaysFromStartOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinDaysFromStart, true
}

// SetMinDaysFromStart sets field value
func (o *ProgramStage) SetMinDaysFromStart(v int32) {
	o.MinDaysFromStart = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProgramStage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProgramStage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProgramStage) SetName(v string) {
	o.Name = &v
}

// GetNextScheduleDate returns the NextScheduleDate field value if set, zero value otherwise.
func (o *ProgramStage) GetNextScheduleDate() DataDimensionItemDataElement {
	if o == nil || IsNil(o.NextScheduleDate) {
		var ret DataDimensionItemDataElement
		return ret
	}
	return *o.NextScheduleDate
}

// GetNextScheduleDateOk returns a tuple with the NextScheduleDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetNextScheduleDateOk() (*DataDimensionItemDataElement, bool) {
	if o == nil || IsNil(o.NextScheduleDate) {
		return nil, false
	}
	return o.NextScheduleDate, true
}

// HasNextScheduleDate returns a boolean if a field has been set.
func (o *ProgramStage) HasNextScheduleDate() bool {
	if o != nil && !IsNil(o.NextScheduleDate) {
		return true
	}

	return false
}

// SetNextScheduleDate gets a reference to the given DataDimensionItemDataElement and assigns it to the NextScheduleDate field.
func (o *ProgramStage) SetNextScheduleDate(v DataDimensionItemDataElement) {
	o.NextScheduleDate = &v
}

// GetNotificationTemplates returns the NotificationTemplates field value if set, zero value otherwise.
func (o *ProgramStage) GetNotificationTemplates() []ProgramNotificationTemplatesInner {
	if o == nil || IsNil(o.NotificationTemplates) {
		var ret []ProgramNotificationTemplatesInner
		return ret
	}
	return o.NotificationTemplates
}

// GetNotificationTemplatesOk returns a tuple with the NotificationTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetNotificationTemplatesOk() ([]ProgramNotificationTemplatesInner, bool) {
	if o == nil || IsNil(o.NotificationTemplates) {
		return nil, false
	}
	return o.NotificationTemplates, true
}

// HasNotificationTemplates returns a boolean if a field has been set.
func (o *ProgramStage) HasNotificationTemplates() bool {
	if o != nil && !IsNil(o.NotificationTemplates) {
		return true
	}

	return false
}

// SetNotificationTemplates gets a reference to the given []ProgramNotificationTemplatesInner and assigns it to the NotificationTemplates field.
func (o *ProgramStage) SetNotificationTemplates(v []ProgramNotificationTemplatesInner) {
	o.NotificationTemplates = v
}

// GetOpenAfterEnrollment returns the OpenAfterEnrollment field value if set, zero value otherwise.
func (o *ProgramStage) GetOpenAfterEnrollment() bool {
	if o == nil || IsNil(o.OpenAfterEnrollment) {
		var ret bool
		return ret
	}
	return *o.OpenAfterEnrollment
}

// GetOpenAfterEnrollmentOk returns a tuple with the OpenAfterEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetOpenAfterEnrollmentOk() (*bool, bool) {
	if o == nil || IsNil(o.OpenAfterEnrollment) {
		return nil, false
	}
	return o.OpenAfterEnrollment, true
}

// HasOpenAfterEnrollment returns a boolean if a field has been set.
func (o *ProgramStage) HasOpenAfterEnrollment() bool {
	if o != nil && !IsNil(o.OpenAfterEnrollment) {
		return true
	}

	return false
}

// SetOpenAfterEnrollment gets a reference to the given bool and assigns it to the OpenAfterEnrollment field.
func (o *ProgramStage) SetOpenAfterEnrollment(v bool) {
	o.OpenAfterEnrollment = &v
}

// GetPeriodType returns the PeriodType field value if set, zero value otherwise.
func (o *ProgramStage) GetPeriodType() string {
	if o == nil || IsNil(o.PeriodType) {
		var ret string
		return ret
	}
	return *o.PeriodType
}

// GetPeriodTypeOk returns a tuple with the PeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetPeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodType) {
		return nil, false
	}
	return o.PeriodType, true
}

// HasPeriodType returns a boolean if a field has been set.
func (o *ProgramStage) HasPeriodType() bool {
	if o != nil && !IsNil(o.PeriodType) {
		return true
	}

	return false
}

// SetPeriodType gets a reference to the given string and assigns it to the PeriodType field.
func (o *ProgramStage) SetPeriodType(v string) {
	o.PeriodType = &v
}

// GetPreGenerateUID returns the PreGenerateUID field value if set, zero value otherwise.
func (o *ProgramStage) GetPreGenerateUID() bool {
	if o == nil || IsNil(o.PreGenerateUID) {
		var ret bool
		return ret
	}
	return *o.PreGenerateUID
}

// GetPreGenerateUIDOk returns a tuple with the PreGenerateUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetPreGenerateUIDOk() (*bool, bool) {
	if o == nil || IsNil(o.PreGenerateUID) {
		return nil, false
	}
	return o.PreGenerateUID, true
}

// HasPreGenerateUID returns a boolean if a field has been set.
func (o *ProgramStage) HasPreGenerateUID() bool {
	if o != nil && !IsNil(o.PreGenerateUID) {
		return true
	}

	return false
}

// SetPreGenerateUID gets a reference to the given bool and assigns it to the PreGenerateUID field.
func (o *ProgramStage) SetPreGenerateUID(v bool) {
	o.PreGenerateUID = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *ProgramStage) GetProgram() EventVisualizationProgram {
	if o == nil || IsNil(o.Program) {
		var ret EventVisualizationProgram
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetProgramOk() (*EventVisualizationProgram, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *ProgramStage) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given EventVisualizationProgram and assigns it to the Program field.
func (o *ProgramStage) SetProgram(v EventVisualizationProgram) {
	o.Program = &v
}

// GetProgramStageDataElements returns the ProgramStageDataElements field value if set, zero value otherwise.
func (o *ProgramStage) GetProgramStageDataElements() []ProgramStageDataElement {
	if o == nil || IsNil(o.ProgramStageDataElements) {
		var ret []ProgramStageDataElement
		return ret
	}
	return o.ProgramStageDataElements
}

// GetProgramStageDataElementsOk returns a tuple with the ProgramStageDataElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetProgramStageDataElementsOk() ([]ProgramStageDataElement, bool) {
	if o == nil || IsNil(o.ProgramStageDataElements) {
		return nil, false
	}
	return o.ProgramStageDataElements, true
}

// HasProgramStageDataElements returns a boolean if a field has been set.
func (o *ProgramStage) HasProgramStageDataElements() bool {
	if o != nil && !IsNil(o.ProgramStageDataElements) {
		return true
	}

	return false
}

// SetProgramStageDataElements gets a reference to the given []ProgramStageDataElement and assigns it to the ProgramStageDataElements field.
func (o *ProgramStage) SetProgramStageDataElements(v []ProgramStageDataElement) {
	o.ProgramStageDataElements = v
}

// GetProgramStageSections returns the ProgramStageSections field value if set, zero value otherwise.
func (o *ProgramStage) GetProgramStageSections() []ProgramRuleActionProgramStageSection {
	if o == nil || IsNil(o.ProgramStageSections) {
		var ret []ProgramRuleActionProgramStageSection
		return ret
	}
	return o.ProgramStageSections
}

// GetProgramStageSectionsOk returns a tuple with the ProgramStageSections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetProgramStageSectionsOk() ([]ProgramRuleActionProgramStageSection, bool) {
	if o == nil || IsNil(o.ProgramStageSections) {
		return nil, false
	}
	return o.ProgramStageSections, true
}

// HasProgramStageSections returns a boolean if a field has been set.
func (o *ProgramStage) HasProgramStageSections() bool {
	if o != nil && !IsNil(o.ProgramStageSections) {
		return true
	}

	return false
}

// SetProgramStageSections gets a reference to the given []ProgramRuleActionProgramStageSection and assigns it to the ProgramStageSections field.
func (o *ProgramStage) SetProgramStageSections(v []ProgramRuleActionProgramStageSection) {
	o.ProgramStageSections = v
}

// GetPublicAccess returns the PublicAccess field value if set, zero value otherwise.
func (o *ProgramStage) GetPublicAccess() string {
	if o == nil || IsNil(o.PublicAccess) {
		var ret string
		return ret
	}
	return *o.PublicAccess
}

// GetPublicAccessOk returns a tuple with the PublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetPublicAccessOk() (*string, bool) {
	if o == nil || IsNil(o.PublicAccess) {
		return nil, false
	}
	return o.PublicAccess, true
}

// HasPublicAccess returns a boolean if a field has been set.
func (o *ProgramStage) HasPublicAccess() bool {
	if o != nil && !IsNil(o.PublicAccess) {
		return true
	}

	return false
}

// SetPublicAccess gets a reference to the given string and assigns it to the PublicAccess field.
func (o *ProgramStage) SetPublicAccess(v string) {
	o.PublicAccess = &v
}

// GetReferral returns the Referral field value if set, zero value otherwise.
func (o *ProgramStage) GetReferral() bool {
	if o == nil || IsNil(o.Referral) {
		var ret bool
		return ret
	}
	return *o.Referral
}

// GetReferralOk returns a tuple with the Referral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetReferralOk() (*bool, bool) {
	if o == nil || IsNil(o.Referral) {
		return nil, false
	}
	return o.Referral, true
}

// HasReferral returns a boolean if a field has been set.
func (o *ProgramStage) HasReferral() bool {
	if o != nil && !IsNil(o.Referral) {
		return true
	}

	return false
}

// SetReferral gets a reference to the given bool and assigns it to the Referral field.
func (o *ProgramStage) SetReferral(v bool) {
	o.Referral = &v
}

// GetRemindCompleted returns the RemindCompleted field value if set, zero value otherwise.
func (o *ProgramStage) GetRemindCompleted() bool {
	if o == nil || IsNil(o.RemindCompleted) {
		var ret bool
		return ret
	}
	return *o.RemindCompleted
}

// GetRemindCompletedOk returns a tuple with the RemindCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetRemindCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.RemindCompleted) {
		return nil, false
	}
	return o.RemindCompleted, true
}

// HasRemindCompleted returns a boolean if a field has been set.
func (o *ProgramStage) HasRemindCompleted() bool {
	if o != nil && !IsNil(o.RemindCompleted) {
		return true
	}

	return false
}

// SetRemindCompleted gets a reference to the given bool and assigns it to the RemindCompleted field.
func (o *ProgramStage) SetRemindCompleted(v bool) {
	o.RemindCompleted = &v
}

// GetRepeatable returns the Repeatable field value if set, zero value otherwise.
func (o *ProgramStage) GetRepeatable() bool {
	if o == nil || IsNil(o.Repeatable) {
		var ret bool
		return ret
	}
	return *o.Repeatable
}

// GetRepeatableOk returns a tuple with the Repeatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetRepeatableOk() (*bool, bool) {
	if o == nil || IsNil(o.Repeatable) {
		return nil, false
	}
	return o.Repeatable, true
}

// HasRepeatable returns a boolean if a field has been set.
func (o *ProgramStage) HasRepeatable() bool {
	if o != nil && !IsNil(o.Repeatable) {
		return true
	}

	return false
}

// SetRepeatable gets a reference to the given bool and assigns it to the Repeatable field.
func (o *ProgramStage) SetRepeatable(v bool) {
	o.Repeatable = &v
}

// GetReportDateToUse returns the ReportDateToUse field value if set, zero value otherwise.
func (o *ProgramStage) GetReportDateToUse() string {
	if o == nil || IsNil(o.ReportDateToUse) {
		var ret string
		return ret
	}
	return *o.ReportDateToUse
}

// GetReportDateToUseOk returns a tuple with the ReportDateToUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetReportDateToUseOk() (*string, bool) {
	if o == nil || IsNil(o.ReportDateToUse) {
		return nil, false
	}
	return o.ReportDateToUse, true
}

// HasReportDateToUse returns a boolean if a field has been set.
func (o *ProgramStage) HasReportDateToUse() bool {
	if o != nil && !IsNil(o.ReportDateToUse) {
		return true
	}

	return false
}

// SetReportDateToUse gets a reference to the given string and assigns it to the ReportDateToUse field.
func (o *ProgramStage) SetReportDateToUse(v string) {
	o.ReportDateToUse = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ProgramStage) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ProgramStage) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ProgramStage) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *ProgramStage) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *ProgramStage) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *ProgramStage) SetShortName(v string) {
	o.ShortName = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ProgramStage) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *ProgramStage) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *ProgramStage) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetStandardInterval returns the StandardInterval field value if set, zero value otherwise.
func (o *ProgramStage) GetStandardInterval() int32 {
	if o == nil || IsNil(o.StandardInterval) {
		var ret int32
		return ret
	}
	return *o.StandardInterval
}

// GetStandardIntervalOk returns a tuple with the StandardInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetStandardIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.StandardInterval) {
		return nil, false
	}
	return o.StandardInterval, true
}

// HasStandardInterval returns a boolean if a field has been set.
func (o *ProgramStage) HasStandardInterval() bool {
	if o != nil && !IsNil(o.StandardInterval) {
		return true
	}

	return false
}

// SetStandardInterval gets a reference to the given int32 and assigns it to the StandardInterval field.
func (o *ProgramStage) SetStandardInterval(v int32) {
	o.StandardInterval = &v
}

// GetStyle returns the Style field value if set, zero value otherwise.
func (o *ProgramStage) GetStyle() ObjectStyle {
	if o == nil || IsNil(o.Style) {
		var ret ObjectStyle
		return ret
	}
	return *o.Style
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetStyleOk() (*ObjectStyle, bool) {
	if o == nil || IsNil(o.Style) {
		return nil, false
	}
	return o.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (o *ProgramStage) HasStyle() bool {
	if o != nil && !IsNil(o.Style) {
		return true
	}

	return false
}

// SetStyle gets a reference to the given ObjectStyle and assigns it to the Style field.
func (o *ProgramStage) SetStyle(v ObjectStyle) {
	o.Style = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ProgramStage) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ProgramStage) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *ProgramStage) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ProgramStage) GetUser() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.User) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetUserOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ProgramStage) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the User field.
func (o *ProgramStage) SetUser(v AggregateDataExchangeCreatedBy) {
	o.User = &v
}

// GetUserAccesses returns the UserAccesses field value if set, zero value otherwise.
func (o *ProgramStage) GetUserAccesses() []LegacyUserAccess {
	if o == nil || IsNil(o.UserAccesses) {
		var ret []LegacyUserAccess
		return ret
	}
	return o.UserAccesses
}

// GetUserAccessesOk returns a tuple with the UserAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetUserAccessesOk() ([]LegacyUserAccess, bool) {
	if o == nil || IsNil(o.UserAccesses) {
		return nil, false
	}
	return o.UserAccesses, true
}

// HasUserAccesses returns a boolean if a field has been set.
func (o *ProgramStage) HasUserAccesses() bool {
	if o != nil && !IsNil(o.UserAccesses) {
		return true
	}

	return false
}

// SetUserAccesses gets a reference to the given []LegacyUserAccess and assigns it to the UserAccesses field.
func (o *ProgramStage) SetUserAccesses(v []LegacyUserAccess) {
	o.UserAccesses = v
}

// GetUserGroupAccesses returns the UserGroupAccesses field value if set, zero value otherwise.
func (o *ProgramStage) GetUserGroupAccesses() []LegacyUserGroupAccess {
	if o == nil || IsNil(o.UserGroupAccesses) {
		var ret []LegacyUserGroupAccess
		return ret
	}
	return o.UserGroupAccesses
}

// GetUserGroupAccessesOk returns a tuple with the UserGroupAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetUserGroupAccessesOk() ([]LegacyUserGroupAccess, bool) {
	if o == nil || IsNil(o.UserGroupAccesses) {
		return nil, false
	}
	return o.UserGroupAccesses, true
}

// HasUserGroupAccesses returns a boolean if a field has been set.
func (o *ProgramStage) HasUserGroupAccesses() bool {
	if o != nil && !IsNil(o.UserGroupAccesses) {
		return true
	}

	return false
}

// SetUserGroupAccesses gets a reference to the given []LegacyUserGroupAccess and assigns it to the UserGroupAccesses field.
func (o *ProgramStage) SetUserGroupAccesses(v []LegacyUserGroupAccess) {
	o.UserGroupAccesses = v
}

// GetValidationStrategy returns the ValidationStrategy field value
func (o *ProgramStage) GetValidationStrategy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidationStrategy
}

// GetValidationStrategyOk returns a tuple with the ValidationStrategy field value
// and a boolean to check if the value has been set.
func (o *ProgramStage) GetValidationStrategyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidationStrategy, true
}

// SetValidationStrategy sets field value
func (o *ProgramStage) SetValidationStrategy(v string) {
	o.ValidationStrategy = v
}

func (o ProgramStage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramStage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.AllowGenerateNextVisit) {
		toSerialize["allowGenerateNextVisit"] = o.AllowGenerateNextVisit
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.AutoGenerateEvent) {
		toSerialize["autoGenerateEvent"] = o.AutoGenerateEvent
	}
	if !IsNil(o.BlockEntryForm) {
		toSerialize["blockEntryForm"] = o.BlockEntryForm
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DataEntryForm) {
		toSerialize["dataEntryForm"] = o.DataEntryForm
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayDescription) {
		toSerialize["displayDescription"] = o.DisplayDescription
	}
	if !IsNil(o.DisplayDueDateLabel) {
		toSerialize["displayDueDateLabel"] = o.DisplayDueDateLabel
	}
	if !IsNil(o.DisplayExecutionDateLabel) {
		toSerialize["displayExecutionDateLabel"] = o.DisplayExecutionDateLabel
	}
	if !IsNil(o.DisplayFormName) {
		toSerialize["displayFormName"] = o.DisplayFormName
	}
	if !IsNil(o.DisplayGenerateEventBox) {
		toSerialize["displayGenerateEventBox"] = o.DisplayGenerateEventBox
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplayShortName) {
		toSerialize["displayShortName"] = o.DisplayShortName
	}
	if !IsNil(o.DueDateLabel) {
		toSerialize["dueDateLabel"] = o.DueDateLabel
	}
	if !IsNil(o.EnableUserAssignment) {
		toSerialize["enableUserAssignment"] = o.EnableUserAssignment
	}
	if !IsNil(o.ExecutionDateLabel) {
		toSerialize["executionDateLabel"] = o.ExecutionDateLabel
	}
	if !IsNil(o.ExternalAccess) {
		toSerialize["externalAccess"] = o.ExternalAccess
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	toSerialize["featureType"] = o.FeatureType
	if !IsNil(o.FormName) {
		toSerialize["formName"] = o.FormName
	}
	toSerialize["formType"] = o.FormType
	if !IsNil(o.GeneratedByEnrollmentDate) {
		toSerialize["generatedByEnrollmentDate"] = o.GeneratedByEnrollmentDate
	}
	if !IsNil(o.HideDueDate) {
		toSerialize["hideDueDate"] = o.HideDueDate
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	toSerialize["minDaysFromStart"] = o.MinDaysFromStart
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NextScheduleDate) {
		toSerialize["nextScheduleDate"] = o.NextScheduleDate
	}
	if !IsNil(o.NotificationTemplates) {
		toSerialize["notificationTemplates"] = o.NotificationTemplates
	}
	if !IsNil(o.OpenAfterEnrollment) {
		toSerialize["openAfterEnrollment"] = o.OpenAfterEnrollment
	}
	if !IsNil(o.PeriodType) {
		toSerialize["periodType"] = o.PeriodType
	}
	if !IsNil(o.PreGenerateUID) {
		toSerialize["preGenerateUID"] = o.PreGenerateUID
	}
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.ProgramStageDataElements) {
		toSerialize["programStageDataElements"] = o.ProgramStageDataElements
	}
	if !IsNil(o.ProgramStageSections) {
		toSerialize["programStageSections"] = o.ProgramStageSections
	}
	if !IsNil(o.PublicAccess) {
		toSerialize["publicAccess"] = o.PublicAccess
	}
	if !IsNil(o.Referral) {
		toSerialize["referral"] = o.Referral
	}
	if !IsNil(o.RemindCompleted) {
		toSerialize["remindCompleted"] = o.RemindCompleted
	}
	if !IsNil(o.Repeatable) {
		toSerialize["repeatable"] = o.Repeatable
	}
	if !IsNil(o.ReportDateToUse) {
		toSerialize["reportDateToUse"] = o.ReportDateToUse
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sortOrder"] = o.SortOrder
	}
	if !IsNil(o.StandardInterval) {
		toSerialize["standardInterval"] = o.StandardInterval
	}
	if !IsNil(o.Style) {
		toSerialize["style"] = o.Style
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserAccesses) {
		toSerialize["userAccesses"] = o.UserAccesses
	}
	if !IsNil(o.UserGroupAccesses) {
		toSerialize["userGroupAccesses"] = o.UserGroupAccesses
	}
	toSerialize["validationStrategy"] = o.ValidationStrategy
	return toSerialize, nil
}

func (o *ProgramStage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"featureType",
		"formType",
		"minDaysFromStart",
		"validationStrategy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramStage := _ProgramStage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgramStage)

	if err != nil {
		return err
	}

	*o = ProgramStage(varProgramStage)

	return err
}

type NullableProgramStage struct {
	value *ProgramStage
	isSet bool
}

func (v NullableProgramStage) Get() *ProgramStage {
	return v.value
}

func (v *NullableProgramStage) Set(val *ProgramStage) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramStage) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramStage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramStage(val *ProgramStage) *NullableProgramStage {
	return &NullableProgramStage{value: val, isSet: true}
}

func (v NullableProgramStage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramStage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
