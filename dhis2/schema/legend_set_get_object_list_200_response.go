/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the LegendSetGetObjectList200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LegendSetGetObjectList200Response{}

// LegendSetGetObjectList200Response struct for LegendSetGetObjectList200Response
type LegendSetGetObjectList200Response struct {
	Pager      *Pager      `json:"pager,omitempty"`
	LegendSets []LegendSet `json:"legendSets,omitempty"`
}

// NewLegendSetGetObjectList200Response instantiates a new LegendSetGetObjectList200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLegendSetGetObjectList200Response() *LegendSetGetObjectList200Response {
	this := LegendSetGetObjectList200Response{}
	return &this
}

// NewLegendSetGetObjectList200ResponseWithDefaults instantiates a new LegendSetGetObjectList200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLegendSetGetObjectList200ResponseWithDefaults() *LegendSetGetObjectList200Response {
	this := LegendSetGetObjectList200Response{}
	return &this
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *LegendSetGetObjectList200Response) GetPager() Pager {
	if o == nil || IsNil(o.Pager) {
		var ret Pager
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegendSetGetObjectList200Response) GetPagerOk() (*Pager, bool) {
	if o == nil || IsNil(o.Pager) {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *LegendSetGetObjectList200Response) HasPager() bool {
	if o != nil && !IsNil(o.Pager) {
		return true
	}

	return false
}

// SetPager gets a reference to the given Pager and assigns it to the Pager field.
func (o *LegendSetGetObjectList200Response) SetPager(v Pager) {
	o.Pager = &v
}

// GetLegendSets returns the LegendSets field value if set, zero value otherwise.
func (o *LegendSetGetObjectList200Response) GetLegendSets() []LegendSet {
	if o == nil || IsNil(o.LegendSets) {
		var ret []LegendSet
		return ret
	}
	return o.LegendSets
}

// GetLegendSetsOk returns a tuple with the LegendSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegendSetGetObjectList200Response) GetLegendSetsOk() ([]LegendSet, bool) {
	if o == nil || IsNil(o.LegendSets) {
		return nil, false
	}
	return o.LegendSets, true
}

// HasLegendSets returns a boolean if a field has been set.
func (o *LegendSetGetObjectList200Response) HasLegendSets() bool {
	if o != nil && !IsNil(o.LegendSets) {
		return true
	}

	return false
}

// SetLegendSets gets a reference to the given []LegendSet and assigns it to the LegendSets field.
func (o *LegendSetGetObjectList200Response) SetLegendSets(v []LegendSet) {
	o.LegendSets = v
}

func (o LegendSetGetObjectList200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LegendSetGetObjectList200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pager) {
		toSerialize["pager"] = o.Pager
	}
	if !IsNil(o.LegendSets) {
		toSerialize["legendSets"] = o.LegendSets
	}
	return toSerialize, nil
}

type NullableLegendSetGetObjectList200Response struct {
	value *LegendSetGetObjectList200Response
	isSet bool
}

func (v NullableLegendSetGetObjectList200Response) Get() *LegendSetGetObjectList200Response {
	return v.value
}

func (v *NullableLegendSetGetObjectList200Response) Set(val *LegendSetGetObjectList200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLegendSetGetObjectList200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLegendSetGetObjectList200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegendSetGetObjectList200Response(val *LegendSetGetObjectList200Response) *NullableLegendSetGetObjectList200Response {
	return &NullableLegendSetGetObjectList200Response{value: val, isSet: true}
}

func (v NullableLegendSetGetObjectList200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegendSetGetObjectList200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
