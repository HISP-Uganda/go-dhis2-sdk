/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesJobConfiguration the model 'PropertyNamesJobConfiguration'
type PropertyNamesJobConfiguration string

// List of PropertyNames_JobConfiguration
const (
	PROPERTYNAMESJOBCONFIGURATION_ACCESS                 PropertyNamesJobConfiguration = "access"
	PROPERTYNAMESJOBCONFIGURATION_ATTRIBUTE_VALUES       PropertyNamesJobConfiguration = "attributeValues"
	PROPERTYNAMESJOBCONFIGURATION_CODE                   PropertyNamesJobConfiguration = "code"
	PROPERTYNAMESJOBCONFIGURATION_CONFIGURABLE           PropertyNamesJobConfiguration = "configurable"
	PROPERTYNAMESJOBCONFIGURATION_CREATED                PropertyNamesJobConfiguration = "created"
	PROPERTYNAMESJOBCONFIGURATION_CREATED_BY             PropertyNamesJobConfiguration = "createdBy"
	PROPERTYNAMESJOBCONFIGURATION_CRON_EXPRESSION        PropertyNamesJobConfiguration = "cronExpression"
	PROPERTYNAMESJOBCONFIGURATION_DELAY                  PropertyNamesJobConfiguration = "delay"
	PROPERTYNAMESJOBCONFIGURATION_DISPLAY_NAME           PropertyNamesJobConfiguration = "displayName"
	PROPERTYNAMESJOBCONFIGURATION_ENABLED                PropertyNamesJobConfiguration = "enabled"
	PROPERTYNAMESJOBCONFIGURATION_EXTERNAL_ACCESS        PropertyNamesJobConfiguration = "externalAccess"
	PROPERTYNAMESJOBCONFIGURATION_FAVORITE               PropertyNamesJobConfiguration = "favorite"
	PROPERTYNAMESJOBCONFIGURATION_FAVORITES              PropertyNamesJobConfiguration = "favorites"
	PROPERTYNAMESJOBCONFIGURATION_HREF                   PropertyNamesJobConfiguration = "href"
	PROPERTYNAMESJOBCONFIGURATION_ID                     PropertyNamesJobConfiguration = "id"
	PROPERTYNAMESJOBCONFIGURATION_JOB_PARAMETERS         PropertyNamesJobConfiguration = "jobParameters"
	PROPERTYNAMESJOBCONFIGURATION_JOB_STATUS             PropertyNamesJobConfiguration = "jobStatus"
	PROPERTYNAMESJOBCONFIGURATION_JOB_TYPE               PropertyNamesJobConfiguration = "jobType"
	PROPERTYNAMESJOBCONFIGURATION_LAST_EXECUTED          PropertyNamesJobConfiguration = "lastExecuted"
	PROPERTYNAMESJOBCONFIGURATION_LAST_EXECUTED_STATUS   PropertyNamesJobConfiguration = "lastExecutedStatus"
	PROPERTYNAMESJOBCONFIGURATION_LAST_RUNTIME_EXECUTION PropertyNamesJobConfiguration = "lastRuntimeExecution"
	PROPERTYNAMESJOBCONFIGURATION_LAST_UPDATED           PropertyNamesJobConfiguration = "lastUpdated"
	PROPERTYNAMESJOBCONFIGURATION_LAST_UPDATED_BY        PropertyNamesJobConfiguration = "lastUpdatedBy"
	PROPERTYNAMESJOBCONFIGURATION_LEADER_ONLY_JOB        PropertyNamesJobConfiguration = "leaderOnlyJob"
	PROPERTYNAMESJOBCONFIGURATION_NAME                   PropertyNamesJobConfiguration = "name"
	PROPERTYNAMESJOBCONFIGURATION_NEXT_EXECUTION_TIME    PropertyNamesJobConfiguration = "nextExecutionTime"
	PROPERTYNAMESJOBCONFIGURATION_PUBLIC_ACCESS          PropertyNamesJobConfiguration = "publicAccess"
	PROPERTYNAMESJOBCONFIGURATION_SCHEDULING_TYPE        PropertyNamesJobConfiguration = "schedulingType"
	PROPERTYNAMESJOBCONFIGURATION_SHARING                PropertyNamesJobConfiguration = "sharing"
	PROPERTYNAMESJOBCONFIGURATION_TRANSLATIONS           PropertyNamesJobConfiguration = "translations"
	PROPERTYNAMESJOBCONFIGURATION_USER                   PropertyNamesJobConfiguration = "user"
	PROPERTYNAMESJOBCONFIGURATION_USER_ACCESSES          PropertyNamesJobConfiguration = "userAccesses"
	PROPERTYNAMESJOBCONFIGURATION_USER_GROUP_ACCESSES    PropertyNamesJobConfiguration = "userGroupAccesses"
	PROPERTYNAMESJOBCONFIGURATION_USER_UID               PropertyNamesJobConfiguration = "userUid"
)

// All allowed values of PropertyNamesJobConfiguration enum
var AllowedPropertyNamesJobConfigurationEnumValues = []PropertyNamesJobConfiguration{
	"access",
	"attributeValues",
	"code",
	"configurable",
	"created",
	"createdBy",
	"cronExpression",
	"delay",
	"displayName",
	"enabled",
	"externalAccess",
	"favorite",
	"favorites",
	"href",
	"id",
	"jobParameters",
	"jobStatus",
	"jobType",
	"lastExecuted",
	"lastExecutedStatus",
	"lastRuntimeExecution",
	"lastUpdated",
	"lastUpdatedBy",
	"leaderOnlyJob",
	"name",
	"nextExecutionTime",
	"publicAccess",
	"schedulingType",
	"sharing",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"userUid",
}

func (v *PropertyNamesJobConfiguration) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesJobConfiguration(value)
	for _, existing := range AllowedPropertyNamesJobConfigurationEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesJobConfiguration", value)
}

// NewPropertyNamesJobConfigurationFromValue returns a pointer to a valid PropertyNamesJobConfiguration
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesJobConfigurationFromValue(v string) (*PropertyNamesJobConfiguration, error) {
	ev := PropertyNamesJobConfiguration(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesJobConfiguration: valid values are %v", v, AllowedPropertyNamesJobConfigurationEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesJobConfiguration) IsValid() bool {
	for _, existing := range AllowedPropertyNamesJobConfigurationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_JobConfiguration value
func (v PropertyNamesJobConfiguration) Ptr() *PropertyNamesJobConfiguration {
	return &v
}

type NullablePropertyNamesJobConfiguration struct {
	value *PropertyNamesJobConfiguration
	isSet bool
}

func (v NullablePropertyNamesJobConfiguration) Get() *PropertyNamesJobConfiguration {
	return v.value
}

func (v *NullablePropertyNamesJobConfiguration) Set(val *PropertyNamesJobConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesJobConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesJobConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesJobConfiguration(val *PropertyNamesJobConfiguration) *NullablePropertyNamesJobConfiguration {
	return &NullablePropertyNamesJobConfiguration{value: val, isSet: true}
}

func (v NullablePropertyNamesJobConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesJobConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
