/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"time"
)

// checks if the Dhis2OAuth2Client type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dhis2OAuth2Client{}

// Dhis2OAuth2Client struct for Dhis2OAuth2Client
type Dhis2OAuth2Client struct {
	Access                      *Access          `json:"access,omitempty"`
	AttributeValues             []AttributeValue `json:"attributeValues,omitempty"`
	AuthorizationGrantTypes     *string          `json:"authorizationGrantTypes,omitempty"`
	ClientAuthenticationMethods *string          `json:"clientAuthenticationMethods,omitempty"`
	ClientId                    *string          `json:"clientId,omitempty"`
	ClientIdIssuedAt            *time.Time       `json:"clientIdIssuedAt,omitempty"`
	ClientSecret                *string          `json:"clientSecret,omitempty"`
	ClientSecretExpiresAt       *time.Time       `json:"clientSecretExpiresAt,omitempty"`
	ClientSettings              *string          `json:"clientSettings,omitempty"`
	Code                        *string          `json:"code,omitempty"`
	Created                     *time.Time       `json:"created,omitempty"`
	CreatedBy                   *UserDto         `json:"createdBy,omitempty"`
	DisplayName                 *string          `json:"displayName,omitempty"`
	Favorite                    *bool            `json:"favorite,omitempty"`
	Favorites                   []string         `json:"favorites,omitempty"`
	Href                        *string          `json:"href,omitempty"`
	Id                          *string          `json:"id,omitempty"`
	LastUpdated                 *time.Time       `json:"lastUpdated,omitempty"`
	LastUpdatedBy               *UserDto         `json:"lastUpdatedBy,omitempty"`
	Name                        *string          `json:"name,omitempty"`
	PostLogoutRedirectUris      *string          `json:"postLogoutRedirectUris,omitempty"`
	RedirectUris                *string          `json:"redirectUris,omitempty"`
	Scopes                      *string          `json:"scopes,omitempty"`
	Sharing                     *Sharing         `json:"sharing,omitempty"`
	TokenSettings               *string          `json:"tokenSettings,omitempty"`
	Translations                []Translation    `json:"translations,omitempty"`
}

// NewDhis2OAuth2Client instantiates a new Dhis2OAuth2Client object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDhis2OAuth2Client() *Dhis2OAuth2Client {
	this := Dhis2OAuth2Client{}
	return &this
}

// NewDhis2OAuth2ClientWithDefaults instantiates a new Dhis2OAuth2Client object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDhis2OAuth2ClientWithDefaults() *Dhis2OAuth2Client {
	this := Dhis2OAuth2Client{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *Dhis2OAuth2Client) SetAccess(v Access) {
	o.Access = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *Dhis2OAuth2Client) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetAuthorizationGrantTypes returns the AuthorizationGrantTypes field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetAuthorizationGrantTypes() string {
	if o == nil || IsNil(o.AuthorizationGrantTypes) {
		var ret string
		return ret
	}
	return *o.AuthorizationGrantTypes
}

// GetAuthorizationGrantTypesOk returns a tuple with the AuthorizationGrantTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetAuthorizationGrantTypesOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationGrantTypes) {
		return nil, false
	}
	return o.AuthorizationGrantTypes, true
}

// HasAuthorizationGrantTypes returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasAuthorizationGrantTypes() bool {
	if o != nil && !IsNil(o.AuthorizationGrantTypes) {
		return true
	}

	return false
}

// SetAuthorizationGrantTypes gets a reference to the given string and assigns it to the AuthorizationGrantTypes field.
func (o *Dhis2OAuth2Client) SetAuthorizationGrantTypes(v string) {
	o.AuthorizationGrantTypes = &v
}

// GetClientAuthenticationMethods returns the ClientAuthenticationMethods field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetClientAuthenticationMethods() string {
	if o == nil || IsNil(o.ClientAuthenticationMethods) {
		var ret string
		return ret
	}
	return *o.ClientAuthenticationMethods
}

// GetClientAuthenticationMethodsOk returns a tuple with the ClientAuthenticationMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetClientAuthenticationMethodsOk() (*string, bool) {
	if o == nil || IsNil(o.ClientAuthenticationMethods) {
		return nil, false
	}
	return o.ClientAuthenticationMethods, true
}

// HasClientAuthenticationMethods returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasClientAuthenticationMethods() bool {
	if o != nil && !IsNil(o.ClientAuthenticationMethods) {
		return true
	}

	return false
}

// SetClientAuthenticationMethods gets a reference to the given string and assigns it to the ClientAuthenticationMethods field.
func (o *Dhis2OAuth2Client) SetClientAuthenticationMethods(v string) {
	o.ClientAuthenticationMethods = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *Dhis2OAuth2Client) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientIdIssuedAt returns the ClientIdIssuedAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetClientIdIssuedAt() time.Time {
	if o == nil || IsNil(o.ClientIdIssuedAt) {
		var ret time.Time
		return ret
	}
	return *o.ClientIdIssuedAt
}

// GetClientIdIssuedAtOk returns a tuple with the ClientIdIssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetClientIdIssuedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClientIdIssuedAt) {
		return nil, false
	}
	return o.ClientIdIssuedAt, true
}

// HasClientIdIssuedAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasClientIdIssuedAt() bool {
	if o != nil && !IsNil(o.ClientIdIssuedAt) {
		return true
	}

	return false
}

// SetClientIdIssuedAt gets a reference to the given time.Time and assigns it to the ClientIdIssuedAt field.
func (o *Dhis2OAuth2Client) SetClientIdIssuedAt(v time.Time) {
	o.ClientIdIssuedAt = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *Dhis2OAuth2Client) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetClientSecretExpiresAt returns the ClientSecretExpiresAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetClientSecretExpiresAt() time.Time {
	if o == nil || IsNil(o.ClientSecretExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ClientSecretExpiresAt
}

// GetClientSecretExpiresAtOk returns a tuple with the ClientSecretExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetClientSecretExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClientSecretExpiresAt) {
		return nil, false
	}
	return o.ClientSecretExpiresAt, true
}

// HasClientSecretExpiresAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasClientSecretExpiresAt() bool {
	if o != nil && !IsNil(o.ClientSecretExpiresAt) {
		return true
	}

	return false
}

// SetClientSecretExpiresAt gets a reference to the given time.Time and assigns it to the ClientSecretExpiresAt field.
func (o *Dhis2OAuth2Client) SetClientSecretExpiresAt(v time.Time) {
	o.ClientSecretExpiresAt = &v
}

// GetClientSettings returns the ClientSettings field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetClientSettings() string {
	if o == nil || IsNil(o.ClientSettings) {
		var ret string
		return ret
	}
	return *o.ClientSettings
}

// GetClientSettingsOk returns a tuple with the ClientSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetClientSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSettings) {
		return nil, false
	}
	return o.ClientSettings, true
}

// HasClientSettings returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasClientSettings() bool {
	if o != nil && !IsNil(o.ClientSettings) {
		return true
	}

	return false
}

// SetClientSettings gets a reference to the given string and assigns it to the ClientSettings field.
func (o *Dhis2OAuth2Client) SetClientSettings(v string) {
	o.ClientSettings = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *Dhis2OAuth2Client) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *Dhis2OAuth2Client) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetCreatedBy() UserDto {
	if o == nil || IsNil(o.CreatedBy) {
		var ret UserDto
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetCreatedByOk() (*UserDto, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given UserDto and assigns it to the CreatedBy field.
func (o *Dhis2OAuth2Client) SetCreatedBy(v UserDto) {
	o.CreatedBy = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Dhis2OAuth2Client) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *Dhis2OAuth2Client) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *Dhis2OAuth2Client) SetFavorites(v []string) {
	o.Favorites = v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *Dhis2OAuth2Client) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Dhis2OAuth2Client) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Dhis2OAuth2Client) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetLastUpdatedBy() UserDto {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret UserDto
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetLastUpdatedByOk() (*UserDto, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given UserDto and assigns it to the LastUpdatedBy field.
func (o *Dhis2OAuth2Client) SetLastUpdatedBy(v UserDto) {
	o.LastUpdatedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Dhis2OAuth2Client) SetName(v string) {
	o.Name = &v
}

// GetPostLogoutRedirectUris returns the PostLogoutRedirectUris field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetPostLogoutRedirectUris() string {
	if o == nil || IsNil(o.PostLogoutRedirectUris) {
		var ret string
		return ret
	}
	return *o.PostLogoutRedirectUris
}

// GetPostLogoutRedirectUrisOk returns a tuple with the PostLogoutRedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetPostLogoutRedirectUrisOk() (*string, bool) {
	if o == nil || IsNil(o.PostLogoutRedirectUris) {
		return nil, false
	}
	return o.PostLogoutRedirectUris, true
}

// HasPostLogoutRedirectUris returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasPostLogoutRedirectUris() bool {
	if o != nil && !IsNil(o.PostLogoutRedirectUris) {
		return true
	}

	return false
}

// SetPostLogoutRedirectUris gets a reference to the given string and assigns it to the PostLogoutRedirectUris field.
func (o *Dhis2OAuth2Client) SetPostLogoutRedirectUris(v string) {
	o.PostLogoutRedirectUris = &v
}

// GetRedirectUris returns the RedirectUris field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetRedirectUris() string {
	if o == nil || IsNil(o.RedirectUris) {
		var ret string
		return ret
	}
	return *o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetRedirectUrisOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUris) {
		return nil, false
	}
	return o.RedirectUris, true
}

// HasRedirectUris returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasRedirectUris() bool {
	if o != nil && !IsNil(o.RedirectUris) {
		return true
	}

	return false
}

// SetRedirectUris gets a reference to the given string and assigns it to the RedirectUris field.
func (o *Dhis2OAuth2Client) SetRedirectUris(v string) {
	o.RedirectUris = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetScopes() string {
	if o == nil || IsNil(o.Scopes) {
		var ret string
		return ret
	}
	return *o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetScopesOk() (*string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given string and assigns it to the Scopes field.
func (o *Dhis2OAuth2Client) SetScopes(v string) {
	o.Scopes = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *Dhis2OAuth2Client) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetTokenSettings returns the TokenSettings field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetTokenSettings() string {
	if o == nil || IsNil(o.TokenSettings) {
		var ret string
		return ret
	}
	return *o.TokenSettings
}

// GetTokenSettingsOk returns a tuple with the TokenSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetTokenSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.TokenSettings) {
		return nil, false
	}
	return o.TokenSettings, true
}

// HasTokenSettings returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasTokenSettings() bool {
	if o != nil && !IsNil(o.TokenSettings) {
		return true
	}

	return false
}

// SetTokenSettings gets a reference to the given string and assigns it to the TokenSettings field.
func (o *Dhis2OAuth2Client) SetTokenSettings(v string) {
	o.TokenSettings = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *Dhis2OAuth2Client) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Client) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *Dhis2OAuth2Client) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *Dhis2OAuth2Client) SetTranslations(v []Translation) {
	o.Translations = v
}

func (o Dhis2OAuth2Client) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dhis2OAuth2Client) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.AuthorizationGrantTypes) {
		toSerialize["authorizationGrantTypes"] = o.AuthorizationGrantTypes
	}
	if !IsNil(o.ClientAuthenticationMethods) {
		toSerialize["clientAuthenticationMethods"] = o.ClientAuthenticationMethods
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.ClientIdIssuedAt) {
		toSerialize["clientIdIssuedAt"] = o.ClientIdIssuedAt
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !IsNil(o.ClientSecretExpiresAt) {
		toSerialize["clientSecretExpiresAt"] = o.ClientSecretExpiresAt
	}
	if !IsNil(o.ClientSettings) {
		toSerialize["clientSettings"] = o.ClientSettings
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PostLogoutRedirectUris) {
		toSerialize["postLogoutRedirectUris"] = o.PostLogoutRedirectUris
	}
	if !IsNil(o.RedirectUris) {
		toSerialize["redirectUris"] = o.RedirectUris
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.TokenSettings) {
		toSerialize["tokenSettings"] = o.TokenSettings
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	return toSerialize, nil
}

type NullableDhis2OAuth2Client struct {
	value *Dhis2OAuth2Client
	isSet bool
}

func (v NullableDhis2OAuth2Client) Get() *Dhis2OAuth2Client {
	return v.value
}

func (v *NullableDhis2OAuth2Client) Set(val *Dhis2OAuth2Client) {
	v.value = val
	v.isSet = true
}

func (v NullableDhis2OAuth2Client) IsSet() bool {
	return v.isSet
}

func (v *NullableDhis2OAuth2Client) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhis2OAuth2Client(val *Dhis2OAuth2Client) *NullableDhis2OAuth2Client {
	return &NullableDhis2OAuth2Client{value: val, isSet: true}
}

func (v NullableDhis2OAuth2Client) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhis2OAuth2Client) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
