/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesOptionGroupSet the model 'PropertyNamesOptionGroupSet'
type PropertyNamesOptionGroupSet string

// List of PropertyNames_OptionGroupSet
const (
	PROPERTYNAMESOPTIONGROUPSET_ACCESS                  PropertyNamesOptionGroupSet = "access"
	PROPERTYNAMESOPTIONGROUPSET_AGGREGATION_TYPE        PropertyNamesOptionGroupSet = "aggregationType"
	PROPERTYNAMESOPTIONGROUPSET_ALL_ITEMS               PropertyNamesOptionGroupSet = "allItems"
	PROPERTYNAMESOPTIONGROUPSET_ATTRIBUTE_VALUES        PropertyNamesOptionGroupSet = "attributeValues"
	PROPERTYNAMESOPTIONGROUPSET_CODE                    PropertyNamesOptionGroupSet = "code"
	PROPERTYNAMESOPTIONGROUPSET_CREATED                 PropertyNamesOptionGroupSet = "created"
	PROPERTYNAMESOPTIONGROUPSET_CREATED_BY              PropertyNamesOptionGroupSet = "createdBy"
	PROPERTYNAMESOPTIONGROUPSET_DATA_DIMENSION          PropertyNamesOptionGroupSet = "dataDimension"
	PROPERTYNAMESOPTIONGROUPSET_DATA_DIMENSION_TYPE     PropertyNamesOptionGroupSet = "dataDimensionType"
	PROPERTYNAMESOPTIONGROUPSET_DESCRIPTION             PropertyNamesOptionGroupSet = "description"
	PROPERTYNAMESOPTIONGROUPSET_DIMENSION               PropertyNamesOptionGroupSet = "dimension"
	PROPERTYNAMESOPTIONGROUPSET_DIMENSION_ITEM_KEYWORDS PropertyNamesOptionGroupSet = "dimensionItemKeywords"
	PROPERTYNAMESOPTIONGROUPSET_DISPLAY_DESCRIPTION     PropertyNamesOptionGroupSet = "displayDescription"
	PROPERTYNAMESOPTIONGROUPSET_DISPLAY_FORM_NAME       PropertyNamesOptionGroupSet = "displayFormName"
	PROPERTYNAMESOPTIONGROUPSET_DISPLAY_NAME            PropertyNamesOptionGroupSet = "displayName"
	PROPERTYNAMESOPTIONGROUPSET_DISPLAY_SHORT_NAME      PropertyNamesOptionGroupSet = "displayShortName"
	PROPERTYNAMESOPTIONGROUPSET_EXTERNAL_ACCESS         PropertyNamesOptionGroupSet = "externalAccess"
	PROPERTYNAMESOPTIONGROUPSET_FAVORITE                PropertyNamesOptionGroupSet = "favorite"
	PROPERTYNAMESOPTIONGROUPSET_FAVORITES               PropertyNamesOptionGroupSet = "favorites"
	PROPERTYNAMESOPTIONGROUPSET_FILTER                  PropertyNamesOptionGroupSet = "filter"
	PROPERTYNAMESOPTIONGROUPSET_FORM_NAME               PropertyNamesOptionGroupSet = "formName"
	PROPERTYNAMESOPTIONGROUPSET_HREF                    PropertyNamesOptionGroupSet = "href"
	PROPERTYNAMESOPTIONGROUPSET_ID                      PropertyNamesOptionGroupSet = "id"
	PROPERTYNAMESOPTIONGROUPSET_ITEMS                   PropertyNamesOptionGroupSet = "items"
	PROPERTYNAMESOPTIONGROUPSET_LAST_UPDATED            PropertyNamesOptionGroupSet = "lastUpdated"
	PROPERTYNAMESOPTIONGROUPSET_LAST_UPDATED_BY         PropertyNamesOptionGroupSet = "lastUpdatedBy"
	PROPERTYNAMESOPTIONGROUPSET_LEGEND_SET              PropertyNamesOptionGroupSet = "legendSet"
	PROPERTYNAMESOPTIONGROUPSET_NAME                    PropertyNamesOptionGroupSet = "name"
	PROPERTYNAMESOPTIONGROUPSET_OPTION_GROUPS           PropertyNamesOptionGroupSet = "optionGroups"
	PROPERTYNAMESOPTIONGROUPSET_OPTION_SET              PropertyNamesOptionGroupSet = "optionSet"
	PROPERTYNAMESOPTIONGROUPSET_PROGRAM_STAGE           PropertyNamesOptionGroupSet = "programStage"
	PROPERTYNAMESOPTIONGROUPSET_PUBLIC_ACCESS           PropertyNamesOptionGroupSet = "publicAccess"
	PROPERTYNAMESOPTIONGROUPSET_REPETITION              PropertyNamesOptionGroupSet = "repetition"
	PROPERTYNAMESOPTIONGROUPSET_SHARING                 PropertyNamesOptionGroupSet = "sharing"
	PROPERTYNAMESOPTIONGROUPSET_SHORT_NAME              PropertyNamesOptionGroupSet = "shortName"
	PROPERTYNAMESOPTIONGROUPSET_TRANSLATIONS            PropertyNamesOptionGroupSet = "translations"
	PROPERTYNAMESOPTIONGROUPSET_USER                    PropertyNamesOptionGroupSet = "user"
	PROPERTYNAMESOPTIONGROUPSET_USER_ACCESSES           PropertyNamesOptionGroupSet = "userAccesses"
	PROPERTYNAMESOPTIONGROUPSET_USER_GROUP_ACCESSES     PropertyNamesOptionGroupSet = "userGroupAccesses"
	PROPERTYNAMESOPTIONGROUPSET_VALUE_TYPE              PropertyNamesOptionGroupSet = "valueType"
)

// All allowed values of PropertyNamesOptionGroupSet enum
var AllowedPropertyNamesOptionGroupSetEnumValues = []PropertyNamesOptionGroupSet{
	"access",
	"aggregationType",
	"allItems",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"dataDimension",
	"dataDimensionType",
	"description",
	"dimension",
	"dimensionItemKeywords",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"externalAccess",
	"favorite",
	"favorites",
	"filter",
	"formName",
	"href",
	"id",
	"items",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"name",
	"optionGroups",
	"optionSet",
	"programStage",
	"publicAccess",
	"repetition",
	"sharing",
	"shortName",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"valueType",
}

func (v *PropertyNamesOptionGroupSet) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesOptionGroupSet(value)
	for _, existing := range AllowedPropertyNamesOptionGroupSetEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesOptionGroupSet", value)
}

// NewPropertyNamesOptionGroupSetFromValue returns a pointer to a valid PropertyNamesOptionGroupSet
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesOptionGroupSetFromValue(v string) (*PropertyNamesOptionGroupSet, error) {
	ev := PropertyNamesOptionGroupSet(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesOptionGroupSet: valid values are %v", v, AllowedPropertyNamesOptionGroupSetEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesOptionGroupSet) IsValid() bool {
	for _, existing := range AllowedPropertyNamesOptionGroupSetEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_OptionGroupSet value
func (v PropertyNamesOptionGroupSet) Ptr() *PropertyNamesOptionGroupSet {
	return &v
}

type NullablePropertyNamesOptionGroupSet struct {
	value *PropertyNamesOptionGroupSet
	isSet bool
}

func (v NullablePropertyNamesOptionGroupSet) Get() *PropertyNamesOptionGroupSet {
	return v.value
}

func (v *NullablePropertyNamesOptionGroupSet) Set(val *PropertyNamesOptionGroupSet) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesOptionGroupSet) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesOptionGroupSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesOptionGroupSet(val *PropertyNamesOptionGroupSet) *NullablePropertyNamesOptionGroupSet {
	return &NullablePropertyNamesOptionGroupSet{value: val, isSet: true}
}

func (v NullablePropertyNamesOptionGroupSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesOptionGroupSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
