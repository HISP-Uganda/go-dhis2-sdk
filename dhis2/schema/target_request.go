/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the TargetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetRequest{}

// TargetRequest struct for TargetRequest
type TargetRequest struct {
	CategoryOptionComboIdScheme *string `json:"categoryOptionComboIdScheme,omitempty"`
	DataElementIdScheme         *string `json:"dataElementIdScheme,omitempty"`
	IdScheme                    *string `json:"idScheme,omitempty"`
	OrgUnitIdScheme             *string `json:"orgUnitIdScheme,omitempty"`
}

// NewTargetRequest instantiates a new TargetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetRequest() *TargetRequest {
	this := TargetRequest{}
	return &this
}

// NewTargetRequestWithDefaults instantiates a new TargetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetRequestWithDefaults() *TargetRequest {
	this := TargetRequest{}
	return &this
}

// GetCategoryOptionComboIdScheme returns the CategoryOptionComboIdScheme field value if set, zero value otherwise.
func (o *TargetRequest) GetCategoryOptionComboIdScheme() string {
	if o == nil || IsNil(o.CategoryOptionComboIdScheme) {
		var ret string
		return ret
	}
	return *o.CategoryOptionComboIdScheme
}

// GetCategoryOptionComboIdSchemeOk returns a tuple with the CategoryOptionComboIdScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetRequest) GetCategoryOptionComboIdSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryOptionComboIdScheme) {
		return nil, false
	}
	return o.CategoryOptionComboIdScheme, true
}

// HasCategoryOptionComboIdScheme returns a boolean if a field has been set.
func (o *TargetRequest) HasCategoryOptionComboIdScheme() bool {
	if o != nil && !IsNil(o.CategoryOptionComboIdScheme) {
		return true
	}

	return false
}

// SetCategoryOptionComboIdScheme gets a reference to the given string and assigns it to the CategoryOptionComboIdScheme field.
func (o *TargetRequest) SetCategoryOptionComboIdScheme(v string) {
	o.CategoryOptionComboIdScheme = &v
}

// GetDataElementIdScheme returns the DataElementIdScheme field value if set, zero value otherwise.
func (o *TargetRequest) GetDataElementIdScheme() string {
	if o == nil || IsNil(o.DataElementIdScheme) {
		var ret string
		return ret
	}
	return *o.DataElementIdScheme
}

// GetDataElementIdSchemeOk returns a tuple with the DataElementIdScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetRequest) GetDataElementIdSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.DataElementIdScheme) {
		return nil, false
	}
	return o.DataElementIdScheme, true
}

// HasDataElementIdScheme returns a boolean if a field has been set.
func (o *TargetRequest) HasDataElementIdScheme() bool {
	if o != nil && !IsNil(o.DataElementIdScheme) {
		return true
	}

	return false
}

// SetDataElementIdScheme gets a reference to the given string and assigns it to the DataElementIdScheme field.
func (o *TargetRequest) SetDataElementIdScheme(v string) {
	o.DataElementIdScheme = &v
}

// GetIdScheme returns the IdScheme field value if set, zero value otherwise.
func (o *TargetRequest) GetIdScheme() string {
	if o == nil || IsNil(o.IdScheme) {
		var ret string
		return ret
	}
	return *o.IdScheme
}

// GetIdSchemeOk returns a tuple with the IdScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetRequest) GetIdSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.IdScheme) {
		return nil, false
	}
	return o.IdScheme, true
}

// HasIdScheme returns a boolean if a field has been set.
func (o *TargetRequest) HasIdScheme() bool {
	if o != nil && !IsNil(o.IdScheme) {
		return true
	}

	return false
}

// SetIdScheme gets a reference to the given string and assigns it to the IdScheme field.
func (o *TargetRequest) SetIdScheme(v string) {
	o.IdScheme = &v
}

// GetOrgUnitIdScheme returns the OrgUnitIdScheme field value if set, zero value otherwise.
func (o *TargetRequest) GetOrgUnitIdScheme() string {
	if o == nil || IsNil(o.OrgUnitIdScheme) {
		var ret string
		return ret
	}
	return *o.OrgUnitIdScheme
}

// GetOrgUnitIdSchemeOk returns a tuple with the OrgUnitIdScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetRequest) GetOrgUnitIdSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.OrgUnitIdScheme) {
		return nil, false
	}
	return o.OrgUnitIdScheme, true
}

// HasOrgUnitIdScheme returns a boolean if a field has been set.
func (o *TargetRequest) HasOrgUnitIdScheme() bool {
	if o != nil && !IsNil(o.OrgUnitIdScheme) {
		return true
	}

	return false
}

// SetOrgUnitIdScheme gets a reference to the given string and assigns it to the OrgUnitIdScheme field.
func (o *TargetRequest) SetOrgUnitIdScheme(v string) {
	o.OrgUnitIdScheme = &v
}

func (o TargetRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CategoryOptionComboIdScheme) {
		toSerialize["categoryOptionComboIdScheme"] = o.CategoryOptionComboIdScheme
	}
	if !IsNil(o.DataElementIdScheme) {
		toSerialize["dataElementIdScheme"] = o.DataElementIdScheme
	}
	if !IsNil(o.IdScheme) {
		toSerialize["idScheme"] = o.IdScheme
	}
	if !IsNil(o.OrgUnitIdScheme) {
		toSerialize["orgUnitIdScheme"] = o.OrgUnitIdScheme
	}
	return toSerialize, nil
}

type NullableTargetRequest struct {
	value *TargetRequest
	isSet bool
}

func (v NullableTargetRequest) Get() *TargetRequest {
	return v.value
}

func (v *NullableTargetRequest) Set(val *TargetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetRequest(val *TargetRequest) *NullableTargetRequest {
	return &NullableTargetRequest{value: val, isSet: true}
}

func (v NullableTargetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
