/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// JobConfigurationJobParameters - struct for JobConfigurationJobParameters
type JobConfigurationJobParameters struct {
	AggregateDataExchangeJobParameters              *AggregateDataExchangeJobParameters
	AnalyticsJobParameters                          *AnalyticsJobParameters
	ContinuousAnalyticsJobParameters                *ContinuousAnalyticsJobParameters
	DataIntegrityDetailsJobParameters               *DataIntegrityDetailsJobParameters
	DataIntegrityJobParameters                      *DataIntegrityJobParameters
	DataSynchronizationJobParameters                *DataSynchronizationJobParameters
	DisableInactiveUsersJobParameters               *DisableInactiveUsersJobParameters
	EventProgramsDataSynchronizationJobParameters   *EventProgramsDataSynchronizationJobParameters
	MetadataSyncJobParameters                       *MetadataSyncJobParameters
	MonitoringJobParameters                         *MonitoringJobParameters
	PredictorJobParameters                          *PredictorJobParameters
	PushAnalysisJobParameters                       *PushAnalysisJobParameters
	SmsJobParameters                                *SmsJobParameters
	SqlViewUpdateParameters                         *SqlViewUpdateParameters
	TestJobParameters                               *TestJobParameters
	TrackerProgramsDataSynchronizationJobParameters *TrackerProgramsDataSynchronizationJobParameters
	TrackerTrigramIndexJobParameters                *TrackerTrigramIndexJobParameters
}

// AggregateDataExchangeJobParametersAsJobConfigurationJobParameters is a convenience function that returns AggregateDataExchangeJobParameters wrapped in JobConfigurationJobParameters
func AggregateDataExchangeJobParametersAsJobConfigurationJobParameters(v *AggregateDataExchangeJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		AggregateDataExchangeJobParameters: v,
	}
}

// AnalyticsJobParametersAsJobConfigurationJobParameters is a convenience function that returns AnalyticsJobParameters wrapped in JobConfigurationJobParameters
func AnalyticsJobParametersAsJobConfigurationJobParameters(v *AnalyticsJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		AnalyticsJobParameters: v,
	}
}

// ContinuousAnalyticsJobParametersAsJobConfigurationJobParameters is a convenience function that returns ContinuousAnalyticsJobParameters wrapped in JobConfigurationJobParameters
func ContinuousAnalyticsJobParametersAsJobConfigurationJobParameters(v *ContinuousAnalyticsJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		ContinuousAnalyticsJobParameters: v,
	}
}

// DataIntegrityDetailsJobParametersAsJobConfigurationJobParameters is a convenience function that returns DataIntegrityDetailsJobParameters wrapped in JobConfigurationJobParameters
func DataIntegrityDetailsJobParametersAsJobConfigurationJobParameters(v *DataIntegrityDetailsJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		DataIntegrityDetailsJobParameters: v,
	}
}

// DataIntegrityJobParametersAsJobConfigurationJobParameters is a convenience function that returns DataIntegrityJobParameters wrapped in JobConfigurationJobParameters
func DataIntegrityJobParametersAsJobConfigurationJobParameters(v *DataIntegrityJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		DataIntegrityJobParameters: v,
	}
}

// DataSynchronizationJobParametersAsJobConfigurationJobParameters is a convenience function that returns DataSynchronizationJobParameters wrapped in JobConfigurationJobParameters
func DataSynchronizationJobParametersAsJobConfigurationJobParameters(v *DataSynchronizationJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		DataSynchronizationJobParameters: v,
	}
}

// DisableInactiveUsersJobParametersAsJobConfigurationJobParameters is a convenience function that returns DisableInactiveUsersJobParameters wrapped in JobConfigurationJobParameters
func DisableInactiveUsersJobParametersAsJobConfigurationJobParameters(v *DisableInactiveUsersJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		DisableInactiveUsersJobParameters: v,
	}
}

// EventProgramsDataSynchronizationJobParametersAsJobConfigurationJobParameters is a convenience function that returns EventProgramsDataSynchronizationJobParameters wrapped in JobConfigurationJobParameters
func EventProgramsDataSynchronizationJobParametersAsJobConfigurationJobParameters(v *EventProgramsDataSynchronizationJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		EventProgramsDataSynchronizationJobParameters: v,
	}
}

// MetadataSyncJobParametersAsJobConfigurationJobParameters is a convenience function that returns MetadataSyncJobParameters wrapped in JobConfigurationJobParameters
func MetadataSyncJobParametersAsJobConfigurationJobParameters(v *MetadataSyncJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		MetadataSyncJobParameters: v,
	}
}

// MonitoringJobParametersAsJobConfigurationJobParameters is a convenience function that returns MonitoringJobParameters wrapped in JobConfigurationJobParameters
func MonitoringJobParametersAsJobConfigurationJobParameters(v *MonitoringJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		MonitoringJobParameters: v,
	}
}

// PredictorJobParametersAsJobConfigurationJobParameters is a convenience function that returns PredictorJobParameters wrapped in JobConfigurationJobParameters
func PredictorJobParametersAsJobConfigurationJobParameters(v *PredictorJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		PredictorJobParameters: v,
	}
}

// PushAnalysisJobParametersAsJobConfigurationJobParameters is a convenience function that returns PushAnalysisJobParameters wrapped in JobConfigurationJobParameters
func PushAnalysisJobParametersAsJobConfigurationJobParameters(v *PushAnalysisJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		PushAnalysisJobParameters: v,
	}
}

// SmsJobParametersAsJobConfigurationJobParameters is a convenience function that returns SmsJobParameters wrapped in JobConfigurationJobParameters
func SmsJobParametersAsJobConfigurationJobParameters(v *SmsJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		SmsJobParameters: v,
	}
}

// SqlViewUpdateParametersAsJobConfigurationJobParameters is a convenience function that returns SqlViewUpdateParameters wrapped in JobConfigurationJobParameters
func SqlViewUpdateParametersAsJobConfigurationJobParameters(v *SqlViewUpdateParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		SqlViewUpdateParameters: v,
	}
}

// TestJobParametersAsJobConfigurationJobParameters is a convenience function that returns TestJobParameters wrapped in JobConfigurationJobParameters
func TestJobParametersAsJobConfigurationJobParameters(v *TestJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		TestJobParameters: v,
	}
}

// TrackerProgramsDataSynchronizationJobParametersAsJobConfigurationJobParameters is a convenience function that returns TrackerProgramsDataSynchronizationJobParameters wrapped in JobConfigurationJobParameters
func TrackerProgramsDataSynchronizationJobParametersAsJobConfigurationJobParameters(v *TrackerProgramsDataSynchronizationJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		TrackerProgramsDataSynchronizationJobParameters: v,
	}
}

// TrackerTrigramIndexJobParametersAsJobConfigurationJobParameters is a convenience function that returns TrackerTrigramIndexJobParameters wrapped in JobConfigurationJobParameters
func TrackerTrigramIndexJobParametersAsJobConfigurationJobParameters(v *TrackerTrigramIndexJobParameters) JobConfigurationJobParameters {
	return JobConfigurationJobParameters{
		TrackerTrigramIndexJobParameters: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *JobConfigurationJobParameters) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AggregateDataExchangeJobParameters
	err = newStrictDecoder(data).Decode(&dst.AggregateDataExchangeJobParameters)
	if err == nil {
		jsonAggregateDataExchangeJobParameters, _ := json.Marshal(dst.AggregateDataExchangeJobParameters)
		if string(jsonAggregateDataExchangeJobParameters) == "{}" { // empty struct
			dst.AggregateDataExchangeJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.AggregateDataExchangeJobParameters = nil
	}

	// try to unmarshal data into AnalyticsJobParameters
	err = newStrictDecoder(data).Decode(&dst.AnalyticsJobParameters)
	if err == nil {
		jsonAnalyticsJobParameters, _ := json.Marshal(dst.AnalyticsJobParameters)
		if string(jsonAnalyticsJobParameters) == "{}" { // empty struct
			dst.AnalyticsJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.AnalyticsJobParameters = nil
	}

	// try to unmarshal data into ContinuousAnalyticsJobParameters
	err = newStrictDecoder(data).Decode(&dst.ContinuousAnalyticsJobParameters)
	if err == nil {
		jsonContinuousAnalyticsJobParameters, _ := json.Marshal(dst.ContinuousAnalyticsJobParameters)
		if string(jsonContinuousAnalyticsJobParameters) == "{}" { // empty struct
			dst.ContinuousAnalyticsJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.ContinuousAnalyticsJobParameters = nil
	}

	// try to unmarshal data into DataIntegrityDetailsJobParameters
	err = newStrictDecoder(data).Decode(&dst.DataIntegrityDetailsJobParameters)
	if err == nil {
		jsonDataIntegrityDetailsJobParameters, _ := json.Marshal(dst.DataIntegrityDetailsJobParameters)
		if string(jsonDataIntegrityDetailsJobParameters) == "{}" { // empty struct
			dst.DataIntegrityDetailsJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.DataIntegrityDetailsJobParameters = nil
	}

	// try to unmarshal data into DataIntegrityJobParameters
	err = newStrictDecoder(data).Decode(&dst.DataIntegrityJobParameters)
	if err == nil {
		jsonDataIntegrityJobParameters, _ := json.Marshal(dst.DataIntegrityJobParameters)
		if string(jsonDataIntegrityJobParameters) == "{}" { // empty struct
			dst.DataIntegrityJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.DataIntegrityJobParameters = nil
	}

	// try to unmarshal data into DataSynchronizationJobParameters
	err = newStrictDecoder(data).Decode(&dst.DataSynchronizationJobParameters)
	if err == nil {
		jsonDataSynchronizationJobParameters, _ := json.Marshal(dst.DataSynchronizationJobParameters)
		if string(jsonDataSynchronizationJobParameters) == "{}" { // empty struct
			dst.DataSynchronizationJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.DataSynchronizationJobParameters = nil
	}

	// try to unmarshal data into DisableInactiveUsersJobParameters
	err = newStrictDecoder(data).Decode(&dst.DisableInactiveUsersJobParameters)
	if err == nil {
		jsonDisableInactiveUsersJobParameters, _ := json.Marshal(dst.DisableInactiveUsersJobParameters)
		if string(jsonDisableInactiveUsersJobParameters) == "{}" { // empty struct
			dst.DisableInactiveUsersJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.DisableInactiveUsersJobParameters = nil
	}

	// try to unmarshal data into EventProgramsDataSynchronizationJobParameters
	err = newStrictDecoder(data).Decode(&dst.EventProgramsDataSynchronizationJobParameters)
	if err == nil {
		jsonEventProgramsDataSynchronizationJobParameters, _ := json.Marshal(dst.EventProgramsDataSynchronizationJobParameters)
		if string(jsonEventProgramsDataSynchronizationJobParameters) == "{}" { // empty struct
			dst.EventProgramsDataSynchronizationJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.EventProgramsDataSynchronizationJobParameters = nil
	}

	// try to unmarshal data into MetadataSyncJobParameters
	err = newStrictDecoder(data).Decode(&dst.MetadataSyncJobParameters)
	if err == nil {
		jsonMetadataSyncJobParameters, _ := json.Marshal(dst.MetadataSyncJobParameters)
		if string(jsonMetadataSyncJobParameters) == "{}" { // empty struct
			dst.MetadataSyncJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.MetadataSyncJobParameters = nil
	}

	// try to unmarshal data into MonitoringJobParameters
	err = newStrictDecoder(data).Decode(&dst.MonitoringJobParameters)
	if err == nil {
		jsonMonitoringJobParameters, _ := json.Marshal(dst.MonitoringJobParameters)
		if string(jsonMonitoringJobParameters) == "{}" { // empty struct
			dst.MonitoringJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.MonitoringJobParameters = nil
	}

	// try to unmarshal data into PredictorJobParameters
	err = newStrictDecoder(data).Decode(&dst.PredictorJobParameters)
	if err == nil {
		jsonPredictorJobParameters, _ := json.Marshal(dst.PredictorJobParameters)
		if string(jsonPredictorJobParameters) == "{}" { // empty struct
			dst.PredictorJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.PredictorJobParameters = nil
	}

	// try to unmarshal data into PushAnalysisJobParameters
	err = newStrictDecoder(data).Decode(&dst.PushAnalysisJobParameters)
	if err == nil {
		jsonPushAnalysisJobParameters, _ := json.Marshal(dst.PushAnalysisJobParameters)
		if string(jsonPushAnalysisJobParameters) == "{}" { // empty struct
			dst.PushAnalysisJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.PushAnalysisJobParameters = nil
	}

	// try to unmarshal data into SmsJobParameters
	err = newStrictDecoder(data).Decode(&dst.SmsJobParameters)
	if err == nil {
		jsonSmsJobParameters, _ := json.Marshal(dst.SmsJobParameters)
		if string(jsonSmsJobParameters) == "{}" { // empty struct
			dst.SmsJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.SmsJobParameters = nil
	}

	// try to unmarshal data into SqlViewUpdateParameters
	err = newStrictDecoder(data).Decode(&dst.SqlViewUpdateParameters)
	if err == nil {
		jsonSqlViewUpdateParameters, _ := json.Marshal(dst.SqlViewUpdateParameters)
		if string(jsonSqlViewUpdateParameters) == "{}" { // empty struct
			dst.SqlViewUpdateParameters = nil
		} else {
			match++
		}
	} else {
		dst.SqlViewUpdateParameters = nil
	}

	// try to unmarshal data into TestJobParameters
	err = newStrictDecoder(data).Decode(&dst.TestJobParameters)
	if err == nil {
		jsonTestJobParameters, _ := json.Marshal(dst.TestJobParameters)
		if string(jsonTestJobParameters) == "{}" { // empty struct
			dst.TestJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.TestJobParameters = nil
	}

	// try to unmarshal data into TrackerProgramsDataSynchronizationJobParameters
	err = newStrictDecoder(data).Decode(&dst.TrackerProgramsDataSynchronizationJobParameters)
	if err == nil {
		jsonTrackerProgramsDataSynchronizationJobParameters, _ := json.Marshal(dst.TrackerProgramsDataSynchronizationJobParameters)
		if string(jsonTrackerProgramsDataSynchronizationJobParameters) == "{}" { // empty struct
			dst.TrackerProgramsDataSynchronizationJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.TrackerProgramsDataSynchronizationJobParameters = nil
	}

	// try to unmarshal data into TrackerTrigramIndexJobParameters
	err = newStrictDecoder(data).Decode(&dst.TrackerTrigramIndexJobParameters)
	if err == nil {
		jsonTrackerTrigramIndexJobParameters, _ := json.Marshal(dst.TrackerTrigramIndexJobParameters)
		if string(jsonTrackerTrigramIndexJobParameters) == "{}" { // empty struct
			dst.TrackerTrigramIndexJobParameters = nil
		} else {
			match++
		}
	} else {
		dst.TrackerTrigramIndexJobParameters = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AggregateDataExchangeJobParameters = nil
		dst.AnalyticsJobParameters = nil
		dst.ContinuousAnalyticsJobParameters = nil
		dst.DataIntegrityDetailsJobParameters = nil
		dst.DataIntegrityJobParameters = nil
		dst.DataSynchronizationJobParameters = nil
		dst.DisableInactiveUsersJobParameters = nil
		dst.EventProgramsDataSynchronizationJobParameters = nil
		dst.MetadataSyncJobParameters = nil
		dst.MonitoringJobParameters = nil
		dst.PredictorJobParameters = nil
		dst.PushAnalysisJobParameters = nil
		dst.SmsJobParameters = nil
		dst.SqlViewUpdateParameters = nil
		dst.TestJobParameters = nil
		dst.TrackerProgramsDataSynchronizationJobParameters = nil
		dst.TrackerTrigramIndexJobParameters = nil

		return fmt.Errorf("data matches more than one schema in oneOf(JobConfigurationJobParameters)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(JobConfigurationJobParameters)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src JobConfigurationJobParameters) MarshalJSON() ([]byte, error) {
	if src.AggregateDataExchangeJobParameters != nil {
		return json.Marshal(&src.AggregateDataExchangeJobParameters)
	}

	if src.AnalyticsJobParameters != nil {
		return json.Marshal(&src.AnalyticsJobParameters)
	}

	if src.ContinuousAnalyticsJobParameters != nil {
		return json.Marshal(&src.ContinuousAnalyticsJobParameters)
	}

	if src.DataIntegrityDetailsJobParameters != nil {
		return json.Marshal(&src.DataIntegrityDetailsJobParameters)
	}

	if src.DataIntegrityJobParameters != nil {
		return json.Marshal(&src.DataIntegrityJobParameters)
	}

	if src.DataSynchronizationJobParameters != nil {
		return json.Marshal(&src.DataSynchronizationJobParameters)
	}

	if src.DisableInactiveUsersJobParameters != nil {
		return json.Marshal(&src.DisableInactiveUsersJobParameters)
	}

	if src.EventProgramsDataSynchronizationJobParameters != nil {
		return json.Marshal(&src.EventProgramsDataSynchronizationJobParameters)
	}

	if src.MetadataSyncJobParameters != nil {
		return json.Marshal(&src.MetadataSyncJobParameters)
	}

	if src.MonitoringJobParameters != nil {
		return json.Marshal(&src.MonitoringJobParameters)
	}

	if src.PredictorJobParameters != nil {
		return json.Marshal(&src.PredictorJobParameters)
	}

	if src.PushAnalysisJobParameters != nil {
		return json.Marshal(&src.PushAnalysisJobParameters)
	}

	if src.SmsJobParameters != nil {
		return json.Marshal(&src.SmsJobParameters)
	}

	if src.SqlViewUpdateParameters != nil {
		return json.Marshal(&src.SqlViewUpdateParameters)
	}

	if src.TestJobParameters != nil {
		return json.Marshal(&src.TestJobParameters)
	}

	if src.TrackerProgramsDataSynchronizationJobParameters != nil {
		return json.Marshal(&src.TrackerProgramsDataSynchronizationJobParameters)
	}

	if src.TrackerTrigramIndexJobParameters != nil {
		return json.Marshal(&src.TrackerTrigramIndexJobParameters)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *JobConfigurationJobParameters) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AggregateDataExchangeJobParameters != nil {
		return obj.AggregateDataExchangeJobParameters
	}

	if obj.AnalyticsJobParameters != nil {
		return obj.AnalyticsJobParameters
	}

	if obj.ContinuousAnalyticsJobParameters != nil {
		return obj.ContinuousAnalyticsJobParameters
	}

	if obj.DataIntegrityDetailsJobParameters != nil {
		return obj.DataIntegrityDetailsJobParameters
	}

	if obj.DataIntegrityJobParameters != nil {
		return obj.DataIntegrityJobParameters
	}

	if obj.DataSynchronizationJobParameters != nil {
		return obj.DataSynchronizationJobParameters
	}

	if obj.DisableInactiveUsersJobParameters != nil {
		return obj.DisableInactiveUsersJobParameters
	}

	if obj.EventProgramsDataSynchronizationJobParameters != nil {
		return obj.EventProgramsDataSynchronizationJobParameters
	}

	if obj.MetadataSyncJobParameters != nil {
		return obj.MetadataSyncJobParameters
	}

	if obj.MonitoringJobParameters != nil {
		return obj.MonitoringJobParameters
	}

	if obj.PredictorJobParameters != nil {
		return obj.PredictorJobParameters
	}

	if obj.PushAnalysisJobParameters != nil {
		return obj.PushAnalysisJobParameters
	}

	if obj.SmsJobParameters != nil {
		return obj.SmsJobParameters
	}

	if obj.SqlViewUpdateParameters != nil {
		return obj.SqlViewUpdateParameters
	}

	if obj.TestJobParameters != nil {
		return obj.TestJobParameters
	}

	if obj.TrackerProgramsDataSynchronizationJobParameters != nil {
		return obj.TrackerProgramsDataSynchronizationJobParameters
	}

	if obj.TrackerTrigramIndexJobParameters != nil {
		return obj.TrackerTrigramIndexJobParameters
	}

	// all schemas are nil
	return nil
}

type NullableJobConfigurationJobParameters struct {
	value *JobConfigurationJobParameters
	isSet bool
}

func (v NullableJobConfigurationJobParameters) Get() *JobConfigurationJobParameters {
	return v.value
}

func (v *NullableJobConfigurationJobParameters) Set(val *JobConfigurationJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableJobConfigurationJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableJobConfigurationJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobConfigurationJobParameters(val *JobConfigurationJobParameters) *NullableJobConfigurationJobParameters {
	return &NullableJobConfigurationJobParameters{value: val, isSet: true}
}

func (v NullableJobConfigurationJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobConfigurationJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
