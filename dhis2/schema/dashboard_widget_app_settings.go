/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the DashboardWidgetAppSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DashboardWidgetAppSettings{}

// DashboardWidgetAppSettings struct for DashboardWidgetAppSettings
type DashboardWidgetAppSettings struct {
	HideTitle *bool `json:"hideTitle,omitempty"`
}

// NewDashboardWidgetAppSettings instantiates a new DashboardWidgetAppSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardWidgetAppSettings() *DashboardWidgetAppSettings {
	this := DashboardWidgetAppSettings{}
	return &this
}

// NewDashboardWidgetAppSettingsWithDefaults instantiates a new DashboardWidgetAppSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardWidgetAppSettingsWithDefaults() *DashboardWidgetAppSettings {
	this := DashboardWidgetAppSettings{}
	return &this
}

// GetHideTitle returns the HideTitle field value if set, zero value otherwise.
func (o *DashboardWidgetAppSettings) GetHideTitle() bool {
	if o == nil || IsNil(o.HideTitle) {
		var ret bool
		return ret
	}
	return *o.HideTitle
}

// GetHideTitleOk returns a tuple with the HideTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardWidgetAppSettings) GetHideTitleOk() (*bool, bool) {
	if o == nil || IsNil(o.HideTitle) {
		return nil, false
	}
	return o.HideTitle, true
}

// HasHideTitle returns a boolean if a field has been set.
func (o *DashboardWidgetAppSettings) HasHideTitle() bool {
	if o != nil && !IsNil(o.HideTitle) {
		return true
	}

	return false
}

// SetHideTitle gets a reference to the given bool and assigns it to the HideTitle field.
func (o *DashboardWidgetAppSettings) SetHideTitle(v bool) {
	o.HideTitle = &v
}

func (o DashboardWidgetAppSettings) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DashboardWidgetAppSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HideTitle) {
		toSerialize["hideTitle"] = o.HideTitle
	}
	return toSerialize, nil
}

type NullableDashboardWidgetAppSettings struct {
	value *DashboardWidgetAppSettings
	isSet bool
}

func (v NullableDashboardWidgetAppSettings) Get() *DashboardWidgetAppSettings {
	return v.value
}

func (v *NullableDashboardWidgetAppSettings) Set(val *DashboardWidgetAppSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardWidgetAppSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardWidgetAppSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardWidgetAppSettings(val *DashboardWidgetAppSettings) *NullableDashboardWidgetAppSettings {
	return &NullableDashboardWidgetAppSettings{value: val, isSet: true}
}

func (v NullableDashboardWidgetAppSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardWidgetAppSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
