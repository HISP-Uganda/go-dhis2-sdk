/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesCategoryOptionGroup the model 'PropertyNamesCategoryOptionGroup'
type PropertyNamesCategoryOptionGroup string

// List of PropertyNames_CategoryOptionGroup
const (
	PROPERTYNAMESCATEGORYOPTIONGROUP_ACCESS              PropertyNamesCategoryOptionGroup = "access"
	PROPERTYNAMESCATEGORYOPTIONGROUP_AGGREGATION_TYPE    PropertyNamesCategoryOptionGroup = "aggregationType"
	PROPERTYNAMESCATEGORYOPTIONGROUP_ATTRIBUTE_VALUES    PropertyNamesCategoryOptionGroup = "attributeValues"
	PROPERTYNAMESCATEGORYOPTIONGROUP_CATEGORY_OPTIONS    PropertyNamesCategoryOptionGroup = "categoryOptions"
	PROPERTYNAMESCATEGORYOPTIONGROUP_CODE                PropertyNamesCategoryOptionGroup = "code"
	PROPERTYNAMESCATEGORYOPTIONGROUP_CREATED             PropertyNamesCategoryOptionGroup = "created"
	PROPERTYNAMESCATEGORYOPTIONGROUP_CREATED_BY          PropertyNamesCategoryOptionGroup = "createdBy"
	PROPERTYNAMESCATEGORYOPTIONGROUP_DATA_DIMENSION_TYPE PropertyNamesCategoryOptionGroup = "dataDimensionType"
	PROPERTYNAMESCATEGORYOPTIONGROUP_DESCRIPTION         PropertyNamesCategoryOptionGroup = "description"
	PROPERTYNAMESCATEGORYOPTIONGROUP_DIMENSION_ITEM      PropertyNamesCategoryOptionGroup = "dimensionItem"
	PROPERTYNAMESCATEGORYOPTIONGROUP_DISPLAY_DESCRIPTION PropertyNamesCategoryOptionGroup = "displayDescription"
	PROPERTYNAMESCATEGORYOPTIONGROUP_DISPLAY_FORM_NAME   PropertyNamesCategoryOptionGroup = "displayFormName"
	PROPERTYNAMESCATEGORYOPTIONGROUP_DISPLAY_NAME        PropertyNamesCategoryOptionGroup = "displayName"
	PROPERTYNAMESCATEGORYOPTIONGROUP_DISPLAY_SHORT_NAME  PropertyNamesCategoryOptionGroup = "displayShortName"
	PROPERTYNAMESCATEGORYOPTIONGROUP_EXTERNAL_ACCESS     PropertyNamesCategoryOptionGroup = "externalAccess"
	PROPERTYNAMESCATEGORYOPTIONGROUP_FAVORITE            PropertyNamesCategoryOptionGroup = "favorite"
	PROPERTYNAMESCATEGORYOPTIONGROUP_FAVORITES           PropertyNamesCategoryOptionGroup = "favorites"
	PROPERTYNAMESCATEGORYOPTIONGROUP_FORM_NAME           PropertyNamesCategoryOptionGroup = "formName"
	PROPERTYNAMESCATEGORYOPTIONGROUP_GROUP_SETS          PropertyNamesCategoryOptionGroup = "groupSets"
	PROPERTYNAMESCATEGORYOPTIONGROUP_HREF                PropertyNamesCategoryOptionGroup = "href"
	PROPERTYNAMESCATEGORYOPTIONGROUP_ID                  PropertyNamesCategoryOptionGroup = "id"
	PROPERTYNAMESCATEGORYOPTIONGROUP_LAST_UPDATED        PropertyNamesCategoryOptionGroup = "lastUpdated"
	PROPERTYNAMESCATEGORYOPTIONGROUP_LAST_UPDATED_BY     PropertyNamesCategoryOptionGroup = "lastUpdatedBy"
	PROPERTYNAMESCATEGORYOPTIONGROUP_LEGEND_SET          PropertyNamesCategoryOptionGroup = "legendSet"
	PROPERTYNAMESCATEGORYOPTIONGROUP_LEGEND_SETS         PropertyNamesCategoryOptionGroup = "legendSets"
	PROPERTYNAMESCATEGORYOPTIONGROUP_NAME                PropertyNamesCategoryOptionGroup = "name"
	PROPERTYNAMESCATEGORYOPTIONGROUP_PUBLIC_ACCESS       PropertyNamesCategoryOptionGroup = "publicAccess"
	PROPERTYNAMESCATEGORYOPTIONGROUP_QUERY_MODS          PropertyNamesCategoryOptionGroup = "queryMods"
	PROPERTYNAMESCATEGORYOPTIONGROUP_SHARING             PropertyNamesCategoryOptionGroup = "sharing"
	PROPERTYNAMESCATEGORYOPTIONGROUP_SHORT_NAME          PropertyNamesCategoryOptionGroup = "shortName"
	PROPERTYNAMESCATEGORYOPTIONGROUP_TRANSLATIONS        PropertyNamesCategoryOptionGroup = "translations"
	PROPERTYNAMESCATEGORYOPTIONGROUP_USER                PropertyNamesCategoryOptionGroup = "user"
	PROPERTYNAMESCATEGORYOPTIONGROUP_USER_ACCESSES       PropertyNamesCategoryOptionGroup = "userAccesses"
	PROPERTYNAMESCATEGORYOPTIONGROUP_USER_GROUP_ACCESSES PropertyNamesCategoryOptionGroup = "userGroupAccesses"
)

// All allowed values of PropertyNamesCategoryOptionGroup enum
var AllowedPropertyNamesCategoryOptionGroupEnumValues = []PropertyNamesCategoryOptionGroup{
	"access",
	"aggregationType",
	"attributeValues",
	"categoryOptions",
	"code",
	"created",
	"createdBy",
	"dataDimensionType",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"externalAccess",
	"favorite",
	"favorites",
	"formName",
	"groupSets",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"name",
	"publicAccess",
	"queryMods",
	"sharing",
	"shortName",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesCategoryOptionGroup) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesCategoryOptionGroup(value)
	for _, existing := range AllowedPropertyNamesCategoryOptionGroupEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesCategoryOptionGroup", value)
}

// NewPropertyNamesCategoryOptionGroupFromValue returns a pointer to a valid PropertyNamesCategoryOptionGroup
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesCategoryOptionGroupFromValue(v string) (*PropertyNamesCategoryOptionGroup, error) {
	ev := PropertyNamesCategoryOptionGroup(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesCategoryOptionGroup: valid values are %v", v, AllowedPropertyNamesCategoryOptionGroupEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesCategoryOptionGroup) IsValid() bool {
	for _, existing := range AllowedPropertyNamesCategoryOptionGroupEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_CategoryOptionGroup value
func (v PropertyNamesCategoryOptionGroup) Ptr() *PropertyNamesCategoryOptionGroup {
	return &v
}

type NullablePropertyNamesCategoryOptionGroup struct {
	value *PropertyNamesCategoryOptionGroup
	isSet bool
}

func (v NullablePropertyNamesCategoryOptionGroup) Get() *PropertyNamesCategoryOptionGroup {
	return v.value
}

func (v *NullablePropertyNamesCategoryOptionGroup) Set(val *PropertyNamesCategoryOptionGroup) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesCategoryOptionGroup) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesCategoryOptionGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesCategoryOptionGroup(val *PropertyNamesCategoryOptionGroup) *NullablePropertyNamesCategoryOptionGroup {
	return &NullablePropertyNamesCategoryOptionGroup{value: val, isSet: true}
}

func (v NullablePropertyNamesCategoryOptionGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesCategoryOptionGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
