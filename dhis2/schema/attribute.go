/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Attribute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Attribute{}

// Attribute struct for Attribute
type Attribute struct {
	Access                            *Access                         `json:"access,omitempty"`
	AttributeValues                   []AttributeValue                `json:"attributeValues,omitempty"`
	CategoryAttribute                 *bool                           `json:"categoryAttribute,omitempty"`
	CategoryOptionAttribute           *bool                           `json:"categoryOptionAttribute,omitempty"`
	CategoryOptionComboAttribute      *bool                           `json:"categoryOptionComboAttribute,omitempty"`
	CategoryOptionGroupAttribute      *bool                           `json:"categoryOptionGroupAttribute,omitempty"`
	CategoryOptionGroupSetAttribute   *bool                           `json:"categoryOptionGroupSetAttribute,omitempty"`
	Code                              *string                         `json:"code,omitempty"`
	ConstantAttribute                 *bool                           `json:"constantAttribute,omitempty"`
	Created                           *time.Time                      `json:"created,omitempty"`
	CreatedBy                         *AggregateDataExchangeCreatedBy `json:"createdBy,omitempty"`
	DataElementAttribute              *bool                           `json:"dataElementAttribute,omitempty"`
	DataElementGroupAttribute         *bool                           `json:"dataElementGroupAttribute,omitempty"`
	DataElementGroupSetAttribute      *bool                           `json:"dataElementGroupSetAttribute,omitempty"`
	DataSetAttribute                  *bool                           `json:"dataSetAttribute,omitempty"`
	Description                       *string                         `json:"description,omitempty"`
	DisplayDescription                *string                         `json:"displayDescription,omitempty"`
	DisplayFormName                   *string                         `json:"displayFormName,omitempty"`
	DisplayName                       *string                         `json:"displayName,omitempty"`
	DisplayShortName                  *string                         `json:"displayShortName,omitempty"`
	DocumentAttribute                 *bool                           `json:"documentAttribute,omitempty"`
	EventChartAttribute               *bool                           `json:"eventChartAttribute,omitempty"`
	EventReportAttribute              *bool                           `json:"eventReportAttribute,omitempty"`
	ExternalAccess                    *bool                           `json:"externalAccess,omitempty"`
	Favorite                          *bool                           `json:"favorite,omitempty"`
	Favorites                         []string                        `json:"favorites,omitempty"`
	FormName                          *string                         `json:"formName,omitempty"`
	Href                              *string                         `json:"href,omitempty"`
	Id                                *string                         `json:"id,omitempty"`
	IndicatorAttribute                *bool                           `json:"indicatorAttribute,omitempty"`
	IndicatorGroupAttribute           *bool                           `json:"indicatorGroupAttribute,omitempty"`
	LastUpdated                       *time.Time                      `json:"lastUpdated,omitempty"`
	LastUpdatedBy                     *AggregateDataExchangeCreatedBy `json:"lastUpdatedBy,omitempty"`
	LegendSetAttribute                *bool                           `json:"legendSetAttribute,omitempty"`
	Mandatory                         *bool                           `json:"mandatory,omitempty"`
	MapAttribute                      *bool                           `json:"mapAttribute,omitempty"`
	Name                              *string                         `json:"name,omitempty"`
	ObjectTypes                       []string                        `json:"objectTypes,omitempty"`
	OptionAttribute                   *bool                           `json:"optionAttribute,omitempty"`
	OptionSet                         *AttributeOptionSet             `json:"optionSet,omitempty"`
	OptionSetAttribute                *bool                           `json:"optionSetAttribute,omitempty"`
	OrganisationUnitAttribute         *bool                           `json:"organisationUnitAttribute,omitempty"`
	OrganisationUnitGroupAttribute    *bool                           `json:"organisationUnitGroupAttribute,omitempty"`
	OrganisationUnitGroupSetAttribute *bool                           `json:"organisationUnitGroupSetAttribute,omitempty"`
	ProgramAttribute                  *bool                           `json:"programAttribute,omitempty"`
	ProgramIndicatorAttribute         *bool                           `json:"programIndicatorAttribute,omitempty"`
	ProgramStageAttribute             *bool                           `json:"programStageAttribute,omitempty"`
	PublicAccess                      *string                         `json:"publicAccess,omitempty"`
	RelationshipTypeAttribute         *bool                           `json:"relationshipTypeAttribute,omitempty"`
	SectionAttribute                  *bool                           `json:"sectionAttribute,omitempty"`
	Sharing                           *Sharing                        `json:"sharing,omitempty"`
	ShortName                         *string                         `json:"shortName,omitempty"`
	SortOrder                         *int32                          `json:"sortOrder,omitempty"`
	SqlViewAttribute                  *bool                           `json:"sqlViewAttribute,omitempty"`
	TrackedEntityAttributeAttribute   *bool                           `json:"trackedEntityAttributeAttribute,omitempty"`
	TrackedEntityTypeAttribute        *bool                           `json:"trackedEntityTypeAttribute,omitempty"`
	Translations                      []Translation                   `json:"translations,omitempty"`
	Unique                            *bool                           `json:"unique,omitempty"`
	User                              *AggregateDataExchangeCreatedBy `json:"user,omitempty"`
	UserAccesses                      []LegacyUserAccess              `json:"userAccesses,omitempty"`
	UserAttribute                     *bool                           `json:"userAttribute,omitempty"`
	UserGroupAccesses                 []LegacyUserGroupAccess         `json:"userGroupAccesses,omitempty"`
	UserGroupAttribute                *bool                           `json:"userGroupAttribute,omitempty"`
	ValidationRuleAttribute           *bool                           `json:"validationRuleAttribute,omitempty"`
	ValidationRuleGroupAttribute      *bool                           `json:"validationRuleGroupAttribute,omitempty"`
	ValueType                         string                          `json:"valueType"`
	VisualizationAttribute            *bool                           `json:"visualizationAttribute,omitempty"`
}

type _Attribute Attribute

// NewAttribute instantiates a new Attribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttribute(valueType string) *Attribute {
	this := Attribute{}
	this.ValueType = valueType
	return &this
}

// NewAttributeWithDefaults instantiates a new Attribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeWithDefaults() *Attribute {
	this := Attribute{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *Attribute) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *Attribute) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *Attribute) SetAccess(v Access) {
	o.Access = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *Attribute) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *Attribute) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *Attribute) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetCategoryAttribute returns the CategoryAttribute field value if set, zero value otherwise.
func (o *Attribute) GetCategoryAttribute() bool {
	if o == nil || IsNil(o.CategoryAttribute) {
		var ret bool
		return ret
	}
	return *o.CategoryAttribute
}

// GetCategoryAttributeOk returns a tuple with the CategoryAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetCategoryAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.CategoryAttribute) {
		return nil, false
	}
	return o.CategoryAttribute, true
}

// HasCategoryAttribute returns a boolean if a field has been set.
func (o *Attribute) HasCategoryAttribute() bool {
	if o != nil && !IsNil(o.CategoryAttribute) {
		return true
	}

	return false
}

// SetCategoryAttribute gets a reference to the given bool and assigns it to the CategoryAttribute field.
func (o *Attribute) SetCategoryAttribute(v bool) {
	o.CategoryAttribute = &v
}

// GetCategoryOptionAttribute returns the CategoryOptionAttribute field value if set, zero value otherwise.
func (o *Attribute) GetCategoryOptionAttribute() bool {
	if o == nil || IsNil(o.CategoryOptionAttribute) {
		var ret bool
		return ret
	}
	return *o.CategoryOptionAttribute
}

// GetCategoryOptionAttributeOk returns a tuple with the CategoryOptionAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetCategoryOptionAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.CategoryOptionAttribute) {
		return nil, false
	}
	return o.CategoryOptionAttribute, true
}

// HasCategoryOptionAttribute returns a boolean if a field has been set.
func (o *Attribute) HasCategoryOptionAttribute() bool {
	if o != nil && !IsNil(o.CategoryOptionAttribute) {
		return true
	}

	return false
}

// SetCategoryOptionAttribute gets a reference to the given bool and assigns it to the CategoryOptionAttribute field.
func (o *Attribute) SetCategoryOptionAttribute(v bool) {
	o.CategoryOptionAttribute = &v
}

// GetCategoryOptionComboAttribute returns the CategoryOptionComboAttribute field value if set, zero value otherwise.
func (o *Attribute) GetCategoryOptionComboAttribute() bool {
	if o == nil || IsNil(o.CategoryOptionComboAttribute) {
		var ret bool
		return ret
	}
	return *o.CategoryOptionComboAttribute
}

// GetCategoryOptionComboAttributeOk returns a tuple with the CategoryOptionComboAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetCategoryOptionComboAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.CategoryOptionComboAttribute) {
		return nil, false
	}
	return o.CategoryOptionComboAttribute, true
}

// HasCategoryOptionComboAttribute returns a boolean if a field has been set.
func (o *Attribute) HasCategoryOptionComboAttribute() bool {
	if o != nil && !IsNil(o.CategoryOptionComboAttribute) {
		return true
	}

	return false
}

// SetCategoryOptionComboAttribute gets a reference to the given bool and assigns it to the CategoryOptionComboAttribute field.
func (o *Attribute) SetCategoryOptionComboAttribute(v bool) {
	o.CategoryOptionComboAttribute = &v
}

// GetCategoryOptionGroupAttribute returns the CategoryOptionGroupAttribute field value if set, zero value otherwise.
func (o *Attribute) GetCategoryOptionGroupAttribute() bool {
	if o == nil || IsNil(o.CategoryOptionGroupAttribute) {
		var ret bool
		return ret
	}
	return *o.CategoryOptionGroupAttribute
}

// GetCategoryOptionGroupAttributeOk returns a tuple with the CategoryOptionGroupAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetCategoryOptionGroupAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.CategoryOptionGroupAttribute) {
		return nil, false
	}
	return o.CategoryOptionGroupAttribute, true
}

// HasCategoryOptionGroupAttribute returns a boolean if a field has been set.
func (o *Attribute) HasCategoryOptionGroupAttribute() bool {
	if o != nil && !IsNil(o.CategoryOptionGroupAttribute) {
		return true
	}

	return false
}

// SetCategoryOptionGroupAttribute gets a reference to the given bool and assigns it to the CategoryOptionGroupAttribute field.
func (o *Attribute) SetCategoryOptionGroupAttribute(v bool) {
	o.CategoryOptionGroupAttribute = &v
}

// GetCategoryOptionGroupSetAttribute returns the CategoryOptionGroupSetAttribute field value if set, zero value otherwise.
func (o *Attribute) GetCategoryOptionGroupSetAttribute() bool {
	if o == nil || IsNil(o.CategoryOptionGroupSetAttribute) {
		var ret bool
		return ret
	}
	return *o.CategoryOptionGroupSetAttribute
}

// GetCategoryOptionGroupSetAttributeOk returns a tuple with the CategoryOptionGroupSetAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetCategoryOptionGroupSetAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.CategoryOptionGroupSetAttribute) {
		return nil, false
	}
	return o.CategoryOptionGroupSetAttribute, true
}

// HasCategoryOptionGroupSetAttribute returns a boolean if a field has been set.
func (o *Attribute) HasCategoryOptionGroupSetAttribute() bool {
	if o != nil && !IsNil(o.CategoryOptionGroupSetAttribute) {
		return true
	}

	return false
}

// SetCategoryOptionGroupSetAttribute gets a reference to the given bool and assigns it to the CategoryOptionGroupSetAttribute field.
func (o *Attribute) SetCategoryOptionGroupSetAttribute(v bool) {
	o.CategoryOptionGroupSetAttribute = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *Attribute) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *Attribute) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *Attribute) SetCode(v string) {
	o.Code = &v
}

// GetConstantAttribute returns the ConstantAttribute field value if set, zero value otherwise.
func (o *Attribute) GetConstantAttribute() bool {
	if o == nil || IsNil(o.ConstantAttribute) {
		var ret bool
		return ret
	}
	return *o.ConstantAttribute
}

// GetConstantAttributeOk returns a tuple with the ConstantAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetConstantAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.ConstantAttribute) {
		return nil, false
	}
	return o.ConstantAttribute, true
}

// HasConstantAttribute returns a boolean if a field has been set.
func (o *Attribute) HasConstantAttribute() bool {
	if o != nil && !IsNil(o.ConstantAttribute) {
		return true
	}

	return false
}

// SetConstantAttribute gets a reference to the given bool and assigns it to the ConstantAttribute field.
func (o *Attribute) SetConstantAttribute(v bool) {
	o.ConstantAttribute = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *Attribute) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Attribute) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *Attribute) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Attribute) GetCreatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetCreatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Attribute) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the CreatedBy field.
func (o *Attribute) SetCreatedBy(v AggregateDataExchangeCreatedBy) {
	o.CreatedBy = &v
}

// GetDataElementAttribute returns the DataElementAttribute field value if set, zero value otherwise.
func (o *Attribute) GetDataElementAttribute() bool {
	if o == nil || IsNil(o.DataElementAttribute) {
		var ret bool
		return ret
	}
	return *o.DataElementAttribute
}

// GetDataElementAttributeOk returns a tuple with the DataElementAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetDataElementAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.DataElementAttribute) {
		return nil, false
	}
	return o.DataElementAttribute, true
}

// HasDataElementAttribute returns a boolean if a field has been set.
func (o *Attribute) HasDataElementAttribute() bool {
	if o != nil && !IsNil(o.DataElementAttribute) {
		return true
	}

	return false
}

// SetDataElementAttribute gets a reference to the given bool and assigns it to the DataElementAttribute field.
func (o *Attribute) SetDataElementAttribute(v bool) {
	o.DataElementAttribute = &v
}

// GetDataElementGroupAttribute returns the DataElementGroupAttribute field value if set, zero value otherwise.
func (o *Attribute) GetDataElementGroupAttribute() bool {
	if o == nil || IsNil(o.DataElementGroupAttribute) {
		var ret bool
		return ret
	}
	return *o.DataElementGroupAttribute
}

// GetDataElementGroupAttributeOk returns a tuple with the DataElementGroupAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetDataElementGroupAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.DataElementGroupAttribute) {
		return nil, false
	}
	return o.DataElementGroupAttribute, true
}

// HasDataElementGroupAttribute returns a boolean if a field has been set.
func (o *Attribute) HasDataElementGroupAttribute() bool {
	if o != nil && !IsNil(o.DataElementGroupAttribute) {
		return true
	}

	return false
}

// SetDataElementGroupAttribute gets a reference to the given bool and assigns it to the DataElementGroupAttribute field.
func (o *Attribute) SetDataElementGroupAttribute(v bool) {
	o.DataElementGroupAttribute = &v
}

// GetDataElementGroupSetAttribute returns the DataElementGroupSetAttribute field value if set, zero value otherwise.
func (o *Attribute) GetDataElementGroupSetAttribute() bool {
	if o == nil || IsNil(o.DataElementGroupSetAttribute) {
		var ret bool
		return ret
	}
	return *o.DataElementGroupSetAttribute
}

// GetDataElementGroupSetAttributeOk returns a tuple with the DataElementGroupSetAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetDataElementGroupSetAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.DataElementGroupSetAttribute) {
		return nil, false
	}
	return o.DataElementGroupSetAttribute, true
}

// HasDataElementGroupSetAttribute returns a boolean if a field has been set.
func (o *Attribute) HasDataElementGroupSetAttribute() bool {
	if o != nil && !IsNil(o.DataElementGroupSetAttribute) {
		return true
	}

	return false
}

// SetDataElementGroupSetAttribute gets a reference to the given bool and assigns it to the DataElementGroupSetAttribute field.
func (o *Attribute) SetDataElementGroupSetAttribute(v bool) {
	o.DataElementGroupSetAttribute = &v
}

// GetDataSetAttribute returns the DataSetAttribute field value if set, zero value otherwise.
func (o *Attribute) GetDataSetAttribute() bool {
	if o == nil || IsNil(o.DataSetAttribute) {
		var ret bool
		return ret
	}
	return *o.DataSetAttribute
}

// GetDataSetAttributeOk returns a tuple with the DataSetAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetDataSetAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.DataSetAttribute) {
		return nil, false
	}
	return o.DataSetAttribute, true
}

// HasDataSetAttribute returns a boolean if a field has been set.
func (o *Attribute) HasDataSetAttribute() bool {
	if o != nil && !IsNil(o.DataSetAttribute) {
		return true
	}

	return false
}

// SetDataSetAttribute gets a reference to the given bool and assigns it to the DataSetAttribute field.
func (o *Attribute) SetDataSetAttribute(v bool) {
	o.DataSetAttribute = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Attribute) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Attribute) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Attribute) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayDescription returns the DisplayDescription field value if set, zero value otherwise.
func (o *Attribute) GetDisplayDescription() string {
	if o == nil || IsNil(o.DisplayDescription) {
		var ret string
		return ret
	}
	return *o.DisplayDescription
}

// GetDisplayDescriptionOk returns a tuple with the DisplayDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetDisplayDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDescription) {
		return nil, false
	}
	return o.DisplayDescription, true
}

// HasDisplayDescription returns a boolean if a field has been set.
func (o *Attribute) HasDisplayDescription() bool {
	if o != nil && !IsNil(o.DisplayDescription) {
		return true
	}

	return false
}

// SetDisplayDescription gets a reference to the given string and assigns it to the DisplayDescription field.
func (o *Attribute) SetDisplayDescription(v string) {
	o.DisplayDescription = &v
}

// GetDisplayFormName returns the DisplayFormName field value if set, zero value otherwise.
func (o *Attribute) GetDisplayFormName() string {
	if o == nil || IsNil(o.DisplayFormName) {
		var ret string
		return ret
	}
	return *o.DisplayFormName
}

// GetDisplayFormNameOk returns a tuple with the DisplayFormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetDisplayFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayFormName) {
		return nil, false
	}
	return o.DisplayFormName, true
}

// HasDisplayFormName returns a boolean if a field has been set.
func (o *Attribute) HasDisplayFormName() bool {
	if o != nil && !IsNil(o.DisplayFormName) {
		return true
	}

	return false
}

// SetDisplayFormName gets a reference to the given string and assigns it to the DisplayFormName field.
func (o *Attribute) SetDisplayFormName(v string) {
	o.DisplayFormName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Attribute) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Attribute) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Attribute) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayShortName returns the DisplayShortName field value if set, zero value otherwise.
func (o *Attribute) GetDisplayShortName() string {
	if o == nil || IsNil(o.DisplayShortName) {
		var ret string
		return ret
	}
	return *o.DisplayShortName
}

// GetDisplayShortNameOk returns a tuple with the DisplayShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetDisplayShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayShortName) {
		return nil, false
	}
	return o.DisplayShortName, true
}

// HasDisplayShortName returns a boolean if a field has been set.
func (o *Attribute) HasDisplayShortName() bool {
	if o != nil && !IsNil(o.DisplayShortName) {
		return true
	}

	return false
}

// SetDisplayShortName gets a reference to the given string and assigns it to the DisplayShortName field.
func (o *Attribute) SetDisplayShortName(v string) {
	o.DisplayShortName = &v
}

// GetDocumentAttribute returns the DocumentAttribute field value if set, zero value otherwise.
func (o *Attribute) GetDocumentAttribute() bool {
	if o == nil || IsNil(o.DocumentAttribute) {
		var ret bool
		return ret
	}
	return *o.DocumentAttribute
}

// GetDocumentAttributeOk returns a tuple with the DocumentAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetDocumentAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.DocumentAttribute) {
		return nil, false
	}
	return o.DocumentAttribute, true
}

// HasDocumentAttribute returns a boolean if a field has been set.
func (o *Attribute) HasDocumentAttribute() bool {
	if o != nil && !IsNil(o.DocumentAttribute) {
		return true
	}

	return false
}

// SetDocumentAttribute gets a reference to the given bool and assigns it to the DocumentAttribute field.
func (o *Attribute) SetDocumentAttribute(v bool) {
	o.DocumentAttribute = &v
}

// GetEventChartAttribute returns the EventChartAttribute field value if set, zero value otherwise.
func (o *Attribute) GetEventChartAttribute() bool {
	if o == nil || IsNil(o.EventChartAttribute) {
		var ret bool
		return ret
	}
	return *o.EventChartAttribute
}

// GetEventChartAttributeOk returns a tuple with the EventChartAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetEventChartAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.EventChartAttribute) {
		return nil, false
	}
	return o.EventChartAttribute, true
}

// HasEventChartAttribute returns a boolean if a field has been set.
func (o *Attribute) HasEventChartAttribute() bool {
	if o != nil && !IsNil(o.EventChartAttribute) {
		return true
	}

	return false
}

// SetEventChartAttribute gets a reference to the given bool and assigns it to the EventChartAttribute field.
func (o *Attribute) SetEventChartAttribute(v bool) {
	o.EventChartAttribute = &v
}

// GetEventReportAttribute returns the EventReportAttribute field value if set, zero value otherwise.
func (o *Attribute) GetEventReportAttribute() bool {
	if o == nil || IsNil(o.EventReportAttribute) {
		var ret bool
		return ret
	}
	return *o.EventReportAttribute
}

// GetEventReportAttributeOk returns a tuple with the EventReportAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetEventReportAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.EventReportAttribute) {
		return nil, false
	}
	return o.EventReportAttribute, true
}

// HasEventReportAttribute returns a boolean if a field has been set.
func (o *Attribute) HasEventReportAttribute() bool {
	if o != nil && !IsNil(o.EventReportAttribute) {
		return true
	}

	return false
}

// SetEventReportAttribute gets a reference to the given bool and assigns it to the EventReportAttribute field.
func (o *Attribute) SetEventReportAttribute(v bool) {
	o.EventReportAttribute = &v
}

// GetExternalAccess returns the ExternalAccess field value if set, zero value otherwise.
func (o *Attribute) GetExternalAccess() bool {
	if o == nil || IsNil(o.ExternalAccess) {
		var ret bool
		return ret
	}
	return *o.ExternalAccess
}

// GetExternalAccessOk returns a tuple with the ExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetExternalAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalAccess) {
		return nil, false
	}
	return o.ExternalAccess, true
}

// HasExternalAccess returns a boolean if a field has been set.
func (o *Attribute) HasExternalAccess() bool {
	if o != nil && !IsNil(o.ExternalAccess) {
		return true
	}

	return false
}

// SetExternalAccess gets a reference to the given bool and assigns it to the ExternalAccess field.
func (o *Attribute) SetExternalAccess(v bool) {
	o.ExternalAccess = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *Attribute) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *Attribute) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *Attribute) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *Attribute) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *Attribute) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *Attribute) SetFavorites(v []string) {
	o.Favorites = v
}

// GetFormName returns the FormName field value if set, zero value otherwise.
func (o *Attribute) GetFormName() string {
	if o == nil || IsNil(o.FormName) {
		var ret string
		return ret
	}
	return *o.FormName
}

// GetFormNameOk returns a tuple with the FormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.FormName) {
		return nil, false
	}
	return o.FormName, true
}

// HasFormName returns a boolean if a field has been set.
func (o *Attribute) HasFormName() bool {
	if o != nil && !IsNil(o.FormName) {
		return true
	}

	return false
}

// SetFormName gets a reference to the given string and assigns it to the FormName field.
func (o *Attribute) SetFormName(v string) {
	o.FormName = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *Attribute) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *Attribute) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *Attribute) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Attribute) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Attribute) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Attribute) SetId(v string) {
	o.Id = &v
}

// GetIndicatorAttribute returns the IndicatorAttribute field value if set, zero value otherwise.
func (o *Attribute) GetIndicatorAttribute() bool {
	if o == nil || IsNil(o.IndicatorAttribute) {
		var ret bool
		return ret
	}
	return *o.IndicatorAttribute
}

// GetIndicatorAttributeOk returns a tuple with the IndicatorAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetIndicatorAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.IndicatorAttribute) {
		return nil, false
	}
	return o.IndicatorAttribute, true
}

// HasIndicatorAttribute returns a boolean if a field has been set.
func (o *Attribute) HasIndicatorAttribute() bool {
	if o != nil && !IsNil(o.IndicatorAttribute) {
		return true
	}

	return false
}

// SetIndicatorAttribute gets a reference to the given bool and assigns it to the IndicatorAttribute field.
func (o *Attribute) SetIndicatorAttribute(v bool) {
	o.IndicatorAttribute = &v
}

// GetIndicatorGroupAttribute returns the IndicatorGroupAttribute field value if set, zero value otherwise.
func (o *Attribute) GetIndicatorGroupAttribute() bool {
	if o == nil || IsNil(o.IndicatorGroupAttribute) {
		var ret bool
		return ret
	}
	return *o.IndicatorGroupAttribute
}

// GetIndicatorGroupAttributeOk returns a tuple with the IndicatorGroupAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetIndicatorGroupAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.IndicatorGroupAttribute) {
		return nil, false
	}
	return o.IndicatorGroupAttribute, true
}

// HasIndicatorGroupAttribute returns a boolean if a field has been set.
func (o *Attribute) HasIndicatorGroupAttribute() bool {
	if o != nil && !IsNil(o.IndicatorGroupAttribute) {
		return true
	}

	return false
}

// SetIndicatorGroupAttribute gets a reference to the given bool and assigns it to the IndicatorGroupAttribute field.
func (o *Attribute) SetIndicatorGroupAttribute(v bool) {
	o.IndicatorGroupAttribute = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Attribute) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *Attribute) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Attribute) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *Attribute) GetLastUpdatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetLastUpdatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *Attribute) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the LastUpdatedBy field.
func (o *Attribute) SetLastUpdatedBy(v AggregateDataExchangeCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetLegendSetAttribute returns the LegendSetAttribute field value if set, zero value otherwise.
func (o *Attribute) GetLegendSetAttribute() bool {
	if o == nil || IsNil(o.LegendSetAttribute) {
		var ret bool
		return ret
	}
	return *o.LegendSetAttribute
}

// GetLegendSetAttributeOk returns a tuple with the LegendSetAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetLegendSetAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.LegendSetAttribute) {
		return nil, false
	}
	return o.LegendSetAttribute, true
}

// HasLegendSetAttribute returns a boolean if a field has been set.
func (o *Attribute) HasLegendSetAttribute() bool {
	if o != nil && !IsNil(o.LegendSetAttribute) {
		return true
	}

	return false
}

// SetLegendSetAttribute gets a reference to the given bool and assigns it to the LegendSetAttribute field.
func (o *Attribute) SetLegendSetAttribute(v bool) {
	o.LegendSetAttribute = &v
}

// GetMandatory returns the Mandatory field value if set, zero value otherwise.
func (o *Attribute) GetMandatory() bool {
	if o == nil || IsNil(o.Mandatory) {
		var ret bool
		return ret
	}
	return *o.Mandatory
}

// GetMandatoryOk returns a tuple with the Mandatory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetMandatoryOk() (*bool, bool) {
	if o == nil || IsNil(o.Mandatory) {
		return nil, false
	}
	return o.Mandatory, true
}

// HasMandatory returns a boolean if a field has been set.
func (o *Attribute) HasMandatory() bool {
	if o != nil && !IsNil(o.Mandatory) {
		return true
	}

	return false
}

// SetMandatory gets a reference to the given bool and assigns it to the Mandatory field.
func (o *Attribute) SetMandatory(v bool) {
	o.Mandatory = &v
}

// GetMapAttribute returns the MapAttribute field value if set, zero value otherwise.
func (o *Attribute) GetMapAttribute() bool {
	if o == nil || IsNil(o.MapAttribute) {
		var ret bool
		return ret
	}
	return *o.MapAttribute
}

// GetMapAttributeOk returns a tuple with the MapAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetMapAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.MapAttribute) {
		return nil, false
	}
	return o.MapAttribute, true
}

// HasMapAttribute returns a boolean if a field has been set.
func (o *Attribute) HasMapAttribute() bool {
	if o != nil && !IsNil(o.MapAttribute) {
		return true
	}

	return false
}

// SetMapAttribute gets a reference to the given bool and assigns it to the MapAttribute field.
func (o *Attribute) SetMapAttribute(v bool) {
	o.MapAttribute = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Attribute) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Attribute) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Attribute) SetName(v string) {
	o.Name = &v
}

// GetObjectTypes returns the ObjectTypes field value if set, zero value otherwise.
func (o *Attribute) GetObjectTypes() []string {
	if o == nil || IsNil(o.ObjectTypes) {
		var ret []string
		return ret
	}
	return o.ObjectTypes
}

// GetObjectTypesOk returns a tuple with the ObjectTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetObjectTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.ObjectTypes) {
		return nil, false
	}
	return o.ObjectTypes, true
}

// HasObjectTypes returns a boolean if a field has been set.
func (o *Attribute) HasObjectTypes() bool {
	if o != nil && !IsNil(o.ObjectTypes) {
		return true
	}

	return false
}

// SetObjectTypes gets a reference to the given []string and assigns it to the ObjectTypes field.
func (o *Attribute) SetObjectTypes(v []string) {
	o.ObjectTypes = v
}

// GetOptionAttribute returns the OptionAttribute field value if set, zero value otherwise.
func (o *Attribute) GetOptionAttribute() bool {
	if o == nil || IsNil(o.OptionAttribute) {
		var ret bool
		return ret
	}
	return *o.OptionAttribute
}

// GetOptionAttributeOk returns a tuple with the OptionAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetOptionAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.OptionAttribute) {
		return nil, false
	}
	return o.OptionAttribute, true
}

// HasOptionAttribute returns a boolean if a field has been set.
func (o *Attribute) HasOptionAttribute() bool {
	if o != nil && !IsNil(o.OptionAttribute) {
		return true
	}

	return false
}

// SetOptionAttribute gets a reference to the given bool and assigns it to the OptionAttribute field.
func (o *Attribute) SetOptionAttribute(v bool) {
	o.OptionAttribute = &v
}

// GetOptionSet returns the OptionSet field value if set, zero value otherwise.
func (o *Attribute) GetOptionSet() AttributeOptionSet {
	if o == nil || IsNil(o.OptionSet) {
		var ret AttributeOptionSet
		return ret
	}
	return *o.OptionSet
}

// GetOptionSetOk returns a tuple with the OptionSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetOptionSetOk() (*AttributeOptionSet, bool) {
	if o == nil || IsNil(o.OptionSet) {
		return nil, false
	}
	return o.OptionSet, true
}

// HasOptionSet returns a boolean if a field has been set.
func (o *Attribute) HasOptionSet() bool {
	if o != nil && !IsNil(o.OptionSet) {
		return true
	}

	return false
}

// SetOptionSet gets a reference to the given AttributeOptionSet and assigns it to the OptionSet field.
func (o *Attribute) SetOptionSet(v AttributeOptionSet) {
	o.OptionSet = &v
}

// GetOptionSetAttribute returns the OptionSetAttribute field value if set, zero value otherwise.
func (o *Attribute) GetOptionSetAttribute() bool {
	if o == nil || IsNil(o.OptionSetAttribute) {
		var ret bool
		return ret
	}
	return *o.OptionSetAttribute
}

// GetOptionSetAttributeOk returns a tuple with the OptionSetAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetOptionSetAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.OptionSetAttribute) {
		return nil, false
	}
	return o.OptionSetAttribute, true
}

// HasOptionSetAttribute returns a boolean if a field has been set.
func (o *Attribute) HasOptionSetAttribute() bool {
	if o != nil && !IsNil(o.OptionSetAttribute) {
		return true
	}

	return false
}

// SetOptionSetAttribute gets a reference to the given bool and assigns it to the OptionSetAttribute field.
func (o *Attribute) SetOptionSetAttribute(v bool) {
	o.OptionSetAttribute = &v
}

// GetOrganisationUnitAttribute returns the OrganisationUnitAttribute field value if set, zero value otherwise.
func (o *Attribute) GetOrganisationUnitAttribute() bool {
	if o == nil || IsNil(o.OrganisationUnitAttribute) {
		var ret bool
		return ret
	}
	return *o.OrganisationUnitAttribute
}

// GetOrganisationUnitAttributeOk returns a tuple with the OrganisationUnitAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetOrganisationUnitAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.OrganisationUnitAttribute) {
		return nil, false
	}
	return o.OrganisationUnitAttribute, true
}

// HasOrganisationUnitAttribute returns a boolean if a field has been set.
func (o *Attribute) HasOrganisationUnitAttribute() bool {
	if o != nil && !IsNil(o.OrganisationUnitAttribute) {
		return true
	}

	return false
}

// SetOrganisationUnitAttribute gets a reference to the given bool and assigns it to the OrganisationUnitAttribute field.
func (o *Attribute) SetOrganisationUnitAttribute(v bool) {
	o.OrganisationUnitAttribute = &v
}

// GetOrganisationUnitGroupAttribute returns the OrganisationUnitGroupAttribute field value if set, zero value otherwise.
func (o *Attribute) GetOrganisationUnitGroupAttribute() bool {
	if o == nil || IsNil(o.OrganisationUnitGroupAttribute) {
		var ret bool
		return ret
	}
	return *o.OrganisationUnitGroupAttribute
}

// GetOrganisationUnitGroupAttributeOk returns a tuple with the OrganisationUnitGroupAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetOrganisationUnitGroupAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.OrganisationUnitGroupAttribute) {
		return nil, false
	}
	return o.OrganisationUnitGroupAttribute, true
}

// HasOrganisationUnitGroupAttribute returns a boolean if a field has been set.
func (o *Attribute) HasOrganisationUnitGroupAttribute() bool {
	if o != nil && !IsNil(o.OrganisationUnitGroupAttribute) {
		return true
	}

	return false
}

// SetOrganisationUnitGroupAttribute gets a reference to the given bool and assigns it to the OrganisationUnitGroupAttribute field.
func (o *Attribute) SetOrganisationUnitGroupAttribute(v bool) {
	o.OrganisationUnitGroupAttribute = &v
}

// GetOrganisationUnitGroupSetAttribute returns the OrganisationUnitGroupSetAttribute field value if set, zero value otherwise.
func (o *Attribute) GetOrganisationUnitGroupSetAttribute() bool {
	if o == nil || IsNil(o.OrganisationUnitGroupSetAttribute) {
		var ret bool
		return ret
	}
	return *o.OrganisationUnitGroupSetAttribute
}

// GetOrganisationUnitGroupSetAttributeOk returns a tuple with the OrganisationUnitGroupSetAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetOrganisationUnitGroupSetAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.OrganisationUnitGroupSetAttribute) {
		return nil, false
	}
	return o.OrganisationUnitGroupSetAttribute, true
}

// HasOrganisationUnitGroupSetAttribute returns a boolean if a field has been set.
func (o *Attribute) HasOrganisationUnitGroupSetAttribute() bool {
	if o != nil && !IsNil(o.OrganisationUnitGroupSetAttribute) {
		return true
	}

	return false
}

// SetOrganisationUnitGroupSetAttribute gets a reference to the given bool and assigns it to the OrganisationUnitGroupSetAttribute field.
func (o *Attribute) SetOrganisationUnitGroupSetAttribute(v bool) {
	o.OrganisationUnitGroupSetAttribute = &v
}

// GetProgramAttribute returns the ProgramAttribute field value if set, zero value otherwise.
func (o *Attribute) GetProgramAttribute() bool {
	if o == nil || IsNil(o.ProgramAttribute) {
		var ret bool
		return ret
	}
	return *o.ProgramAttribute
}

// GetProgramAttributeOk returns a tuple with the ProgramAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetProgramAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.ProgramAttribute) {
		return nil, false
	}
	return o.ProgramAttribute, true
}

// HasProgramAttribute returns a boolean if a field has been set.
func (o *Attribute) HasProgramAttribute() bool {
	if o != nil && !IsNil(o.ProgramAttribute) {
		return true
	}

	return false
}

// SetProgramAttribute gets a reference to the given bool and assigns it to the ProgramAttribute field.
func (o *Attribute) SetProgramAttribute(v bool) {
	o.ProgramAttribute = &v
}

// GetProgramIndicatorAttribute returns the ProgramIndicatorAttribute field value if set, zero value otherwise.
func (o *Attribute) GetProgramIndicatorAttribute() bool {
	if o == nil || IsNil(o.ProgramIndicatorAttribute) {
		var ret bool
		return ret
	}
	return *o.ProgramIndicatorAttribute
}

// GetProgramIndicatorAttributeOk returns a tuple with the ProgramIndicatorAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetProgramIndicatorAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.ProgramIndicatorAttribute) {
		return nil, false
	}
	return o.ProgramIndicatorAttribute, true
}

// HasProgramIndicatorAttribute returns a boolean if a field has been set.
func (o *Attribute) HasProgramIndicatorAttribute() bool {
	if o != nil && !IsNil(o.ProgramIndicatorAttribute) {
		return true
	}

	return false
}

// SetProgramIndicatorAttribute gets a reference to the given bool and assigns it to the ProgramIndicatorAttribute field.
func (o *Attribute) SetProgramIndicatorAttribute(v bool) {
	o.ProgramIndicatorAttribute = &v
}

// GetProgramStageAttribute returns the ProgramStageAttribute field value if set, zero value otherwise.
func (o *Attribute) GetProgramStageAttribute() bool {
	if o == nil || IsNil(o.ProgramStageAttribute) {
		var ret bool
		return ret
	}
	return *o.ProgramStageAttribute
}

// GetProgramStageAttributeOk returns a tuple with the ProgramStageAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetProgramStageAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.ProgramStageAttribute) {
		return nil, false
	}
	return o.ProgramStageAttribute, true
}

// HasProgramStageAttribute returns a boolean if a field has been set.
func (o *Attribute) HasProgramStageAttribute() bool {
	if o != nil && !IsNil(o.ProgramStageAttribute) {
		return true
	}

	return false
}

// SetProgramStageAttribute gets a reference to the given bool and assigns it to the ProgramStageAttribute field.
func (o *Attribute) SetProgramStageAttribute(v bool) {
	o.ProgramStageAttribute = &v
}

// GetPublicAccess returns the PublicAccess field value if set, zero value otherwise.
func (o *Attribute) GetPublicAccess() string {
	if o == nil || IsNil(o.PublicAccess) {
		var ret string
		return ret
	}
	return *o.PublicAccess
}

// GetPublicAccessOk returns a tuple with the PublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetPublicAccessOk() (*string, bool) {
	if o == nil || IsNil(o.PublicAccess) {
		return nil, false
	}
	return o.PublicAccess, true
}

// HasPublicAccess returns a boolean if a field has been set.
func (o *Attribute) HasPublicAccess() bool {
	if o != nil && !IsNil(o.PublicAccess) {
		return true
	}

	return false
}

// SetPublicAccess gets a reference to the given string and assigns it to the PublicAccess field.
func (o *Attribute) SetPublicAccess(v string) {
	o.PublicAccess = &v
}

// GetRelationshipTypeAttribute returns the RelationshipTypeAttribute field value if set, zero value otherwise.
func (o *Attribute) GetRelationshipTypeAttribute() bool {
	if o == nil || IsNil(o.RelationshipTypeAttribute) {
		var ret bool
		return ret
	}
	return *o.RelationshipTypeAttribute
}

// GetRelationshipTypeAttributeOk returns a tuple with the RelationshipTypeAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetRelationshipTypeAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.RelationshipTypeAttribute) {
		return nil, false
	}
	return o.RelationshipTypeAttribute, true
}

// HasRelationshipTypeAttribute returns a boolean if a field has been set.
func (o *Attribute) HasRelationshipTypeAttribute() bool {
	if o != nil && !IsNil(o.RelationshipTypeAttribute) {
		return true
	}

	return false
}

// SetRelationshipTypeAttribute gets a reference to the given bool and assigns it to the RelationshipTypeAttribute field.
func (o *Attribute) SetRelationshipTypeAttribute(v bool) {
	o.RelationshipTypeAttribute = &v
}

// GetSectionAttribute returns the SectionAttribute field value if set, zero value otherwise.
func (o *Attribute) GetSectionAttribute() bool {
	if o == nil || IsNil(o.SectionAttribute) {
		var ret bool
		return ret
	}
	return *o.SectionAttribute
}

// GetSectionAttributeOk returns a tuple with the SectionAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetSectionAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.SectionAttribute) {
		return nil, false
	}
	return o.SectionAttribute, true
}

// HasSectionAttribute returns a boolean if a field has been set.
func (o *Attribute) HasSectionAttribute() bool {
	if o != nil && !IsNil(o.SectionAttribute) {
		return true
	}

	return false
}

// SetSectionAttribute gets a reference to the given bool and assigns it to the SectionAttribute field.
func (o *Attribute) SetSectionAttribute(v bool) {
	o.SectionAttribute = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *Attribute) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *Attribute) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *Attribute) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *Attribute) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *Attribute) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *Attribute) SetShortName(v string) {
	o.ShortName = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *Attribute) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *Attribute) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *Attribute) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetSqlViewAttribute returns the SqlViewAttribute field value if set, zero value otherwise.
func (o *Attribute) GetSqlViewAttribute() bool {
	if o == nil || IsNil(o.SqlViewAttribute) {
		var ret bool
		return ret
	}
	return *o.SqlViewAttribute
}

// GetSqlViewAttributeOk returns a tuple with the SqlViewAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetSqlViewAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.SqlViewAttribute) {
		return nil, false
	}
	return o.SqlViewAttribute, true
}

// HasSqlViewAttribute returns a boolean if a field has been set.
func (o *Attribute) HasSqlViewAttribute() bool {
	if o != nil && !IsNil(o.SqlViewAttribute) {
		return true
	}

	return false
}

// SetSqlViewAttribute gets a reference to the given bool and assigns it to the SqlViewAttribute field.
func (o *Attribute) SetSqlViewAttribute(v bool) {
	o.SqlViewAttribute = &v
}

// GetTrackedEntityAttributeAttribute returns the TrackedEntityAttributeAttribute field value if set, zero value otherwise.
func (o *Attribute) GetTrackedEntityAttributeAttribute() bool {
	if o == nil || IsNil(o.TrackedEntityAttributeAttribute) {
		var ret bool
		return ret
	}
	return *o.TrackedEntityAttributeAttribute
}

// GetTrackedEntityAttributeAttributeOk returns a tuple with the TrackedEntityAttributeAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetTrackedEntityAttributeAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.TrackedEntityAttributeAttribute) {
		return nil, false
	}
	return o.TrackedEntityAttributeAttribute, true
}

// HasTrackedEntityAttributeAttribute returns a boolean if a field has been set.
func (o *Attribute) HasTrackedEntityAttributeAttribute() bool {
	if o != nil && !IsNil(o.TrackedEntityAttributeAttribute) {
		return true
	}

	return false
}

// SetTrackedEntityAttributeAttribute gets a reference to the given bool and assigns it to the TrackedEntityAttributeAttribute field.
func (o *Attribute) SetTrackedEntityAttributeAttribute(v bool) {
	o.TrackedEntityAttributeAttribute = &v
}

// GetTrackedEntityTypeAttribute returns the TrackedEntityTypeAttribute field value if set, zero value otherwise.
func (o *Attribute) GetTrackedEntityTypeAttribute() bool {
	if o == nil || IsNil(o.TrackedEntityTypeAttribute) {
		var ret bool
		return ret
	}
	return *o.TrackedEntityTypeAttribute
}

// GetTrackedEntityTypeAttributeOk returns a tuple with the TrackedEntityTypeAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetTrackedEntityTypeAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.TrackedEntityTypeAttribute) {
		return nil, false
	}
	return o.TrackedEntityTypeAttribute, true
}

// HasTrackedEntityTypeAttribute returns a boolean if a field has been set.
func (o *Attribute) HasTrackedEntityTypeAttribute() bool {
	if o != nil && !IsNil(o.TrackedEntityTypeAttribute) {
		return true
	}

	return false
}

// SetTrackedEntityTypeAttribute gets a reference to the given bool and assigns it to the TrackedEntityTypeAttribute field.
func (o *Attribute) SetTrackedEntityTypeAttribute(v bool) {
	o.TrackedEntityTypeAttribute = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *Attribute) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *Attribute) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *Attribute) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUnique returns the Unique field value if set, zero value otherwise.
func (o *Attribute) GetUnique() bool {
	if o == nil || IsNil(o.Unique) {
		var ret bool
		return ret
	}
	return *o.Unique
}

// GetUniqueOk returns a tuple with the Unique field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetUniqueOk() (*bool, bool) {
	if o == nil || IsNil(o.Unique) {
		return nil, false
	}
	return o.Unique, true
}

// HasUnique returns a boolean if a field has been set.
func (o *Attribute) HasUnique() bool {
	if o != nil && !IsNil(o.Unique) {
		return true
	}

	return false
}

// SetUnique gets a reference to the given bool and assigns it to the Unique field.
func (o *Attribute) SetUnique(v bool) {
	o.Unique = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Attribute) GetUser() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.User) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetUserOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *Attribute) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the User field.
func (o *Attribute) SetUser(v AggregateDataExchangeCreatedBy) {
	o.User = &v
}

// GetUserAccesses returns the UserAccesses field value if set, zero value otherwise.
func (o *Attribute) GetUserAccesses() []LegacyUserAccess {
	if o == nil || IsNil(o.UserAccesses) {
		var ret []LegacyUserAccess
		return ret
	}
	return o.UserAccesses
}

// GetUserAccessesOk returns a tuple with the UserAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetUserAccessesOk() ([]LegacyUserAccess, bool) {
	if o == nil || IsNil(o.UserAccesses) {
		return nil, false
	}
	return o.UserAccesses, true
}

// HasUserAccesses returns a boolean if a field has been set.
func (o *Attribute) HasUserAccesses() bool {
	if o != nil && !IsNil(o.UserAccesses) {
		return true
	}

	return false
}

// SetUserAccesses gets a reference to the given []LegacyUserAccess and assigns it to the UserAccesses field.
func (o *Attribute) SetUserAccesses(v []LegacyUserAccess) {
	o.UserAccesses = v
}

// GetUserAttribute returns the UserAttribute field value if set, zero value otherwise.
func (o *Attribute) GetUserAttribute() bool {
	if o == nil || IsNil(o.UserAttribute) {
		var ret bool
		return ret
	}
	return *o.UserAttribute
}

// GetUserAttributeOk returns a tuple with the UserAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetUserAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.UserAttribute) {
		return nil, false
	}
	return o.UserAttribute, true
}

// HasUserAttribute returns a boolean if a field has been set.
func (o *Attribute) HasUserAttribute() bool {
	if o != nil && !IsNil(o.UserAttribute) {
		return true
	}

	return false
}

// SetUserAttribute gets a reference to the given bool and assigns it to the UserAttribute field.
func (o *Attribute) SetUserAttribute(v bool) {
	o.UserAttribute = &v
}

// GetUserGroupAccesses returns the UserGroupAccesses field value if set, zero value otherwise.
func (o *Attribute) GetUserGroupAccesses() []LegacyUserGroupAccess {
	if o == nil || IsNil(o.UserGroupAccesses) {
		var ret []LegacyUserGroupAccess
		return ret
	}
	return o.UserGroupAccesses
}

// GetUserGroupAccessesOk returns a tuple with the UserGroupAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetUserGroupAccessesOk() ([]LegacyUserGroupAccess, bool) {
	if o == nil || IsNil(o.UserGroupAccesses) {
		return nil, false
	}
	return o.UserGroupAccesses, true
}

// HasUserGroupAccesses returns a boolean if a field has been set.
func (o *Attribute) HasUserGroupAccesses() bool {
	if o != nil && !IsNil(o.UserGroupAccesses) {
		return true
	}

	return false
}

// SetUserGroupAccesses gets a reference to the given []LegacyUserGroupAccess and assigns it to the UserGroupAccesses field.
func (o *Attribute) SetUserGroupAccesses(v []LegacyUserGroupAccess) {
	o.UserGroupAccesses = v
}

// GetUserGroupAttribute returns the UserGroupAttribute field value if set, zero value otherwise.
func (o *Attribute) GetUserGroupAttribute() bool {
	if o == nil || IsNil(o.UserGroupAttribute) {
		var ret bool
		return ret
	}
	return *o.UserGroupAttribute
}

// GetUserGroupAttributeOk returns a tuple with the UserGroupAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetUserGroupAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.UserGroupAttribute) {
		return nil, false
	}
	return o.UserGroupAttribute, true
}

// HasUserGroupAttribute returns a boolean if a field has been set.
func (o *Attribute) HasUserGroupAttribute() bool {
	if o != nil && !IsNil(o.UserGroupAttribute) {
		return true
	}

	return false
}

// SetUserGroupAttribute gets a reference to the given bool and assigns it to the UserGroupAttribute field.
func (o *Attribute) SetUserGroupAttribute(v bool) {
	o.UserGroupAttribute = &v
}

// GetValidationRuleAttribute returns the ValidationRuleAttribute field value if set, zero value otherwise.
func (o *Attribute) GetValidationRuleAttribute() bool {
	if o == nil || IsNil(o.ValidationRuleAttribute) {
		var ret bool
		return ret
	}
	return *o.ValidationRuleAttribute
}

// GetValidationRuleAttributeOk returns a tuple with the ValidationRuleAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetValidationRuleAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidationRuleAttribute) {
		return nil, false
	}
	return o.ValidationRuleAttribute, true
}

// HasValidationRuleAttribute returns a boolean if a field has been set.
func (o *Attribute) HasValidationRuleAttribute() bool {
	if o != nil && !IsNil(o.ValidationRuleAttribute) {
		return true
	}

	return false
}

// SetValidationRuleAttribute gets a reference to the given bool and assigns it to the ValidationRuleAttribute field.
func (o *Attribute) SetValidationRuleAttribute(v bool) {
	o.ValidationRuleAttribute = &v
}

// GetValidationRuleGroupAttribute returns the ValidationRuleGroupAttribute field value if set, zero value otherwise.
func (o *Attribute) GetValidationRuleGroupAttribute() bool {
	if o == nil || IsNil(o.ValidationRuleGroupAttribute) {
		var ret bool
		return ret
	}
	return *o.ValidationRuleGroupAttribute
}

// GetValidationRuleGroupAttributeOk returns a tuple with the ValidationRuleGroupAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetValidationRuleGroupAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.ValidationRuleGroupAttribute) {
		return nil, false
	}
	return o.ValidationRuleGroupAttribute, true
}

// HasValidationRuleGroupAttribute returns a boolean if a field has been set.
func (o *Attribute) HasValidationRuleGroupAttribute() bool {
	if o != nil && !IsNil(o.ValidationRuleGroupAttribute) {
		return true
	}

	return false
}

// SetValidationRuleGroupAttribute gets a reference to the given bool and assigns it to the ValidationRuleGroupAttribute field.
func (o *Attribute) SetValidationRuleGroupAttribute(v bool) {
	o.ValidationRuleGroupAttribute = &v
}

// GetValueType returns the ValueType field value
func (o *Attribute) GetValueType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value
// and a boolean to check if the value has been set.
func (o *Attribute) GetValueTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueType, true
}

// SetValueType sets field value
func (o *Attribute) SetValueType(v string) {
	o.ValueType = v
}

// GetVisualizationAttribute returns the VisualizationAttribute field value if set, zero value otherwise.
func (o *Attribute) GetVisualizationAttribute() bool {
	if o == nil || IsNil(o.VisualizationAttribute) {
		var ret bool
		return ret
	}
	return *o.VisualizationAttribute
}

// GetVisualizationAttributeOk returns a tuple with the VisualizationAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attribute) GetVisualizationAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.VisualizationAttribute) {
		return nil, false
	}
	return o.VisualizationAttribute, true
}

// HasVisualizationAttribute returns a boolean if a field has been set.
func (o *Attribute) HasVisualizationAttribute() bool {
	if o != nil && !IsNil(o.VisualizationAttribute) {
		return true
	}

	return false
}

// SetVisualizationAttribute gets a reference to the given bool and assigns it to the VisualizationAttribute field.
func (o *Attribute) SetVisualizationAttribute(v bool) {
	o.VisualizationAttribute = &v
}

func (o Attribute) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Attribute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.CategoryAttribute) {
		toSerialize["categoryAttribute"] = o.CategoryAttribute
	}
	if !IsNil(o.CategoryOptionAttribute) {
		toSerialize["categoryOptionAttribute"] = o.CategoryOptionAttribute
	}
	if !IsNil(o.CategoryOptionComboAttribute) {
		toSerialize["categoryOptionComboAttribute"] = o.CategoryOptionComboAttribute
	}
	if !IsNil(o.CategoryOptionGroupAttribute) {
		toSerialize["categoryOptionGroupAttribute"] = o.CategoryOptionGroupAttribute
	}
	if !IsNil(o.CategoryOptionGroupSetAttribute) {
		toSerialize["categoryOptionGroupSetAttribute"] = o.CategoryOptionGroupSetAttribute
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.ConstantAttribute) {
		toSerialize["constantAttribute"] = o.ConstantAttribute
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DataElementAttribute) {
		toSerialize["dataElementAttribute"] = o.DataElementAttribute
	}
	if !IsNil(o.DataElementGroupAttribute) {
		toSerialize["dataElementGroupAttribute"] = o.DataElementGroupAttribute
	}
	if !IsNil(o.DataElementGroupSetAttribute) {
		toSerialize["dataElementGroupSetAttribute"] = o.DataElementGroupSetAttribute
	}
	if !IsNil(o.DataSetAttribute) {
		toSerialize["dataSetAttribute"] = o.DataSetAttribute
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayDescription) {
		toSerialize["displayDescription"] = o.DisplayDescription
	}
	if !IsNil(o.DisplayFormName) {
		toSerialize["displayFormName"] = o.DisplayFormName
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplayShortName) {
		toSerialize["displayShortName"] = o.DisplayShortName
	}
	if !IsNil(o.DocumentAttribute) {
		toSerialize["documentAttribute"] = o.DocumentAttribute
	}
	if !IsNil(o.EventChartAttribute) {
		toSerialize["eventChartAttribute"] = o.EventChartAttribute
	}
	if !IsNil(o.EventReportAttribute) {
		toSerialize["eventReportAttribute"] = o.EventReportAttribute
	}
	if !IsNil(o.ExternalAccess) {
		toSerialize["externalAccess"] = o.ExternalAccess
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.FormName) {
		toSerialize["formName"] = o.FormName
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IndicatorAttribute) {
		toSerialize["indicatorAttribute"] = o.IndicatorAttribute
	}
	if !IsNil(o.IndicatorGroupAttribute) {
		toSerialize["indicatorGroupAttribute"] = o.IndicatorGroupAttribute
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.LegendSetAttribute) {
		toSerialize["legendSetAttribute"] = o.LegendSetAttribute
	}
	if !IsNil(o.Mandatory) {
		toSerialize["mandatory"] = o.Mandatory
	}
	if !IsNil(o.MapAttribute) {
		toSerialize["mapAttribute"] = o.MapAttribute
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ObjectTypes) {
		toSerialize["objectTypes"] = o.ObjectTypes
	}
	if !IsNil(o.OptionAttribute) {
		toSerialize["optionAttribute"] = o.OptionAttribute
	}
	if !IsNil(o.OptionSet) {
		toSerialize["optionSet"] = o.OptionSet
	}
	if !IsNil(o.OptionSetAttribute) {
		toSerialize["optionSetAttribute"] = o.OptionSetAttribute
	}
	if !IsNil(o.OrganisationUnitAttribute) {
		toSerialize["organisationUnitAttribute"] = o.OrganisationUnitAttribute
	}
	if !IsNil(o.OrganisationUnitGroupAttribute) {
		toSerialize["organisationUnitGroupAttribute"] = o.OrganisationUnitGroupAttribute
	}
	if !IsNil(o.OrganisationUnitGroupSetAttribute) {
		toSerialize["organisationUnitGroupSetAttribute"] = o.OrganisationUnitGroupSetAttribute
	}
	if !IsNil(o.ProgramAttribute) {
		toSerialize["programAttribute"] = o.ProgramAttribute
	}
	if !IsNil(o.ProgramIndicatorAttribute) {
		toSerialize["programIndicatorAttribute"] = o.ProgramIndicatorAttribute
	}
	if !IsNil(o.ProgramStageAttribute) {
		toSerialize["programStageAttribute"] = o.ProgramStageAttribute
	}
	if !IsNil(o.PublicAccess) {
		toSerialize["publicAccess"] = o.PublicAccess
	}
	if !IsNil(o.RelationshipTypeAttribute) {
		toSerialize["relationshipTypeAttribute"] = o.RelationshipTypeAttribute
	}
	if !IsNil(o.SectionAttribute) {
		toSerialize["sectionAttribute"] = o.SectionAttribute
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sortOrder"] = o.SortOrder
	}
	if !IsNil(o.SqlViewAttribute) {
		toSerialize["sqlViewAttribute"] = o.SqlViewAttribute
	}
	if !IsNil(o.TrackedEntityAttributeAttribute) {
		toSerialize["trackedEntityAttributeAttribute"] = o.TrackedEntityAttributeAttribute
	}
	if !IsNil(o.TrackedEntityTypeAttribute) {
		toSerialize["trackedEntityTypeAttribute"] = o.TrackedEntityTypeAttribute
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.Unique) {
		toSerialize["unique"] = o.Unique
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserAccesses) {
		toSerialize["userAccesses"] = o.UserAccesses
	}
	if !IsNil(o.UserAttribute) {
		toSerialize["userAttribute"] = o.UserAttribute
	}
	if !IsNil(o.UserGroupAccesses) {
		toSerialize["userGroupAccesses"] = o.UserGroupAccesses
	}
	if !IsNil(o.UserGroupAttribute) {
		toSerialize["userGroupAttribute"] = o.UserGroupAttribute
	}
	if !IsNil(o.ValidationRuleAttribute) {
		toSerialize["validationRuleAttribute"] = o.ValidationRuleAttribute
	}
	if !IsNil(o.ValidationRuleGroupAttribute) {
		toSerialize["validationRuleGroupAttribute"] = o.ValidationRuleGroupAttribute
	}
	toSerialize["valueType"] = o.ValueType
	if !IsNil(o.VisualizationAttribute) {
		toSerialize["visualizationAttribute"] = o.VisualizationAttribute
	}
	return toSerialize, nil
}

func (o *Attribute) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"valueType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAttribute := _Attribute{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAttribute)

	if err != nil {
		return err
	}

	*o = Attribute(varAttribute)

	return err
}

type NullableAttribute struct {
	value *Attribute
	isSet bool
}

func (v NullableAttribute) Get() *Attribute {
	return v.value
}

func (v *NullableAttribute) Set(val *Attribute) {
	v.value = val
	v.isSet = true
}

func (v NullableAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttribute(val *Attribute) *NullableAttribute {
	return &NullableAttribute{value: val, isSet: true}
}

func (v NullableAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
