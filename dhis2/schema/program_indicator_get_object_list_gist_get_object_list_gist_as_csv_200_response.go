/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response - struct for ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response
type ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response struct {
	ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfProgramIndicator                                                 *[]ProgramIndicator
}

// ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response
func ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response(v *ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response {
	return ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response{
		ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []ProgramIndicatorAsProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []ProgramIndicator wrapped in ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfProgramIndicatorAsProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response(v *[]ProgramIndicator) ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response {
	return ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfProgramIndicator: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfProgramIndicator
	err = newStrictDecoder(data).Decode(&dst.ArrayOfProgramIndicator)
	if err == nil {
		jsonArrayOfProgramIndicator, _ := json.Marshal(dst.ArrayOfProgramIndicator)
		if string(jsonArrayOfProgramIndicator) == "{}" { // empty struct
			dst.ArrayOfProgramIndicator = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfProgramIndicator = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfProgramIndicator = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfProgramIndicator != nil {
		return json.Marshal(&src.ArrayOfProgramIndicator)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfProgramIndicator != nil {
		return obj.ArrayOfProgramIndicator
	}

	// all schemas are nil
	return nil
}

type NullableProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) Get() *ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response(val *ProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) *NullableProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramIndicatorGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
