/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ExternalMapLayer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalMapLayer{}

// ExternalMapLayer struct for ExternalMapLayer
type ExternalMapLayer struct {
	Access           *Access          `json:"access,omitempty"`
	AttributeValues  []AttributeValue `json:"attributeValues,omitempty"`
	Attribution      *string          `json:"attribution,omitempty"`
	Code             *string          `json:"code,omitempty"`
	Created          *time.Time       `json:"created,omitempty"`
	CreatedBy        *UserDto         `json:"createdBy,omitempty"`
	DisplayName      *string          `json:"displayName,omitempty"`
	Favorite         *bool            `json:"favorite,omitempty"`
	Favorites        []string         `json:"favorites,omitempty"`
	Href             *string          `json:"href,omitempty"`
	Id               *string          `json:"id,omitempty"`
	ImageFormat      ImageFormat      `json:"imageFormat"`
	LastUpdated      *time.Time       `json:"lastUpdated,omitempty"`
	LastUpdatedBy    *UserDto         `json:"lastUpdatedBy,omitempty"`
	Layers           *string          `json:"layers,omitempty"`
	LegendSet        *LegendSet       `json:"legendSet,omitempty"`
	LegendSetUrl     *string          `json:"legendSetUrl,omitempty"`
	MapLayerPosition MapLayerPosition `json:"mapLayerPosition"`
	MapService       MapService       `json:"mapService"`
	Name             *string          `json:"name,omitempty"`
	Sharing          *Sharing         `json:"sharing,omitempty"`
	Translations     []Translation    `json:"translations,omitempty"`
	Url              *string          `json:"url,omitempty"`
}

type _ExternalMapLayer ExternalMapLayer

// NewExternalMapLayer instantiates a new ExternalMapLayer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalMapLayer(imageFormat ImageFormat, mapLayerPosition MapLayerPosition, mapService MapService) *ExternalMapLayer {
	this := ExternalMapLayer{}
	this.ImageFormat = imageFormat
	this.MapLayerPosition = mapLayerPosition
	this.MapService = mapService
	return &this
}

// NewExternalMapLayerWithDefaults instantiates a new ExternalMapLayer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalMapLayerWithDefaults() *ExternalMapLayer {
	this := ExternalMapLayer{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *ExternalMapLayer) SetAccess(v Access) {
	o.Access = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *ExternalMapLayer) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetAttribution returns the Attribution field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetAttribution() string {
	if o == nil || IsNil(o.Attribution) {
		var ret string
		return ret
	}
	return *o.Attribution
}

// GetAttributionOk returns a tuple with the Attribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetAttributionOk() (*string, bool) {
	if o == nil || IsNil(o.Attribution) {
		return nil, false
	}
	return o.Attribution, true
}

// HasAttribution returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasAttribution() bool {
	if o != nil && !IsNil(o.Attribution) {
		return true
	}

	return false
}

// SetAttribution gets a reference to the given string and assigns it to the Attribution field.
func (o *ExternalMapLayer) SetAttribution(v string) {
	o.Attribution = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ExternalMapLayer) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ExternalMapLayer) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetCreatedBy() UserDto {
	if o == nil || IsNil(o.CreatedBy) {
		var ret UserDto
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetCreatedByOk() (*UserDto, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given UserDto and assigns it to the CreatedBy field.
func (o *ExternalMapLayer) SetCreatedBy(v UserDto) {
	o.CreatedBy = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ExternalMapLayer) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ExternalMapLayer) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *ExternalMapLayer) SetFavorites(v []string) {
	o.Favorites = v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ExternalMapLayer) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ExternalMapLayer) SetId(v string) {
	o.Id = &v
}

// GetImageFormat returns the ImageFormat field value
func (o *ExternalMapLayer) GetImageFormat() ImageFormat {
	if o == nil {
		var ret ImageFormat
		return ret
	}

	return o.ImageFormat
}

// GetImageFormatOk returns a tuple with the ImageFormat field value
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetImageFormatOk() (*ImageFormat, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageFormat, true
}

// SetImageFormat sets field value
func (o *ExternalMapLayer) SetImageFormat(v ImageFormat) {
	o.ImageFormat = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ExternalMapLayer) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetLastUpdatedBy() UserDto {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret UserDto
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetLastUpdatedByOk() (*UserDto, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given UserDto and assigns it to the LastUpdatedBy field.
func (o *ExternalMapLayer) SetLastUpdatedBy(v UserDto) {
	o.LastUpdatedBy = &v
}

// GetLayers returns the Layers field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetLayers() string {
	if o == nil || IsNil(o.Layers) {
		var ret string
		return ret
	}
	return *o.Layers
}

// GetLayersOk returns a tuple with the Layers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetLayersOk() (*string, bool) {
	if o == nil || IsNil(o.Layers) {
		return nil, false
	}
	return o.Layers, true
}

// HasLayers returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasLayers() bool {
	if o != nil && !IsNil(o.Layers) {
		return true
	}

	return false
}

// SetLayers gets a reference to the given string and assigns it to the Layers field.
func (o *ExternalMapLayer) SetLayers(v string) {
	o.Layers = &v
}

// GetLegendSet returns the LegendSet field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetLegendSet() LegendSet {
	if o == nil || IsNil(o.LegendSet) {
		var ret LegendSet
		return ret
	}
	return *o.LegendSet
}

// GetLegendSetOk returns a tuple with the LegendSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetLegendSetOk() (*LegendSet, bool) {
	if o == nil || IsNil(o.LegendSet) {
		return nil, false
	}
	return o.LegendSet, true
}

// HasLegendSet returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasLegendSet() bool {
	if o != nil && !IsNil(o.LegendSet) {
		return true
	}

	return false
}

// SetLegendSet gets a reference to the given LegendSet and assigns it to the LegendSet field.
func (o *ExternalMapLayer) SetLegendSet(v LegendSet) {
	o.LegendSet = &v
}

// GetLegendSetUrl returns the LegendSetUrl field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetLegendSetUrl() string {
	if o == nil || IsNil(o.LegendSetUrl) {
		var ret string
		return ret
	}
	return *o.LegendSetUrl
}

// GetLegendSetUrlOk returns a tuple with the LegendSetUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetLegendSetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LegendSetUrl) {
		return nil, false
	}
	return o.LegendSetUrl, true
}

// HasLegendSetUrl returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasLegendSetUrl() bool {
	if o != nil && !IsNil(o.LegendSetUrl) {
		return true
	}

	return false
}

// SetLegendSetUrl gets a reference to the given string and assigns it to the LegendSetUrl field.
func (o *ExternalMapLayer) SetLegendSetUrl(v string) {
	o.LegendSetUrl = &v
}

// GetMapLayerPosition returns the MapLayerPosition field value
func (o *ExternalMapLayer) GetMapLayerPosition() MapLayerPosition {
	if o == nil {
		var ret MapLayerPosition
		return ret
	}

	return o.MapLayerPosition
}

// GetMapLayerPositionOk returns a tuple with the MapLayerPosition field value
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetMapLayerPositionOk() (*MapLayerPosition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MapLayerPosition, true
}

// SetMapLayerPosition sets field value
func (o *ExternalMapLayer) SetMapLayerPosition(v MapLayerPosition) {
	o.MapLayerPosition = v
}

// GetMapService returns the MapService field value
func (o *ExternalMapLayer) GetMapService() MapService {
	if o == nil {
		var ret MapService
		return ret
	}

	return o.MapService
}

// GetMapServiceOk returns a tuple with the MapService field value
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetMapServiceOk() (*MapService, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MapService, true
}

// SetMapService sets field value
func (o *ExternalMapLayer) SetMapService(v MapService) {
	o.MapService = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExternalMapLayer) SetName(v string) {
	o.Name = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ExternalMapLayer) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *ExternalMapLayer) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ExternalMapLayer) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalMapLayer) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ExternalMapLayer) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ExternalMapLayer) SetUrl(v string) {
	o.Url = &v
}

func (o ExternalMapLayer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalMapLayer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Attribution) {
		toSerialize["attribution"] = o.Attribution
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["imageFormat"] = o.ImageFormat
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Layers) {
		toSerialize["layers"] = o.Layers
	}
	if !IsNil(o.LegendSet) {
		toSerialize["legendSet"] = o.LegendSet
	}
	if !IsNil(o.LegendSetUrl) {
		toSerialize["legendSetUrl"] = o.LegendSetUrl
	}
	toSerialize["mapLayerPosition"] = o.MapLayerPosition
	toSerialize["mapService"] = o.MapService
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

func (o *ExternalMapLayer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"imageFormat",
		"mapLayerPosition",
		"mapService",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalMapLayer := _ExternalMapLayer{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalMapLayer)

	if err != nil {
		return err
	}

	*o = ExternalMapLayer(varExternalMapLayer)

	return err
}

type NullableExternalMapLayer struct {
	value *ExternalMapLayer
	isSet bool
}

func (v NullableExternalMapLayer) Get() *ExternalMapLayer {
	return v.value
}

func (v *NullableExternalMapLayer) Set(val *ExternalMapLayer) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalMapLayer) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalMapLayer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalMapLayer(val *ExternalMapLayer) *NullableExternalMapLayer {
	return &NullableExternalMapLayer{value: val, isSet: true}
}

func (v NullableExternalMapLayer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalMapLayer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
