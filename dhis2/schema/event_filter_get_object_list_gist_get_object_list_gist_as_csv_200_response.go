/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// EventFilterGetObjectListGistGetObjectListGistAsCsv200Response - struct for EventFilterGetObjectListGistGetObjectListGistAsCsv200Response
type EventFilterGetObjectListGistGetObjectListGistAsCsv200Response struct {
	EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfEventFilter                                                 *[]EventFilter
}

// EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsEventFilterGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in EventFilterGetObjectListGistGetObjectListGistAsCsv200Response
func EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsEventFilterGetObjectListGistGetObjectListGistAsCsv200Response(v *EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) EventFilterGetObjectListGistGetObjectListGistAsCsv200Response {
	return EventFilterGetObjectListGistGetObjectListGistAsCsv200Response{
		EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []EventFilterAsEventFilterGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []EventFilter wrapped in EventFilterGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfEventFilterAsEventFilterGetObjectListGistGetObjectListGistAsCsv200Response(v *[]EventFilter) EventFilterGetObjectListGistGetObjectListGistAsCsv200Response {
	return EventFilterGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfEventFilter: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *EventFilterGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonEventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonEventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfEventFilter
	err = newStrictDecoder(data).Decode(&dst.ArrayOfEventFilter)
	if err == nil {
		jsonArrayOfEventFilter, _ := json.Marshal(dst.ArrayOfEventFilter)
		if string(jsonArrayOfEventFilter) == "{}" { // empty struct
			dst.ArrayOfEventFilter = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfEventFilter = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfEventFilter = nil

		return fmt.Errorf("data matches more than one schema in oneOf(EventFilterGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(EventFilterGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src EventFilterGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfEventFilter != nil {
		return json.Marshal(&src.ArrayOfEventFilter)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *EventFilterGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.EventFilterGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfEventFilter != nil {
		return obj.ArrayOfEventFilter
	}

	// all schemas are nil
	return nil
}

type NullableEventFilterGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *EventFilterGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableEventFilterGetObjectListGistGetObjectListGistAsCsv200Response) Get() *EventFilterGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableEventFilterGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *EventFilterGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableEventFilterGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableEventFilterGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventFilterGetObjectListGistGetObjectListGistAsCsv200Response(val *EventFilterGetObjectListGistGetObjectListGistAsCsv200Response) *NullableEventFilterGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableEventFilterGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableEventFilterGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventFilterGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
