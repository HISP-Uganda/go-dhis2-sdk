/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the MessageConversationParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageConversationParams{}

// MessageConversationParams struct for MessageConversationParams
type MessageConversationParams struct {
	Assignee            *AggregateDataExchangeParamsCreatedBy    `json:"assignee,omitempty"`
	AttributeValues     []AttributeValueParams                   `json:"attributeValues,omitempty"`
	Code                *string                                  `json:"code,omitempty"`
	Created             *time.Time                               `json:"created,omitempty"`
	CreatedBy           *AggregateDataExchangeParamsCreatedBy    `json:"createdBy,omitempty"`
	DisplayName         *string                                  `json:"displayName,omitempty"`
	ExtMessageId        *string                                  `json:"extMessageId,omitempty"`
	Favorite            *bool                                    `json:"favorite,omitempty"`
	Favorites           []string                                 `json:"favorites,omitempty"`
	FollowUp            *bool                                    `json:"followUp,omitempty"`
	Id                  *string                                  `json:"id,omitempty"`
	LastMessage         *time.Time                               `json:"lastMessage,omitempty"`
	LastSender          *UserParams                              `json:"lastSender,omitempty"`
	LastSenderFirstname *string                                  `json:"lastSenderFirstname,omitempty"`
	LastSenderSurname   *string                                  `json:"lastSenderSurname,omitempty"`
	LastUpdated         *time.Time                               `json:"lastUpdated,omitempty"`
	LastUpdatedBy       *AggregateDataExchangeParamsCreatedBy    `json:"lastUpdatedBy,omitempty"`
	MessageCount        int32                                    `json:"messageCount"`
	MessageType         MessageType                              `json:"messageType"`
	Messages            []MessageConversationParamsMessagesInner `json:"messages,omitempty"`
	Priority            MessageConversationPriority              `json:"priority"`
	Read                *bool                                    `json:"read,omitempty"`
	Sharing             *Sharing                                 `json:"sharing,omitempty"`
	Status              MessageConversationStatus                `json:"status"`
	Subject             *string                                  `json:"subject,omitempty"`
	Translations        []Translation                            `json:"translations,omitempty"`
	UserFirstname       *string                                  `json:"userFirstname,omitempty"`
	UserMessages        []UserMessageParams                      `json:"userMessages,omitempty"`
	UserSurname         *string                                  `json:"userSurname,omitempty"`
}

type _MessageConversationParams MessageConversationParams

// NewMessageConversationParams instantiates a new MessageConversationParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageConversationParams(messageCount int32, messageType MessageType, priority MessageConversationPriority, status MessageConversationStatus) *MessageConversationParams {
	this := MessageConversationParams{}
	this.MessageCount = messageCount
	this.MessageType = messageType
	this.Priority = priority
	this.Status = status
	return &this
}

// NewMessageConversationParamsWithDefaults instantiates a new MessageConversationParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageConversationParamsWithDefaults() *MessageConversationParams {
	this := MessageConversationParams{}
	return &this
}

// GetAssignee returns the Assignee field value if set, zero value otherwise.
func (o *MessageConversationParams) GetAssignee() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.Assignee) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetAssigneeOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.Assignee) {
		return nil, false
	}
	return o.Assignee, true
}

// HasAssignee returns a boolean if a field has been set.
func (o *MessageConversationParams) HasAssignee() bool {
	if o != nil && !IsNil(o.Assignee) {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the Assignee field.
func (o *MessageConversationParams) SetAssignee(v AggregateDataExchangeParamsCreatedBy) {
	o.Assignee = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *MessageConversationParams) GetAttributeValues() []AttributeValueParams {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValueParams
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetAttributeValuesOk() ([]AttributeValueParams, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *MessageConversationParams) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValueParams and assigns it to the AttributeValues field.
func (o *MessageConversationParams) SetAttributeValues(v []AttributeValueParams) {
	o.AttributeValues = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *MessageConversationParams) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *MessageConversationParams) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *MessageConversationParams) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *MessageConversationParams) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *MessageConversationParams) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *MessageConversationParams) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *MessageConversationParams) GetCreatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetCreatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *MessageConversationParams) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the CreatedBy field.
func (o *MessageConversationParams) SetCreatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.CreatedBy = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MessageConversationParams) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MessageConversationParams) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MessageConversationParams) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetExtMessageId returns the ExtMessageId field value if set, zero value otherwise.
func (o *MessageConversationParams) GetExtMessageId() string {
	if o == nil || IsNil(o.ExtMessageId) {
		var ret string
		return ret
	}
	return *o.ExtMessageId
}

// GetExtMessageIdOk returns a tuple with the ExtMessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetExtMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExtMessageId) {
		return nil, false
	}
	return o.ExtMessageId, true
}

// HasExtMessageId returns a boolean if a field has been set.
func (o *MessageConversationParams) HasExtMessageId() bool {
	if o != nil && !IsNil(o.ExtMessageId) {
		return true
	}

	return false
}

// SetExtMessageId gets a reference to the given string and assigns it to the ExtMessageId field.
func (o *MessageConversationParams) SetExtMessageId(v string) {
	o.ExtMessageId = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *MessageConversationParams) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *MessageConversationParams) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *MessageConversationParams) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *MessageConversationParams) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *MessageConversationParams) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *MessageConversationParams) SetFavorites(v []string) {
	o.Favorites = v
}

// GetFollowUp returns the FollowUp field value if set, zero value otherwise.
func (o *MessageConversationParams) GetFollowUp() bool {
	if o == nil || IsNil(o.FollowUp) {
		var ret bool
		return ret
	}
	return *o.FollowUp
}

// GetFollowUpOk returns a tuple with the FollowUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetFollowUpOk() (*bool, bool) {
	if o == nil || IsNil(o.FollowUp) {
		return nil, false
	}
	return o.FollowUp, true
}

// HasFollowUp returns a boolean if a field has been set.
func (o *MessageConversationParams) HasFollowUp() bool {
	if o != nil && !IsNil(o.FollowUp) {
		return true
	}

	return false
}

// SetFollowUp gets a reference to the given bool and assigns it to the FollowUp field.
func (o *MessageConversationParams) SetFollowUp(v bool) {
	o.FollowUp = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MessageConversationParams) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MessageConversationParams) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MessageConversationParams) SetId(v string) {
	o.Id = &v
}

// GetLastMessage returns the LastMessage field value if set, zero value otherwise.
func (o *MessageConversationParams) GetLastMessage() time.Time {
	if o == nil || IsNil(o.LastMessage) {
		var ret time.Time
		return ret
	}
	return *o.LastMessage
}

// GetLastMessageOk returns a tuple with the LastMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetLastMessageOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastMessage) {
		return nil, false
	}
	return o.LastMessage, true
}

// HasLastMessage returns a boolean if a field has been set.
func (o *MessageConversationParams) HasLastMessage() bool {
	if o != nil && !IsNil(o.LastMessage) {
		return true
	}

	return false
}

// SetLastMessage gets a reference to the given time.Time and assigns it to the LastMessage field.
func (o *MessageConversationParams) SetLastMessage(v time.Time) {
	o.LastMessage = &v
}

// GetLastSender returns the LastSender field value if set, zero value otherwise.
func (o *MessageConversationParams) GetLastSender() UserParams {
	if o == nil || IsNil(o.LastSender) {
		var ret UserParams
		return ret
	}
	return *o.LastSender
}

// GetLastSenderOk returns a tuple with the LastSender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetLastSenderOk() (*UserParams, bool) {
	if o == nil || IsNil(o.LastSender) {
		return nil, false
	}
	return o.LastSender, true
}

// HasLastSender returns a boolean if a field has been set.
func (o *MessageConversationParams) HasLastSender() bool {
	if o != nil && !IsNil(o.LastSender) {
		return true
	}

	return false
}

// SetLastSender gets a reference to the given UserParams and assigns it to the LastSender field.
func (o *MessageConversationParams) SetLastSender(v UserParams) {
	o.LastSender = &v
}

// GetLastSenderFirstname returns the LastSenderFirstname field value if set, zero value otherwise.
func (o *MessageConversationParams) GetLastSenderFirstname() string {
	if o == nil || IsNil(o.LastSenderFirstname) {
		var ret string
		return ret
	}
	return *o.LastSenderFirstname
}

// GetLastSenderFirstnameOk returns a tuple with the LastSenderFirstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetLastSenderFirstnameOk() (*string, bool) {
	if o == nil || IsNil(o.LastSenderFirstname) {
		return nil, false
	}
	return o.LastSenderFirstname, true
}

// HasLastSenderFirstname returns a boolean if a field has been set.
func (o *MessageConversationParams) HasLastSenderFirstname() bool {
	if o != nil && !IsNil(o.LastSenderFirstname) {
		return true
	}

	return false
}

// SetLastSenderFirstname gets a reference to the given string and assigns it to the LastSenderFirstname field.
func (o *MessageConversationParams) SetLastSenderFirstname(v string) {
	o.LastSenderFirstname = &v
}

// GetLastSenderSurname returns the LastSenderSurname field value if set, zero value otherwise.
func (o *MessageConversationParams) GetLastSenderSurname() string {
	if o == nil || IsNil(o.LastSenderSurname) {
		var ret string
		return ret
	}
	return *o.LastSenderSurname
}

// GetLastSenderSurnameOk returns a tuple with the LastSenderSurname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetLastSenderSurnameOk() (*string, bool) {
	if o == nil || IsNil(o.LastSenderSurname) {
		return nil, false
	}
	return o.LastSenderSurname, true
}

// HasLastSenderSurname returns a boolean if a field has been set.
func (o *MessageConversationParams) HasLastSenderSurname() bool {
	if o != nil && !IsNil(o.LastSenderSurname) {
		return true
	}

	return false
}

// SetLastSenderSurname gets a reference to the given string and assigns it to the LastSenderSurname field.
func (o *MessageConversationParams) SetLastSenderSurname(v string) {
	o.LastSenderSurname = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *MessageConversationParams) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *MessageConversationParams) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *MessageConversationParams) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *MessageConversationParams) GetLastUpdatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetLastUpdatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *MessageConversationParams) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the LastUpdatedBy field.
func (o *MessageConversationParams) SetLastUpdatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetMessageCount returns the MessageCount field value
func (o *MessageConversationParams) GetMessageCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MessageCount
}

// GetMessageCountOk returns a tuple with the MessageCount field value
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetMessageCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageCount, true
}

// SetMessageCount sets field value
func (o *MessageConversationParams) SetMessageCount(v int32) {
	o.MessageCount = v
}

// GetMessageType returns the MessageType field value
func (o *MessageConversationParams) GetMessageType() MessageType {
	if o == nil {
		var ret MessageType
		return ret
	}

	return o.MessageType
}

// GetMessageTypeOk returns a tuple with the MessageType field value
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetMessageTypeOk() (*MessageType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageType, true
}

// SetMessageType sets field value
func (o *MessageConversationParams) SetMessageType(v MessageType) {
	o.MessageType = v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *MessageConversationParams) GetMessages() []MessageConversationParamsMessagesInner {
	if o == nil || IsNil(o.Messages) {
		var ret []MessageConversationParamsMessagesInner
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetMessagesOk() ([]MessageConversationParamsMessagesInner, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *MessageConversationParams) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []MessageConversationParamsMessagesInner and assigns it to the Messages field.
func (o *MessageConversationParams) SetMessages(v []MessageConversationParamsMessagesInner) {
	o.Messages = v
}

// GetPriority returns the Priority field value
func (o *MessageConversationParams) GetPriority() MessageConversationPriority {
	if o == nil {
		var ret MessageConversationPriority
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetPriorityOk() (*MessageConversationPriority, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *MessageConversationParams) SetPriority(v MessageConversationPriority) {
	o.Priority = v
}

// GetRead returns the Read field value if set, zero value otherwise.
func (o *MessageConversationParams) GetRead() bool {
	if o == nil || IsNil(o.Read) {
		var ret bool
		return ret
	}
	return *o.Read
}

// GetReadOk returns a tuple with the Read field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetReadOk() (*bool, bool) {
	if o == nil || IsNil(o.Read) {
		return nil, false
	}
	return o.Read, true
}

// HasRead returns a boolean if a field has been set.
func (o *MessageConversationParams) HasRead() bool {
	if o != nil && !IsNil(o.Read) {
		return true
	}

	return false
}

// SetRead gets a reference to the given bool and assigns it to the Read field.
func (o *MessageConversationParams) SetRead(v bool) {
	o.Read = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *MessageConversationParams) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *MessageConversationParams) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *MessageConversationParams) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetStatus returns the Status field value
func (o *MessageConversationParams) GetStatus() MessageConversationStatus {
	if o == nil {
		var ret MessageConversationStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetStatusOk() (*MessageConversationStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *MessageConversationParams) SetStatus(v MessageConversationStatus) {
	o.Status = v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *MessageConversationParams) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *MessageConversationParams) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *MessageConversationParams) SetSubject(v string) {
	o.Subject = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *MessageConversationParams) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *MessageConversationParams) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *MessageConversationParams) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUserFirstname returns the UserFirstname field value if set, zero value otherwise.
func (o *MessageConversationParams) GetUserFirstname() string {
	if o == nil || IsNil(o.UserFirstname) {
		var ret string
		return ret
	}
	return *o.UserFirstname
}

// GetUserFirstnameOk returns a tuple with the UserFirstname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetUserFirstnameOk() (*string, bool) {
	if o == nil || IsNil(o.UserFirstname) {
		return nil, false
	}
	return o.UserFirstname, true
}

// HasUserFirstname returns a boolean if a field has been set.
func (o *MessageConversationParams) HasUserFirstname() bool {
	if o != nil && !IsNil(o.UserFirstname) {
		return true
	}

	return false
}

// SetUserFirstname gets a reference to the given string and assigns it to the UserFirstname field.
func (o *MessageConversationParams) SetUserFirstname(v string) {
	o.UserFirstname = &v
}

// GetUserMessages returns the UserMessages field value if set, zero value otherwise.
func (o *MessageConversationParams) GetUserMessages() []UserMessageParams {
	if o == nil || IsNil(o.UserMessages) {
		var ret []UserMessageParams
		return ret
	}
	return o.UserMessages
}

// GetUserMessagesOk returns a tuple with the UserMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetUserMessagesOk() ([]UserMessageParams, bool) {
	if o == nil || IsNil(o.UserMessages) {
		return nil, false
	}
	return o.UserMessages, true
}

// HasUserMessages returns a boolean if a field has been set.
func (o *MessageConversationParams) HasUserMessages() bool {
	if o != nil && !IsNil(o.UserMessages) {
		return true
	}

	return false
}

// SetUserMessages gets a reference to the given []UserMessageParams and assigns it to the UserMessages field.
func (o *MessageConversationParams) SetUserMessages(v []UserMessageParams) {
	o.UserMessages = v
}

// GetUserSurname returns the UserSurname field value if set, zero value otherwise.
func (o *MessageConversationParams) GetUserSurname() string {
	if o == nil || IsNil(o.UserSurname) {
		var ret string
		return ret
	}
	return *o.UserSurname
}

// GetUserSurnameOk returns a tuple with the UserSurname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationParams) GetUserSurnameOk() (*string, bool) {
	if o == nil || IsNil(o.UserSurname) {
		return nil, false
	}
	return o.UserSurname, true
}

// HasUserSurname returns a boolean if a field has been set.
func (o *MessageConversationParams) HasUserSurname() bool {
	if o != nil && !IsNil(o.UserSurname) {
		return true
	}

	return false
}

// SetUserSurname gets a reference to the given string and assigns it to the UserSurname field.
func (o *MessageConversationParams) SetUserSurname(v string) {
	o.UserSurname = &v
}

func (o MessageConversationParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageConversationParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Assignee) {
		toSerialize["assignee"] = o.Assignee
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.ExtMessageId) {
		toSerialize["extMessageId"] = o.ExtMessageId
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.FollowUp) {
		toSerialize["followUp"] = o.FollowUp
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastMessage) {
		toSerialize["lastMessage"] = o.LastMessage
	}
	if !IsNil(o.LastSender) {
		toSerialize["lastSender"] = o.LastSender
	}
	if !IsNil(o.LastSenderFirstname) {
		toSerialize["lastSenderFirstname"] = o.LastSenderFirstname
	}
	if !IsNil(o.LastSenderSurname) {
		toSerialize["lastSenderSurname"] = o.LastSenderSurname
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	toSerialize["messageCount"] = o.MessageCount
	toSerialize["messageType"] = o.MessageType
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	toSerialize["priority"] = o.Priority
	if !IsNil(o.Read) {
		toSerialize["read"] = o.Read
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.UserFirstname) {
		toSerialize["userFirstname"] = o.UserFirstname
	}
	if !IsNil(o.UserMessages) {
		toSerialize["userMessages"] = o.UserMessages
	}
	if !IsNil(o.UserSurname) {
		toSerialize["userSurname"] = o.UserSurname
	}
	return toSerialize, nil
}

func (o *MessageConversationParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"messageCount",
		"messageType",
		"priority",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageConversationParams := _MessageConversationParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMessageConversationParams)

	if err != nil {
		return err
	}

	*o = MessageConversationParams(varMessageConversationParams)

	return err
}

type NullableMessageConversationParams struct {
	value *MessageConversationParams
	isSet bool
}

func (v NullableMessageConversationParams) Get() *MessageConversationParams {
	return v.value
}

func (v *NullableMessageConversationParams) Set(val *MessageConversationParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageConversationParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageConversationParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageConversationParams(val *MessageConversationParams) *NullableMessageConversationParams {
	return &NullableMessageConversationParams{value: val, isSet: true}
}

func (v NullableMessageConversationParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageConversationParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
