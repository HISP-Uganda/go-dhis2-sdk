/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ProgramOwnerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramOwnerInfo{}

// ProgramOwnerInfo struct for ProgramOwnerInfo
type ProgramOwnerInfo struct {
	OrgUnit       *string `json:"orgUnit,omitempty"`
	Program       *string `json:"program,omitempty"`
	TrackedEntity *string `json:"trackedEntity,omitempty"`
}

// NewProgramOwnerInfo instantiates a new ProgramOwnerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramOwnerInfo() *ProgramOwnerInfo {
	this := ProgramOwnerInfo{}
	return &this
}

// NewProgramOwnerInfoWithDefaults instantiates a new ProgramOwnerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramOwnerInfoWithDefaults() *ProgramOwnerInfo {
	this := ProgramOwnerInfo{}
	return &this
}

// GetOrgUnit returns the OrgUnit field value if set, zero value otherwise.
func (o *ProgramOwnerInfo) GetOrgUnit() string {
	if o == nil || IsNil(o.OrgUnit) {
		var ret string
		return ret
	}
	return *o.OrgUnit
}

// GetOrgUnitOk returns a tuple with the OrgUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramOwnerInfo) GetOrgUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OrgUnit) {
		return nil, false
	}
	return o.OrgUnit, true
}

// HasOrgUnit returns a boolean if a field has been set.
func (o *ProgramOwnerInfo) HasOrgUnit() bool {
	if o != nil && !IsNil(o.OrgUnit) {
		return true
	}

	return false
}

// SetOrgUnit gets a reference to the given string and assigns it to the OrgUnit field.
func (o *ProgramOwnerInfo) SetOrgUnit(v string) {
	o.OrgUnit = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *ProgramOwnerInfo) GetProgram() string {
	if o == nil || IsNil(o.Program) {
		var ret string
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramOwnerInfo) GetProgramOk() (*string, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *ProgramOwnerInfo) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given string and assigns it to the Program field.
func (o *ProgramOwnerInfo) SetProgram(v string) {
	o.Program = &v
}

// GetTrackedEntity returns the TrackedEntity field value if set, zero value otherwise.
func (o *ProgramOwnerInfo) GetTrackedEntity() string {
	if o == nil || IsNil(o.TrackedEntity) {
		var ret string
		return ret
	}
	return *o.TrackedEntity
}

// GetTrackedEntityOk returns a tuple with the TrackedEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramOwnerInfo) GetTrackedEntityOk() (*string, bool) {
	if o == nil || IsNil(o.TrackedEntity) {
		return nil, false
	}
	return o.TrackedEntity, true
}

// HasTrackedEntity returns a boolean if a field has been set.
func (o *ProgramOwnerInfo) HasTrackedEntity() bool {
	if o != nil && !IsNil(o.TrackedEntity) {
		return true
	}

	return false
}

// SetTrackedEntity gets a reference to the given string and assigns it to the TrackedEntity field.
func (o *ProgramOwnerInfo) SetTrackedEntity(v string) {
	o.TrackedEntity = &v
}

func (o ProgramOwnerInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramOwnerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgUnit) {
		toSerialize["orgUnit"] = o.OrgUnit
	}
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.TrackedEntity) {
		toSerialize["trackedEntity"] = o.TrackedEntity
	}
	return toSerialize, nil
}

type NullableProgramOwnerInfo struct {
	value *ProgramOwnerInfo
	isSet bool
}

func (v NullableProgramOwnerInfo) Get() *ProgramOwnerInfo {
	return v.value
}

func (v *NullableProgramOwnerInfo) Set(val *ProgramOwnerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramOwnerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramOwnerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramOwnerInfo(val *ProgramOwnerInfo) *NullableProgramOwnerInfo {
	return &NullableProgramOwnerInfo{value: val, isSet: true}
}

func (v NullableProgramOwnerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramOwnerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
