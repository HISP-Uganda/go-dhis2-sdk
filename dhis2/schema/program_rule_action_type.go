/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// ProgramRuleActionType the model 'ProgramRuleActionType'
type ProgramRuleActionType string

// List of ProgramRuleActionType
const (
	PROGRAMRULEACTIONTYPE_DISPLAYTEXT         ProgramRuleActionType = "DISPLAYTEXT"
	PROGRAMRULEACTIONTYPE_DISPLAYKEYVALUEPAIR ProgramRuleActionType = "DISPLAYKEYVALUEPAIR"
	PROGRAMRULEACTIONTYPE_HIDEFIELD           ProgramRuleActionType = "HIDEFIELD"
	PROGRAMRULEACTIONTYPE_HIDESECTION         ProgramRuleActionType = "HIDESECTION"
	PROGRAMRULEACTIONTYPE_HIDEPROGRAMSTAGE    ProgramRuleActionType = "HIDEPROGRAMSTAGE"
	PROGRAMRULEACTIONTYPE_ASSIGN              ProgramRuleActionType = "ASSIGN"
	PROGRAMRULEACTIONTYPE_SHOWWARNING         ProgramRuleActionType = "SHOWWARNING"
	PROGRAMRULEACTIONTYPE_WARNINGONCOMPLETE   ProgramRuleActionType = "WARNINGONCOMPLETE"
	PROGRAMRULEACTIONTYPE_SHOWERROR           ProgramRuleActionType = "SHOWERROR"
	PROGRAMRULEACTIONTYPE_ERRORONCOMPLETE     ProgramRuleActionType = "ERRORONCOMPLETE"
	PROGRAMRULEACTIONTYPE_CREATEEVENT         ProgramRuleActionType = "CREATEEVENT"
	PROGRAMRULEACTIONTYPE_SETMANDATORYFIELD   ProgramRuleActionType = "SETMANDATORYFIELD"
	PROGRAMRULEACTIONTYPE_SENDMESSAGE         ProgramRuleActionType = "SENDMESSAGE"
	PROGRAMRULEACTIONTYPE_SCHEDULEMESSAGE     ProgramRuleActionType = "SCHEDULEMESSAGE"
	PROGRAMRULEACTIONTYPE_HIDEOPTION          ProgramRuleActionType = "HIDEOPTION"
	PROGRAMRULEACTIONTYPE_SHOWOPTIONGROUP     ProgramRuleActionType = "SHOWOPTIONGROUP"
	PROGRAMRULEACTIONTYPE_HIDEOPTIONGROUP     ProgramRuleActionType = "HIDEOPTIONGROUP"
)

// All allowed values of ProgramRuleActionType enum
var AllowedProgramRuleActionTypeEnumValues = []ProgramRuleActionType{
	"DISPLAYTEXT",
	"DISPLAYKEYVALUEPAIR",
	"HIDEFIELD",
	"HIDESECTION",
	"HIDEPROGRAMSTAGE",
	"ASSIGN",
	"SHOWWARNING",
	"WARNINGONCOMPLETE",
	"SHOWERROR",
	"ERRORONCOMPLETE",
	"CREATEEVENT",
	"SETMANDATORYFIELD",
	"SENDMESSAGE",
	"SCHEDULEMESSAGE",
	"HIDEOPTION",
	"SHOWOPTIONGROUP",
	"HIDEOPTIONGROUP",
}

func (v *ProgramRuleActionType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProgramRuleActionType(value)
	for _, existing := range AllowedProgramRuleActionTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProgramRuleActionType", value)
}

// NewProgramRuleActionTypeFromValue returns a pointer to a valid ProgramRuleActionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProgramRuleActionTypeFromValue(v string) (*ProgramRuleActionType, error) {
	ev := ProgramRuleActionType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProgramRuleActionType: valid values are %v", v, AllowedProgramRuleActionTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProgramRuleActionType) IsValid() bool {
	for _, existing := range AllowedProgramRuleActionTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProgramRuleActionType value
func (v ProgramRuleActionType) Ptr() *ProgramRuleActionType {
	return &v
}

type NullableProgramRuleActionType struct {
	value *ProgramRuleActionType
	isSet bool
}

func (v NullableProgramRuleActionType) Get() *ProgramRuleActionType {
	return v.value
}

func (v *NullableProgramRuleActionType) Set(val *ProgramRuleActionType) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramRuleActionType) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramRuleActionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramRuleActionType(val *ProgramRuleActionType) *NullableProgramRuleActionType {
	return &NullableProgramRuleActionType{value: val, isSet: true}
}

func (v NullableProgramRuleActionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramRuleActionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
