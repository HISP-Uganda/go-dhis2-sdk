/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesCategoryOptionCombo the model 'PropertyNamesCategoryOptionCombo'
type PropertyNamesCategoryOptionCombo string

// List of PropertyNames_CategoryOptionCombo
const (
	PROPERTYNAMESCATEGORYOPTIONCOMBO_ACCESS              PropertyNamesCategoryOptionCombo = "access"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_AGGREGATION_TYPE    PropertyNamesCategoryOptionCombo = "aggregationType"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_ATTRIBUTE_VALUES    PropertyNamesCategoryOptionCombo = "attributeValues"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_CATEGORY_COMBO      PropertyNamesCategoryOptionCombo = "categoryCombo"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_CATEGORY_OPTIONS    PropertyNamesCategoryOptionCombo = "categoryOptions"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_CODE                PropertyNamesCategoryOptionCombo = "code"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_CREATED             PropertyNamesCategoryOptionCombo = "created"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_CREATED_BY          PropertyNamesCategoryOptionCombo = "createdBy"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_DESCRIPTION         PropertyNamesCategoryOptionCombo = "description"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_DIMENSION_ITEM      PropertyNamesCategoryOptionCombo = "dimensionItem"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_DIMENSION_ITEM_TYPE PropertyNamesCategoryOptionCombo = "dimensionItemType"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_DISPLAY_DESCRIPTION PropertyNamesCategoryOptionCombo = "displayDescription"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_DISPLAY_FORM_NAME   PropertyNamesCategoryOptionCombo = "displayFormName"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_DISPLAY_NAME        PropertyNamesCategoryOptionCombo = "displayName"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_DISPLAY_SHORT_NAME  PropertyNamesCategoryOptionCombo = "displayShortName"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_EXTERNAL_ACCESS     PropertyNamesCategoryOptionCombo = "externalAccess"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_FAVORITE            PropertyNamesCategoryOptionCombo = "favorite"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_FAVORITES           PropertyNamesCategoryOptionCombo = "favorites"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_FORM_NAME           PropertyNamesCategoryOptionCombo = "formName"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_HREF                PropertyNamesCategoryOptionCombo = "href"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_ID                  PropertyNamesCategoryOptionCombo = "id"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_IGNORE_APPROVAL     PropertyNamesCategoryOptionCombo = "ignoreApproval"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_LAST_UPDATED        PropertyNamesCategoryOptionCombo = "lastUpdated"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_LAST_UPDATED_BY     PropertyNamesCategoryOptionCombo = "lastUpdatedBy"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_LEGEND_SET          PropertyNamesCategoryOptionCombo = "legendSet"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_LEGEND_SETS         PropertyNamesCategoryOptionCombo = "legendSets"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_PUBLIC_ACCESS       PropertyNamesCategoryOptionCombo = "publicAccess"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_QUERY_MODS          PropertyNamesCategoryOptionCombo = "queryMods"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_SHARING             PropertyNamesCategoryOptionCombo = "sharing"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_TRANSLATIONS        PropertyNamesCategoryOptionCombo = "translations"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_USER                PropertyNamesCategoryOptionCombo = "user"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_USER_ACCESSES       PropertyNamesCategoryOptionCombo = "userAccesses"
	PROPERTYNAMESCATEGORYOPTIONCOMBO_USER_GROUP_ACCESSES PropertyNamesCategoryOptionCombo = "userGroupAccesses"
)

// All allowed values of PropertyNamesCategoryOptionCombo enum
var AllowedPropertyNamesCategoryOptionComboEnumValues = []PropertyNamesCategoryOptionCombo{
	"access",
	"aggregationType",
	"attributeValues",
	"categoryCombo",
	"categoryOptions",
	"code",
	"created",
	"createdBy",
	"description",
	"dimensionItem",
	"dimensionItemType",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"externalAccess",
	"favorite",
	"favorites",
	"formName",
	"href",
	"id",
	"ignoreApproval",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"publicAccess",
	"queryMods",
	"sharing",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesCategoryOptionCombo) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesCategoryOptionCombo(value)
	for _, existing := range AllowedPropertyNamesCategoryOptionComboEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesCategoryOptionCombo", value)
}

// NewPropertyNamesCategoryOptionComboFromValue returns a pointer to a valid PropertyNamesCategoryOptionCombo
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesCategoryOptionComboFromValue(v string) (*PropertyNamesCategoryOptionCombo, error) {
	ev := PropertyNamesCategoryOptionCombo(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesCategoryOptionCombo: valid values are %v", v, AllowedPropertyNamesCategoryOptionComboEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesCategoryOptionCombo) IsValid() bool {
	for _, existing := range AllowedPropertyNamesCategoryOptionComboEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_CategoryOptionCombo value
func (v PropertyNamesCategoryOptionCombo) Ptr() *PropertyNamesCategoryOptionCombo {
	return &v
}

type NullablePropertyNamesCategoryOptionCombo struct {
	value *PropertyNamesCategoryOptionCombo
	isSet bool
}

func (v NullablePropertyNamesCategoryOptionCombo) Get() *PropertyNamesCategoryOptionCombo {
	return v.value
}

func (v *NullablePropertyNamesCategoryOptionCombo) Set(val *PropertyNamesCategoryOptionCombo) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesCategoryOptionCombo) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesCategoryOptionCombo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesCategoryOptionCombo(val *PropertyNamesCategoryOptionCombo) *NullablePropertyNamesCategoryOptionCombo {
	return &NullablePropertyNamesCategoryOptionCombo{value: val, isSet: true}
}

func (v NullablePropertyNamesCategoryOptionCombo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesCategoryOptionCombo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
