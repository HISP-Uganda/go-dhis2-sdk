/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the TrackedEntityInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackedEntityInfo{}

// TrackedEntityInfo struct for TrackedEntityInfo
type TrackedEntityInfo struct {
	Attributes         []AttributeInfo         `json:"attributes,omitempty"`
	CreatedAt          *AttributeInfoCreatedAt `json:"createdAt,omitempty"`
	CreatedAtClient    *AttributeInfoCreatedAt `json:"createdAtClient,omitempty"`
	CreatedBy          *TrackerUser            `json:"createdBy,omitempty"`
	Deleted            *bool                   `json:"deleted,omitempty"`
	Enrollments        []EnrollmentInfo        `json:"enrollments,omitempty"`
	Geometry           map[string]interface{}  `json:"geometry,omitempty"`
	Inactive           *bool                   `json:"inactive,omitempty"`
	OrgUnit            *string                 `json:"orgUnit,omitempty"`
	PotentialDuplicate *bool                   `json:"potentialDuplicate,omitempty"`
	ProgramOwners      []ProgramOwnerInfo      `json:"programOwners,omitempty"`
	Relationships      []RelationshipInfo      `json:"relationships,omitempty"`
	StoredBy           *string                 `json:"storedBy,omitempty"`
	TrackedEntity      *string                 `json:"trackedEntity,omitempty"`
	TrackedEntityType  *string                 `json:"trackedEntityType,omitempty"`
	UpdatedAt          *AttributeInfoCreatedAt `json:"updatedAt,omitempty"`
	UpdatedAtClient    *AttributeInfoCreatedAt `json:"updatedAtClient,omitempty"`
	UpdatedBy          *TrackerUser            `json:"updatedBy,omitempty"`
}

// NewTrackedEntityInfo instantiates a new TrackedEntityInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackedEntityInfo() *TrackedEntityInfo {
	this := TrackedEntityInfo{}
	return &this
}

// NewTrackedEntityInfoWithDefaults instantiates a new TrackedEntityInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackedEntityInfoWithDefaults() *TrackedEntityInfo {
	this := TrackedEntityInfo{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetAttributes() []AttributeInfo {
	if o == nil || IsNil(o.Attributes) {
		var ret []AttributeInfo
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetAttributesOk() ([]AttributeInfo, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []AttributeInfo and assigns it to the Attributes field.
func (o *TrackedEntityInfo) SetAttributes(v []AttributeInfo) {
	o.Attributes = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetCreatedAt() AttributeInfoCreatedAt {
	if o == nil || IsNil(o.CreatedAt) {
		var ret AttributeInfoCreatedAt
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetCreatedAtOk() (*AttributeInfoCreatedAt, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given AttributeInfoCreatedAt and assigns it to the CreatedAt field.
func (o *TrackedEntityInfo) SetCreatedAt(v AttributeInfoCreatedAt) {
	o.CreatedAt = &v
}

// GetCreatedAtClient returns the CreatedAtClient field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetCreatedAtClient() AttributeInfoCreatedAt {
	if o == nil || IsNil(o.CreatedAtClient) {
		var ret AttributeInfoCreatedAt
		return ret
	}
	return *o.CreatedAtClient
}

// GetCreatedAtClientOk returns a tuple with the CreatedAtClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetCreatedAtClientOk() (*AttributeInfoCreatedAt, bool) {
	if o == nil || IsNil(o.CreatedAtClient) {
		return nil, false
	}
	return o.CreatedAtClient, true
}

// HasCreatedAtClient returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasCreatedAtClient() bool {
	if o != nil && !IsNil(o.CreatedAtClient) {
		return true
	}

	return false
}

// SetCreatedAtClient gets a reference to the given AttributeInfoCreatedAt and assigns it to the CreatedAtClient field.
func (o *TrackedEntityInfo) SetCreatedAtClient(v AttributeInfoCreatedAt) {
	o.CreatedAtClient = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetCreatedBy() TrackerUser {
	if o == nil || IsNil(o.CreatedBy) {
		var ret TrackerUser
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetCreatedByOk() (*TrackerUser, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given TrackerUser and assigns it to the CreatedBy field.
func (o *TrackedEntityInfo) SetCreatedBy(v TrackerUser) {
	o.CreatedBy = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *TrackedEntityInfo) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetEnrollments returns the Enrollments field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetEnrollments() []EnrollmentInfo {
	if o == nil || IsNil(o.Enrollments) {
		var ret []EnrollmentInfo
		return ret
	}
	return o.Enrollments
}

// GetEnrollmentsOk returns a tuple with the Enrollments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetEnrollmentsOk() ([]EnrollmentInfo, bool) {
	if o == nil || IsNil(o.Enrollments) {
		return nil, false
	}
	return o.Enrollments, true
}

// HasEnrollments returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasEnrollments() bool {
	if o != nil && !IsNil(o.Enrollments) {
		return true
	}

	return false
}

// SetEnrollments gets a reference to the given []EnrollmentInfo and assigns it to the Enrollments field.
func (o *TrackedEntityInfo) SetEnrollments(v []EnrollmentInfo) {
	o.Enrollments = v
}

// GetGeometry returns the Geometry field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetGeometry() map[string]interface{} {
	if o == nil || IsNil(o.Geometry) {
		var ret map[string]interface{}
		return ret
	}
	return o.Geometry
}

// GetGeometryOk returns a tuple with the Geometry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetGeometryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Geometry) {
		return map[string]interface{}{}, false
	}
	return o.Geometry, true
}

// HasGeometry returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasGeometry() bool {
	if o != nil && !IsNil(o.Geometry) {
		return true
	}

	return false
}

// SetGeometry gets a reference to the given map[string]interface{} and assigns it to the Geometry field.
func (o *TrackedEntityInfo) SetGeometry(v map[string]interface{}) {
	o.Geometry = v
}

// GetInactive returns the Inactive field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetInactive() bool {
	if o == nil || IsNil(o.Inactive) {
		var ret bool
		return ret
	}
	return *o.Inactive
}

// GetInactiveOk returns a tuple with the Inactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetInactiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Inactive) {
		return nil, false
	}
	return o.Inactive, true
}

// HasInactive returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasInactive() bool {
	if o != nil && !IsNil(o.Inactive) {
		return true
	}

	return false
}

// SetInactive gets a reference to the given bool and assigns it to the Inactive field.
func (o *TrackedEntityInfo) SetInactive(v bool) {
	o.Inactive = &v
}

// GetOrgUnit returns the OrgUnit field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetOrgUnit() string {
	if o == nil || IsNil(o.OrgUnit) {
		var ret string
		return ret
	}
	return *o.OrgUnit
}

// GetOrgUnitOk returns a tuple with the OrgUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetOrgUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OrgUnit) {
		return nil, false
	}
	return o.OrgUnit, true
}

// HasOrgUnit returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasOrgUnit() bool {
	if o != nil && !IsNil(o.OrgUnit) {
		return true
	}

	return false
}

// SetOrgUnit gets a reference to the given string and assigns it to the OrgUnit field.
func (o *TrackedEntityInfo) SetOrgUnit(v string) {
	o.OrgUnit = &v
}

// GetPotentialDuplicate returns the PotentialDuplicate field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetPotentialDuplicate() bool {
	if o == nil || IsNil(o.PotentialDuplicate) {
		var ret bool
		return ret
	}
	return *o.PotentialDuplicate
}

// GetPotentialDuplicateOk returns a tuple with the PotentialDuplicate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetPotentialDuplicateOk() (*bool, bool) {
	if o == nil || IsNil(o.PotentialDuplicate) {
		return nil, false
	}
	return o.PotentialDuplicate, true
}

// HasPotentialDuplicate returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasPotentialDuplicate() bool {
	if o != nil && !IsNil(o.PotentialDuplicate) {
		return true
	}

	return false
}

// SetPotentialDuplicate gets a reference to the given bool and assigns it to the PotentialDuplicate field.
func (o *TrackedEntityInfo) SetPotentialDuplicate(v bool) {
	o.PotentialDuplicate = &v
}

// GetProgramOwners returns the ProgramOwners field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetProgramOwners() []ProgramOwnerInfo {
	if o == nil || IsNil(o.ProgramOwners) {
		var ret []ProgramOwnerInfo
		return ret
	}
	return o.ProgramOwners
}

// GetProgramOwnersOk returns a tuple with the ProgramOwners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetProgramOwnersOk() ([]ProgramOwnerInfo, bool) {
	if o == nil || IsNil(o.ProgramOwners) {
		return nil, false
	}
	return o.ProgramOwners, true
}

// HasProgramOwners returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasProgramOwners() bool {
	if o != nil && !IsNil(o.ProgramOwners) {
		return true
	}

	return false
}

// SetProgramOwners gets a reference to the given []ProgramOwnerInfo and assigns it to the ProgramOwners field.
func (o *TrackedEntityInfo) SetProgramOwners(v []ProgramOwnerInfo) {
	o.ProgramOwners = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetRelationships() []RelationshipInfo {
	if o == nil || IsNil(o.Relationships) {
		var ret []RelationshipInfo
		return ret
	}
	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetRelationshipsOk() ([]RelationshipInfo, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given []RelationshipInfo and assigns it to the Relationships field.
func (o *TrackedEntityInfo) SetRelationships(v []RelationshipInfo) {
	o.Relationships = v
}

// GetStoredBy returns the StoredBy field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetStoredBy() string {
	if o == nil || IsNil(o.StoredBy) {
		var ret string
		return ret
	}
	return *o.StoredBy
}

// GetStoredByOk returns a tuple with the StoredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetStoredByOk() (*string, bool) {
	if o == nil || IsNil(o.StoredBy) {
		return nil, false
	}
	return o.StoredBy, true
}

// HasStoredBy returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasStoredBy() bool {
	if o != nil && !IsNil(o.StoredBy) {
		return true
	}

	return false
}

// SetStoredBy gets a reference to the given string and assigns it to the StoredBy field.
func (o *TrackedEntityInfo) SetStoredBy(v string) {
	o.StoredBy = &v
}

// GetTrackedEntity returns the TrackedEntity field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetTrackedEntity() string {
	if o == nil || IsNil(o.TrackedEntity) {
		var ret string
		return ret
	}
	return *o.TrackedEntity
}

// GetTrackedEntityOk returns a tuple with the TrackedEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetTrackedEntityOk() (*string, bool) {
	if o == nil || IsNil(o.TrackedEntity) {
		return nil, false
	}
	return o.TrackedEntity, true
}

// HasTrackedEntity returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasTrackedEntity() bool {
	if o != nil && !IsNil(o.TrackedEntity) {
		return true
	}

	return false
}

// SetTrackedEntity gets a reference to the given string and assigns it to the TrackedEntity field.
func (o *TrackedEntityInfo) SetTrackedEntity(v string) {
	o.TrackedEntity = &v
}

// GetTrackedEntityType returns the TrackedEntityType field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetTrackedEntityType() string {
	if o == nil || IsNil(o.TrackedEntityType) {
		var ret string
		return ret
	}
	return *o.TrackedEntityType
}

// GetTrackedEntityTypeOk returns a tuple with the TrackedEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetTrackedEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TrackedEntityType) {
		return nil, false
	}
	return o.TrackedEntityType, true
}

// HasTrackedEntityType returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasTrackedEntityType() bool {
	if o != nil && !IsNil(o.TrackedEntityType) {
		return true
	}

	return false
}

// SetTrackedEntityType gets a reference to the given string and assigns it to the TrackedEntityType field.
func (o *TrackedEntityInfo) SetTrackedEntityType(v string) {
	o.TrackedEntityType = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetUpdatedAt() AttributeInfoCreatedAt {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret AttributeInfoCreatedAt
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetUpdatedAtOk() (*AttributeInfoCreatedAt, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given AttributeInfoCreatedAt and assigns it to the UpdatedAt field.
func (o *TrackedEntityInfo) SetUpdatedAt(v AttributeInfoCreatedAt) {
	o.UpdatedAt = &v
}

// GetUpdatedAtClient returns the UpdatedAtClient field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetUpdatedAtClient() AttributeInfoCreatedAt {
	if o == nil || IsNil(o.UpdatedAtClient) {
		var ret AttributeInfoCreatedAt
		return ret
	}
	return *o.UpdatedAtClient
}

// GetUpdatedAtClientOk returns a tuple with the UpdatedAtClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetUpdatedAtClientOk() (*AttributeInfoCreatedAt, bool) {
	if o == nil || IsNil(o.UpdatedAtClient) {
		return nil, false
	}
	return o.UpdatedAtClient, true
}

// HasUpdatedAtClient returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasUpdatedAtClient() bool {
	if o != nil && !IsNil(o.UpdatedAtClient) {
		return true
	}

	return false
}

// SetUpdatedAtClient gets a reference to the given AttributeInfoCreatedAt and assigns it to the UpdatedAtClient field.
func (o *TrackedEntityInfo) SetUpdatedAtClient(v AttributeInfoCreatedAt) {
	o.UpdatedAtClient = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *TrackedEntityInfo) GetUpdatedBy() TrackerUser {
	if o == nil || IsNil(o.UpdatedBy) {
		var ret TrackerUser
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityInfo) GetUpdatedByOk() (*TrackerUser, bool) {
	if o == nil || IsNil(o.UpdatedBy) {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *TrackedEntityInfo) HasUpdatedBy() bool {
	if o != nil && !IsNil(o.UpdatedBy) {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given TrackerUser and assigns it to the UpdatedBy field.
func (o *TrackedEntityInfo) SetUpdatedBy(v TrackerUser) {
	o.UpdatedBy = &v
}

func (o TrackedEntityInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackedEntityInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CreatedAtClient) {
		toSerialize["createdAtClient"] = o.CreatedAtClient
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.Enrollments) {
		toSerialize["enrollments"] = o.Enrollments
	}
	if !IsNil(o.Geometry) {
		toSerialize["geometry"] = o.Geometry
	}
	if !IsNil(o.Inactive) {
		toSerialize["inactive"] = o.Inactive
	}
	if !IsNil(o.OrgUnit) {
		toSerialize["orgUnit"] = o.OrgUnit
	}
	if !IsNil(o.PotentialDuplicate) {
		toSerialize["potentialDuplicate"] = o.PotentialDuplicate
	}
	if !IsNil(o.ProgramOwners) {
		toSerialize["programOwners"] = o.ProgramOwners
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.StoredBy) {
		toSerialize["storedBy"] = o.StoredBy
	}
	if !IsNil(o.TrackedEntity) {
		toSerialize["trackedEntity"] = o.TrackedEntity
	}
	if !IsNil(o.TrackedEntityType) {
		toSerialize["trackedEntityType"] = o.TrackedEntityType
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.UpdatedAtClient) {
		toSerialize["updatedAtClient"] = o.UpdatedAtClient
	}
	if !IsNil(o.UpdatedBy) {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	return toSerialize, nil
}

type NullableTrackedEntityInfo struct {
	value *TrackedEntityInfo
	isSet bool
}

func (v NullableTrackedEntityInfo) Get() *TrackedEntityInfo {
	return v.value
}

func (v *NullableTrackedEntityInfo) Set(val *TrackedEntityInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackedEntityInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackedEntityInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackedEntityInfo(val *TrackedEntityInfo) *NullableTrackedEntityInfo {
	return &NullableTrackedEntityInfo{value: val, isSet: true}
}

func (v NullableTrackedEntityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackedEntityInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
