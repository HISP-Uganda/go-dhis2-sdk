/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GoogleAccessToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoogleAccessToken{}

// GoogleAccessToken struct for GoogleAccessToken
type GoogleAccessToken struct {
	AccessToken *string `json:"access_token,omitempty"`
	ClientId    *string `json:"client_id,omitempty"`
	ExpiresIn   int64   `json:"expires_in"`
}

type _GoogleAccessToken GoogleAccessToken

// NewGoogleAccessToken instantiates a new GoogleAccessToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoogleAccessToken(expiresIn int64) *GoogleAccessToken {
	this := GoogleAccessToken{}
	this.ExpiresIn = expiresIn
	return &this
}

// NewGoogleAccessTokenWithDefaults instantiates a new GoogleAccessToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoogleAccessTokenWithDefaults() *GoogleAccessToken {
	this := GoogleAccessToken{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *GoogleAccessToken) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleAccessToken) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *GoogleAccessToken) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *GoogleAccessToken) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *GoogleAccessToken) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoogleAccessToken) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *GoogleAccessToken) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *GoogleAccessToken) SetClientId(v string) {
	o.ClientId = &v
}

// GetExpiresIn returns the ExpiresIn field value
func (o *GoogleAccessToken) GetExpiresIn() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value
// and a boolean to check if the value has been set.
func (o *GoogleAccessToken) GetExpiresInOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresIn, true
}

// SetExpiresIn sets field value
func (o *GoogleAccessToken) SetExpiresIn(v int64) {
	o.ExpiresIn = v
}

func (o GoogleAccessToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoogleAccessToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["access_token"] = o.AccessToken
	}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	toSerialize["expires_in"] = o.ExpiresIn
	return toSerialize, nil
}

func (o *GoogleAccessToken) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"expires_in",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGoogleAccessToken := _GoogleAccessToken{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGoogleAccessToken)

	if err != nil {
		return err
	}

	*o = GoogleAccessToken(varGoogleAccessToken)

	return err
}

type NullableGoogleAccessToken struct {
	value *GoogleAccessToken
	isSet bool
}

func (v NullableGoogleAccessToken) Get() *GoogleAccessToken {
	return v.value
}

func (v *NullableGoogleAccessToken) Set(val *GoogleAccessToken) {
	v.value = val
	v.isSet = true
}

func (v NullableGoogleAccessToken) IsSet() bool {
	return v.isSet
}

func (v *NullableGoogleAccessToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoogleAccessToken(val *GoogleAccessToken) *NullableGoogleAccessToken {
	return &NullableGoogleAccessToken{value: val, isSet: true}
}

func (v NullableGoogleAccessToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoogleAccessToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
