/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ReportGetObjectListGistGetObjectListGistAsCsv200Response - struct for ReportGetObjectListGistGetObjectListGistAsCsv200Response
type ReportGetObjectListGistGetObjectListGistAsCsv200Response struct {
	ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfReport                                                 *[]Report
}

// ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsReportGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in ReportGetObjectListGistGetObjectListGistAsCsv200Response
func ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsReportGetObjectListGistGetObjectListGistAsCsv200Response(v *ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) ReportGetObjectListGistGetObjectListGistAsCsv200Response {
	return ReportGetObjectListGistGetObjectListGistAsCsv200Response{
		ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []ReportAsReportGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []Report wrapped in ReportGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfReportAsReportGetObjectListGistGetObjectListGistAsCsv200Response(v *[]Report) ReportGetObjectListGistGetObjectListGistAsCsv200Response {
	return ReportGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfReport: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ReportGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfReport
	err = newStrictDecoder(data).Decode(&dst.ArrayOfReport)
	if err == nil {
		jsonArrayOfReport, _ := json.Marshal(dst.ArrayOfReport)
		if string(jsonArrayOfReport) == "{}" { // empty struct
			dst.ArrayOfReport = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfReport = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfReport = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ReportGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ReportGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ReportGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfReport != nil {
		return json.Marshal(&src.ArrayOfReport)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ReportGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.ReportGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfReport != nil {
		return obj.ArrayOfReport
	}

	// all schemas are nil
	return nil
}

type NullableReportGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *ReportGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableReportGetObjectListGistGetObjectListGistAsCsv200Response) Get() *ReportGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableReportGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *ReportGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableReportGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableReportGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportGetObjectListGistGetObjectListGistAsCsv200Response(val *ReportGetObjectListGistGetObjectListGistAsCsv200Response) *NullableReportGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableReportGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableReportGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
