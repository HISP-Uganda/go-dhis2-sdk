/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// OutboundMessageBatchStatus the model 'OutboundMessageBatchStatus'
type OutboundMessageBatchStatus string

// List of OutboundMessageBatchStatus
const (
	OUTBOUNDMESSAGEBATCHSTATUS_COMPLETED OutboundMessageBatchStatus = "COMPLETED"
	OUTBOUNDMESSAGEBATCHSTATUS_FAILED    OutboundMessageBatchStatus = "FAILED"
	OUTBOUNDMESSAGEBATCHSTATUS_PENDING   OutboundMessageBatchStatus = "PENDING"
	OUTBOUNDMESSAGEBATCHSTATUS_ABORTED   OutboundMessageBatchStatus = "ABORTED"
)

// All allowed values of OutboundMessageBatchStatus enum
var AllowedOutboundMessageBatchStatusEnumValues = []OutboundMessageBatchStatus{
	"COMPLETED",
	"FAILED",
	"PENDING",
	"ABORTED",
}

func (v *OutboundMessageBatchStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OutboundMessageBatchStatus(value)
	for _, existing := range AllowedOutboundMessageBatchStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OutboundMessageBatchStatus", value)
}

// NewOutboundMessageBatchStatusFromValue returns a pointer to a valid OutboundMessageBatchStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOutboundMessageBatchStatusFromValue(v string) (*OutboundMessageBatchStatus, error) {
	ev := OutboundMessageBatchStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OutboundMessageBatchStatus: valid values are %v", v, AllowedOutboundMessageBatchStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OutboundMessageBatchStatus) IsValid() bool {
	for _, existing := range AllowedOutboundMessageBatchStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OutboundMessageBatchStatus value
func (v OutboundMessageBatchStatus) Ptr() *OutboundMessageBatchStatus {
	return &v
}

type NullableOutboundMessageBatchStatus struct {
	value *OutboundMessageBatchStatus
	isSet bool
}

func (v NullableOutboundMessageBatchStatus) Get() *OutboundMessageBatchStatus {
	return v.value
}

func (v *NullableOutboundMessageBatchStatus) Set(val *OutboundMessageBatchStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableOutboundMessageBatchStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableOutboundMessageBatchStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutboundMessageBatchStatus(val *OutboundMessageBatchStatus) *NullableOutboundMessageBatchStatus {
	return &NullableOutboundMessageBatchStatus{value: val, isSet: true}
}

func (v NullableOutboundMessageBatchStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutboundMessageBatchStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
