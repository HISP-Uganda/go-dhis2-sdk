/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ValidationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidationResult{}

// ValidationResult struct for ValidationResult
type ValidationResult struct {
	AttributeOptionCombo *BaseIdentifiableObject `json:"attributeOptionCombo,omitempty"`
	Created              *time.Time              `json:"created,omitempty"`
	DayInPeriod          int32                   `json:"dayInPeriod"`
	Id                   int64                   `json:"id"`
	LeftsideValue        *float64                `json:"leftsideValue,omitempty"`
	NotificationSent     *bool                   `json:"notificationSent,omitempty"`
	OrganisationUnit     *BaseIdentifiableObject `json:"organisationUnit,omitempty"`
	Period               *BaseIdentifiableObject `json:"period,omitempty"`
	RightsideValue       *float64                `json:"rightsideValue,omitempty"`
	ValidationRule       *BaseIdentifiableObject `json:"validationRule,omitempty"`
}

type _ValidationResult ValidationResult

// NewValidationResult instantiates a new ValidationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidationResult(dayInPeriod int32, id int64) *ValidationResult {
	this := ValidationResult{}
	this.DayInPeriod = dayInPeriod
	this.Id = id
	return &this
}

// NewValidationResultWithDefaults instantiates a new ValidationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidationResultWithDefaults() *ValidationResult {
	this := ValidationResult{}
	return &this
}

// GetAttributeOptionCombo returns the AttributeOptionCombo field value if set, zero value otherwise.
func (o *ValidationResult) GetAttributeOptionCombo() BaseIdentifiableObject {
	if o == nil || IsNil(o.AttributeOptionCombo) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.AttributeOptionCombo
}

// GetAttributeOptionComboOk returns a tuple with the AttributeOptionCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResult) GetAttributeOptionComboOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.AttributeOptionCombo) {
		return nil, false
	}
	return o.AttributeOptionCombo, true
}

// HasAttributeOptionCombo returns a boolean if a field has been set.
func (o *ValidationResult) HasAttributeOptionCombo() bool {
	if o != nil && !IsNil(o.AttributeOptionCombo) {
		return true
	}

	return false
}

// SetAttributeOptionCombo gets a reference to the given BaseIdentifiableObject and assigns it to the AttributeOptionCombo field.
func (o *ValidationResult) SetAttributeOptionCombo(v BaseIdentifiableObject) {
	o.AttributeOptionCombo = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ValidationResult) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResult) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ValidationResult) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ValidationResult) SetCreated(v time.Time) {
	o.Created = &v
}

// GetDayInPeriod returns the DayInPeriod field value
func (o *ValidationResult) GetDayInPeriod() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DayInPeriod
}

// GetDayInPeriodOk returns a tuple with the DayInPeriod field value
// and a boolean to check if the value has been set.
func (o *ValidationResult) GetDayInPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DayInPeriod, true
}

// SetDayInPeriod sets field value
func (o *ValidationResult) SetDayInPeriod(v int32) {
	o.DayInPeriod = v
}

// GetId returns the Id field value
func (o *ValidationResult) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ValidationResult) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ValidationResult) SetId(v int64) {
	o.Id = v
}

// GetLeftsideValue returns the LeftsideValue field value if set, zero value otherwise.
func (o *ValidationResult) GetLeftsideValue() float64 {
	if o == nil || IsNil(o.LeftsideValue) {
		var ret float64
		return ret
	}
	return *o.LeftsideValue
}

// GetLeftsideValueOk returns a tuple with the LeftsideValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResult) GetLeftsideValueOk() (*float64, bool) {
	if o == nil || IsNil(o.LeftsideValue) {
		return nil, false
	}
	return o.LeftsideValue, true
}

// HasLeftsideValue returns a boolean if a field has been set.
func (o *ValidationResult) HasLeftsideValue() bool {
	if o != nil && !IsNil(o.LeftsideValue) {
		return true
	}

	return false
}

// SetLeftsideValue gets a reference to the given float64 and assigns it to the LeftsideValue field.
func (o *ValidationResult) SetLeftsideValue(v float64) {
	o.LeftsideValue = &v
}

// GetNotificationSent returns the NotificationSent field value if set, zero value otherwise.
func (o *ValidationResult) GetNotificationSent() bool {
	if o == nil || IsNil(o.NotificationSent) {
		var ret bool
		return ret
	}
	return *o.NotificationSent
}

// GetNotificationSentOk returns a tuple with the NotificationSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResult) GetNotificationSentOk() (*bool, bool) {
	if o == nil || IsNil(o.NotificationSent) {
		return nil, false
	}
	return o.NotificationSent, true
}

// HasNotificationSent returns a boolean if a field has been set.
func (o *ValidationResult) HasNotificationSent() bool {
	if o != nil && !IsNil(o.NotificationSent) {
		return true
	}

	return false
}

// SetNotificationSent gets a reference to the given bool and assigns it to the NotificationSent field.
func (o *ValidationResult) SetNotificationSent(v bool) {
	o.NotificationSent = &v
}

// GetOrganisationUnit returns the OrganisationUnit field value if set, zero value otherwise.
func (o *ValidationResult) GetOrganisationUnit() BaseIdentifiableObject {
	if o == nil || IsNil(o.OrganisationUnit) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.OrganisationUnit
}

// GetOrganisationUnitOk returns a tuple with the OrganisationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResult) GetOrganisationUnitOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.OrganisationUnit) {
		return nil, false
	}
	return o.OrganisationUnit, true
}

// HasOrganisationUnit returns a boolean if a field has been set.
func (o *ValidationResult) HasOrganisationUnit() bool {
	if o != nil && !IsNil(o.OrganisationUnit) {
		return true
	}

	return false
}

// SetOrganisationUnit gets a reference to the given BaseIdentifiableObject and assigns it to the OrganisationUnit field.
func (o *ValidationResult) SetOrganisationUnit(v BaseIdentifiableObject) {
	o.OrganisationUnit = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *ValidationResult) GetPeriod() BaseIdentifiableObject {
	if o == nil || IsNil(o.Period) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResult) GetPeriodOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *ValidationResult) HasPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given BaseIdentifiableObject and assigns it to the Period field.
func (o *ValidationResult) SetPeriod(v BaseIdentifiableObject) {
	o.Period = &v
}

// GetRightsideValue returns the RightsideValue field value if set, zero value otherwise.
func (o *ValidationResult) GetRightsideValue() float64 {
	if o == nil || IsNil(o.RightsideValue) {
		var ret float64
		return ret
	}
	return *o.RightsideValue
}

// GetRightsideValueOk returns a tuple with the RightsideValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResult) GetRightsideValueOk() (*float64, bool) {
	if o == nil || IsNil(o.RightsideValue) {
		return nil, false
	}
	return o.RightsideValue, true
}

// HasRightsideValue returns a boolean if a field has been set.
func (o *ValidationResult) HasRightsideValue() bool {
	if o != nil && !IsNil(o.RightsideValue) {
		return true
	}

	return false
}

// SetRightsideValue gets a reference to the given float64 and assigns it to the RightsideValue field.
func (o *ValidationResult) SetRightsideValue(v float64) {
	o.RightsideValue = &v
}

// GetValidationRule returns the ValidationRule field value if set, zero value otherwise.
func (o *ValidationResult) GetValidationRule() BaseIdentifiableObject {
	if o == nil || IsNil(o.ValidationRule) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.ValidationRule
}

// GetValidationRuleOk returns a tuple with the ValidationRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidationResult) GetValidationRuleOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.ValidationRule) {
		return nil, false
	}
	return o.ValidationRule, true
}

// HasValidationRule returns a boolean if a field has been set.
func (o *ValidationResult) HasValidationRule() bool {
	if o != nil && !IsNil(o.ValidationRule) {
		return true
	}

	return false
}

// SetValidationRule gets a reference to the given BaseIdentifiableObject and assigns it to the ValidationRule field.
func (o *ValidationResult) SetValidationRule(v BaseIdentifiableObject) {
	o.ValidationRule = &v
}

func (o ValidationResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeOptionCombo) {
		toSerialize["attributeOptionCombo"] = o.AttributeOptionCombo
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	toSerialize["dayInPeriod"] = o.DayInPeriod
	toSerialize["id"] = o.Id
	if !IsNil(o.LeftsideValue) {
		toSerialize["leftsideValue"] = o.LeftsideValue
	}
	if !IsNil(o.NotificationSent) {
		toSerialize["notificationSent"] = o.NotificationSent
	}
	if !IsNil(o.OrganisationUnit) {
		toSerialize["organisationUnit"] = o.OrganisationUnit
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !IsNil(o.RightsideValue) {
		toSerialize["rightsideValue"] = o.RightsideValue
	}
	if !IsNil(o.ValidationRule) {
		toSerialize["validationRule"] = o.ValidationRule
	}
	return toSerialize, nil
}

func (o *ValidationResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dayInPeriod",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varValidationResult := _ValidationResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varValidationResult)

	if err != nil {
		return err
	}

	*o = ValidationResult(varValidationResult)

	return err
}

type NullableValidationResult struct {
	value *ValidationResult
	isSet bool
}

func (v NullableValidationResult) Get() *ValidationResult {
	return v.value
}

func (v *NullableValidationResult) Set(val *ValidationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableValidationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableValidationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidationResult(val *ValidationResult) *NullableValidationResult {
	return &NullableValidationResult{value: val, isSet: true}
}

func (v NullableValidationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
