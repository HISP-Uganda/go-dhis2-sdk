/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the TrackerNoteParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackerNoteParams{}

// TrackerNoteParams struct for TrackerNoteParams
type TrackerNoteParams struct {
	CreatedBy *AggregateDataExchangeParamsCreatedBy `json:"createdBy,omitempty"`
	// A UID for an Note object   (Java name `org.hisp.dhis.note.Note`)
	Note     *string  `json:"note,omitempty"`
	StoredAt *Instant `json:"storedAt,omitempty"`
	StoredBy *string  `json:"storedBy,omitempty"`
	Value    *string  `json:"value,omitempty"`
}

// NewTrackerNoteParams instantiates a new TrackerNoteParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackerNoteParams() *TrackerNoteParams {
	this := TrackerNoteParams{}
	return &this
}

// NewTrackerNoteParamsWithDefaults instantiates a new TrackerNoteParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackerNoteParamsWithDefaults() *TrackerNoteParams {
	this := TrackerNoteParams{}
	return &this
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *TrackerNoteParams) GetCreatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerNoteParams) GetCreatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *TrackerNoteParams) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the CreatedBy field.
func (o *TrackerNoteParams) SetCreatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.CreatedBy = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *TrackerNoteParams) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerNoteParams) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *TrackerNoteParams) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *TrackerNoteParams) SetNote(v string) {
	o.Note = &v
}

// GetStoredAt returns the StoredAt field value if set, zero value otherwise.
func (o *TrackerNoteParams) GetStoredAt() Instant {
	if o == nil || IsNil(o.StoredAt) {
		var ret Instant
		return ret
	}
	return *o.StoredAt
}

// GetStoredAtOk returns a tuple with the StoredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerNoteParams) GetStoredAtOk() (*Instant, bool) {
	if o == nil || IsNil(o.StoredAt) {
		return nil, false
	}
	return o.StoredAt, true
}

// HasStoredAt returns a boolean if a field has been set.
func (o *TrackerNoteParams) HasStoredAt() bool {
	if o != nil && !IsNil(o.StoredAt) {
		return true
	}

	return false
}

// SetStoredAt gets a reference to the given Instant and assigns it to the StoredAt field.
func (o *TrackerNoteParams) SetStoredAt(v Instant) {
	o.StoredAt = &v
}

// GetStoredBy returns the StoredBy field value if set, zero value otherwise.
func (o *TrackerNoteParams) GetStoredBy() string {
	if o == nil || IsNil(o.StoredBy) {
		var ret string
		return ret
	}
	return *o.StoredBy
}

// GetStoredByOk returns a tuple with the StoredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerNoteParams) GetStoredByOk() (*string, bool) {
	if o == nil || IsNil(o.StoredBy) {
		return nil, false
	}
	return o.StoredBy, true
}

// HasStoredBy returns a boolean if a field has been set.
func (o *TrackerNoteParams) HasStoredBy() bool {
	if o != nil && !IsNil(o.StoredBy) {
		return true
	}

	return false
}

// SetStoredBy gets a reference to the given string and assigns it to the StoredBy field.
func (o *TrackerNoteParams) SetStoredBy(v string) {
	o.StoredBy = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TrackerNoteParams) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerNoteParams) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TrackerNoteParams) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *TrackerNoteParams) SetValue(v string) {
	o.Value = &v
}

func (o TrackerNoteParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackerNoteParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.StoredAt) {
		toSerialize["storedAt"] = o.StoredAt
	}
	if !IsNil(o.StoredBy) {
		toSerialize["storedBy"] = o.StoredBy
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableTrackerNoteParams struct {
	value *TrackerNoteParams
	isSet bool
}

func (v NullableTrackerNoteParams) Get() *TrackerNoteParams {
	return v.value
}

func (v *NullableTrackerNoteParams) Set(val *TrackerNoteParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackerNoteParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackerNoteParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackerNoteParams(val *TrackerNoteParams) *NullableTrackerNoteParams {
	return &NullableTrackerNoteParams{value: val, isSet: true}
}

func (v NullableTrackerNoteParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackerNoteParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
