/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the RemoveOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoveOperation{}

// RemoveOperation struct for RemoveOperation
type RemoveOperation struct {
	Op   *string `json:"op,omitempty"`
	Path *string `json:"path,omitempty"`
}

// NewRemoveOperation instantiates a new RemoveOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveOperation() *RemoveOperation {
	this := RemoveOperation{}
	return &this
}

// NewRemoveOperationWithDefaults instantiates a new RemoveOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveOperationWithDefaults() *RemoveOperation {
	this := RemoveOperation{}
	return &this
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *RemoveOperation) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveOperation) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *RemoveOperation) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *RemoveOperation) SetOp(v string) {
	o.Op = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *RemoveOperation) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoveOperation) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *RemoveOperation) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *RemoveOperation) SetPath(v string) {
	o.Path = &v
}

func (o RemoveOperation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoveOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	return toSerialize, nil
}

type NullableRemoveOperation struct {
	value *RemoveOperation
	isSet bool
}

func (v NullableRemoveOperation) Get() *RemoveOperation {
	return v.value
}

func (v *NullableRemoveOperation) Set(val *RemoveOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveOperation(val *RemoveOperation) *NullableRemoveOperation {
	return &NullableRemoveOperation{value: val, isSet: true}
}

func (v NullableRemoveOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
