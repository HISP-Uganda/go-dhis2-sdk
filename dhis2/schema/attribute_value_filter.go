/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the AttributeValueFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeValueFilter{}

// AttributeValueFilter struct for AttributeValueFilter
type AttributeValueFilter struct {
	Attribute  *string           `json:"attribute,omitempty"`
	DateFilter *DateFilterPeriod `json:"dateFilter,omitempty"`
	Eq         *string           `json:"eq,omitempty"`
	Ew         *string           `json:"ew,omitempty"`
	Ge         *string           `json:"ge,omitempty"`
	Gt         *string           `json:"gt,omitempty"`
	In         []string          `json:"in,omitempty"`
	Le         *string           `json:"le,omitempty"`
	Like       *string           `json:"like,omitempty"`
	Lt         *string           `json:"lt,omitempty"`
	Sw         *string           `json:"sw,omitempty"`
}

// NewAttributeValueFilter instantiates a new AttributeValueFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeValueFilter() *AttributeValueFilter {
	this := AttributeValueFilter{}
	return &this
}

// NewAttributeValueFilterWithDefaults instantiates a new AttributeValueFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeValueFilterWithDefaults() *AttributeValueFilter {
	this := AttributeValueFilter{}
	return &this
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetAttribute() string {
	if o == nil || IsNil(o.Attribute) {
		var ret string
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.Attribute) {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasAttribute() bool {
	if o != nil && !IsNil(o.Attribute) {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given string and assigns it to the Attribute field.
func (o *AttributeValueFilter) SetAttribute(v string) {
	o.Attribute = &v
}

// GetDateFilter returns the DateFilter field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetDateFilter() DateFilterPeriod {
	if o == nil || IsNil(o.DateFilter) {
		var ret DateFilterPeriod
		return ret
	}
	return *o.DateFilter
}

// GetDateFilterOk returns a tuple with the DateFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetDateFilterOk() (*DateFilterPeriod, bool) {
	if o == nil || IsNil(o.DateFilter) {
		return nil, false
	}
	return o.DateFilter, true
}

// HasDateFilter returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasDateFilter() bool {
	if o != nil && !IsNil(o.DateFilter) {
		return true
	}

	return false
}

// SetDateFilter gets a reference to the given DateFilterPeriod and assigns it to the DateFilter field.
func (o *AttributeValueFilter) SetDateFilter(v DateFilterPeriod) {
	o.DateFilter = &v
}

// GetEq returns the Eq field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetEq() string {
	if o == nil || IsNil(o.Eq) {
		var ret string
		return ret
	}
	return *o.Eq
}

// GetEqOk returns a tuple with the Eq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetEqOk() (*string, bool) {
	if o == nil || IsNil(o.Eq) {
		return nil, false
	}
	return o.Eq, true
}

// HasEq returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasEq() bool {
	if o != nil && !IsNil(o.Eq) {
		return true
	}

	return false
}

// SetEq gets a reference to the given string and assigns it to the Eq field.
func (o *AttributeValueFilter) SetEq(v string) {
	o.Eq = &v
}

// GetEw returns the Ew field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetEw() string {
	if o == nil || IsNil(o.Ew) {
		var ret string
		return ret
	}
	return *o.Ew
}

// GetEwOk returns a tuple with the Ew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetEwOk() (*string, bool) {
	if o == nil || IsNil(o.Ew) {
		return nil, false
	}
	return o.Ew, true
}

// HasEw returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasEw() bool {
	if o != nil && !IsNil(o.Ew) {
		return true
	}

	return false
}

// SetEw gets a reference to the given string and assigns it to the Ew field.
func (o *AttributeValueFilter) SetEw(v string) {
	o.Ew = &v
}

// GetGe returns the Ge field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetGe() string {
	if o == nil || IsNil(o.Ge) {
		var ret string
		return ret
	}
	return *o.Ge
}

// GetGeOk returns a tuple with the Ge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetGeOk() (*string, bool) {
	if o == nil || IsNil(o.Ge) {
		return nil, false
	}
	return o.Ge, true
}

// HasGe returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasGe() bool {
	if o != nil && !IsNil(o.Ge) {
		return true
	}

	return false
}

// SetGe gets a reference to the given string and assigns it to the Ge field.
func (o *AttributeValueFilter) SetGe(v string) {
	o.Ge = &v
}

// GetGt returns the Gt field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetGt() string {
	if o == nil || IsNil(o.Gt) {
		var ret string
		return ret
	}
	return *o.Gt
}

// GetGtOk returns a tuple with the Gt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetGtOk() (*string, bool) {
	if o == nil || IsNil(o.Gt) {
		return nil, false
	}
	return o.Gt, true
}

// HasGt returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasGt() bool {
	if o != nil && !IsNil(o.Gt) {
		return true
	}

	return false
}

// SetGt gets a reference to the given string and assigns it to the Gt field.
func (o *AttributeValueFilter) SetGt(v string) {
	o.Gt = &v
}

// GetIn returns the In field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetIn() []string {
	if o == nil || IsNil(o.In) {
		var ret []string
		return ret
	}
	return o.In
}

// GetInOk returns a tuple with the In field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetInOk() ([]string, bool) {
	if o == nil || IsNil(o.In) {
		return nil, false
	}
	return o.In, true
}

// HasIn returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasIn() bool {
	if o != nil && !IsNil(o.In) {
		return true
	}

	return false
}

// SetIn gets a reference to the given []string and assigns it to the In field.
func (o *AttributeValueFilter) SetIn(v []string) {
	o.In = v
}

// GetLe returns the Le field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetLe() string {
	if o == nil || IsNil(o.Le) {
		var ret string
		return ret
	}
	return *o.Le
}

// GetLeOk returns a tuple with the Le field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetLeOk() (*string, bool) {
	if o == nil || IsNil(o.Le) {
		return nil, false
	}
	return o.Le, true
}

// HasLe returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasLe() bool {
	if o != nil && !IsNil(o.Le) {
		return true
	}

	return false
}

// SetLe gets a reference to the given string and assigns it to the Le field.
func (o *AttributeValueFilter) SetLe(v string) {
	o.Le = &v
}

// GetLike returns the Like field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetLike() string {
	if o == nil || IsNil(o.Like) {
		var ret string
		return ret
	}
	return *o.Like
}

// GetLikeOk returns a tuple with the Like field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetLikeOk() (*string, bool) {
	if o == nil || IsNil(o.Like) {
		return nil, false
	}
	return o.Like, true
}

// HasLike returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasLike() bool {
	if o != nil && !IsNil(o.Like) {
		return true
	}

	return false
}

// SetLike gets a reference to the given string and assigns it to the Like field.
func (o *AttributeValueFilter) SetLike(v string) {
	o.Like = &v
}

// GetLt returns the Lt field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetLt() string {
	if o == nil || IsNil(o.Lt) {
		var ret string
		return ret
	}
	return *o.Lt
}

// GetLtOk returns a tuple with the Lt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetLtOk() (*string, bool) {
	if o == nil || IsNil(o.Lt) {
		return nil, false
	}
	return o.Lt, true
}

// HasLt returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasLt() bool {
	if o != nil && !IsNil(o.Lt) {
		return true
	}

	return false
}

// SetLt gets a reference to the given string and assigns it to the Lt field.
func (o *AttributeValueFilter) SetLt(v string) {
	o.Lt = &v
}

// GetSw returns the Sw field value if set, zero value otherwise.
func (o *AttributeValueFilter) GetSw() string {
	if o == nil || IsNil(o.Sw) {
		var ret string
		return ret
	}
	return *o.Sw
}

// GetSwOk returns a tuple with the Sw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueFilter) GetSwOk() (*string, bool) {
	if o == nil || IsNil(o.Sw) {
		return nil, false
	}
	return o.Sw, true
}

// HasSw returns a boolean if a field has been set.
func (o *AttributeValueFilter) HasSw() bool {
	if o != nil && !IsNil(o.Sw) {
		return true
	}

	return false
}

// SetSw gets a reference to the given string and assigns it to the Sw field.
func (o *AttributeValueFilter) SetSw(v string) {
	o.Sw = &v
}

func (o AttributeValueFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeValueFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attribute) {
		toSerialize["attribute"] = o.Attribute
	}
	if !IsNil(o.DateFilter) {
		toSerialize["dateFilter"] = o.DateFilter
	}
	if !IsNil(o.Eq) {
		toSerialize["eq"] = o.Eq
	}
	if !IsNil(o.Ew) {
		toSerialize["ew"] = o.Ew
	}
	if !IsNil(o.Ge) {
		toSerialize["ge"] = o.Ge
	}
	if !IsNil(o.Gt) {
		toSerialize["gt"] = o.Gt
	}
	if !IsNil(o.In) {
		toSerialize["in"] = o.In
	}
	if !IsNil(o.Le) {
		toSerialize["le"] = o.Le
	}
	if !IsNil(o.Like) {
		toSerialize["like"] = o.Like
	}
	if !IsNil(o.Lt) {
		toSerialize["lt"] = o.Lt
	}
	if !IsNil(o.Sw) {
		toSerialize["sw"] = o.Sw
	}
	return toSerialize, nil
}

type NullableAttributeValueFilter struct {
	value *AttributeValueFilter
	isSet bool
}

func (v NullableAttributeValueFilter) Get() *AttributeValueFilter {
	return v.value
}

func (v *NullableAttributeValueFilter) Set(val *AttributeValueFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeValueFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeValueFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeValueFilter(val *AttributeValueFilter) *NullableAttributeValueFilter {
	return &NullableAttributeValueFilter{value: val, isSet: true}
}

func (v NullableAttributeValueFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeValueFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
