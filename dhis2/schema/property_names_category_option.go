/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesCategoryOption the model 'PropertyNamesCategoryOption'
type PropertyNamesCategoryOption string

// List of PropertyNames_CategoryOption
const (
	PROPERTYNAMESCATEGORYOPTION_ACCESS                 PropertyNamesCategoryOption = "access"
	PROPERTYNAMESCATEGORYOPTION_AGGREGATION_TYPE       PropertyNamesCategoryOption = "aggregationType"
	PROPERTYNAMESCATEGORYOPTION_ATTRIBUTE_VALUES       PropertyNamesCategoryOption = "attributeValues"
	PROPERTYNAMESCATEGORYOPTION_CATEGORIES             PropertyNamesCategoryOption = "categories"
	PROPERTYNAMESCATEGORYOPTION_CATEGORY_OPTION_COMBOS PropertyNamesCategoryOption = "categoryOptionCombos"
	PROPERTYNAMESCATEGORYOPTION_CATEGORY_OPTION_GROUPS PropertyNamesCategoryOption = "categoryOptionGroups"
	PROPERTYNAMESCATEGORYOPTION_CODE                   PropertyNamesCategoryOption = "code"
	PROPERTYNAMESCATEGORYOPTION_CREATED                PropertyNamesCategoryOption = "created"
	PROPERTYNAMESCATEGORYOPTION_CREATED_BY             PropertyNamesCategoryOption = "createdBy"
	PROPERTYNAMESCATEGORYOPTION_DESCRIPTION            PropertyNamesCategoryOption = "description"
	PROPERTYNAMESCATEGORYOPTION_DIMENSION_ITEM         PropertyNamesCategoryOption = "dimensionItem"
	PROPERTYNAMESCATEGORYOPTION_DISPLAY_DESCRIPTION    PropertyNamesCategoryOption = "displayDescription"
	PROPERTYNAMESCATEGORYOPTION_DISPLAY_FORM_NAME      PropertyNamesCategoryOption = "displayFormName"
	PROPERTYNAMESCATEGORYOPTION_DISPLAY_NAME           PropertyNamesCategoryOption = "displayName"
	PROPERTYNAMESCATEGORYOPTION_DISPLAY_SHORT_NAME     PropertyNamesCategoryOption = "displayShortName"
	PROPERTYNAMESCATEGORYOPTION_END_DATE               PropertyNamesCategoryOption = "endDate"
	PROPERTYNAMESCATEGORYOPTION_EXTERNAL_ACCESS        PropertyNamesCategoryOption = "externalAccess"
	PROPERTYNAMESCATEGORYOPTION_FAVORITE               PropertyNamesCategoryOption = "favorite"
	PROPERTYNAMESCATEGORYOPTION_FAVORITES              PropertyNamesCategoryOption = "favorites"
	PROPERTYNAMESCATEGORYOPTION_FORM_NAME              PropertyNamesCategoryOption = "formName"
	PROPERTYNAMESCATEGORYOPTION_HREF                   PropertyNamesCategoryOption = "href"
	PROPERTYNAMESCATEGORYOPTION_ID                     PropertyNamesCategoryOption = "id"
	PROPERTYNAMESCATEGORYOPTION_IS_DEFAULT             PropertyNamesCategoryOption = "isDefault"
	PROPERTYNAMESCATEGORYOPTION_LAST_UPDATED           PropertyNamesCategoryOption = "lastUpdated"
	PROPERTYNAMESCATEGORYOPTION_LAST_UPDATED_BY        PropertyNamesCategoryOption = "lastUpdatedBy"
	PROPERTYNAMESCATEGORYOPTION_LEGEND_SET             PropertyNamesCategoryOption = "legendSet"
	PROPERTYNAMESCATEGORYOPTION_LEGEND_SETS            PropertyNamesCategoryOption = "legendSets"
	PROPERTYNAMESCATEGORYOPTION_NAME                   PropertyNamesCategoryOption = "name"
	PROPERTYNAMESCATEGORYOPTION_ORGANISATION_UNITS     PropertyNamesCategoryOption = "organisationUnits"
	PROPERTYNAMESCATEGORYOPTION_PUBLIC_ACCESS          PropertyNamesCategoryOption = "publicAccess"
	PROPERTYNAMESCATEGORYOPTION_QUERY_MODS             PropertyNamesCategoryOption = "queryMods"
	PROPERTYNAMESCATEGORYOPTION_SHARING                PropertyNamesCategoryOption = "sharing"
	PROPERTYNAMESCATEGORYOPTION_SHORT_NAME             PropertyNamesCategoryOption = "shortName"
	PROPERTYNAMESCATEGORYOPTION_START_DATE             PropertyNamesCategoryOption = "startDate"
	PROPERTYNAMESCATEGORYOPTION_STYLE                  PropertyNamesCategoryOption = "style"
	PROPERTYNAMESCATEGORYOPTION_TRANSLATIONS           PropertyNamesCategoryOption = "translations"
	PROPERTYNAMESCATEGORYOPTION_USER                   PropertyNamesCategoryOption = "user"
	PROPERTYNAMESCATEGORYOPTION_USER_ACCESSES          PropertyNamesCategoryOption = "userAccesses"
	PROPERTYNAMESCATEGORYOPTION_USER_GROUP_ACCESSES    PropertyNamesCategoryOption = "userGroupAccesses"
)

// All allowed values of PropertyNamesCategoryOption enum
var AllowedPropertyNamesCategoryOptionEnumValues = []PropertyNamesCategoryOption{
	"access",
	"aggregationType",
	"attributeValues",
	"categories",
	"categoryOptionCombos",
	"categoryOptionGroups",
	"code",
	"created",
	"createdBy",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"endDate",
	"externalAccess",
	"favorite",
	"favorites",
	"formName",
	"href",
	"id",
	"isDefault",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"name",
	"organisationUnits",
	"publicAccess",
	"queryMods",
	"sharing",
	"shortName",
	"startDate",
	"style",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesCategoryOption) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesCategoryOption(value)
	for _, existing := range AllowedPropertyNamesCategoryOptionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesCategoryOption", value)
}

// NewPropertyNamesCategoryOptionFromValue returns a pointer to a valid PropertyNamesCategoryOption
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesCategoryOptionFromValue(v string) (*PropertyNamesCategoryOption, error) {
	ev := PropertyNamesCategoryOption(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesCategoryOption: valid values are %v", v, AllowedPropertyNamesCategoryOptionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesCategoryOption) IsValid() bool {
	for _, existing := range AllowedPropertyNamesCategoryOptionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_CategoryOption value
func (v PropertyNamesCategoryOption) Ptr() *PropertyNamesCategoryOption {
	return &v
}

type NullablePropertyNamesCategoryOption struct {
	value *PropertyNamesCategoryOption
	isSet bool
}

func (v NullablePropertyNamesCategoryOption) Get() *PropertyNamesCategoryOption {
	return v.value
}

func (v *NullablePropertyNamesCategoryOption) Set(val *PropertyNamesCategoryOption) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesCategoryOption) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesCategoryOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesCategoryOption(val *PropertyNamesCategoryOption) *NullablePropertyNamesCategoryOption {
	return &NullablePropertyNamesCategoryOption{value: val, isSet: true}
}

func (v NullablePropertyNamesCategoryOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesCategoryOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
