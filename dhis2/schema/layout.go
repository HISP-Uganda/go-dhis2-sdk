/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the Layout type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Layout{}

// Layout struct for Layout
type Layout struct {
	Columns []Column `json:"columns,omitempty"`
	Spacing *Spacing `json:"spacing,omitempty"`
}

// NewLayout instantiates a new Layout object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLayout() *Layout {
	this := Layout{}
	return &this
}

// NewLayoutWithDefaults instantiates a new Layout object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLayoutWithDefaults() *Layout {
	this := Layout{}
	return &this
}

// GetColumns returns the Columns field value if set, zero value otherwise.
func (o *Layout) GetColumns() []Column {
	if o == nil || IsNil(o.Columns) {
		var ret []Column
		return ret
	}
	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Layout) GetColumnsOk() ([]Column, bool) {
	if o == nil || IsNil(o.Columns) {
		return nil, false
	}
	return o.Columns, true
}

// HasColumns returns a boolean if a field has been set.
func (o *Layout) HasColumns() bool {
	if o != nil && !IsNil(o.Columns) {
		return true
	}

	return false
}

// SetColumns gets a reference to the given []Column and assigns it to the Columns field.
func (o *Layout) SetColumns(v []Column) {
	o.Columns = v
}

// GetSpacing returns the Spacing field value if set, zero value otherwise.
func (o *Layout) GetSpacing() Spacing {
	if o == nil || IsNil(o.Spacing) {
		var ret Spacing
		return ret
	}
	return *o.Spacing
}

// GetSpacingOk returns a tuple with the Spacing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Layout) GetSpacingOk() (*Spacing, bool) {
	if o == nil || IsNil(o.Spacing) {
		return nil, false
	}
	return o.Spacing, true
}

// HasSpacing returns a boolean if a field has been set.
func (o *Layout) HasSpacing() bool {
	if o != nil && !IsNil(o.Spacing) {
		return true
	}

	return false
}

// SetSpacing gets a reference to the given Spacing and assigns it to the Spacing field.
func (o *Layout) SetSpacing(v Spacing) {
	o.Spacing = &v
}

func (o Layout) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Layout) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Columns) {
		toSerialize["columns"] = o.Columns
	}
	if !IsNil(o.Spacing) {
		toSerialize["spacing"] = o.Spacing
	}
	return toSerialize, nil
}

type NullableLayout struct {
	value *Layout
	isSet bool
}

func (v NullableLayout) Get() *Layout {
	return v.value
}

func (v *NullableLayout) Set(val *Layout) {
	v.value = val
	v.isSet = true
}

func (v NullableLayout) IsSet() bool {
	return v.isSet
}

func (v *NullableLayout) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLayout(val *Layout) *NullableLayout {
	return &NullableLayout{value: val, isSet: true}
}

func (v NullableLayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLayout) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
