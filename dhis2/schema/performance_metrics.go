/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PerformanceMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PerformanceMetrics{}

// PerformanceMetrics struct for PerformanceMetrics
type PerformanceMetrics struct {
	ExecutionPlans    []ExecutionPlan `json:"executionPlans,omitempty"`
	TotalTimeInMillis float64         `json:"totalTimeInMillis"`
}

type _PerformanceMetrics PerformanceMetrics

// NewPerformanceMetrics instantiates a new PerformanceMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformanceMetrics(totalTimeInMillis float64) *PerformanceMetrics {
	this := PerformanceMetrics{}
	this.TotalTimeInMillis = totalTimeInMillis
	return &this
}

// NewPerformanceMetricsWithDefaults instantiates a new PerformanceMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformanceMetricsWithDefaults() *PerformanceMetrics {
	this := PerformanceMetrics{}
	return &this
}

// GetExecutionPlans returns the ExecutionPlans field value if set, zero value otherwise.
func (o *PerformanceMetrics) GetExecutionPlans() []ExecutionPlan {
	if o == nil || IsNil(o.ExecutionPlans) {
		var ret []ExecutionPlan
		return ret
	}
	return o.ExecutionPlans
}

// GetExecutionPlansOk returns a tuple with the ExecutionPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceMetrics) GetExecutionPlansOk() ([]ExecutionPlan, bool) {
	if o == nil || IsNil(o.ExecutionPlans) {
		return nil, false
	}
	return o.ExecutionPlans, true
}

// HasExecutionPlans returns a boolean if a field has been set.
func (o *PerformanceMetrics) HasExecutionPlans() bool {
	if o != nil && !IsNil(o.ExecutionPlans) {
		return true
	}

	return false
}

// SetExecutionPlans gets a reference to the given []ExecutionPlan and assigns it to the ExecutionPlans field.
func (o *PerformanceMetrics) SetExecutionPlans(v []ExecutionPlan) {
	o.ExecutionPlans = v
}

// GetTotalTimeInMillis returns the TotalTimeInMillis field value
func (o *PerformanceMetrics) GetTotalTimeInMillis() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalTimeInMillis
}

// GetTotalTimeInMillisOk returns a tuple with the TotalTimeInMillis field value
// and a boolean to check if the value has been set.
func (o *PerformanceMetrics) GetTotalTimeInMillisOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTimeInMillis, true
}

// SetTotalTimeInMillis sets field value
func (o *PerformanceMetrics) SetTotalTimeInMillis(v float64) {
	o.TotalTimeInMillis = v
}

func (o PerformanceMetrics) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PerformanceMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExecutionPlans) {
		toSerialize["executionPlans"] = o.ExecutionPlans
	}
	toSerialize["totalTimeInMillis"] = o.TotalTimeInMillis
	return toSerialize, nil
}

func (o *PerformanceMetrics) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"totalTimeInMillis",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPerformanceMetrics := _PerformanceMetrics{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPerformanceMetrics)

	if err != nil {
		return err
	}

	*o = PerformanceMetrics(varPerformanceMetrics)

	return err
}

type NullablePerformanceMetrics struct {
	value *PerformanceMetrics
	isSet bool
}

func (v NullablePerformanceMetrics) Get() *PerformanceMetrics {
	return v.value
}

func (v *NullablePerformanceMetrics) Set(val *PerformanceMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformanceMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformanceMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformanceMetrics(val *PerformanceMetrics) *NullablePerformanceMetrics {
	return &NullablePerformanceMetrics{value: val, isSet: true}
}

func (v NullablePerformanceMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformanceMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
