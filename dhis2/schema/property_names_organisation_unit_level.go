/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesOrganisationUnitLevel the model 'PropertyNamesOrganisationUnitLevel'
type PropertyNamesOrganisationUnitLevel string

// List of PropertyNames_OrganisationUnitLevel
const (
	PROPERTYNAMESORGANISATIONUNITLEVEL_ACCESS              PropertyNamesOrganisationUnitLevel = "access"
	PROPERTYNAMESORGANISATIONUNITLEVEL_ATTRIBUTE_VALUES    PropertyNamesOrganisationUnitLevel = "attributeValues"
	PROPERTYNAMESORGANISATIONUNITLEVEL_CODE                PropertyNamesOrganisationUnitLevel = "code"
	PROPERTYNAMESORGANISATIONUNITLEVEL_CREATED             PropertyNamesOrganisationUnitLevel = "created"
	PROPERTYNAMESORGANISATIONUNITLEVEL_CREATED_BY          PropertyNamesOrganisationUnitLevel = "createdBy"
	PROPERTYNAMESORGANISATIONUNITLEVEL_DISPLAY_NAME        PropertyNamesOrganisationUnitLevel = "displayName"
	PROPERTYNAMESORGANISATIONUNITLEVEL_EXTERNAL_ACCESS     PropertyNamesOrganisationUnitLevel = "externalAccess"
	PROPERTYNAMESORGANISATIONUNITLEVEL_FAVORITE            PropertyNamesOrganisationUnitLevel = "favorite"
	PROPERTYNAMESORGANISATIONUNITLEVEL_FAVORITES           PropertyNamesOrganisationUnitLevel = "favorites"
	PROPERTYNAMESORGANISATIONUNITLEVEL_HREF                PropertyNamesOrganisationUnitLevel = "href"
	PROPERTYNAMESORGANISATIONUNITLEVEL_ID                  PropertyNamesOrganisationUnitLevel = "id"
	PROPERTYNAMESORGANISATIONUNITLEVEL_LAST_UPDATED        PropertyNamesOrganisationUnitLevel = "lastUpdated"
	PROPERTYNAMESORGANISATIONUNITLEVEL_LAST_UPDATED_BY     PropertyNamesOrganisationUnitLevel = "lastUpdatedBy"
	PROPERTYNAMESORGANISATIONUNITLEVEL_LEVEL               PropertyNamesOrganisationUnitLevel = "level"
	PROPERTYNAMESORGANISATIONUNITLEVEL_NAME                PropertyNamesOrganisationUnitLevel = "name"
	PROPERTYNAMESORGANISATIONUNITLEVEL_OFFLINE_LEVELS      PropertyNamesOrganisationUnitLevel = "offlineLevels"
	PROPERTYNAMESORGANISATIONUNITLEVEL_PUBLIC_ACCESS       PropertyNamesOrganisationUnitLevel = "publicAccess"
	PROPERTYNAMESORGANISATIONUNITLEVEL_SHARING             PropertyNamesOrganisationUnitLevel = "sharing"
	PROPERTYNAMESORGANISATIONUNITLEVEL_TRANSLATIONS        PropertyNamesOrganisationUnitLevel = "translations"
	PROPERTYNAMESORGANISATIONUNITLEVEL_USER                PropertyNamesOrganisationUnitLevel = "user"
	PROPERTYNAMESORGANISATIONUNITLEVEL_USER_ACCESSES       PropertyNamesOrganisationUnitLevel = "userAccesses"
	PROPERTYNAMESORGANISATIONUNITLEVEL_USER_GROUP_ACCESSES PropertyNamesOrganisationUnitLevel = "userGroupAccesses"
)

// All allowed values of PropertyNamesOrganisationUnitLevel enum
var AllowedPropertyNamesOrganisationUnitLevelEnumValues = []PropertyNamesOrganisationUnitLevel{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"displayName",
	"externalAccess",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"level",
	"name",
	"offlineLevels",
	"publicAccess",
	"sharing",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesOrganisationUnitLevel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesOrganisationUnitLevel(value)
	for _, existing := range AllowedPropertyNamesOrganisationUnitLevelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesOrganisationUnitLevel", value)
}

// NewPropertyNamesOrganisationUnitLevelFromValue returns a pointer to a valid PropertyNamesOrganisationUnitLevel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesOrganisationUnitLevelFromValue(v string) (*PropertyNamesOrganisationUnitLevel, error) {
	ev := PropertyNamesOrganisationUnitLevel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesOrganisationUnitLevel: valid values are %v", v, AllowedPropertyNamesOrganisationUnitLevelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesOrganisationUnitLevel) IsValid() bool {
	for _, existing := range AllowedPropertyNamesOrganisationUnitLevelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_OrganisationUnitLevel value
func (v PropertyNamesOrganisationUnitLevel) Ptr() *PropertyNamesOrganisationUnitLevel {
	return &v
}

type NullablePropertyNamesOrganisationUnitLevel struct {
	value *PropertyNamesOrganisationUnitLevel
	isSet bool
}

func (v NullablePropertyNamesOrganisationUnitLevel) Get() *PropertyNamesOrganisationUnitLevel {
	return v.value
}

func (v *NullablePropertyNamesOrganisationUnitLevel) Set(val *PropertyNamesOrganisationUnitLevel) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesOrganisationUnitLevel) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesOrganisationUnitLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesOrganisationUnitLevel(val *PropertyNamesOrganisationUnitLevel) *NullablePropertyNamesOrganisationUnitLevel {
	return &NullablePropertyNamesOrganisationUnitLevel{value: val, isSet: true}
}

func (v NullablePropertyNamesOrganisationUnitLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesOrganisationUnitLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
