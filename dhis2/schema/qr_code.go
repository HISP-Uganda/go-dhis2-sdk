/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the QRCode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QRCode{}

// QRCode struct for QRCode
type QRCode struct {
	Base32Secret  *string `json:"base32Secret,omitempty"`
	Base64QRImage *string `json:"base64QRImage,omitempty"`
}

// NewQRCode instantiates a new QRCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQRCode() *QRCode {
	this := QRCode{}
	return &this
}

// NewQRCodeWithDefaults instantiates a new QRCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQRCodeWithDefaults() *QRCode {
	this := QRCode{}
	return &this
}

// GetBase32Secret returns the Base32Secret field value if set, zero value otherwise.
func (o *QRCode) GetBase32Secret() string {
	if o == nil || IsNil(o.Base32Secret) {
		var ret string
		return ret
	}
	return *o.Base32Secret
}

// GetBase32SecretOk returns a tuple with the Base32Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QRCode) GetBase32SecretOk() (*string, bool) {
	if o == nil || IsNil(o.Base32Secret) {
		return nil, false
	}
	return o.Base32Secret, true
}

// HasBase32Secret returns a boolean if a field has been set.
func (o *QRCode) HasBase32Secret() bool {
	if o != nil && !IsNil(o.Base32Secret) {
		return true
	}

	return false
}

// SetBase32Secret gets a reference to the given string and assigns it to the Base32Secret field.
func (o *QRCode) SetBase32Secret(v string) {
	o.Base32Secret = &v
}

// GetBase64QRImage returns the Base64QRImage field value if set, zero value otherwise.
func (o *QRCode) GetBase64QRImage() string {
	if o == nil || IsNil(o.Base64QRImage) {
		var ret string
		return ret
	}
	return *o.Base64QRImage
}

// GetBase64QRImageOk returns a tuple with the Base64QRImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QRCode) GetBase64QRImageOk() (*string, bool) {
	if o == nil || IsNil(o.Base64QRImage) {
		return nil, false
	}
	return o.Base64QRImage, true
}

// HasBase64QRImage returns a boolean if a field has been set.
func (o *QRCode) HasBase64QRImage() bool {
	if o != nil && !IsNil(o.Base64QRImage) {
		return true
	}

	return false
}

// SetBase64QRImage gets a reference to the given string and assigns it to the Base64QRImage field.
func (o *QRCode) SetBase64QRImage(v string) {
	o.Base64QRImage = &v
}

func (o QRCode) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QRCode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Base32Secret) {
		toSerialize["base32Secret"] = o.Base32Secret
	}
	if !IsNil(o.Base64QRImage) {
		toSerialize["base64QRImage"] = o.Base64QRImage
	}
	return toSerialize, nil
}

type NullableQRCode struct {
	value *QRCode
	isSet bool
}

func (v NullableQRCode) Get() *QRCode {
	return v.value
}

func (v *NullableQRCode) Set(val *QRCode) {
	v.value = val
	v.isSet = true
}

func (v NullableQRCode) IsSet() bool {
	return v.isSet
}

func (v *NullableQRCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQRCode(val *QRCode) *NullableQRCode {
	return &NullableQRCode{value: val, isSet: true}
}

func (v NullableQRCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQRCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
