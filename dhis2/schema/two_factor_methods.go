/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the TwoFactorMethods type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TwoFactorMethods{}

// TwoFactorMethods struct for TwoFactorMethods
type TwoFactorMethods struct {
	Email2faEnabled *bool `json:"email2faEnabled,omitempty"`
	Totp2faEnabled  *bool `json:"totp2faEnabled,omitempty"`
}

// NewTwoFactorMethods instantiates a new TwoFactorMethods object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTwoFactorMethods() *TwoFactorMethods {
	this := TwoFactorMethods{}
	return &this
}

// NewTwoFactorMethodsWithDefaults instantiates a new TwoFactorMethods object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTwoFactorMethodsWithDefaults() *TwoFactorMethods {
	this := TwoFactorMethods{}
	return &this
}

// GetEmail2faEnabled returns the Email2faEnabled field value if set, zero value otherwise.
func (o *TwoFactorMethods) GetEmail2faEnabled() bool {
	if o == nil || IsNil(o.Email2faEnabled) {
		var ret bool
		return ret
	}
	return *o.Email2faEnabled
}

// GetEmail2faEnabledOk returns a tuple with the Email2faEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwoFactorMethods) GetEmail2faEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Email2faEnabled) {
		return nil, false
	}
	return o.Email2faEnabled, true
}

// HasEmail2faEnabled returns a boolean if a field has been set.
func (o *TwoFactorMethods) HasEmail2faEnabled() bool {
	if o != nil && !IsNil(o.Email2faEnabled) {
		return true
	}

	return false
}

// SetEmail2faEnabled gets a reference to the given bool and assigns it to the Email2faEnabled field.
func (o *TwoFactorMethods) SetEmail2faEnabled(v bool) {
	o.Email2faEnabled = &v
}

// GetTotp2faEnabled returns the Totp2faEnabled field value if set, zero value otherwise.
func (o *TwoFactorMethods) GetTotp2faEnabled() bool {
	if o == nil || IsNil(o.Totp2faEnabled) {
		var ret bool
		return ret
	}
	return *o.Totp2faEnabled
}

// GetTotp2faEnabledOk returns a tuple with the Totp2faEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwoFactorMethods) GetTotp2faEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Totp2faEnabled) {
		return nil, false
	}
	return o.Totp2faEnabled, true
}

// HasTotp2faEnabled returns a boolean if a field has been set.
func (o *TwoFactorMethods) HasTotp2faEnabled() bool {
	if o != nil && !IsNil(o.Totp2faEnabled) {
		return true
	}

	return false
}

// SetTotp2faEnabled gets a reference to the given bool and assigns it to the Totp2faEnabled field.
func (o *TwoFactorMethods) SetTotp2faEnabled(v bool) {
	o.Totp2faEnabled = &v
}

func (o TwoFactorMethods) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TwoFactorMethods) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email2faEnabled) {
		toSerialize["email2faEnabled"] = o.Email2faEnabled
	}
	if !IsNil(o.Totp2faEnabled) {
		toSerialize["totp2faEnabled"] = o.Totp2faEnabled
	}
	return toSerialize, nil
}

type NullableTwoFactorMethods struct {
	value *TwoFactorMethods
	isSet bool
}

func (v NullableTwoFactorMethods) Get() *TwoFactorMethods {
	return v.value
}

func (v *NullableTwoFactorMethods) Set(val *TwoFactorMethods) {
	v.value = val
	v.isSet = true
}

func (v NullableTwoFactorMethods) IsSet() bool {
	return v.isSet
}

func (v *NullableTwoFactorMethods) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTwoFactorMethods(val *TwoFactorMethods) *NullableTwoFactorMethods {
	return &NullableTwoFactorMethods{value: val, isSet: true}
}

func (v NullableTwoFactorMethods) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTwoFactorMethods) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
