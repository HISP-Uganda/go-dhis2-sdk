/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the AttributeValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeValues{}

// AttributeValues struct for AttributeValues
type AttributeValues struct {
	Empty *bool `json:"empty,omitempty"`
}

// NewAttributeValues instantiates a new AttributeValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeValues() *AttributeValues {
	this := AttributeValues{}
	return &this
}

// NewAttributeValuesWithDefaults instantiates a new AttributeValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeValuesWithDefaults() *AttributeValues {
	this := AttributeValues{}
	return &this
}

// GetEmpty returns the Empty field value if set, zero value otherwise.
func (o *AttributeValues) GetEmpty() bool {
	if o == nil || IsNil(o.Empty) {
		var ret bool
		return ret
	}
	return *o.Empty
}

// GetEmptyOk returns a tuple with the Empty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValues) GetEmptyOk() (*bool, bool) {
	if o == nil || IsNil(o.Empty) {
		return nil, false
	}
	return o.Empty, true
}

// HasEmpty returns a boolean if a field has been set.
func (o *AttributeValues) HasEmpty() bool {
	if o != nil && !IsNil(o.Empty) {
		return true
	}

	return false
}

// SetEmpty gets a reference to the given bool and assigns it to the Empty field.
func (o *AttributeValues) SetEmpty(v bool) {
	o.Empty = &v
}

func (o AttributeValues) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Empty) {
		toSerialize["empty"] = o.Empty
	}
	return toSerialize, nil
}

type NullableAttributeValues struct {
	value *AttributeValues
	isSet bool
}

func (v NullableAttributeValues) Get() *AttributeValues {
	return v.value
}

func (v *NullableAttributeValues) Set(val *AttributeValues) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeValues) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeValues(val *AttributeValues) *NullableAttributeValues {
	return &NullableAttributeValues{value: val, isSet: true}
}

func (v NullableAttributeValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
