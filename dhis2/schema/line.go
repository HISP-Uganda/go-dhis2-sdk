/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the Line type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Line{}

// Line struct for Line
type Line struct {
	Title *StyledObject `json:"title,omitempty"`
	Value *float64      `json:"value,omitempty"`
}

// NewLine instantiates a new Line object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLine() *Line {
	this := Line{}
	return &this
}

// NewLineWithDefaults instantiates a new Line object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLineWithDefaults() *Line {
	this := Line{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Line) GetTitle() StyledObject {
	if o == nil || IsNil(o.Title) {
		var ret StyledObject
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Line) GetTitleOk() (*StyledObject, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Line) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given StyledObject and assigns it to the Title field.
func (o *Line) SetTitle(v StyledObject) {
	o.Title = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *Line) GetValue() float64 {
	if o == nil || IsNil(o.Value) {
		var ret float64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Line) GetValueOk() (*float64, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *Line) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float64 and assigns it to the Value field.
func (o *Line) SetValue(v float64) {
	o.Value = &v
}

func (o Line) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Line) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableLine struct {
	value *Line
	isSet bool
}

func (v NullableLine) Get() *Line {
	return v.value
}

func (v *NullableLine) Set(val *Line) {
	v.value = val
	v.isSet = true
}

func (v NullableLine) IsSet() bool {
	return v.isSet
}

func (v *NullableLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLine(val *Line) *NullableLine {
	return &NullableLine{value: val, isSet: true}
}

func (v NullableLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
