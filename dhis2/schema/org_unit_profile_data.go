/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the OrgUnitProfileData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgUnitProfileData{}

// OrgUnitProfileData struct for OrgUnitProfileData
type OrgUnitProfileData struct {
	Attributes []ProfileItem `json:"attributes,omitempty"`
	DataItems  []ProfileItem `json:"dataItems,omitempty"`
	GroupSets  []ProfileItem `json:"groupSets,omitempty"`
	Info       *OrgUnitInfo  `json:"info,omitempty"`
}

// NewOrgUnitProfileData instantiates a new OrgUnitProfileData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgUnitProfileData() *OrgUnitProfileData {
	this := OrgUnitProfileData{}
	return &this
}

// NewOrgUnitProfileDataWithDefaults instantiates a new OrgUnitProfileData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgUnitProfileDataWithDefaults() *OrgUnitProfileData {
	this := OrgUnitProfileData{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *OrgUnitProfileData) GetAttributes() []ProfileItem {
	if o == nil || IsNil(o.Attributes) {
		var ret []ProfileItem
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitProfileData) GetAttributesOk() ([]ProfileItem, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *OrgUnitProfileData) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []ProfileItem and assigns it to the Attributes field.
func (o *OrgUnitProfileData) SetAttributes(v []ProfileItem) {
	o.Attributes = v
}

// GetDataItems returns the DataItems field value if set, zero value otherwise.
func (o *OrgUnitProfileData) GetDataItems() []ProfileItem {
	if o == nil || IsNil(o.DataItems) {
		var ret []ProfileItem
		return ret
	}
	return o.DataItems
}

// GetDataItemsOk returns a tuple with the DataItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitProfileData) GetDataItemsOk() ([]ProfileItem, bool) {
	if o == nil || IsNil(o.DataItems) {
		return nil, false
	}
	return o.DataItems, true
}

// HasDataItems returns a boolean if a field has been set.
func (o *OrgUnitProfileData) HasDataItems() bool {
	if o != nil && !IsNil(o.DataItems) {
		return true
	}

	return false
}

// SetDataItems gets a reference to the given []ProfileItem and assigns it to the DataItems field.
func (o *OrgUnitProfileData) SetDataItems(v []ProfileItem) {
	o.DataItems = v
}

// GetGroupSets returns the GroupSets field value if set, zero value otherwise.
func (o *OrgUnitProfileData) GetGroupSets() []ProfileItem {
	if o == nil || IsNil(o.GroupSets) {
		var ret []ProfileItem
		return ret
	}
	return o.GroupSets
}

// GetGroupSetsOk returns a tuple with the GroupSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitProfileData) GetGroupSetsOk() ([]ProfileItem, bool) {
	if o == nil || IsNil(o.GroupSets) {
		return nil, false
	}
	return o.GroupSets, true
}

// HasGroupSets returns a boolean if a field has been set.
func (o *OrgUnitProfileData) HasGroupSets() bool {
	if o != nil && !IsNil(o.GroupSets) {
		return true
	}

	return false
}

// SetGroupSets gets a reference to the given []ProfileItem and assigns it to the GroupSets field.
func (o *OrgUnitProfileData) SetGroupSets(v []ProfileItem) {
	o.GroupSets = v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *OrgUnitProfileData) GetInfo() OrgUnitInfo {
	if o == nil || IsNil(o.Info) {
		var ret OrgUnitInfo
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgUnitProfileData) GetInfoOk() (*OrgUnitInfo, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *OrgUnitProfileData) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given OrgUnitInfo and assigns it to the Info field.
func (o *OrgUnitProfileData) SetInfo(v OrgUnitInfo) {
	o.Info = &v
}

func (o OrgUnitProfileData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgUnitProfileData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.DataItems) {
		toSerialize["dataItems"] = o.DataItems
	}
	if !IsNil(o.GroupSets) {
		toSerialize["groupSets"] = o.GroupSets
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	return toSerialize, nil
}

type NullableOrgUnitProfileData struct {
	value *OrgUnitProfileData
	isSet bool
}

func (v NullableOrgUnitProfileData) Get() *OrgUnitProfileData {
	return v.value
}

func (v *NullableOrgUnitProfileData) Set(val *OrgUnitProfileData) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgUnitProfileData) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgUnitProfileData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgUnitProfileData(val *OrgUnitProfileData) *NullableOrgUnitProfileData {
	return &NullableOrgUnitProfileData{value: val, isSet: true}
}

func (v NullableOrgUnitProfileData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgUnitProfileData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
