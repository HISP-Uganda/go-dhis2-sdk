/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ProgramOwner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramOwner{}

// ProgramOwner struct for ProgramOwner
type ProgramOwner struct {
	OwnerOrgUnit          *string `json:"ownerOrgUnit,omitempty"`
	Program               *string `json:"program,omitempty"`
	TrackedEntityInstance *string `json:"trackedEntityInstance,omitempty"`
}

// NewProgramOwner instantiates a new ProgramOwner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramOwner() *ProgramOwner {
	this := ProgramOwner{}
	return &this
}

// NewProgramOwnerWithDefaults instantiates a new ProgramOwner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramOwnerWithDefaults() *ProgramOwner {
	this := ProgramOwner{}
	return &this
}

// GetOwnerOrgUnit returns the OwnerOrgUnit field value if set, zero value otherwise.
func (o *ProgramOwner) GetOwnerOrgUnit() string {
	if o == nil || IsNil(o.OwnerOrgUnit) {
		var ret string
		return ret
	}
	return *o.OwnerOrgUnit
}

// GetOwnerOrgUnitOk returns a tuple with the OwnerOrgUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramOwner) GetOwnerOrgUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerOrgUnit) {
		return nil, false
	}
	return o.OwnerOrgUnit, true
}

// HasOwnerOrgUnit returns a boolean if a field has been set.
func (o *ProgramOwner) HasOwnerOrgUnit() bool {
	if o != nil && !IsNil(o.OwnerOrgUnit) {
		return true
	}

	return false
}

// SetOwnerOrgUnit gets a reference to the given string and assigns it to the OwnerOrgUnit field.
func (o *ProgramOwner) SetOwnerOrgUnit(v string) {
	o.OwnerOrgUnit = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *ProgramOwner) GetProgram() string {
	if o == nil || IsNil(o.Program) {
		var ret string
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramOwner) GetProgramOk() (*string, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *ProgramOwner) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given string and assigns it to the Program field.
func (o *ProgramOwner) SetProgram(v string) {
	o.Program = &v
}

// GetTrackedEntityInstance returns the TrackedEntityInstance field value if set, zero value otherwise.
func (o *ProgramOwner) GetTrackedEntityInstance() string {
	if o == nil || IsNil(o.TrackedEntityInstance) {
		var ret string
		return ret
	}
	return *o.TrackedEntityInstance
}

// GetTrackedEntityInstanceOk returns a tuple with the TrackedEntityInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramOwner) GetTrackedEntityInstanceOk() (*string, bool) {
	if o == nil || IsNil(o.TrackedEntityInstance) {
		return nil, false
	}
	return o.TrackedEntityInstance, true
}

// HasTrackedEntityInstance returns a boolean if a field has been set.
func (o *ProgramOwner) HasTrackedEntityInstance() bool {
	if o != nil && !IsNil(o.TrackedEntityInstance) {
		return true
	}

	return false
}

// SetTrackedEntityInstance gets a reference to the given string and assigns it to the TrackedEntityInstance field.
func (o *ProgramOwner) SetTrackedEntityInstance(v string) {
	o.TrackedEntityInstance = &v
}

func (o ProgramOwner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramOwner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OwnerOrgUnit) {
		toSerialize["ownerOrgUnit"] = o.OwnerOrgUnit
	}
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.TrackedEntityInstance) {
		toSerialize["trackedEntityInstance"] = o.TrackedEntityInstance
	}
	return toSerialize, nil
}

type NullableProgramOwner struct {
	value *ProgramOwner
	isSet bool
}

func (v NullableProgramOwner) Get() *ProgramOwner {
	return v.value
}

func (v *NullableProgramOwner) Set(val *ProgramOwner) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramOwner(val *ProgramOwner) *NullableProgramOwner {
	return &NullableProgramOwner{value: val, isSet: true}
}

func (v NullableProgramOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
