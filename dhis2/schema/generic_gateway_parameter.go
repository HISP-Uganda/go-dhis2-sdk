/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the GenericGatewayParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericGatewayParameter{}

// GenericGatewayParameter struct for GenericGatewayParameter
type GenericGatewayParameter struct {
	Confidential *bool   `json:"confidential,omitempty"`
	Encode       *bool   `json:"encode,omitempty"`
	Header       *bool   `json:"header,omitempty"`
	Key          *string `json:"key,omitempty"`
	Value        *string `json:"value,omitempty"`
}

// NewGenericGatewayParameter instantiates a new GenericGatewayParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericGatewayParameter() *GenericGatewayParameter {
	this := GenericGatewayParameter{}
	return &this
}

// NewGenericGatewayParameterWithDefaults instantiates a new GenericGatewayParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericGatewayParameterWithDefaults() *GenericGatewayParameter {
	this := GenericGatewayParameter{}
	return &this
}

// GetConfidential returns the Confidential field value if set, zero value otherwise.
func (o *GenericGatewayParameter) GetConfidential() bool {
	if o == nil || IsNil(o.Confidential) {
		var ret bool
		return ret
	}
	return *o.Confidential
}

// GetConfidentialOk returns a tuple with the Confidential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGatewayParameter) GetConfidentialOk() (*bool, bool) {
	if o == nil || IsNil(o.Confidential) {
		return nil, false
	}
	return o.Confidential, true
}

// HasConfidential returns a boolean if a field has been set.
func (o *GenericGatewayParameter) HasConfidential() bool {
	if o != nil && !IsNil(o.Confidential) {
		return true
	}

	return false
}

// SetConfidential gets a reference to the given bool and assigns it to the Confidential field.
func (o *GenericGatewayParameter) SetConfidential(v bool) {
	o.Confidential = &v
}

// GetEncode returns the Encode field value if set, zero value otherwise.
func (o *GenericGatewayParameter) GetEncode() bool {
	if o == nil || IsNil(o.Encode) {
		var ret bool
		return ret
	}
	return *o.Encode
}

// GetEncodeOk returns a tuple with the Encode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGatewayParameter) GetEncodeOk() (*bool, bool) {
	if o == nil || IsNil(o.Encode) {
		return nil, false
	}
	return o.Encode, true
}

// HasEncode returns a boolean if a field has been set.
func (o *GenericGatewayParameter) HasEncode() bool {
	if o != nil && !IsNil(o.Encode) {
		return true
	}

	return false
}

// SetEncode gets a reference to the given bool and assigns it to the Encode field.
func (o *GenericGatewayParameter) SetEncode(v bool) {
	o.Encode = &v
}

// GetHeader returns the Header field value if set, zero value otherwise.
func (o *GenericGatewayParameter) GetHeader() bool {
	if o == nil || IsNil(o.Header) {
		var ret bool
		return ret
	}
	return *o.Header
}

// GetHeaderOk returns a tuple with the Header field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGatewayParameter) GetHeaderOk() (*bool, bool) {
	if o == nil || IsNil(o.Header) {
		return nil, false
	}
	return o.Header, true
}

// HasHeader returns a boolean if a field has been set.
func (o *GenericGatewayParameter) HasHeader() bool {
	if o != nil && !IsNil(o.Header) {
		return true
	}

	return false
}

// SetHeader gets a reference to the given bool and assigns it to the Header field.
func (o *GenericGatewayParameter) SetHeader(v bool) {
	o.Header = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *GenericGatewayParameter) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGatewayParameter) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *GenericGatewayParameter) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *GenericGatewayParameter) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *GenericGatewayParameter) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericGatewayParameter) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *GenericGatewayParameter) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *GenericGatewayParameter) SetValue(v string) {
	o.Value = &v
}

func (o GenericGatewayParameter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericGatewayParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Confidential) {
		toSerialize["confidential"] = o.Confidential
	}
	if !IsNil(o.Encode) {
		toSerialize["encode"] = o.Encode
	}
	if !IsNil(o.Header) {
		toSerialize["header"] = o.Header
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableGenericGatewayParameter struct {
	value *GenericGatewayParameter
	isSet bool
}

func (v NullableGenericGatewayParameter) Get() *GenericGatewayParameter {
	return v.value
}

func (v *NullableGenericGatewayParameter) Set(val *GenericGatewayParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericGatewayParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericGatewayParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericGatewayParameter(val *GenericGatewayParameter) *NullableGenericGatewayParameter {
	return &NullableGenericGatewayParameter{value: val, isSet: true}
}

func (v NullableGenericGatewayParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericGatewayParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
