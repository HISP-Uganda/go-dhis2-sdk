/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesOAuth2Client the model 'PropertyNamesOAuth2Client'
type PropertyNamesOAuth2Client string

// List of PropertyNames_OAuth2Client
const (
	PROPERTYNAMESOAUTH2CLIENT_ACCESS              PropertyNamesOAuth2Client = "access"
	PROPERTYNAMESOAUTH2CLIENT_ATTRIBUTE_VALUES    PropertyNamesOAuth2Client = "attributeValues"
	PROPERTYNAMESOAUTH2CLIENT_CID                 PropertyNamesOAuth2Client = "cid"
	PROPERTYNAMESOAUTH2CLIENT_CODE                PropertyNamesOAuth2Client = "code"
	PROPERTYNAMESOAUTH2CLIENT_CREATED             PropertyNamesOAuth2Client = "created"
	PROPERTYNAMESOAUTH2CLIENT_CREATED_BY          PropertyNamesOAuth2Client = "createdBy"
	PROPERTYNAMESOAUTH2CLIENT_DISPLAY_NAME        PropertyNamesOAuth2Client = "displayName"
	PROPERTYNAMESOAUTH2CLIENT_EXTERNAL_ACCESS     PropertyNamesOAuth2Client = "externalAccess"
	PROPERTYNAMESOAUTH2CLIENT_FAVORITE            PropertyNamesOAuth2Client = "favorite"
	PROPERTYNAMESOAUTH2CLIENT_FAVORITES           PropertyNamesOAuth2Client = "favorites"
	PROPERTYNAMESOAUTH2CLIENT_GRANT_TYPES         PropertyNamesOAuth2Client = "grantTypes"
	PROPERTYNAMESOAUTH2CLIENT_HREF                PropertyNamesOAuth2Client = "href"
	PROPERTYNAMESOAUTH2CLIENT_ID                  PropertyNamesOAuth2Client = "id"
	PROPERTYNAMESOAUTH2CLIENT_LAST_UPDATED        PropertyNamesOAuth2Client = "lastUpdated"
	PROPERTYNAMESOAUTH2CLIENT_LAST_UPDATED_BY     PropertyNamesOAuth2Client = "lastUpdatedBy"
	PROPERTYNAMESOAUTH2CLIENT_NAME                PropertyNamesOAuth2Client = "name"
	PROPERTYNAMESOAUTH2CLIENT_PUBLIC_ACCESS       PropertyNamesOAuth2Client = "publicAccess"
	PROPERTYNAMESOAUTH2CLIENT_REDIRECT_URIS       PropertyNamesOAuth2Client = "redirectUris"
	PROPERTYNAMESOAUTH2CLIENT_SECRET              PropertyNamesOAuth2Client = "secret"
	PROPERTYNAMESOAUTH2CLIENT_SHARING             PropertyNamesOAuth2Client = "sharing"
	PROPERTYNAMESOAUTH2CLIENT_TRANSLATIONS        PropertyNamesOAuth2Client = "translations"
	PROPERTYNAMESOAUTH2CLIENT_USER                PropertyNamesOAuth2Client = "user"
	PROPERTYNAMESOAUTH2CLIENT_USER_ACCESSES       PropertyNamesOAuth2Client = "userAccesses"
	PROPERTYNAMESOAUTH2CLIENT_USER_GROUP_ACCESSES PropertyNamesOAuth2Client = "userGroupAccesses"
)

// All allowed values of PropertyNamesOAuth2Client enum
var AllowedPropertyNamesOAuth2ClientEnumValues = []PropertyNamesOAuth2Client{
	"access",
	"attributeValues",
	"cid",
	"code",
	"created",
	"createdBy",
	"displayName",
	"externalAccess",
	"favorite",
	"favorites",
	"grantTypes",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"publicAccess",
	"redirectUris",
	"secret",
	"sharing",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesOAuth2Client) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesOAuth2Client(value)
	for _, existing := range AllowedPropertyNamesOAuth2ClientEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesOAuth2Client", value)
}

// NewPropertyNamesOAuth2ClientFromValue returns a pointer to a valid PropertyNamesOAuth2Client
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesOAuth2ClientFromValue(v string) (*PropertyNamesOAuth2Client, error) {
	ev := PropertyNamesOAuth2Client(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesOAuth2Client: valid values are %v", v, AllowedPropertyNamesOAuth2ClientEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesOAuth2Client) IsValid() bool {
	for _, existing := range AllowedPropertyNamesOAuth2ClientEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_OAuth2Client value
func (v PropertyNamesOAuth2Client) Ptr() *PropertyNamesOAuth2Client {
	return &v
}

type NullablePropertyNamesOAuth2Client struct {
	value *PropertyNamesOAuth2Client
	isSet bool
}

func (v NullablePropertyNamesOAuth2Client) Get() *PropertyNamesOAuth2Client {
	return v.value
}

func (v *NullablePropertyNamesOAuth2Client) Set(val *PropertyNamesOAuth2Client) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesOAuth2Client) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesOAuth2Client) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesOAuth2Client(val *PropertyNamesOAuth2Client) *NullablePropertyNamesOAuth2Client {
	return &NullablePropertyNamesOAuth2Client{value: val, isSet: true}
}

func (v NullablePropertyNamesOAuth2Client) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesOAuth2Client) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
