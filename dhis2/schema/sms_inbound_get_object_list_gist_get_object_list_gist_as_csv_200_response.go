/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response - struct for SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response
type SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response struct {
	SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfIncomingSms                                                *[]IncomingSms
}

// SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response
func SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response(v *SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response {
	return SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response{
		SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []IncomingSmsAsSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []IncomingSms wrapped in SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfIncomingSmsAsSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response(v *[]IncomingSms) SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response {
	return SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfIncomingSms: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonSmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonSmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfIncomingSms
	err = newStrictDecoder(data).Decode(&dst.ArrayOfIncomingSms)
	if err == nil {
		jsonArrayOfIncomingSms, _ := json.Marshal(dst.ArrayOfIncomingSms)
		if string(jsonArrayOfIncomingSms) == "{}" { // empty struct
			dst.ArrayOfIncomingSms = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfIncomingSms = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfIncomingSms = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfIncomingSms != nil {
		return json.Marshal(&src.ArrayOfIncomingSms)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.SmsInboundGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfIncomingSms != nil {
		return obj.ArrayOfIncomingSms
	}

	// all schemas are nil
	return nil
}

type NullableSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) Get() *SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response(val *SmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) *NullableSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsInboundGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
