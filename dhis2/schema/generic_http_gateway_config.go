/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GenericHttpGatewayConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericHttpGatewayConfig{}

// GenericHttpGatewayConfig struct for GenericHttpGatewayConfig
type GenericHttpGatewayConfig struct {
	ConfigurationTemplate *string                   `json:"configurationTemplate,omitempty"`
	ContentType           ContentType               `json:"contentType"`
	Id                    *string                   `json:"id,omitempty"`
	IsDefault             *bool                     `json:"isDefault,omitempty"`
	MaxSmsLength          *string                   `json:"maxSmsLength,omitempty"`
	Name                  *string                   `json:"name,omitempty"`
	Parameters            []GenericGatewayParameter `json:"parameters,omitempty"`
	Password              *string                   `json:"password,omitempty"`
	SendUrlParameters     *bool                     `json:"sendUrlParameters,omitempty"`
	Uid                   *string                   `json:"uid,omitempty"`
	UrlTemplate           *string                   `json:"urlTemplate,omitempty"`
	UseGet                *bool                     `json:"useGet,omitempty"`
	Username              *string                   `json:"username,omitempty"`
}

type _GenericHttpGatewayConfig GenericHttpGatewayConfig

// NewGenericHttpGatewayConfig instantiates a new GenericHttpGatewayConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericHttpGatewayConfig(contentType ContentType) *GenericHttpGatewayConfig {
	this := GenericHttpGatewayConfig{}
	this.ContentType = contentType
	return &this
}

// NewGenericHttpGatewayConfigWithDefaults instantiates a new GenericHttpGatewayConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericHttpGatewayConfigWithDefaults() *GenericHttpGatewayConfig {
	this := GenericHttpGatewayConfig{}
	return &this
}

// GetConfigurationTemplate returns the ConfigurationTemplate field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetConfigurationTemplate() string {
	if o == nil || IsNil(o.ConfigurationTemplate) {
		var ret string
		return ret
	}
	return *o.ConfigurationTemplate
}

// GetConfigurationTemplateOk returns a tuple with the ConfigurationTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetConfigurationTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigurationTemplate) {
		return nil, false
	}
	return o.ConfigurationTemplate, true
}

// HasConfigurationTemplate returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasConfigurationTemplate() bool {
	if o != nil && !IsNil(o.ConfigurationTemplate) {
		return true
	}

	return false
}

// SetConfigurationTemplate gets a reference to the given string and assigns it to the ConfigurationTemplate field.
func (o *GenericHttpGatewayConfig) SetConfigurationTemplate(v string) {
	o.ConfigurationTemplate = &v
}

// GetContentType returns the ContentType field value
func (o *GenericHttpGatewayConfig) GetContentType() ContentType {
	if o == nil {
		var ret ContentType
		return ret
	}

	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetContentTypeOk() (*ContentType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentType, true
}

// SetContentType sets field value
func (o *GenericHttpGatewayConfig) SetContentType(v ContentType) {
	o.ContentType = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GenericHttpGatewayConfig) SetId(v string) {
	o.Id = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *GenericHttpGatewayConfig) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetMaxSmsLength returns the MaxSmsLength field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetMaxSmsLength() string {
	if o == nil || IsNil(o.MaxSmsLength) {
		var ret string
		return ret
	}
	return *o.MaxSmsLength
}

// GetMaxSmsLengthOk returns a tuple with the MaxSmsLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetMaxSmsLengthOk() (*string, bool) {
	if o == nil || IsNil(o.MaxSmsLength) {
		return nil, false
	}
	return o.MaxSmsLength, true
}

// HasMaxSmsLength returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasMaxSmsLength() bool {
	if o != nil && !IsNil(o.MaxSmsLength) {
		return true
	}

	return false
}

// SetMaxSmsLength gets a reference to the given string and assigns it to the MaxSmsLength field.
func (o *GenericHttpGatewayConfig) SetMaxSmsLength(v string) {
	o.MaxSmsLength = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GenericHttpGatewayConfig) SetName(v string) {
	o.Name = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetParameters() []GenericGatewayParameter {
	if o == nil || IsNil(o.Parameters) {
		var ret []GenericGatewayParameter
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetParametersOk() ([]GenericGatewayParameter, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []GenericGatewayParameter and assigns it to the Parameters field.
func (o *GenericHttpGatewayConfig) SetParameters(v []GenericGatewayParameter) {
	o.Parameters = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *GenericHttpGatewayConfig) SetPassword(v string) {
	o.Password = &v
}

// GetSendUrlParameters returns the SendUrlParameters field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetSendUrlParameters() bool {
	if o == nil || IsNil(o.SendUrlParameters) {
		var ret bool
		return ret
	}
	return *o.SendUrlParameters
}

// GetSendUrlParametersOk returns a tuple with the SendUrlParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetSendUrlParametersOk() (*bool, bool) {
	if o == nil || IsNil(o.SendUrlParameters) {
		return nil, false
	}
	return o.SendUrlParameters, true
}

// HasSendUrlParameters returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasSendUrlParameters() bool {
	if o != nil && !IsNil(o.SendUrlParameters) {
		return true
	}

	return false
}

// SetSendUrlParameters gets a reference to the given bool and assigns it to the SendUrlParameters field.
func (o *GenericHttpGatewayConfig) SetSendUrlParameters(v bool) {
	o.SendUrlParameters = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *GenericHttpGatewayConfig) SetUid(v string) {
	o.Uid = &v
}

// GetUrlTemplate returns the UrlTemplate field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetUrlTemplate() string {
	if o == nil || IsNil(o.UrlTemplate) {
		var ret string
		return ret
	}
	return *o.UrlTemplate
}

// GetUrlTemplateOk returns a tuple with the UrlTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetUrlTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.UrlTemplate) {
		return nil, false
	}
	return o.UrlTemplate, true
}

// HasUrlTemplate returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasUrlTemplate() bool {
	if o != nil && !IsNil(o.UrlTemplate) {
		return true
	}

	return false
}

// SetUrlTemplate gets a reference to the given string and assigns it to the UrlTemplate field.
func (o *GenericHttpGatewayConfig) SetUrlTemplate(v string) {
	o.UrlTemplate = &v
}

// GetUseGet returns the UseGet field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetUseGet() bool {
	if o == nil || IsNil(o.UseGet) {
		var ret bool
		return ret
	}
	return *o.UseGet
}

// GetUseGetOk returns a tuple with the UseGet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetUseGetOk() (*bool, bool) {
	if o == nil || IsNil(o.UseGet) {
		return nil, false
	}
	return o.UseGet, true
}

// HasUseGet returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasUseGet() bool {
	if o != nil && !IsNil(o.UseGet) {
		return true
	}

	return false
}

// SetUseGet gets a reference to the given bool and assigns it to the UseGet field.
func (o *GenericHttpGatewayConfig) SetUseGet(v bool) {
	o.UseGet = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *GenericHttpGatewayConfig) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericHttpGatewayConfig) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *GenericHttpGatewayConfig) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *GenericHttpGatewayConfig) SetUsername(v string) {
	o.Username = &v
}

func (o GenericHttpGatewayConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericHttpGatewayConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigurationTemplate) {
		toSerialize["configurationTemplate"] = o.ConfigurationTemplate
	}
	toSerialize["contentType"] = o.ContentType
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	if !IsNil(o.MaxSmsLength) {
		toSerialize["maxSmsLength"] = o.MaxSmsLength
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.SendUrlParameters) {
		toSerialize["sendUrlParameters"] = o.SendUrlParameters
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.UrlTemplate) {
		toSerialize["urlTemplate"] = o.UrlTemplate
	}
	if !IsNil(o.UseGet) {
		toSerialize["useGet"] = o.UseGet
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

func (o *GenericHttpGatewayConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contentType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenericHttpGatewayConfig := _GenericHttpGatewayConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGenericHttpGatewayConfig)

	if err != nil {
		return err
	}

	*o = GenericHttpGatewayConfig(varGenericHttpGatewayConfig)

	return err
}

type NullableGenericHttpGatewayConfig struct {
	value *GenericHttpGatewayConfig
	isSet bool
}

func (v NullableGenericHttpGatewayConfig) Get() *GenericHttpGatewayConfig {
	return v.value
}

func (v *NullableGenericHttpGatewayConfig) Set(val *GenericHttpGatewayConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericHttpGatewayConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericHttpGatewayConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericHttpGatewayConfig(val *GenericHttpGatewayConfig) *NullableGenericHttpGatewayConfig {
	return &NullableGenericHttpGatewayConfig{value: val, isSet: true}
}

func (v NullableGenericHttpGatewayConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericHttpGatewayConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
