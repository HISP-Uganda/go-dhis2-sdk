/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesProgramStageWorkingList the model 'PropertyNamesProgramStageWorkingList'
type PropertyNamesProgramStageWorkingList string

// List of PropertyNames_ProgramStageWorkingList
const (
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_ACCESS                       PropertyNamesProgramStageWorkingList = "access"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_ATTRIBUTE_VALUES             PropertyNamesProgramStageWorkingList = "attributeValues"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_CODE                         PropertyNamesProgramStageWorkingList = "code"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_CREATED                      PropertyNamesProgramStageWorkingList = "created"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_CREATED_BY                   PropertyNamesProgramStageWorkingList = "createdBy"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_DESCRIPTION                  PropertyNamesProgramStageWorkingList = "description"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_DISPLAY_DESCRIPTION          PropertyNamesProgramStageWorkingList = "displayDescription"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_DISPLAY_NAME                 PropertyNamesProgramStageWorkingList = "displayName"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_EXTERNAL_ACCESS              PropertyNamesProgramStageWorkingList = "externalAccess"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_FAVORITE                     PropertyNamesProgramStageWorkingList = "favorite"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_FAVORITES                    PropertyNamesProgramStageWorkingList = "favorites"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_HREF                         PropertyNamesProgramStageWorkingList = "href"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_ID                           PropertyNamesProgramStageWorkingList = "id"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_LAST_UPDATED                 PropertyNamesProgramStageWorkingList = "lastUpdated"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_LAST_UPDATED_BY              PropertyNamesProgramStageWorkingList = "lastUpdatedBy"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_NAME                         PropertyNamesProgramStageWorkingList = "name"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_PROGRAM                      PropertyNamesProgramStageWorkingList = "program"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_PROGRAM_STAGE                PropertyNamesProgramStageWorkingList = "programStage"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_PROGRAM_STAGE_QUERY_CRITERIA PropertyNamesProgramStageWorkingList = "programStageQueryCriteria"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_PUBLIC_ACCESS                PropertyNamesProgramStageWorkingList = "publicAccess"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_SHARING                      PropertyNamesProgramStageWorkingList = "sharing"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_TRANSLATIONS                 PropertyNamesProgramStageWorkingList = "translations"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_USER                         PropertyNamesProgramStageWorkingList = "user"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_USER_ACCESSES                PropertyNamesProgramStageWorkingList = "userAccesses"
	PROPERTYNAMESPROGRAMSTAGEWORKINGLIST_USER_GROUP_ACCESSES          PropertyNamesProgramStageWorkingList = "userGroupAccesses"
)

// All allowed values of PropertyNamesProgramStageWorkingList enum
var AllowedPropertyNamesProgramStageWorkingListEnumValues = []PropertyNamesProgramStageWorkingList{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"description",
	"displayDescription",
	"displayName",
	"externalAccess",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"program",
	"programStage",
	"programStageQueryCriteria",
	"publicAccess",
	"sharing",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesProgramStageWorkingList) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesProgramStageWorkingList(value)
	for _, existing := range AllowedPropertyNamesProgramStageWorkingListEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesProgramStageWorkingList", value)
}

// NewPropertyNamesProgramStageWorkingListFromValue returns a pointer to a valid PropertyNamesProgramStageWorkingList
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesProgramStageWorkingListFromValue(v string) (*PropertyNamesProgramStageWorkingList, error) {
	ev := PropertyNamesProgramStageWorkingList(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesProgramStageWorkingList: valid values are %v", v, AllowedPropertyNamesProgramStageWorkingListEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesProgramStageWorkingList) IsValid() bool {
	for _, existing := range AllowedPropertyNamesProgramStageWorkingListEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_ProgramStageWorkingList value
func (v PropertyNamesProgramStageWorkingList) Ptr() *PropertyNamesProgramStageWorkingList {
	return &v
}

type NullablePropertyNamesProgramStageWorkingList struct {
	value *PropertyNamesProgramStageWorkingList
	isSet bool
}

func (v NullablePropertyNamesProgramStageWorkingList) Get() *PropertyNamesProgramStageWorkingList {
	return v.value
}

func (v *NullablePropertyNamesProgramStageWorkingList) Set(val *PropertyNamesProgramStageWorkingList) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesProgramStageWorkingList) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesProgramStageWorkingList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesProgramStageWorkingList(val *PropertyNamesProgramStageWorkingList) *NullablePropertyNamesProgramStageWorkingList {
	return &NullablePropertyNamesProgramStageWorkingList{value: val, isSet: true}
}

func (v NullablePropertyNamesProgramStageWorkingList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesProgramStageWorkingList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
