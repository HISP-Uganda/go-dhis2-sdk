/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesCategoryOptionGroupSet the model 'PropertyNamesCategoryOptionGroupSet'
type PropertyNamesCategoryOptionGroupSet string

// List of PropertyNames_CategoryOptionGroupSet
const (
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_ACCESS                  PropertyNamesCategoryOptionGroupSet = "access"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_AGGREGATION_TYPE        PropertyNamesCategoryOptionGroupSet = "aggregationType"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_ALL_ITEMS               PropertyNamesCategoryOptionGroupSet = "allItems"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_ATTRIBUTE_VALUES        PropertyNamesCategoryOptionGroupSet = "attributeValues"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_CATEGORY_OPTION_GROUPS  PropertyNamesCategoryOptionGroupSet = "categoryOptionGroups"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_CODE                    PropertyNamesCategoryOptionGroupSet = "code"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_CREATED                 PropertyNamesCategoryOptionGroupSet = "created"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_CREATED_BY              PropertyNamesCategoryOptionGroupSet = "createdBy"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_DATA_DIMENSION          PropertyNamesCategoryOptionGroupSet = "dataDimension"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_DATA_DIMENSION_TYPE     PropertyNamesCategoryOptionGroupSet = "dataDimensionType"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_DESCRIPTION             PropertyNamesCategoryOptionGroupSet = "description"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_DIMENSION               PropertyNamesCategoryOptionGroupSet = "dimension"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_DIMENSION_ITEM_KEYWORDS PropertyNamesCategoryOptionGroupSet = "dimensionItemKeywords"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_DISPLAY_DESCRIPTION     PropertyNamesCategoryOptionGroupSet = "displayDescription"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_DISPLAY_FORM_NAME       PropertyNamesCategoryOptionGroupSet = "displayFormName"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_DISPLAY_NAME            PropertyNamesCategoryOptionGroupSet = "displayName"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_DISPLAY_SHORT_NAME      PropertyNamesCategoryOptionGroupSet = "displayShortName"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_EXTERNAL_ACCESS         PropertyNamesCategoryOptionGroupSet = "externalAccess"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_FAVORITE                PropertyNamesCategoryOptionGroupSet = "favorite"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_FAVORITES               PropertyNamesCategoryOptionGroupSet = "favorites"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_FILTER                  PropertyNamesCategoryOptionGroupSet = "filter"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_FORM_NAME               PropertyNamesCategoryOptionGroupSet = "formName"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_HREF                    PropertyNamesCategoryOptionGroupSet = "href"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_ID                      PropertyNamesCategoryOptionGroupSet = "id"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_ITEMS                   PropertyNamesCategoryOptionGroupSet = "items"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_LAST_UPDATED            PropertyNamesCategoryOptionGroupSet = "lastUpdated"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_LAST_UPDATED_BY         PropertyNamesCategoryOptionGroupSet = "lastUpdatedBy"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_LEGEND_SET              PropertyNamesCategoryOptionGroupSet = "legendSet"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_NAME                    PropertyNamesCategoryOptionGroupSet = "name"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_OPTION_SET              PropertyNamesCategoryOptionGroupSet = "optionSet"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_PROGRAM_STAGE           PropertyNamesCategoryOptionGroupSet = "programStage"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_PUBLIC_ACCESS           PropertyNamesCategoryOptionGroupSet = "publicAccess"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_REPETITION              PropertyNamesCategoryOptionGroupSet = "repetition"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_SHARING                 PropertyNamesCategoryOptionGroupSet = "sharing"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_SHORT_NAME              PropertyNamesCategoryOptionGroupSet = "shortName"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_TRANSLATIONS            PropertyNamesCategoryOptionGroupSet = "translations"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_USER                    PropertyNamesCategoryOptionGroupSet = "user"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_USER_ACCESSES           PropertyNamesCategoryOptionGroupSet = "userAccesses"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_USER_GROUP_ACCESSES     PropertyNamesCategoryOptionGroupSet = "userGroupAccesses"
	PROPERTYNAMESCATEGORYOPTIONGROUPSET_VALUE_TYPE              PropertyNamesCategoryOptionGroupSet = "valueType"
)

// All allowed values of PropertyNamesCategoryOptionGroupSet enum
var AllowedPropertyNamesCategoryOptionGroupSetEnumValues = []PropertyNamesCategoryOptionGroupSet{
	"access",
	"aggregationType",
	"allItems",
	"attributeValues",
	"categoryOptionGroups",
	"code",
	"created",
	"createdBy",
	"dataDimension",
	"dataDimensionType",
	"description",
	"dimension",
	"dimensionItemKeywords",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"externalAccess",
	"favorite",
	"favorites",
	"filter",
	"formName",
	"href",
	"id",
	"items",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"name",
	"optionSet",
	"programStage",
	"publicAccess",
	"repetition",
	"sharing",
	"shortName",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"valueType",
}

func (v *PropertyNamesCategoryOptionGroupSet) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesCategoryOptionGroupSet(value)
	for _, existing := range AllowedPropertyNamesCategoryOptionGroupSetEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesCategoryOptionGroupSet", value)
}

// NewPropertyNamesCategoryOptionGroupSetFromValue returns a pointer to a valid PropertyNamesCategoryOptionGroupSet
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesCategoryOptionGroupSetFromValue(v string) (*PropertyNamesCategoryOptionGroupSet, error) {
	ev := PropertyNamesCategoryOptionGroupSet(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesCategoryOptionGroupSet: valid values are %v", v, AllowedPropertyNamesCategoryOptionGroupSetEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesCategoryOptionGroupSet) IsValid() bool {
	for _, existing := range AllowedPropertyNamesCategoryOptionGroupSetEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_CategoryOptionGroupSet value
func (v PropertyNamesCategoryOptionGroupSet) Ptr() *PropertyNamesCategoryOptionGroupSet {
	return &v
}

type NullablePropertyNamesCategoryOptionGroupSet struct {
	value *PropertyNamesCategoryOptionGroupSet
	isSet bool
}

func (v NullablePropertyNamesCategoryOptionGroupSet) Get() *PropertyNamesCategoryOptionGroupSet {
	return v.value
}

func (v *NullablePropertyNamesCategoryOptionGroupSet) Set(val *PropertyNamesCategoryOptionGroupSet) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesCategoryOptionGroupSet) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesCategoryOptionGroupSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesCategoryOptionGroupSet(val *PropertyNamesCategoryOptionGroupSet) *NullablePropertyNamesCategoryOptionGroupSet {
	return &NullablePropertyNamesCategoryOptionGroupSet{value: val, isSet: true}
}

func (v NullablePropertyNamesCategoryOptionGroupSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesCategoryOptionGroupSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
