/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesProgram the model 'PropertyNamesProgram'
type PropertyNamesProgram string

// List of PropertyNames_Program
const (
	PROPERTYNAMESPROGRAM_ACCESS                              PropertyNamesProgram = "access"
	PROPERTYNAMESPROGRAM_ACCESS_LEVEL                        PropertyNamesProgram = "accessLevel"
	PROPERTYNAMESPROGRAM_ATTRIBUTE_VALUES                    PropertyNamesProgram = "attributeValues"
	PROPERTYNAMESPROGRAM_CATEGORY_COMBO                      PropertyNamesProgram = "categoryCombo"
	PROPERTYNAMESPROGRAM_CODE                                PropertyNamesProgram = "code"
	PROPERTYNAMESPROGRAM_COMPLETE_EVENTS_EXPIRY_DAYS         PropertyNamesProgram = "completeEventsExpiryDays"
	PROPERTYNAMESPROGRAM_CREATED                             PropertyNamesProgram = "created"
	PROPERTYNAMESPROGRAM_CREATED_BY                          PropertyNamesProgram = "createdBy"
	PROPERTYNAMESPROGRAM_DATA_ENTRY_FORM                     PropertyNamesProgram = "dataEntryForm"
	PROPERTYNAMESPROGRAM_DESCRIPTION                         PropertyNamesProgram = "description"
	PROPERTYNAMESPROGRAM_DISPLAY_DESCRIPTION                 PropertyNamesProgram = "displayDescription"
	PROPERTYNAMESPROGRAM_DISPLAY_ENROLLMENT_DATE_LABEL       PropertyNamesProgram = "displayEnrollmentDateLabel"
	PROPERTYNAMESPROGRAM_DISPLAY_FORM_NAME                   PropertyNamesProgram = "displayFormName"
	PROPERTYNAMESPROGRAM_DISPLAY_FRONT_PAGE_LIST             PropertyNamesProgram = "displayFrontPageList"
	PROPERTYNAMESPROGRAM_DISPLAY_INCIDENT_DATE               PropertyNamesProgram = "displayIncidentDate"
	PROPERTYNAMESPROGRAM_DISPLAY_INCIDENT_DATE_LABEL         PropertyNamesProgram = "displayIncidentDateLabel"
	PROPERTYNAMESPROGRAM_DISPLAY_NAME                        PropertyNamesProgram = "displayName"
	PROPERTYNAMESPROGRAM_DISPLAY_SHORT_NAME                  PropertyNamesProgram = "displayShortName"
	PROPERTYNAMESPROGRAM_ENROLLMENT_DATE_LABEL               PropertyNamesProgram = "enrollmentDateLabel"
	PROPERTYNAMESPROGRAM_EXPIRY_DAYS                         PropertyNamesProgram = "expiryDays"
	PROPERTYNAMESPROGRAM_EXPIRY_PERIOD_TYPE                  PropertyNamesProgram = "expiryPeriodType"
	PROPERTYNAMESPROGRAM_EXTERNAL_ACCESS                     PropertyNamesProgram = "externalAccess"
	PROPERTYNAMESPROGRAM_FAVORITE                            PropertyNamesProgram = "favorite"
	PROPERTYNAMESPROGRAM_FAVORITES                           PropertyNamesProgram = "favorites"
	PROPERTYNAMESPROGRAM_FEATURE_TYPE                        PropertyNamesProgram = "featureType"
	PROPERTYNAMESPROGRAM_FORM_NAME                           PropertyNamesProgram = "formName"
	PROPERTYNAMESPROGRAM_HREF                                PropertyNamesProgram = "href"
	PROPERTYNAMESPROGRAM_ID                                  PropertyNamesProgram = "id"
	PROPERTYNAMESPROGRAM_IGNORE_OVERDUE_EVENTS               PropertyNamesProgram = "ignoreOverdueEvents"
	PROPERTYNAMESPROGRAM_INCIDENT_DATE_LABEL                 PropertyNamesProgram = "incidentDateLabel"
	PROPERTYNAMESPROGRAM_LAST_UPDATED                        PropertyNamesProgram = "lastUpdated"
	PROPERTYNAMESPROGRAM_LAST_UPDATED_BY                     PropertyNamesProgram = "lastUpdatedBy"
	PROPERTYNAMESPROGRAM_MAX_TEI_COUNT_TO_RETURN             PropertyNamesProgram = "maxTeiCountToReturn"
	PROPERTYNAMESPROGRAM_MIN_ATTRIBUTES_REQUIRED_TO_SEARCH   PropertyNamesProgram = "minAttributesRequiredToSearch"
	PROPERTYNAMESPROGRAM_NAME                                PropertyNamesProgram = "name"
	PROPERTYNAMESPROGRAM_NOTIFICATION_TEMPLATES              PropertyNamesProgram = "notificationTemplates"
	PROPERTYNAMESPROGRAM_ONLY_ENROLL_ONCE                    PropertyNamesProgram = "onlyEnrollOnce"
	PROPERTYNAMESPROGRAM_OPEN_DAYS_AFTER_CO_END_DATE         PropertyNamesProgram = "openDaysAfterCoEndDate"
	PROPERTYNAMESPROGRAM_ORGANISATION_UNITS                  PropertyNamesProgram = "organisationUnits"
	PROPERTYNAMESPROGRAM_PROGRAM_INDICATORS                  PropertyNamesProgram = "programIndicators"
	PROPERTYNAMESPROGRAM_PROGRAM_RULE_VARIABLES              PropertyNamesProgram = "programRuleVariables"
	PROPERTYNAMESPROGRAM_PROGRAM_SECTIONS                    PropertyNamesProgram = "programSections"
	PROPERTYNAMESPROGRAM_PROGRAM_STAGES                      PropertyNamesProgram = "programStages"
	PROPERTYNAMESPROGRAM_PROGRAM_TRACKED_ENTITY_ATTRIBUTES   PropertyNamesProgram = "programTrackedEntityAttributes"
	PROPERTYNAMESPROGRAM_PROGRAM_TYPE                        PropertyNamesProgram = "programType"
	PROPERTYNAMESPROGRAM_PUBLIC_ACCESS                       PropertyNamesProgram = "publicAccess"
	PROPERTYNAMESPROGRAM_REGISTRATION                        PropertyNamesProgram = "registration"
	PROPERTYNAMESPROGRAM_RELATED_PROGRAM                     PropertyNamesProgram = "relatedProgram"
	PROPERTYNAMESPROGRAM_SELECT_ENROLLMENT_DATES_IN_FUTURE   PropertyNamesProgram = "selectEnrollmentDatesInFuture"
	PROPERTYNAMESPROGRAM_SELECT_INCIDENT_DATES_IN_FUTURE     PropertyNamesProgram = "selectIncidentDatesInFuture"
	PROPERTYNAMESPROGRAM_SHARING                             PropertyNamesProgram = "sharing"
	PROPERTYNAMESPROGRAM_SHORT_NAME                          PropertyNamesProgram = "shortName"
	PROPERTYNAMESPROGRAM_SKIP_OFFLINE                        PropertyNamesProgram = "skipOffline"
	PROPERTYNAMESPROGRAM_STYLE                               PropertyNamesProgram = "style"
	PROPERTYNAMESPROGRAM_TRACKED_ENTITY_TYPE                 PropertyNamesProgram = "trackedEntityType"
	PROPERTYNAMESPROGRAM_TRANSLATIONS                        PropertyNamesProgram = "translations"
	PROPERTYNAMESPROGRAM_USE_FIRST_STAGE_DURING_REGISTRATION PropertyNamesProgram = "useFirstStageDuringRegistration"
	PROPERTYNAMESPROGRAM_USER                                PropertyNamesProgram = "user"
	PROPERTYNAMESPROGRAM_USER_ACCESSES                       PropertyNamesProgram = "userAccesses"
	PROPERTYNAMESPROGRAM_USER_GROUP_ACCESSES                 PropertyNamesProgram = "userGroupAccesses"
	PROPERTYNAMESPROGRAM_USER_ROLES                          PropertyNamesProgram = "userRoles"
	PROPERTYNAMESPROGRAM_VERSION                             PropertyNamesProgram = "version"
	PROPERTYNAMESPROGRAM_WITHOUT_REGISTRATION                PropertyNamesProgram = "withoutRegistration"
)

// All allowed values of PropertyNamesProgram enum
var AllowedPropertyNamesProgramEnumValues = []PropertyNamesProgram{
	"access",
	"accessLevel",
	"attributeValues",
	"categoryCombo",
	"code",
	"completeEventsExpiryDays",
	"created",
	"createdBy",
	"dataEntryForm",
	"description",
	"displayDescription",
	"displayEnrollmentDateLabel",
	"displayFormName",
	"displayFrontPageList",
	"displayIncidentDate",
	"displayIncidentDateLabel",
	"displayName",
	"displayShortName",
	"enrollmentDateLabel",
	"expiryDays",
	"expiryPeriodType",
	"externalAccess",
	"favorite",
	"favorites",
	"featureType",
	"formName",
	"href",
	"id",
	"ignoreOverdueEvents",
	"incidentDateLabel",
	"lastUpdated",
	"lastUpdatedBy",
	"maxTeiCountToReturn",
	"minAttributesRequiredToSearch",
	"name",
	"notificationTemplates",
	"onlyEnrollOnce",
	"openDaysAfterCoEndDate",
	"organisationUnits",
	"programIndicators",
	"programRuleVariables",
	"programSections",
	"programStages",
	"programTrackedEntityAttributes",
	"programType",
	"publicAccess",
	"registration",
	"relatedProgram",
	"selectEnrollmentDatesInFuture",
	"selectIncidentDatesInFuture",
	"sharing",
	"shortName",
	"skipOffline",
	"style",
	"trackedEntityType",
	"translations",
	"useFirstStageDuringRegistration",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"userRoles",
	"version",
	"withoutRegistration",
}

func (v *PropertyNamesProgram) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesProgram(value)
	for _, existing := range AllowedPropertyNamesProgramEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesProgram", value)
}

// NewPropertyNamesProgramFromValue returns a pointer to a valid PropertyNamesProgram
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesProgramFromValue(v string) (*PropertyNamesProgram, error) {
	ev := PropertyNamesProgram(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesProgram: valid values are %v", v, AllowedPropertyNamesProgramEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesProgram) IsValid() bool {
	for _, existing := range AllowedPropertyNamesProgramEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_Program value
func (v PropertyNamesProgram) Ptr() *PropertyNamesProgram {
	return &v
}

type NullablePropertyNamesProgram struct {
	value *PropertyNamesProgram
	isSet bool
}

func (v NullablePropertyNamesProgram) Get() *PropertyNamesProgram {
	return v.value
}

func (v *NullablePropertyNamesProgram) Set(val *PropertyNamesProgram) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesProgram) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesProgram) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesProgram(val *PropertyNamesProgram) *NullablePropertyNamesProgram {
	return &NullablePropertyNamesProgram{value: val, isSet: true}
}

func (v NullablePropertyNamesProgram) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesProgram) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
