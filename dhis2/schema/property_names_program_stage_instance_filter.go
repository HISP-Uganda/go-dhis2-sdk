/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesProgramStageInstanceFilter the model 'PropertyNamesProgramStageInstanceFilter'
type PropertyNamesProgramStageInstanceFilter string

// List of PropertyNames_ProgramStageInstanceFilter
const (
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_ACCESS               PropertyNamesProgramStageInstanceFilter = "access"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_ATTRIBUTE_VALUES     PropertyNamesProgramStageInstanceFilter = "attributeValues"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_CODE                 PropertyNamesProgramStageInstanceFilter = "code"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_CREATED              PropertyNamesProgramStageInstanceFilter = "created"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_CREATED_BY           PropertyNamesProgramStageInstanceFilter = "createdBy"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_DESCRIPTION          PropertyNamesProgramStageInstanceFilter = "description"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_DISPLAY_DESCRIPTION  PropertyNamesProgramStageInstanceFilter = "displayDescription"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_DISPLAY_NAME         PropertyNamesProgramStageInstanceFilter = "displayName"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_EVENT_QUERY_CRITERIA PropertyNamesProgramStageInstanceFilter = "eventQueryCriteria"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_EXTERNAL_ACCESS      PropertyNamesProgramStageInstanceFilter = "externalAccess"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_FAVORITE             PropertyNamesProgramStageInstanceFilter = "favorite"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_FAVORITES            PropertyNamesProgramStageInstanceFilter = "favorites"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_HREF                 PropertyNamesProgramStageInstanceFilter = "href"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_ID                   PropertyNamesProgramStageInstanceFilter = "id"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_LAST_UPDATED         PropertyNamesProgramStageInstanceFilter = "lastUpdated"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_LAST_UPDATED_BY      PropertyNamesProgramStageInstanceFilter = "lastUpdatedBy"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_NAME                 PropertyNamesProgramStageInstanceFilter = "name"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_PROGRAM              PropertyNamesProgramStageInstanceFilter = "program"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_PROGRAM_STAGE        PropertyNamesProgramStageInstanceFilter = "programStage"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_PUBLIC_ACCESS        PropertyNamesProgramStageInstanceFilter = "publicAccess"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_SHARING              PropertyNamesProgramStageInstanceFilter = "sharing"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_TRANSLATIONS         PropertyNamesProgramStageInstanceFilter = "translations"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_USER                 PropertyNamesProgramStageInstanceFilter = "user"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_USER_ACCESSES        PropertyNamesProgramStageInstanceFilter = "userAccesses"
	PROPERTYNAMESPROGRAMSTAGEINSTANCEFILTER_USER_GROUP_ACCESSES  PropertyNamesProgramStageInstanceFilter = "userGroupAccesses"
)

// All allowed values of PropertyNamesProgramStageInstanceFilter enum
var AllowedPropertyNamesProgramStageInstanceFilterEnumValues = []PropertyNamesProgramStageInstanceFilter{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"description",
	"displayDescription",
	"displayName",
	"eventQueryCriteria",
	"externalAccess",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"program",
	"programStage",
	"publicAccess",
	"sharing",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesProgramStageInstanceFilter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesProgramStageInstanceFilter(value)
	for _, existing := range AllowedPropertyNamesProgramStageInstanceFilterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesProgramStageInstanceFilter", value)
}

// NewPropertyNamesProgramStageInstanceFilterFromValue returns a pointer to a valid PropertyNamesProgramStageInstanceFilter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesProgramStageInstanceFilterFromValue(v string) (*PropertyNamesProgramStageInstanceFilter, error) {
	ev := PropertyNamesProgramStageInstanceFilter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesProgramStageInstanceFilter: valid values are %v", v, AllowedPropertyNamesProgramStageInstanceFilterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesProgramStageInstanceFilter) IsValid() bool {
	for _, existing := range AllowedPropertyNamesProgramStageInstanceFilterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_ProgramStageInstanceFilter value
func (v PropertyNamesProgramStageInstanceFilter) Ptr() *PropertyNamesProgramStageInstanceFilter {
	return &v
}

type NullablePropertyNamesProgramStageInstanceFilter struct {
	value *PropertyNamesProgramStageInstanceFilter
	isSet bool
}

func (v NullablePropertyNamesProgramStageInstanceFilter) Get() *PropertyNamesProgramStageInstanceFilter {
	return v.value
}

func (v *NullablePropertyNamesProgramStageInstanceFilter) Set(val *PropertyNamesProgramStageInstanceFilter) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesProgramStageInstanceFilter) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesProgramStageInstanceFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesProgramStageInstanceFilter(val *PropertyNamesProgramStageInstanceFilter) *NullablePropertyNamesProgramStageInstanceFilter {
	return &NullablePropertyNamesProgramStageInstanceFilter{value: val, isSet: true}
}

func (v NullablePropertyNamesProgramStageInstanceFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesProgramStageInstanceFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
