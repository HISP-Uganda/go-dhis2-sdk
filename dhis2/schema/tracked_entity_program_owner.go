/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the TrackedEntityProgramOwner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackedEntityProgramOwner{}

// TrackedEntityProgramOwner struct for TrackedEntityProgramOwner
type TrackedEntityProgramOwner struct {
	OrganisationUnit      *CategoryOptionOrganisationUnitsInner          `json:"organisationUnit,omitempty"`
	Program               *EventVisualizationProgram                     `json:"program,omitempty"`
	TrackedEntityInstance *ProgramMessageRecipientsTrackedEntityInstance `json:"trackedEntityInstance,omitempty"`
}

// NewTrackedEntityProgramOwner instantiates a new TrackedEntityProgramOwner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackedEntityProgramOwner() *TrackedEntityProgramOwner {
	this := TrackedEntityProgramOwner{}
	return &this
}

// NewTrackedEntityProgramOwnerWithDefaults instantiates a new TrackedEntityProgramOwner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackedEntityProgramOwnerWithDefaults() *TrackedEntityProgramOwner {
	this := TrackedEntityProgramOwner{}
	return &this
}

// GetOrganisationUnit returns the OrganisationUnit field value if set, zero value otherwise.
func (o *TrackedEntityProgramOwner) GetOrganisationUnit() CategoryOptionOrganisationUnitsInner {
	if o == nil || IsNil(o.OrganisationUnit) {
		var ret CategoryOptionOrganisationUnitsInner
		return ret
	}
	return *o.OrganisationUnit
}

// GetOrganisationUnitOk returns a tuple with the OrganisationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityProgramOwner) GetOrganisationUnitOk() (*CategoryOptionOrganisationUnitsInner, bool) {
	if o == nil || IsNil(o.OrganisationUnit) {
		return nil, false
	}
	return o.OrganisationUnit, true
}

// HasOrganisationUnit returns a boolean if a field has been set.
func (o *TrackedEntityProgramOwner) HasOrganisationUnit() bool {
	if o != nil && !IsNil(o.OrganisationUnit) {
		return true
	}

	return false
}

// SetOrganisationUnit gets a reference to the given CategoryOptionOrganisationUnitsInner and assigns it to the OrganisationUnit field.
func (o *TrackedEntityProgramOwner) SetOrganisationUnit(v CategoryOptionOrganisationUnitsInner) {
	o.OrganisationUnit = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *TrackedEntityProgramOwner) GetProgram() EventVisualizationProgram {
	if o == nil || IsNil(o.Program) {
		var ret EventVisualizationProgram
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityProgramOwner) GetProgramOk() (*EventVisualizationProgram, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *TrackedEntityProgramOwner) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given EventVisualizationProgram and assigns it to the Program field.
func (o *TrackedEntityProgramOwner) SetProgram(v EventVisualizationProgram) {
	o.Program = &v
}

// GetTrackedEntityInstance returns the TrackedEntityInstance field value if set, zero value otherwise.
func (o *TrackedEntityProgramOwner) GetTrackedEntityInstance() ProgramMessageRecipientsTrackedEntityInstance {
	if o == nil || IsNil(o.TrackedEntityInstance) {
		var ret ProgramMessageRecipientsTrackedEntityInstance
		return ret
	}
	return *o.TrackedEntityInstance
}

// GetTrackedEntityInstanceOk returns a tuple with the TrackedEntityInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityProgramOwner) GetTrackedEntityInstanceOk() (*ProgramMessageRecipientsTrackedEntityInstance, bool) {
	if o == nil || IsNil(o.TrackedEntityInstance) {
		return nil, false
	}
	return o.TrackedEntityInstance, true
}

// HasTrackedEntityInstance returns a boolean if a field has been set.
func (o *TrackedEntityProgramOwner) HasTrackedEntityInstance() bool {
	if o != nil && !IsNil(o.TrackedEntityInstance) {
		return true
	}

	return false
}

// SetTrackedEntityInstance gets a reference to the given ProgramMessageRecipientsTrackedEntityInstance and assigns it to the TrackedEntityInstance field.
func (o *TrackedEntityProgramOwner) SetTrackedEntityInstance(v ProgramMessageRecipientsTrackedEntityInstance) {
	o.TrackedEntityInstance = &v
}

func (o TrackedEntityProgramOwner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackedEntityProgramOwner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganisationUnit) {
		toSerialize["organisationUnit"] = o.OrganisationUnit
	}
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.TrackedEntityInstance) {
		toSerialize["trackedEntityInstance"] = o.TrackedEntityInstance
	}
	return toSerialize, nil
}

type NullableTrackedEntityProgramOwner struct {
	value *TrackedEntityProgramOwner
	isSet bool
}

func (v NullableTrackedEntityProgramOwner) Get() *TrackedEntityProgramOwner {
	return v.value
}

func (v *NullableTrackedEntityProgramOwner) Set(val *TrackedEntityProgramOwner) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackedEntityProgramOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackedEntityProgramOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackedEntityProgramOwner(val *TrackedEntityProgramOwner) *NullableTrackedEntityProgramOwner {
	return &NullableTrackedEntityProgramOwner{value: val, isSet: true}
}

func (v NullableTrackedEntityProgramOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackedEntityProgramOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
