/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// Dhis2OAuth2AuthorizationPropertyNames the model 'Dhis2OAuth2AuthorizationPropertyNames'
type Dhis2OAuth2AuthorizationPropertyNames string

// List of Dhis2OAuth2AuthorizationPropertyNames
const (
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_ACCESS                        Dhis2OAuth2AuthorizationPropertyNames = "access"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_ACCESS_TOKEN_EXPIRES_AT       Dhis2OAuth2AuthorizationPropertyNames = "accessTokenExpiresAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_ACCESS_TOKEN_ISSUED_AT        Dhis2OAuth2AuthorizationPropertyNames = "accessTokenIssuedAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_ACCESS_TOKEN_METADATA         Dhis2OAuth2AuthorizationPropertyNames = "accessTokenMetadata"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_ACCESS_TOKEN_SCOPES           Dhis2OAuth2AuthorizationPropertyNames = "accessTokenScopes"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_ACCESS_TOKEN_TYPE             Dhis2OAuth2AuthorizationPropertyNames = "accessTokenType"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_ACCESS_TOKEN_VALUE            Dhis2OAuth2AuthorizationPropertyNames = "accessTokenValue"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_ATTRIBUTE_VALUES              Dhis2OAuth2AuthorizationPropertyNames = "attributeValues"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_ATTRIBUTES                    Dhis2OAuth2AuthorizationPropertyNames = "attributes"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_AUTHORIZATION_CODE_EXPIRES_AT Dhis2OAuth2AuthorizationPropertyNames = "authorizationCodeExpiresAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_AUTHORIZATION_CODE_ISSUED_AT  Dhis2OAuth2AuthorizationPropertyNames = "authorizationCodeIssuedAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_AUTHORIZATION_CODE_METADATA   Dhis2OAuth2AuthorizationPropertyNames = "authorizationCodeMetadata"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_AUTHORIZATION_CODE_VALUE      Dhis2OAuth2AuthorizationPropertyNames = "authorizationCodeValue"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_AUTHORIZATION_GRANT_TYPE      Dhis2OAuth2AuthorizationPropertyNames = "authorizationGrantType"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_AUTHORIZED_SCOPES             Dhis2OAuth2AuthorizationPropertyNames = "authorizedScopes"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_CODE                          Dhis2OAuth2AuthorizationPropertyNames = "code"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_CREATED                       Dhis2OAuth2AuthorizationPropertyNames = "created"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_CREATED_BY                    Dhis2OAuth2AuthorizationPropertyNames = "createdBy"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_DEVICE_CODE_EXPIRES_AT        Dhis2OAuth2AuthorizationPropertyNames = "deviceCodeExpiresAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_DEVICE_CODE_ISSUED_AT         Dhis2OAuth2AuthorizationPropertyNames = "deviceCodeIssuedAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_DEVICE_CODE_METADATA          Dhis2OAuth2AuthorizationPropertyNames = "deviceCodeMetadata"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_DEVICE_CODE_VALUE             Dhis2OAuth2AuthorizationPropertyNames = "deviceCodeValue"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_DISPLAY_NAME                  Dhis2OAuth2AuthorizationPropertyNames = "displayName"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_FAVORITE                      Dhis2OAuth2AuthorizationPropertyNames = "favorite"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_FAVORITES                     Dhis2OAuth2AuthorizationPropertyNames = "favorites"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_HREF                          Dhis2OAuth2AuthorizationPropertyNames = "href"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_ID                            Dhis2OAuth2AuthorizationPropertyNames = "id"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_LAST_UPDATED                  Dhis2OAuth2AuthorizationPropertyNames = "lastUpdated"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_LAST_UPDATED_BY               Dhis2OAuth2AuthorizationPropertyNames = "lastUpdatedBy"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_NAME                          Dhis2OAuth2AuthorizationPropertyNames = "name"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_OIDC_ID_TOKEN_CLAIMS          Dhis2OAuth2AuthorizationPropertyNames = "oidcIdTokenClaims"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_OIDC_ID_TOKEN_EXPIRES_AT      Dhis2OAuth2AuthorizationPropertyNames = "oidcIdTokenExpiresAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_OIDC_ID_TOKEN_ISSUED_AT       Dhis2OAuth2AuthorizationPropertyNames = "oidcIdTokenIssuedAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_OIDC_ID_TOKEN_METADATA        Dhis2OAuth2AuthorizationPropertyNames = "oidcIdTokenMetadata"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_OIDC_ID_TOKEN_VALUE           Dhis2OAuth2AuthorizationPropertyNames = "oidcIdTokenValue"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_PRINCIPAL_NAME                Dhis2OAuth2AuthorizationPropertyNames = "principalName"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_REFRESH_TOKEN_EXPIRES_AT      Dhis2OAuth2AuthorizationPropertyNames = "refreshTokenExpiresAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_REFRESH_TOKEN_ISSUED_AT       Dhis2OAuth2AuthorizationPropertyNames = "refreshTokenIssuedAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_REFRESH_TOKEN_METADATA        Dhis2OAuth2AuthorizationPropertyNames = "refreshTokenMetadata"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_REFRESH_TOKEN_VALUE           Dhis2OAuth2AuthorizationPropertyNames = "refreshTokenValue"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_REGISTERED_CLIENT_ID          Dhis2OAuth2AuthorizationPropertyNames = "registeredClientId"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_SHARING                       Dhis2OAuth2AuthorizationPropertyNames = "sharing"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_STATE                         Dhis2OAuth2AuthorizationPropertyNames = "state"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_TRANSLATIONS                  Dhis2OAuth2AuthorizationPropertyNames = "translations"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_USER_CODE_EXPIRES_AT          Dhis2OAuth2AuthorizationPropertyNames = "userCodeExpiresAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_USER_CODE_ISSUED_AT           Dhis2OAuth2AuthorizationPropertyNames = "userCodeIssuedAt"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_USER_CODE_METADATA            Dhis2OAuth2AuthorizationPropertyNames = "userCodeMetadata"
	DHIS2OAUTH2AUTHORIZATIONPROPERTYNAMES_USER_CODE_VALUE               Dhis2OAuth2AuthorizationPropertyNames = "userCodeValue"
)

// All allowed values of Dhis2OAuth2AuthorizationPropertyNames enum
var AllowedDhis2OAuth2AuthorizationPropertyNamesEnumValues = []Dhis2OAuth2AuthorizationPropertyNames{
	"access",
	"accessTokenExpiresAt",
	"accessTokenIssuedAt",
	"accessTokenMetadata",
	"accessTokenScopes",
	"accessTokenType",
	"accessTokenValue",
	"attributeValues",
	"attributes",
	"authorizationCodeExpiresAt",
	"authorizationCodeIssuedAt",
	"authorizationCodeMetadata",
	"authorizationCodeValue",
	"authorizationGrantType",
	"authorizedScopes",
	"code",
	"created",
	"createdBy",
	"deviceCodeExpiresAt",
	"deviceCodeIssuedAt",
	"deviceCodeMetadata",
	"deviceCodeValue",
	"displayName",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"oidcIdTokenClaims",
	"oidcIdTokenExpiresAt",
	"oidcIdTokenIssuedAt",
	"oidcIdTokenMetadata",
	"oidcIdTokenValue",
	"principalName",
	"refreshTokenExpiresAt",
	"refreshTokenIssuedAt",
	"refreshTokenMetadata",
	"refreshTokenValue",
	"registeredClientId",
	"sharing",
	"state",
	"translations",
	"userCodeExpiresAt",
	"userCodeIssuedAt",
	"userCodeMetadata",
	"userCodeValue",
}

func (v *Dhis2OAuth2AuthorizationPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Dhis2OAuth2AuthorizationPropertyNames(value)
	for _, existing := range AllowedDhis2OAuth2AuthorizationPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Dhis2OAuth2AuthorizationPropertyNames", value)
}

// NewDhis2OAuth2AuthorizationPropertyNamesFromValue returns a pointer to a valid Dhis2OAuth2AuthorizationPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDhis2OAuth2AuthorizationPropertyNamesFromValue(v string) (*Dhis2OAuth2AuthorizationPropertyNames, error) {
	ev := Dhis2OAuth2AuthorizationPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Dhis2OAuth2AuthorizationPropertyNames: valid values are %v", v, AllowedDhis2OAuth2AuthorizationPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Dhis2OAuth2AuthorizationPropertyNames) IsValid() bool {
	for _, existing := range AllowedDhis2OAuth2AuthorizationPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Dhis2OAuth2AuthorizationPropertyNames value
func (v Dhis2OAuth2AuthorizationPropertyNames) Ptr() *Dhis2OAuth2AuthorizationPropertyNames {
	return &v
}

type NullableDhis2OAuth2AuthorizationPropertyNames struct {
	value *Dhis2OAuth2AuthorizationPropertyNames
	isSet bool
}

func (v NullableDhis2OAuth2AuthorizationPropertyNames) Get() *Dhis2OAuth2AuthorizationPropertyNames {
	return v.value
}

func (v *NullableDhis2OAuth2AuthorizationPropertyNames) Set(val *Dhis2OAuth2AuthorizationPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableDhis2OAuth2AuthorizationPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableDhis2OAuth2AuthorizationPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhis2OAuth2AuthorizationPropertyNames(val *Dhis2OAuth2AuthorizationPropertyNames) *NullableDhis2OAuth2AuthorizationPropertyNames {
	return &NullableDhis2OAuth2AuthorizationPropertyNames{value: val, isSet: true}
}

func (v NullableDhis2OAuth2AuthorizationPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhis2OAuth2AuthorizationPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
