/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// DataEntryFormPropertyNames the model 'DataEntryFormPropertyNames'
type DataEntryFormPropertyNames string

// List of DataEntryFormPropertyNames
const (
	DATAENTRYFORMPROPERTYNAMES_ACCESS           DataEntryFormPropertyNames = "access"
	DATAENTRYFORMPROPERTYNAMES_ATTRIBUTE_VALUES DataEntryFormPropertyNames = "attributeValues"
	DATAENTRYFORMPROPERTYNAMES_CODE             DataEntryFormPropertyNames = "code"
	DATAENTRYFORMPROPERTYNAMES_CREATED          DataEntryFormPropertyNames = "created"
	DATAENTRYFORMPROPERTYNAMES_CREATED_BY       DataEntryFormPropertyNames = "createdBy"
	DATAENTRYFORMPROPERTYNAMES_DISPLAY_NAME     DataEntryFormPropertyNames = "displayName"
	DATAENTRYFORMPROPERTYNAMES_FAVORITE         DataEntryFormPropertyNames = "favorite"
	DATAENTRYFORMPROPERTYNAMES_FAVORITES        DataEntryFormPropertyNames = "favorites"
	DATAENTRYFORMPROPERTYNAMES_FORMAT           DataEntryFormPropertyNames = "format"
	DATAENTRYFORMPROPERTYNAMES_HREF             DataEntryFormPropertyNames = "href"
	DATAENTRYFORMPROPERTYNAMES_HTML_CODE        DataEntryFormPropertyNames = "htmlCode"
	DATAENTRYFORMPROPERTYNAMES_ID               DataEntryFormPropertyNames = "id"
	DATAENTRYFORMPROPERTYNAMES_LAST_UPDATED     DataEntryFormPropertyNames = "lastUpdated"
	DATAENTRYFORMPROPERTYNAMES_LAST_UPDATED_BY  DataEntryFormPropertyNames = "lastUpdatedBy"
	DATAENTRYFORMPROPERTYNAMES_NAME             DataEntryFormPropertyNames = "name"
	DATAENTRYFORMPROPERTYNAMES_SHARING          DataEntryFormPropertyNames = "sharing"
	DATAENTRYFORMPROPERTYNAMES_STYLE            DataEntryFormPropertyNames = "style"
	DATAENTRYFORMPROPERTYNAMES_TRANSLATIONS     DataEntryFormPropertyNames = "translations"
)

// All allowed values of DataEntryFormPropertyNames enum
var AllowedDataEntryFormPropertyNamesEnumValues = []DataEntryFormPropertyNames{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"displayName",
	"favorite",
	"favorites",
	"format",
	"href",
	"htmlCode",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"sharing",
	"style",
	"translations",
}

func (v *DataEntryFormPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DataEntryFormPropertyNames(value)
	for _, existing := range AllowedDataEntryFormPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DataEntryFormPropertyNames", value)
}

// NewDataEntryFormPropertyNamesFromValue returns a pointer to a valid DataEntryFormPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDataEntryFormPropertyNamesFromValue(v string) (*DataEntryFormPropertyNames, error) {
	ev := DataEntryFormPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DataEntryFormPropertyNames: valid values are %v", v, AllowedDataEntryFormPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DataEntryFormPropertyNames) IsValid() bool {
	for _, existing := range AllowedDataEntryFormPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DataEntryFormPropertyNames value
func (v DataEntryFormPropertyNames) Ptr() *DataEntryFormPropertyNames {
	return &v
}

type NullableDataEntryFormPropertyNames struct {
	value *DataEntryFormPropertyNames
	isSet bool
}

func (v NullableDataEntryFormPropertyNames) Get() *DataEntryFormPropertyNames {
	return v.value
}

func (v *NullableDataEntryFormPropertyNames) Set(val *DataEntryFormPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableDataEntryFormPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableDataEntryFormPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataEntryFormPropertyNames(val *DataEntryFormPropertyNames) *NullableDataEntryFormPropertyNames {
	return &NullableDataEntryFormPropertyNames{value: val, isSet: true}
}

func (v NullableDataEntryFormPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataEntryFormPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
