/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the DataApprovalWorkflowParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataApprovalWorkflowParams{}

// DataApprovalWorkflowParams struct for DataApprovalWorkflowParams
type DataApprovalWorkflowParams struct {
	AttributeValues    []AttributeValueParams                              `json:"attributeValues,omitempty"`
	CategoryCombo      *CategoryComboParams                                `json:"categoryCombo,omitempty"`
	Code               *string                                             `json:"code,omitempty"`
	Created            *time.Time                                          `json:"created,omitempty"`
	CreatedBy          *AggregateDataExchangeParamsCreatedBy               `json:"createdBy,omitempty"`
	DataApprovalLevels []DataApprovalWorkflowParamsDataApprovalLevelsInner `json:"dataApprovalLevels,omitempty"`
	DataSets           []DataApprovalWorkflowParamsDataSetsInner           `json:"dataSets,omitempty"`
	DisplayName        *string                                             `json:"displayName,omitempty"`
	Favorite           *bool                                               `json:"favorite,omitempty"`
	Favorites          []string                                            `json:"favorites,omitempty"`
	Id                 *string                                             `json:"id,omitempty"`
	LastUpdated        *time.Time                                          `json:"lastUpdated,omitempty"`
	LastUpdatedBy      *AggregateDataExchangeParamsCreatedBy               `json:"lastUpdatedBy,omitempty"`
	Name               *string                                             `json:"name,omitempty"`
	PeriodType         *string                                             `json:"periodType,omitempty"`
	Sharing            *Sharing                                            `json:"sharing,omitempty"`
	Translations       []Translation                                       `json:"translations,omitempty"`
}

// NewDataApprovalWorkflowParams instantiates a new DataApprovalWorkflowParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataApprovalWorkflowParams() *DataApprovalWorkflowParams {
	this := DataApprovalWorkflowParams{}
	return &this
}

// NewDataApprovalWorkflowParamsWithDefaults instantiates a new DataApprovalWorkflowParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataApprovalWorkflowParamsWithDefaults() *DataApprovalWorkflowParams {
	this := DataApprovalWorkflowParams{}
	return &this
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetAttributeValues() []AttributeValueParams {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValueParams
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetAttributeValuesOk() ([]AttributeValueParams, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValueParams and assigns it to the AttributeValues field.
func (o *DataApprovalWorkflowParams) SetAttributeValues(v []AttributeValueParams) {
	o.AttributeValues = v
}

// GetCategoryCombo returns the CategoryCombo field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetCategoryCombo() CategoryComboParams {
	if o == nil || IsNil(o.CategoryCombo) {
		var ret CategoryComboParams
		return ret
	}
	return *o.CategoryCombo
}

// GetCategoryComboOk returns a tuple with the CategoryCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetCategoryComboOk() (*CategoryComboParams, bool) {
	if o == nil || IsNil(o.CategoryCombo) {
		return nil, false
	}
	return o.CategoryCombo, true
}

// HasCategoryCombo returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasCategoryCombo() bool {
	if o != nil && !IsNil(o.CategoryCombo) {
		return true
	}

	return false
}

// SetCategoryCombo gets a reference to the given CategoryComboParams and assigns it to the CategoryCombo field.
func (o *DataApprovalWorkflowParams) SetCategoryCombo(v CategoryComboParams) {
	o.CategoryCombo = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *DataApprovalWorkflowParams) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *DataApprovalWorkflowParams) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetCreatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetCreatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the CreatedBy field.
func (o *DataApprovalWorkflowParams) SetCreatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.CreatedBy = &v
}

// GetDataApprovalLevels returns the DataApprovalLevels field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetDataApprovalLevels() []DataApprovalWorkflowParamsDataApprovalLevelsInner {
	if o == nil || IsNil(o.DataApprovalLevels) {
		var ret []DataApprovalWorkflowParamsDataApprovalLevelsInner
		return ret
	}
	return o.DataApprovalLevels
}

// GetDataApprovalLevelsOk returns a tuple with the DataApprovalLevels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetDataApprovalLevelsOk() ([]DataApprovalWorkflowParamsDataApprovalLevelsInner, bool) {
	if o == nil || IsNil(o.DataApprovalLevels) {
		return nil, false
	}
	return o.DataApprovalLevels, true
}

// HasDataApprovalLevels returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasDataApprovalLevels() bool {
	if o != nil && !IsNil(o.DataApprovalLevels) {
		return true
	}

	return false
}

// SetDataApprovalLevels gets a reference to the given []DataApprovalWorkflowParamsDataApprovalLevelsInner and assigns it to the DataApprovalLevels field.
func (o *DataApprovalWorkflowParams) SetDataApprovalLevels(v []DataApprovalWorkflowParamsDataApprovalLevelsInner) {
	o.DataApprovalLevels = v
}

// GetDataSets returns the DataSets field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetDataSets() []DataApprovalWorkflowParamsDataSetsInner {
	if o == nil || IsNil(o.DataSets) {
		var ret []DataApprovalWorkflowParamsDataSetsInner
		return ret
	}
	return o.DataSets
}

// GetDataSetsOk returns a tuple with the DataSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetDataSetsOk() ([]DataApprovalWorkflowParamsDataSetsInner, bool) {
	if o == nil || IsNil(o.DataSets) {
		return nil, false
	}
	return o.DataSets, true
}

// HasDataSets returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasDataSets() bool {
	if o != nil && !IsNil(o.DataSets) {
		return true
	}

	return false
}

// SetDataSets gets a reference to the given []DataApprovalWorkflowParamsDataSetsInner and assigns it to the DataSets field.
func (o *DataApprovalWorkflowParams) SetDataSets(v []DataApprovalWorkflowParamsDataSetsInner) {
	o.DataSets = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DataApprovalWorkflowParams) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *DataApprovalWorkflowParams) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *DataApprovalWorkflowParams) SetFavorites(v []string) {
	o.Favorites = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DataApprovalWorkflowParams) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *DataApprovalWorkflowParams) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetLastUpdatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetLastUpdatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the LastUpdatedBy field.
func (o *DataApprovalWorkflowParams) SetLastUpdatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DataApprovalWorkflowParams) SetName(v string) {
	o.Name = &v
}

// GetPeriodType returns the PeriodType field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetPeriodType() string {
	if o == nil || IsNil(o.PeriodType) {
		var ret string
		return ret
	}
	return *o.PeriodType
}

// GetPeriodTypeOk returns a tuple with the PeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetPeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodType) {
		return nil, false
	}
	return o.PeriodType, true
}

// HasPeriodType returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasPeriodType() bool {
	if o != nil && !IsNil(o.PeriodType) {
		return true
	}

	return false
}

// SetPeriodType gets a reference to the given string and assigns it to the PeriodType field.
func (o *DataApprovalWorkflowParams) SetPeriodType(v string) {
	o.PeriodType = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *DataApprovalWorkflowParams) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *DataApprovalWorkflowParams) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataApprovalWorkflowParams) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *DataApprovalWorkflowParams) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *DataApprovalWorkflowParams) SetTranslations(v []Translation) {
	o.Translations = v
}

func (o DataApprovalWorkflowParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataApprovalWorkflowParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.CategoryCombo) {
		toSerialize["categoryCombo"] = o.CategoryCombo
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DataApprovalLevels) {
		toSerialize["dataApprovalLevels"] = o.DataApprovalLevels
	}
	if !IsNil(o.DataSets) {
		toSerialize["dataSets"] = o.DataSets
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PeriodType) {
		toSerialize["periodType"] = o.PeriodType
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	return toSerialize, nil
}

type NullableDataApprovalWorkflowParams struct {
	value *DataApprovalWorkflowParams
	isSet bool
}

func (v NullableDataApprovalWorkflowParams) Get() *DataApprovalWorkflowParams {
	return v.value
}

func (v *NullableDataApprovalWorkflowParams) Set(val *DataApprovalWorkflowParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDataApprovalWorkflowParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDataApprovalWorkflowParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataApprovalWorkflowParams(val *DataApprovalWorkflowParams) *NullableDataApprovalWorkflowParams {
	return &NullableDataApprovalWorkflowParams{value: val, isSet: true}
}

func (v NullableDataApprovalWorkflowParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataApprovalWorkflowParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
