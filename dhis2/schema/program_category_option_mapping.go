/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the ProgramCategoryOptionMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramCategoryOptionMapping{}

// ProgramCategoryOptionMapping struct for ProgramCategoryOptionMapping
type ProgramCategoryOptionMapping struct {
	Filter   *string `json:"filter,omitempty"`
	OptionId *string `json:"optionId,omitempty"`
}

// NewProgramCategoryOptionMapping instantiates a new ProgramCategoryOptionMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramCategoryOptionMapping() *ProgramCategoryOptionMapping {
	this := ProgramCategoryOptionMapping{}
	return &this
}

// NewProgramCategoryOptionMappingWithDefaults instantiates a new ProgramCategoryOptionMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramCategoryOptionMappingWithDefaults() *ProgramCategoryOptionMapping {
	this := ProgramCategoryOptionMapping{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *ProgramCategoryOptionMapping) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramCategoryOptionMapping) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *ProgramCategoryOptionMapping) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *ProgramCategoryOptionMapping) SetFilter(v string) {
	o.Filter = &v
}

// GetOptionId returns the OptionId field value if set, zero value otherwise.
func (o *ProgramCategoryOptionMapping) GetOptionId() string {
	if o == nil || IsNil(o.OptionId) {
		var ret string
		return ret
	}
	return *o.OptionId
}

// GetOptionIdOk returns a tuple with the OptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramCategoryOptionMapping) GetOptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.OptionId) {
		return nil, false
	}
	return o.OptionId, true
}

// HasOptionId returns a boolean if a field has been set.
func (o *ProgramCategoryOptionMapping) HasOptionId() bool {
	if o != nil && !IsNil(o.OptionId) {
		return true
	}

	return false
}

// SetOptionId gets a reference to the given string and assigns it to the OptionId field.
func (o *ProgramCategoryOptionMapping) SetOptionId(v string) {
	o.OptionId = &v
}

func (o ProgramCategoryOptionMapping) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramCategoryOptionMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.OptionId) {
		toSerialize["optionId"] = o.OptionId
	}
	return toSerialize, nil
}

type NullableProgramCategoryOptionMapping struct {
	value *ProgramCategoryOptionMapping
	isSet bool
}

func (v NullableProgramCategoryOptionMapping) Get() *ProgramCategoryOptionMapping {
	return v.value
}

func (v *NullableProgramCategoryOptionMapping) Set(val *ProgramCategoryOptionMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramCategoryOptionMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramCategoryOptionMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramCategoryOptionMapping(val *ProgramCategoryOptionMapping) *NullableProgramCategoryOptionMapping {
	return &NullableProgramCategoryOptionMapping{value: val, isSet: true}
}

func (v NullableProgramCategoryOptionMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramCategoryOptionMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
