/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ProgramMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramMessage{}

// ProgramMessage struct for ProgramMessage
type ProgramMessage struct {
	Access               *Access                             `json:"access,omitempty"`
	AttributeValues      []AttributeValue                    `json:"attributeValues,omitempty"`
	Code                 *string                             `json:"code,omitempty"`
	Created              *time.Time                          `json:"created,omitempty"`
	CreatedBy            *AggregateDataExchangeCreatedBy     `json:"createdBy,omitempty"`
	DeliveryChannels     []string                            `json:"deliveryChannels,omitempty"`
	DisplayName          *string                             `json:"displayName,omitempty"`
	ExternalAccess       *bool                               `json:"externalAccess,omitempty"`
	Favorite             *bool                               `json:"favorite,omitempty"`
	Favorites            []string                            `json:"favorites,omitempty"`
	Href                 *string                             `json:"href,omitempty"`
	Id                   *string                             `json:"id,omitempty"`
	LastUpdated          *time.Time                          `json:"lastUpdated,omitempty"`
	LastUpdatedBy        *AggregateDataExchangeCreatedBy     `json:"lastUpdatedBy,omitempty"`
	MessageStatus        string                              `json:"messageStatus"`
	Name                 *string                             `json:"name,omitempty"`
	NotificationTemplate *string                             `json:"notificationTemplate,omitempty"`
	ProcessedDate        *time.Time                          `json:"processedDate,omitempty"`
	ProgramInstance      *ProgramMessageProgramInstance      `json:"programInstance,omitempty"`
	ProgramStageInstance *ProgramMessageProgramStageInstance `json:"programStageInstance,omitempty"`
	PublicAccess         *string                             `json:"publicAccess,omitempty"`
	Recipients           *ProgramMessageRecipients           `json:"recipients,omitempty"`
	Sharing              *Sharing                            `json:"sharing,omitempty"`
	StoreCopy            *bool                               `json:"storeCopy,omitempty"`
	Subject              *string                             `json:"subject,omitempty"`
	Text                 *string                             `json:"text,omitempty"`
	Translations         []Translation                       `json:"translations,omitempty"`
	User                 *AggregateDataExchangeCreatedBy     `json:"user,omitempty"`
	UserAccesses         []LegacyUserAccess                  `json:"userAccesses,omitempty"`
	UserGroupAccesses    []LegacyUserGroupAccess             `json:"userGroupAccesses,omitempty"`
}

type _ProgramMessage ProgramMessage

// NewProgramMessage instantiates a new ProgramMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramMessage(messageStatus string) *ProgramMessage {
	this := ProgramMessage{}
	this.MessageStatus = messageStatus
	return &this
}

// NewProgramMessageWithDefaults instantiates a new ProgramMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramMessageWithDefaults() *ProgramMessage {
	this := ProgramMessage{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *ProgramMessage) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *ProgramMessage) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *ProgramMessage) SetAccess(v Access) {
	o.Access = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *ProgramMessage) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *ProgramMessage) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *ProgramMessage) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProgramMessage) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProgramMessage) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProgramMessage) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ProgramMessage) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ProgramMessage) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ProgramMessage) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProgramMessage) GetCreatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetCreatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProgramMessage) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the CreatedBy field.
func (o *ProgramMessage) SetCreatedBy(v AggregateDataExchangeCreatedBy) {
	o.CreatedBy = &v
}

// GetDeliveryChannels returns the DeliveryChannels field value if set, zero value otherwise.
func (o *ProgramMessage) GetDeliveryChannels() []string {
	if o == nil || IsNil(o.DeliveryChannels) {
		var ret []string
		return ret
	}
	return o.DeliveryChannels
}

// GetDeliveryChannelsOk returns a tuple with the DeliveryChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetDeliveryChannelsOk() ([]string, bool) {
	if o == nil || IsNil(o.DeliveryChannels) {
		return nil, false
	}
	return o.DeliveryChannels, true
}

// HasDeliveryChannels returns a boolean if a field has been set.
func (o *ProgramMessage) HasDeliveryChannels() bool {
	if o != nil && !IsNil(o.DeliveryChannels) {
		return true
	}

	return false
}

// SetDeliveryChannels gets a reference to the given []string and assigns it to the DeliveryChannels field.
func (o *ProgramMessage) SetDeliveryChannels(v []string) {
	o.DeliveryChannels = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProgramMessage) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProgramMessage) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProgramMessage) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetExternalAccess returns the ExternalAccess field value if set, zero value otherwise.
func (o *ProgramMessage) GetExternalAccess() bool {
	if o == nil || IsNil(o.ExternalAccess) {
		var ret bool
		return ret
	}
	return *o.ExternalAccess
}

// GetExternalAccessOk returns a tuple with the ExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetExternalAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalAccess) {
		return nil, false
	}
	return o.ExternalAccess, true
}

// HasExternalAccess returns a boolean if a field has been set.
func (o *ProgramMessage) HasExternalAccess() bool {
	if o != nil && !IsNil(o.ExternalAccess) {
		return true
	}

	return false
}

// SetExternalAccess gets a reference to the given bool and assigns it to the ExternalAccess field.
func (o *ProgramMessage) SetExternalAccess(v bool) {
	o.ExternalAccess = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ProgramMessage) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ProgramMessage) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ProgramMessage) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *ProgramMessage) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *ProgramMessage) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *ProgramMessage) SetFavorites(v []string) {
	o.Favorites = v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ProgramMessage) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ProgramMessage) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ProgramMessage) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProgramMessage) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProgramMessage) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProgramMessage) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ProgramMessage) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ProgramMessage) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ProgramMessage) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *ProgramMessage) GetLastUpdatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetLastUpdatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *ProgramMessage) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the LastUpdatedBy field.
func (o *ProgramMessage) SetLastUpdatedBy(v AggregateDataExchangeCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetMessageStatus returns the MessageStatus field value
func (o *ProgramMessage) GetMessageStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageStatus
}

// GetMessageStatusOk returns a tuple with the MessageStatus field value
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetMessageStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageStatus, true
}

// SetMessageStatus sets field value
func (o *ProgramMessage) SetMessageStatus(v string) {
	o.MessageStatus = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProgramMessage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProgramMessage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProgramMessage) SetName(v string) {
	o.Name = &v
}

// GetNotificationTemplate returns the NotificationTemplate field value if set, zero value otherwise.
func (o *ProgramMessage) GetNotificationTemplate() string {
	if o == nil || IsNil(o.NotificationTemplate) {
		var ret string
		return ret
	}
	return *o.NotificationTemplate
}

// GetNotificationTemplateOk returns a tuple with the NotificationTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetNotificationTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationTemplate) {
		return nil, false
	}
	return o.NotificationTemplate, true
}

// HasNotificationTemplate returns a boolean if a field has been set.
func (o *ProgramMessage) HasNotificationTemplate() bool {
	if o != nil && !IsNil(o.NotificationTemplate) {
		return true
	}

	return false
}

// SetNotificationTemplate gets a reference to the given string and assigns it to the NotificationTemplate field.
func (o *ProgramMessage) SetNotificationTemplate(v string) {
	o.NotificationTemplate = &v
}

// GetProcessedDate returns the ProcessedDate field value if set, zero value otherwise.
func (o *ProgramMessage) GetProcessedDate() time.Time {
	if o == nil || IsNil(o.ProcessedDate) {
		var ret time.Time
		return ret
	}
	return *o.ProcessedDate
}

// GetProcessedDateOk returns a tuple with the ProcessedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetProcessedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ProcessedDate) {
		return nil, false
	}
	return o.ProcessedDate, true
}

// HasProcessedDate returns a boolean if a field has been set.
func (o *ProgramMessage) HasProcessedDate() bool {
	if o != nil && !IsNil(o.ProcessedDate) {
		return true
	}

	return false
}

// SetProcessedDate gets a reference to the given time.Time and assigns it to the ProcessedDate field.
func (o *ProgramMessage) SetProcessedDate(v time.Time) {
	o.ProcessedDate = &v
}

// GetProgramInstance returns the ProgramInstance field value if set, zero value otherwise.
func (o *ProgramMessage) GetProgramInstance() ProgramMessageProgramInstance {
	if o == nil || IsNil(o.ProgramInstance) {
		var ret ProgramMessageProgramInstance
		return ret
	}
	return *o.ProgramInstance
}

// GetProgramInstanceOk returns a tuple with the ProgramInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetProgramInstanceOk() (*ProgramMessageProgramInstance, bool) {
	if o == nil || IsNil(o.ProgramInstance) {
		return nil, false
	}
	return o.ProgramInstance, true
}

// HasProgramInstance returns a boolean if a field has been set.
func (o *ProgramMessage) HasProgramInstance() bool {
	if o != nil && !IsNil(o.ProgramInstance) {
		return true
	}

	return false
}

// SetProgramInstance gets a reference to the given ProgramMessageProgramInstance and assigns it to the ProgramInstance field.
func (o *ProgramMessage) SetProgramInstance(v ProgramMessageProgramInstance) {
	o.ProgramInstance = &v
}

// GetProgramStageInstance returns the ProgramStageInstance field value if set, zero value otherwise.
func (o *ProgramMessage) GetProgramStageInstance() ProgramMessageProgramStageInstance {
	if o == nil || IsNil(o.ProgramStageInstance) {
		var ret ProgramMessageProgramStageInstance
		return ret
	}
	return *o.ProgramStageInstance
}

// GetProgramStageInstanceOk returns a tuple with the ProgramStageInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetProgramStageInstanceOk() (*ProgramMessageProgramStageInstance, bool) {
	if o == nil || IsNil(o.ProgramStageInstance) {
		return nil, false
	}
	return o.ProgramStageInstance, true
}

// HasProgramStageInstance returns a boolean if a field has been set.
func (o *ProgramMessage) HasProgramStageInstance() bool {
	if o != nil && !IsNil(o.ProgramStageInstance) {
		return true
	}

	return false
}

// SetProgramStageInstance gets a reference to the given ProgramMessageProgramStageInstance and assigns it to the ProgramStageInstance field.
func (o *ProgramMessage) SetProgramStageInstance(v ProgramMessageProgramStageInstance) {
	o.ProgramStageInstance = &v
}

// GetPublicAccess returns the PublicAccess field value if set, zero value otherwise.
func (o *ProgramMessage) GetPublicAccess() string {
	if o == nil || IsNil(o.PublicAccess) {
		var ret string
		return ret
	}
	return *o.PublicAccess
}

// GetPublicAccessOk returns a tuple with the PublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetPublicAccessOk() (*string, bool) {
	if o == nil || IsNil(o.PublicAccess) {
		return nil, false
	}
	return o.PublicAccess, true
}

// HasPublicAccess returns a boolean if a field has been set.
func (o *ProgramMessage) HasPublicAccess() bool {
	if o != nil && !IsNil(o.PublicAccess) {
		return true
	}

	return false
}

// SetPublicAccess gets a reference to the given string and assigns it to the PublicAccess field.
func (o *ProgramMessage) SetPublicAccess(v string) {
	o.PublicAccess = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *ProgramMessage) GetRecipients() ProgramMessageRecipients {
	if o == nil || IsNil(o.Recipients) {
		var ret ProgramMessageRecipients
		return ret
	}
	return *o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetRecipientsOk() (*ProgramMessageRecipients, bool) {
	if o == nil || IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *ProgramMessage) HasRecipients() bool {
	if o != nil && !IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given ProgramMessageRecipients and assigns it to the Recipients field.
func (o *ProgramMessage) SetRecipients(v ProgramMessageRecipients) {
	o.Recipients = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ProgramMessage) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ProgramMessage) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ProgramMessage) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetStoreCopy returns the StoreCopy field value if set, zero value otherwise.
func (o *ProgramMessage) GetStoreCopy() bool {
	if o == nil || IsNil(o.StoreCopy) {
		var ret bool
		return ret
	}
	return *o.StoreCopy
}

// GetStoreCopyOk returns a tuple with the StoreCopy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetStoreCopyOk() (*bool, bool) {
	if o == nil || IsNil(o.StoreCopy) {
		return nil, false
	}
	return o.StoreCopy, true
}

// HasStoreCopy returns a boolean if a field has been set.
func (o *ProgramMessage) HasStoreCopy() bool {
	if o != nil && !IsNil(o.StoreCopy) {
		return true
	}

	return false
}

// SetStoreCopy gets a reference to the given bool and assigns it to the StoreCopy field.
func (o *ProgramMessage) SetStoreCopy(v bool) {
	o.StoreCopy = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *ProgramMessage) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *ProgramMessage) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *ProgramMessage) SetSubject(v string) {
	o.Subject = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *ProgramMessage) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *ProgramMessage) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *ProgramMessage) SetText(v string) {
	o.Text = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ProgramMessage) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ProgramMessage) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *ProgramMessage) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ProgramMessage) GetUser() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.User) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetUserOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ProgramMessage) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the User field.
func (o *ProgramMessage) SetUser(v AggregateDataExchangeCreatedBy) {
	o.User = &v
}

// GetUserAccesses returns the UserAccesses field value if set, zero value otherwise.
func (o *ProgramMessage) GetUserAccesses() []LegacyUserAccess {
	if o == nil || IsNil(o.UserAccesses) {
		var ret []LegacyUserAccess
		return ret
	}
	return o.UserAccesses
}

// GetUserAccessesOk returns a tuple with the UserAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetUserAccessesOk() ([]LegacyUserAccess, bool) {
	if o == nil || IsNil(o.UserAccesses) {
		return nil, false
	}
	return o.UserAccesses, true
}

// HasUserAccesses returns a boolean if a field has been set.
func (o *ProgramMessage) HasUserAccesses() bool {
	if o != nil && !IsNil(o.UserAccesses) {
		return true
	}

	return false
}

// SetUserAccesses gets a reference to the given []LegacyUserAccess and assigns it to the UserAccesses field.
func (o *ProgramMessage) SetUserAccesses(v []LegacyUserAccess) {
	o.UserAccesses = v
}

// GetUserGroupAccesses returns the UserGroupAccesses field value if set, zero value otherwise.
func (o *ProgramMessage) GetUserGroupAccesses() []LegacyUserGroupAccess {
	if o == nil || IsNil(o.UserGroupAccesses) {
		var ret []LegacyUserGroupAccess
		return ret
	}
	return o.UserGroupAccesses
}

// GetUserGroupAccessesOk returns a tuple with the UserGroupAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramMessage) GetUserGroupAccessesOk() ([]LegacyUserGroupAccess, bool) {
	if o == nil || IsNil(o.UserGroupAccesses) {
		return nil, false
	}
	return o.UserGroupAccesses, true
}

// HasUserGroupAccesses returns a boolean if a field has been set.
func (o *ProgramMessage) HasUserGroupAccesses() bool {
	if o != nil && !IsNil(o.UserGroupAccesses) {
		return true
	}

	return false
}

// SetUserGroupAccesses gets a reference to the given []LegacyUserGroupAccess and assigns it to the UserGroupAccesses field.
func (o *ProgramMessage) SetUserGroupAccesses(v []LegacyUserGroupAccess) {
	o.UserGroupAccesses = v
}

func (o ProgramMessage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DeliveryChannels) {
		toSerialize["deliveryChannels"] = o.DeliveryChannels
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.ExternalAccess) {
		toSerialize["externalAccess"] = o.ExternalAccess
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	toSerialize["messageStatus"] = o.MessageStatus
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NotificationTemplate) {
		toSerialize["notificationTemplate"] = o.NotificationTemplate
	}
	if !IsNil(o.ProcessedDate) {
		toSerialize["processedDate"] = o.ProcessedDate
	}
	if !IsNil(o.ProgramInstance) {
		toSerialize["programInstance"] = o.ProgramInstance
	}
	if !IsNil(o.ProgramStageInstance) {
		toSerialize["programStageInstance"] = o.ProgramStageInstance
	}
	if !IsNil(o.PublicAccess) {
		toSerialize["publicAccess"] = o.PublicAccess
	}
	if !IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.StoreCopy) {
		toSerialize["storeCopy"] = o.StoreCopy
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserAccesses) {
		toSerialize["userAccesses"] = o.UserAccesses
	}
	if !IsNil(o.UserGroupAccesses) {
		toSerialize["userGroupAccesses"] = o.UserGroupAccesses
	}
	return toSerialize, nil
}

func (o *ProgramMessage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"messageStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramMessage := _ProgramMessage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgramMessage)

	if err != nil {
		return err
	}

	*o = ProgramMessage(varProgramMessage)

	return err
}

type NullableProgramMessage struct {
	value *ProgramMessage
	isSet bool
}

func (v NullableProgramMessage) Get() *ProgramMessage {
	return v.value
}

func (v *NullableProgramMessage) Set(val *ProgramMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramMessage(val *ProgramMessage) *NullableProgramMessage {
	return &NullableProgramMessage{value: val, isSet: true}
}

func (v NullableProgramMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
