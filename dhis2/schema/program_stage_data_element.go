/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the ProgramStageDataElement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramStageDataElement{}

// ProgramStageDataElement struct for ProgramStageDataElement
type ProgramStageDataElement struct {
	Access                 *Access                         `json:"access,omitempty"`
	AllowFutureDate        *bool                           `json:"allowFutureDate,omitempty"`
	AllowProvidedElsewhere *bool                           `json:"allowProvidedElsewhere,omitempty"`
	AttributeValues        []AttributeValue                `json:"attributeValues,omitempty"`
	Code                   *string                         `json:"code,omitempty"`
	Compulsory             *bool                           `json:"compulsory,omitempty"`
	Created                *time.Time                      `json:"created,omitempty"`
	CreatedBy              *AggregateDataExchangeCreatedBy `json:"createdBy,omitempty"`
	DataElement            *DataDimensionItemDataElement   `json:"dataElement,omitempty"`
	DisplayInReports       *bool                           `json:"displayInReports,omitempty"`
	DisplayName            *string                         `json:"displayName,omitempty"`
	ExternalAccess         *bool                           `json:"externalAccess,omitempty"`
	Favorite               *bool                           `json:"favorite,omitempty"`
	Favorites              []string                        `json:"favorites,omitempty"`
	Href                   *string                         `json:"href,omitempty"`
	Id                     *string                         `json:"id,omitempty"`
	LastUpdated            *time.Time                      `json:"lastUpdated,omitempty"`
	LastUpdatedBy          *AggregateDataExchangeCreatedBy `json:"lastUpdatedBy,omitempty"`
	Name                   *string                         `json:"name,omitempty"`
	ProgramStage           *CategoryProgramStage           `json:"programStage,omitempty"`
	PublicAccess           *string                         `json:"publicAccess,omitempty"`
	RenderOptionsAsRadio   *bool                           `json:"renderOptionsAsRadio,omitempty"`
	// The exact type is unknown.   (Java type was: `org.hisp.dhis.render.DeviceRenderTypeMap<org.hisp.dhis.render.type.ValueTypeRenderingObject>`)
	RenderType          interface{}                     `json:"renderType,omitempty"`
	Sharing             *Sharing                        `json:"sharing,omitempty"`
	SkipAnalytics       *bool                           `json:"skipAnalytics,omitempty"`
	SkipSynchronization *bool                           `json:"skipSynchronization,omitempty"`
	SortOrder           *int32                          `json:"sortOrder,omitempty"`
	Translations        []Translation                   `json:"translations,omitempty"`
	User                *AggregateDataExchangeCreatedBy `json:"user,omitempty"`
	UserAccesses        []LegacyUserAccess              `json:"userAccesses,omitempty"`
	UserGroupAccesses   []LegacyUserGroupAccess         `json:"userGroupAccesses,omitempty"`
}

// NewProgramStageDataElement instantiates a new ProgramStageDataElement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramStageDataElement() *ProgramStageDataElement {
	this := ProgramStageDataElement{}
	return &this
}

// NewProgramStageDataElementWithDefaults instantiates a new ProgramStageDataElement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramStageDataElementWithDefaults() *ProgramStageDataElement {
	this := ProgramStageDataElement{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *ProgramStageDataElement) SetAccess(v Access) {
	o.Access = &v
}

// GetAllowFutureDate returns the AllowFutureDate field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetAllowFutureDate() bool {
	if o == nil || IsNil(o.AllowFutureDate) {
		var ret bool
		return ret
	}
	return *o.AllowFutureDate
}

// GetAllowFutureDateOk returns a tuple with the AllowFutureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetAllowFutureDateOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFutureDate) {
		return nil, false
	}
	return o.AllowFutureDate, true
}

// HasAllowFutureDate returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasAllowFutureDate() bool {
	if o != nil && !IsNil(o.AllowFutureDate) {
		return true
	}

	return false
}

// SetAllowFutureDate gets a reference to the given bool and assigns it to the AllowFutureDate field.
func (o *ProgramStageDataElement) SetAllowFutureDate(v bool) {
	o.AllowFutureDate = &v
}

// GetAllowProvidedElsewhere returns the AllowProvidedElsewhere field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetAllowProvidedElsewhere() bool {
	if o == nil || IsNil(o.AllowProvidedElsewhere) {
		var ret bool
		return ret
	}
	return *o.AllowProvidedElsewhere
}

// GetAllowProvidedElsewhereOk returns a tuple with the AllowProvidedElsewhere field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetAllowProvidedElsewhereOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowProvidedElsewhere) {
		return nil, false
	}
	return o.AllowProvidedElsewhere, true
}

// HasAllowProvidedElsewhere returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasAllowProvidedElsewhere() bool {
	if o != nil && !IsNil(o.AllowProvidedElsewhere) {
		return true
	}

	return false
}

// SetAllowProvidedElsewhere gets a reference to the given bool and assigns it to the AllowProvidedElsewhere field.
func (o *ProgramStageDataElement) SetAllowProvidedElsewhere(v bool) {
	o.AllowProvidedElsewhere = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *ProgramStageDataElement) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProgramStageDataElement) SetCode(v string) {
	o.Code = &v
}

// GetCompulsory returns the Compulsory field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetCompulsory() bool {
	if o == nil || IsNil(o.Compulsory) {
		var ret bool
		return ret
	}
	return *o.Compulsory
}

// GetCompulsoryOk returns a tuple with the Compulsory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetCompulsoryOk() (*bool, bool) {
	if o == nil || IsNil(o.Compulsory) {
		return nil, false
	}
	return o.Compulsory, true
}

// HasCompulsory returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasCompulsory() bool {
	if o != nil && !IsNil(o.Compulsory) {
		return true
	}

	return false
}

// SetCompulsory gets a reference to the given bool and assigns it to the Compulsory field.
func (o *ProgramStageDataElement) SetCompulsory(v bool) {
	o.Compulsory = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ProgramStageDataElement) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetCreatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetCreatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the CreatedBy field.
func (o *ProgramStageDataElement) SetCreatedBy(v AggregateDataExchangeCreatedBy) {
	o.CreatedBy = &v
}

// GetDataElement returns the DataElement field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetDataElement() DataDimensionItemDataElement {
	if o == nil || IsNil(o.DataElement) {
		var ret DataDimensionItemDataElement
		return ret
	}
	return *o.DataElement
}

// GetDataElementOk returns a tuple with the DataElement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetDataElementOk() (*DataDimensionItemDataElement, bool) {
	if o == nil || IsNil(o.DataElement) {
		return nil, false
	}
	return o.DataElement, true
}

// HasDataElement returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasDataElement() bool {
	if o != nil && !IsNil(o.DataElement) {
		return true
	}

	return false
}

// SetDataElement gets a reference to the given DataDimensionItemDataElement and assigns it to the DataElement field.
func (o *ProgramStageDataElement) SetDataElement(v DataDimensionItemDataElement) {
	o.DataElement = &v
}

// GetDisplayInReports returns the DisplayInReports field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetDisplayInReports() bool {
	if o == nil || IsNil(o.DisplayInReports) {
		var ret bool
		return ret
	}
	return *o.DisplayInReports
}

// GetDisplayInReportsOk returns a tuple with the DisplayInReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetDisplayInReportsOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayInReports) {
		return nil, false
	}
	return o.DisplayInReports, true
}

// HasDisplayInReports returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasDisplayInReports() bool {
	if o != nil && !IsNil(o.DisplayInReports) {
		return true
	}

	return false
}

// SetDisplayInReports gets a reference to the given bool and assigns it to the DisplayInReports field.
func (o *ProgramStageDataElement) SetDisplayInReports(v bool) {
	o.DisplayInReports = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProgramStageDataElement) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetExternalAccess returns the ExternalAccess field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetExternalAccess() bool {
	if o == nil || IsNil(o.ExternalAccess) {
		var ret bool
		return ret
	}
	return *o.ExternalAccess
}

// GetExternalAccessOk returns a tuple with the ExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetExternalAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalAccess) {
		return nil, false
	}
	return o.ExternalAccess, true
}

// HasExternalAccess returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasExternalAccess() bool {
	if o != nil && !IsNil(o.ExternalAccess) {
		return true
	}

	return false
}

// SetExternalAccess gets a reference to the given bool and assigns it to the ExternalAccess field.
func (o *ProgramStageDataElement) SetExternalAccess(v bool) {
	o.ExternalAccess = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ProgramStageDataElement) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *ProgramStageDataElement) SetFavorites(v []string) {
	o.Favorites = v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ProgramStageDataElement) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProgramStageDataElement) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ProgramStageDataElement) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetLastUpdatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetLastUpdatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the LastUpdatedBy field.
func (o *ProgramStageDataElement) SetLastUpdatedBy(v AggregateDataExchangeCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProgramStageDataElement) SetName(v string) {
	o.Name = &v
}

// GetProgramStage returns the ProgramStage field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetProgramStage() CategoryProgramStage {
	if o == nil || IsNil(o.ProgramStage) {
		var ret CategoryProgramStage
		return ret
	}
	return *o.ProgramStage
}

// GetProgramStageOk returns a tuple with the ProgramStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetProgramStageOk() (*CategoryProgramStage, bool) {
	if o == nil || IsNil(o.ProgramStage) {
		return nil, false
	}
	return o.ProgramStage, true
}

// HasProgramStage returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasProgramStage() bool {
	if o != nil && !IsNil(o.ProgramStage) {
		return true
	}

	return false
}

// SetProgramStage gets a reference to the given CategoryProgramStage and assigns it to the ProgramStage field.
func (o *ProgramStageDataElement) SetProgramStage(v CategoryProgramStage) {
	o.ProgramStage = &v
}

// GetPublicAccess returns the PublicAccess field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetPublicAccess() string {
	if o == nil || IsNil(o.PublicAccess) {
		var ret string
		return ret
	}
	return *o.PublicAccess
}

// GetPublicAccessOk returns a tuple with the PublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetPublicAccessOk() (*string, bool) {
	if o == nil || IsNil(o.PublicAccess) {
		return nil, false
	}
	return o.PublicAccess, true
}

// HasPublicAccess returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasPublicAccess() bool {
	if o != nil && !IsNil(o.PublicAccess) {
		return true
	}

	return false
}

// SetPublicAccess gets a reference to the given string and assigns it to the PublicAccess field.
func (o *ProgramStageDataElement) SetPublicAccess(v string) {
	o.PublicAccess = &v
}

// GetRenderOptionsAsRadio returns the RenderOptionsAsRadio field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetRenderOptionsAsRadio() bool {
	if o == nil || IsNil(o.RenderOptionsAsRadio) {
		var ret bool
		return ret
	}
	return *o.RenderOptionsAsRadio
}

// GetRenderOptionsAsRadioOk returns a tuple with the RenderOptionsAsRadio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetRenderOptionsAsRadioOk() (*bool, bool) {
	if o == nil || IsNil(o.RenderOptionsAsRadio) {
		return nil, false
	}
	return o.RenderOptionsAsRadio, true
}

// HasRenderOptionsAsRadio returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasRenderOptionsAsRadio() bool {
	if o != nil && !IsNil(o.RenderOptionsAsRadio) {
		return true
	}

	return false
}

// SetRenderOptionsAsRadio gets a reference to the given bool and assigns it to the RenderOptionsAsRadio field.
func (o *ProgramStageDataElement) SetRenderOptionsAsRadio(v bool) {
	o.RenderOptionsAsRadio = &v
}

// GetRenderType returns the RenderType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProgramStageDataElement) GetRenderType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RenderType
}

// GetRenderTypeOk returns a tuple with the RenderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProgramStageDataElement) GetRenderTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RenderType) {
		return nil, false
	}
	return &o.RenderType, true
}

// HasRenderType returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasRenderType() bool {
	if o != nil && !IsNil(o.RenderType) {
		return true
	}

	return false
}

// SetRenderType gets a reference to the given interface{} and assigns it to the RenderType field.
func (o *ProgramStageDataElement) SetRenderType(v interface{}) {
	o.RenderType = v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ProgramStageDataElement) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetSkipAnalytics returns the SkipAnalytics field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetSkipAnalytics() bool {
	if o == nil || IsNil(o.SkipAnalytics) {
		var ret bool
		return ret
	}
	return *o.SkipAnalytics
}

// GetSkipAnalyticsOk returns a tuple with the SkipAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetSkipAnalyticsOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipAnalytics) {
		return nil, false
	}
	return o.SkipAnalytics, true
}

// HasSkipAnalytics returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasSkipAnalytics() bool {
	if o != nil && !IsNil(o.SkipAnalytics) {
		return true
	}

	return false
}

// SetSkipAnalytics gets a reference to the given bool and assigns it to the SkipAnalytics field.
func (o *ProgramStageDataElement) SetSkipAnalytics(v bool) {
	o.SkipAnalytics = &v
}

// GetSkipSynchronization returns the SkipSynchronization field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetSkipSynchronization() bool {
	if o == nil || IsNil(o.SkipSynchronization) {
		var ret bool
		return ret
	}
	return *o.SkipSynchronization
}

// GetSkipSynchronizationOk returns a tuple with the SkipSynchronization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetSkipSynchronizationOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipSynchronization) {
		return nil, false
	}
	return o.SkipSynchronization, true
}

// HasSkipSynchronization returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasSkipSynchronization() bool {
	if o != nil && !IsNil(o.SkipSynchronization) {
		return true
	}

	return false
}

// SetSkipSynchronization gets a reference to the given bool and assigns it to the SkipSynchronization field.
func (o *ProgramStageDataElement) SetSkipSynchronization(v bool) {
	o.SkipSynchronization = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *ProgramStageDataElement) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *ProgramStageDataElement) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetUser() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.User) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetUserOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the User field.
func (o *ProgramStageDataElement) SetUser(v AggregateDataExchangeCreatedBy) {
	o.User = &v
}

// GetUserAccesses returns the UserAccesses field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetUserAccesses() []LegacyUserAccess {
	if o == nil || IsNil(o.UserAccesses) {
		var ret []LegacyUserAccess
		return ret
	}
	return o.UserAccesses
}

// GetUserAccessesOk returns a tuple with the UserAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetUserAccessesOk() ([]LegacyUserAccess, bool) {
	if o == nil || IsNil(o.UserAccesses) {
		return nil, false
	}
	return o.UserAccesses, true
}

// HasUserAccesses returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasUserAccesses() bool {
	if o != nil && !IsNil(o.UserAccesses) {
		return true
	}

	return false
}

// SetUserAccesses gets a reference to the given []LegacyUserAccess and assigns it to the UserAccesses field.
func (o *ProgramStageDataElement) SetUserAccesses(v []LegacyUserAccess) {
	o.UserAccesses = v
}

// GetUserGroupAccesses returns the UserGroupAccesses field value if set, zero value otherwise.
func (o *ProgramStageDataElement) GetUserGroupAccesses() []LegacyUserGroupAccess {
	if o == nil || IsNil(o.UserGroupAccesses) {
		var ret []LegacyUserGroupAccess
		return ret
	}
	return o.UserGroupAccesses
}

// GetUserGroupAccessesOk returns a tuple with the UserGroupAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageDataElement) GetUserGroupAccessesOk() ([]LegacyUserGroupAccess, bool) {
	if o == nil || IsNil(o.UserGroupAccesses) {
		return nil, false
	}
	return o.UserGroupAccesses, true
}

// HasUserGroupAccesses returns a boolean if a field has been set.
func (o *ProgramStageDataElement) HasUserGroupAccesses() bool {
	if o != nil && !IsNil(o.UserGroupAccesses) {
		return true
	}

	return false
}

// SetUserGroupAccesses gets a reference to the given []LegacyUserGroupAccess and assigns it to the UserGroupAccesses field.
func (o *ProgramStageDataElement) SetUserGroupAccesses(v []LegacyUserGroupAccess) {
	o.UserGroupAccesses = v
}

func (o ProgramStageDataElement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramStageDataElement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.AllowFutureDate) {
		toSerialize["allowFutureDate"] = o.AllowFutureDate
	}
	if !IsNil(o.AllowProvidedElsewhere) {
		toSerialize["allowProvidedElsewhere"] = o.AllowProvidedElsewhere
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Compulsory) {
		toSerialize["compulsory"] = o.Compulsory
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DataElement) {
		toSerialize["dataElement"] = o.DataElement
	}
	if !IsNil(o.DisplayInReports) {
		toSerialize["displayInReports"] = o.DisplayInReports
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.ExternalAccess) {
		toSerialize["externalAccess"] = o.ExternalAccess
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProgramStage) {
		toSerialize["programStage"] = o.ProgramStage
	}
	if !IsNil(o.PublicAccess) {
		toSerialize["publicAccess"] = o.PublicAccess
	}
	if !IsNil(o.RenderOptionsAsRadio) {
		toSerialize["renderOptionsAsRadio"] = o.RenderOptionsAsRadio
	}
	if o.RenderType != nil {
		toSerialize["renderType"] = o.RenderType
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.SkipAnalytics) {
		toSerialize["skipAnalytics"] = o.SkipAnalytics
	}
	if !IsNil(o.SkipSynchronization) {
		toSerialize["skipSynchronization"] = o.SkipSynchronization
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sortOrder"] = o.SortOrder
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserAccesses) {
		toSerialize["userAccesses"] = o.UserAccesses
	}
	if !IsNil(o.UserGroupAccesses) {
		toSerialize["userGroupAccesses"] = o.UserGroupAccesses
	}
	return toSerialize, nil
}

type NullableProgramStageDataElement struct {
	value *ProgramStageDataElement
	isSet bool
}

func (v NullableProgramStageDataElement) Get() *ProgramStageDataElement {
	return v.value
}

func (v *NullableProgramStageDataElement) Set(val *ProgramStageDataElement) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramStageDataElement) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramStageDataElement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramStageDataElement(val *ProgramStageDataElement) *NullableProgramStageDataElement {
	return &NullableProgramStageDataElement{value: val, isSet: true}
}

func (v NullableProgramStageDataElement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramStageDataElement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
