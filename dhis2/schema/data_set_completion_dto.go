/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the DataSetCompletionDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataSetCompletionDto{}

// DataSetCompletionDto struct for DataSetCompletionDto
type DataSetCompletionDto struct {
	Attribute *DataValueCategoryDto `json:"attribute,omitempty"`
	Completed *bool                 `json:"completed,omitempty"`
	DataSet   *string               `json:"dataSet,omitempty"`
	OrgUnit   *string               `json:"orgUnit,omitempty"`
	Period    *string               `json:"period,omitempty"`
}

// NewDataSetCompletionDto instantiates a new DataSetCompletionDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataSetCompletionDto() *DataSetCompletionDto {
	this := DataSetCompletionDto{}
	return &this
}

// NewDataSetCompletionDtoWithDefaults instantiates a new DataSetCompletionDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataSetCompletionDtoWithDefaults() *DataSetCompletionDto {
	this := DataSetCompletionDto{}
	return &this
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *DataSetCompletionDto) GetAttribute() DataValueCategoryDto {
	if o == nil || IsNil(o.Attribute) {
		var ret DataValueCategoryDto
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataSetCompletionDto) GetAttributeOk() (*DataValueCategoryDto, bool) {
	if o == nil || IsNil(o.Attribute) {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *DataSetCompletionDto) HasAttribute() bool {
	if o != nil && !IsNil(o.Attribute) {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given DataValueCategoryDto and assigns it to the Attribute field.
func (o *DataSetCompletionDto) SetAttribute(v DataValueCategoryDto) {
	o.Attribute = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *DataSetCompletionDto) GetCompleted() bool {
	if o == nil || IsNil(o.Completed) {
		var ret bool
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataSetCompletionDto) GetCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Completed) {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *DataSetCompletionDto) HasCompleted() bool {
	if o != nil && !IsNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given bool and assigns it to the Completed field.
func (o *DataSetCompletionDto) SetCompleted(v bool) {
	o.Completed = &v
}

// GetDataSet returns the DataSet field value if set, zero value otherwise.
func (o *DataSetCompletionDto) GetDataSet() string {
	if o == nil || IsNil(o.DataSet) {
		var ret string
		return ret
	}
	return *o.DataSet
}

// GetDataSetOk returns a tuple with the DataSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataSetCompletionDto) GetDataSetOk() (*string, bool) {
	if o == nil || IsNil(o.DataSet) {
		return nil, false
	}
	return o.DataSet, true
}

// HasDataSet returns a boolean if a field has been set.
func (o *DataSetCompletionDto) HasDataSet() bool {
	if o != nil && !IsNil(o.DataSet) {
		return true
	}

	return false
}

// SetDataSet gets a reference to the given string and assigns it to the DataSet field.
func (o *DataSetCompletionDto) SetDataSet(v string) {
	o.DataSet = &v
}

// GetOrgUnit returns the OrgUnit field value if set, zero value otherwise.
func (o *DataSetCompletionDto) GetOrgUnit() string {
	if o == nil || IsNil(o.OrgUnit) {
		var ret string
		return ret
	}
	return *o.OrgUnit
}

// GetOrgUnitOk returns a tuple with the OrgUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataSetCompletionDto) GetOrgUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OrgUnit) {
		return nil, false
	}
	return o.OrgUnit, true
}

// HasOrgUnit returns a boolean if a field has been set.
func (o *DataSetCompletionDto) HasOrgUnit() bool {
	if o != nil && !IsNil(o.OrgUnit) {
		return true
	}

	return false
}

// SetOrgUnit gets a reference to the given string and assigns it to the OrgUnit field.
func (o *DataSetCompletionDto) SetOrgUnit(v string) {
	o.OrgUnit = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *DataSetCompletionDto) GetPeriod() string {
	if o == nil || IsNil(o.Period) {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataSetCompletionDto) GetPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *DataSetCompletionDto) HasPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *DataSetCompletionDto) SetPeriod(v string) {
	o.Period = &v
}

func (o DataSetCompletionDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataSetCompletionDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attribute) {
		toSerialize["attribute"] = o.Attribute
	}
	if !IsNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	if !IsNil(o.DataSet) {
		toSerialize["dataSet"] = o.DataSet
	}
	if !IsNil(o.OrgUnit) {
		toSerialize["orgUnit"] = o.OrgUnit
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	return toSerialize, nil
}

type NullableDataSetCompletionDto struct {
	value *DataSetCompletionDto
	isSet bool
}

func (v NullableDataSetCompletionDto) Get() *DataSetCompletionDto {
	return v.value
}

func (v *NullableDataSetCompletionDto) Set(val *DataSetCompletionDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDataSetCompletionDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDataSetCompletionDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataSetCompletionDto(val *DataSetCompletionDto) *NullableDataSetCompletionDto {
	return &NullableDataSetCompletionDto{value: val, isSet: true}
}

func (v NullableDataSetCompletionDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataSetCompletionDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
