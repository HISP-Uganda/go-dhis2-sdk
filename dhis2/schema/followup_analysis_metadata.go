/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the FollowupAnalysisMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FollowupAnalysisMetadata{}

// FollowupAnalysisMetadata struct for FollowupAnalysisMetadata
type FollowupAnalysisMetadata struct {
	Coc        []string   `json:"coc,omitempty"`
	De         []string   `json:"de,omitempty"`
	EndDate    *time.Time `json:"endDate,omitempty"`
	MaxResults int32      `json:"maxResults"`
	Ou         []string   `json:"ou,omitempty"`
	StartDate  *time.Time `json:"startDate,omitempty"`
}

type _FollowupAnalysisMetadata FollowupAnalysisMetadata

// NewFollowupAnalysisMetadata instantiates a new FollowupAnalysisMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFollowupAnalysisMetadata(maxResults int32) *FollowupAnalysisMetadata {
	this := FollowupAnalysisMetadata{}
	this.MaxResults = maxResults
	return &this
}

// NewFollowupAnalysisMetadataWithDefaults instantiates a new FollowupAnalysisMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFollowupAnalysisMetadataWithDefaults() *FollowupAnalysisMetadata {
	this := FollowupAnalysisMetadata{}
	return &this
}

// GetCoc returns the Coc field value if set, zero value otherwise.
func (o *FollowupAnalysisMetadata) GetCoc() []string {
	if o == nil || IsNil(o.Coc) {
		var ret []string
		return ret
	}
	return o.Coc
}

// GetCocOk returns a tuple with the Coc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowupAnalysisMetadata) GetCocOk() ([]string, bool) {
	if o == nil || IsNil(o.Coc) {
		return nil, false
	}
	return o.Coc, true
}

// HasCoc returns a boolean if a field has been set.
func (o *FollowupAnalysisMetadata) HasCoc() bool {
	if o != nil && !IsNil(o.Coc) {
		return true
	}

	return false
}

// SetCoc gets a reference to the given []string and assigns it to the Coc field.
func (o *FollowupAnalysisMetadata) SetCoc(v []string) {
	o.Coc = v
}

// GetDe returns the De field value if set, zero value otherwise.
func (o *FollowupAnalysisMetadata) GetDe() []string {
	if o == nil || IsNil(o.De) {
		var ret []string
		return ret
	}
	return o.De
}

// GetDeOk returns a tuple with the De field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowupAnalysisMetadata) GetDeOk() ([]string, bool) {
	if o == nil || IsNil(o.De) {
		return nil, false
	}
	return o.De, true
}

// HasDe returns a boolean if a field has been set.
func (o *FollowupAnalysisMetadata) HasDe() bool {
	if o != nil && !IsNil(o.De) {
		return true
	}

	return false
}

// SetDe gets a reference to the given []string and assigns it to the De field.
func (o *FollowupAnalysisMetadata) SetDe(v []string) {
	o.De = v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *FollowupAnalysisMetadata) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowupAnalysisMetadata) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *FollowupAnalysisMetadata) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *FollowupAnalysisMetadata) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetMaxResults returns the MaxResults field value
func (o *FollowupAnalysisMetadata) GetMaxResults() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxResults
}

// GetMaxResultsOk returns a tuple with the MaxResults field value
// and a boolean to check if the value has been set.
func (o *FollowupAnalysisMetadata) GetMaxResultsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxResults, true
}

// SetMaxResults sets field value
func (o *FollowupAnalysisMetadata) SetMaxResults(v int32) {
	o.MaxResults = v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *FollowupAnalysisMetadata) GetOu() []string {
	if o == nil || IsNil(o.Ou) {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowupAnalysisMetadata) GetOuOk() ([]string, bool) {
	if o == nil || IsNil(o.Ou) {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *FollowupAnalysisMetadata) HasOu() bool {
	if o != nil && !IsNil(o.Ou) {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *FollowupAnalysisMetadata) SetOu(v []string) {
	o.Ou = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *FollowupAnalysisMetadata) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowupAnalysisMetadata) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *FollowupAnalysisMetadata) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *FollowupAnalysisMetadata) SetStartDate(v time.Time) {
	o.StartDate = &v
}

func (o FollowupAnalysisMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FollowupAnalysisMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Coc) {
		toSerialize["coc"] = o.Coc
	}
	if !IsNil(o.De) {
		toSerialize["de"] = o.De
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	toSerialize["maxResults"] = o.MaxResults
	if !IsNil(o.Ou) {
		toSerialize["ou"] = o.Ou
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	return toSerialize, nil
}

func (o *FollowupAnalysisMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"maxResults",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFollowupAnalysisMetadata := _FollowupAnalysisMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFollowupAnalysisMetadata)

	if err != nil {
		return err
	}

	*o = FollowupAnalysisMetadata(varFollowupAnalysisMetadata)

	return err
}

type NullableFollowupAnalysisMetadata struct {
	value *FollowupAnalysisMetadata
	isSet bool
}

func (v NullableFollowupAnalysisMetadata) Get() *FollowupAnalysisMetadata {
	return v.value
}

func (v *NullableFollowupAnalysisMetadata) Set(val *FollowupAnalysisMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableFollowupAnalysisMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableFollowupAnalysisMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFollowupAnalysisMetadata(val *FollowupAnalysisMetadata) *NullableFollowupAnalysisMetadata {
	return &NullableFollowupAnalysisMetadata{value: val, isSet: true}
}

func (v NullableFollowupAnalysisMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFollowupAnalysisMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
