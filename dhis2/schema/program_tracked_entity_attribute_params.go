/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ProgramTrackedEntityAttributeParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramTrackedEntityAttributeParams{}

// ProgramTrackedEntityAttributeParams struct for ProgramTrackedEntityAttributeParams
type ProgramTrackedEntityAttributeParams struct {
	AllowFutureDate         *bool                                 `json:"allowFutureDate,omitempty"`
	AttributeValues         []AttributeValueParams                `json:"attributeValues,omitempty"`
	Code                    *string                               `json:"code,omitempty"`
	Created                 *time.Time                            `json:"created,omitempty"`
	CreatedBy               *AggregateDataExchangeParamsCreatedBy `json:"createdBy,omitempty"`
	DisplayInList           *bool                                 `json:"displayInList,omitempty"`
	DisplayName             *string                               `json:"displayName,omitempty"`
	DisplayShortName        *string                               `json:"displayShortName,omitempty"`
	Favorite                *bool                                 `json:"favorite,omitempty"`
	Favorites               []string                              `json:"favorites,omitempty"`
	Id                      *string                               `json:"id,omitempty"`
	LastUpdated             *time.Time                            `json:"lastUpdated,omitempty"`
	LastUpdatedBy           *AggregateDataExchangeParamsCreatedBy `json:"lastUpdatedBy,omitempty"`
	Mandatory               *bool                                 `json:"mandatory,omitempty"`
	Program                 *ProgramParams                        `json:"program,omitempty"`
	RenderOptionsAsRadio    *bool                                 `json:"renderOptionsAsRadio,omitempty"`
	RenderType              interface{}                           `json:"renderType,omitempty"`
	Searchable              *bool                                 `json:"searchable,omitempty"`
	Sharing                 *Sharing                              `json:"sharing,omitempty"`
	SkipIndividualAnalytics *bool                                 `json:"skipIndividualAnalytics,omitempty"`
	SortOrder               *int32                                `json:"sortOrder,omitempty"`
	TrackedEntityAttribute  *TrackedEntityAttributeParams         `json:"trackedEntityAttribute,omitempty"`
	Translations            []Translation                         `json:"translations,omitempty"`
	ValueType               ValueType                             `json:"valueType"`
}

type _ProgramTrackedEntityAttributeParams ProgramTrackedEntityAttributeParams

// NewProgramTrackedEntityAttributeParams instantiates a new ProgramTrackedEntityAttributeParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramTrackedEntityAttributeParams(valueType ValueType) *ProgramTrackedEntityAttributeParams {
	this := ProgramTrackedEntityAttributeParams{}
	this.ValueType = valueType
	return &this
}

// NewProgramTrackedEntityAttributeParamsWithDefaults instantiates a new ProgramTrackedEntityAttributeParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramTrackedEntityAttributeParamsWithDefaults() *ProgramTrackedEntityAttributeParams {
	this := ProgramTrackedEntityAttributeParams{}
	return &this
}

// GetAllowFutureDate returns the AllowFutureDate field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetAllowFutureDate() bool {
	if o == nil || IsNil(o.AllowFutureDate) {
		var ret bool
		return ret
	}
	return *o.AllowFutureDate
}

// GetAllowFutureDateOk returns a tuple with the AllowFutureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetAllowFutureDateOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowFutureDate) {
		return nil, false
	}
	return o.AllowFutureDate, true
}

// HasAllowFutureDate returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasAllowFutureDate() bool {
	if o != nil && !IsNil(o.AllowFutureDate) {
		return true
	}

	return false
}

// SetAllowFutureDate gets a reference to the given bool and assigns it to the AllowFutureDate field.
func (o *ProgramTrackedEntityAttributeParams) SetAllowFutureDate(v bool) {
	o.AllowFutureDate = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetAttributeValues() []AttributeValueParams {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValueParams
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetAttributeValuesOk() ([]AttributeValueParams, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValueParams and assigns it to the AttributeValues field.
func (o *ProgramTrackedEntityAttributeParams) SetAttributeValues(v []AttributeValueParams) {
	o.AttributeValues = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProgramTrackedEntityAttributeParams) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ProgramTrackedEntityAttributeParams) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetCreatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetCreatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the CreatedBy field.
func (o *ProgramTrackedEntityAttributeParams) SetCreatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.CreatedBy = &v
}

// GetDisplayInList returns the DisplayInList field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetDisplayInList() bool {
	if o == nil || IsNil(o.DisplayInList) {
		var ret bool
		return ret
	}
	return *o.DisplayInList
}

// GetDisplayInListOk returns a tuple with the DisplayInList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetDisplayInListOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayInList) {
		return nil, false
	}
	return o.DisplayInList, true
}

// HasDisplayInList returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasDisplayInList() bool {
	if o != nil && !IsNil(o.DisplayInList) {
		return true
	}

	return false
}

// SetDisplayInList gets a reference to the given bool and assigns it to the DisplayInList field.
func (o *ProgramTrackedEntityAttributeParams) SetDisplayInList(v bool) {
	o.DisplayInList = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProgramTrackedEntityAttributeParams) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayShortName returns the DisplayShortName field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetDisplayShortName() string {
	if o == nil || IsNil(o.DisplayShortName) {
		var ret string
		return ret
	}
	return *o.DisplayShortName
}

// GetDisplayShortNameOk returns a tuple with the DisplayShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetDisplayShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayShortName) {
		return nil, false
	}
	return o.DisplayShortName, true
}

// HasDisplayShortName returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasDisplayShortName() bool {
	if o != nil && !IsNil(o.DisplayShortName) {
		return true
	}

	return false
}

// SetDisplayShortName gets a reference to the given string and assigns it to the DisplayShortName field.
func (o *ProgramTrackedEntityAttributeParams) SetDisplayShortName(v string) {
	o.DisplayShortName = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ProgramTrackedEntityAttributeParams) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *ProgramTrackedEntityAttributeParams) SetFavorites(v []string) {
	o.Favorites = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProgramTrackedEntityAttributeParams) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ProgramTrackedEntityAttributeParams) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetLastUpdatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetLastUpdatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the LastUpdatedBy field.
func (o *ProgramTrackedEntityAttributeParams) SetLastUpdatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetMandatory returns the Mandatory field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetMandatory() bool {
	if o == nil || IsNil(o.Mandatory) {
		var ret bool
		return ret
	}
	return *o.Mandatory
}

// GetMandatoryOk returns a tuple with the Mandatory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetMandatoryOk() (*bool, bool) {
	if o == nil || IsNil(o.Mandatory) {
		return nil, false
	}
	return o.Mandatory, true
}

// HasMandatory returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasMandatory() bool {
	if o != nil && !IsNil(o.Mandatory) {
		return true
	}

	return false
}

// SetMandatory gets a reference to the given bool and assigns it to the Mandatory field.
func (o *ProgramTrackedEntityAttributeParams) SetMandatory(v bool) {
	o.Mandatory = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetProgram() ProgramParams {
	if o == nil || IsNil(o.Program) {
		var ret ProgramParams
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetProgramOk() (*ProgramParams, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given ProgramParams and assigns it to the Program field.
func (o *ProgramTrackedEntityAttributeParams) SetProgram(v ProgramParams) {
	o.Program = &v
}

// GetRenderOptionsAsRadio returns the RenderOptionsAsRadio field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetRenderOptionsAsRadio() bool {
	if o == nil || IsNil(o.RenderOptionsAsRadio) {
		var ret bool
		return ret
	}
	return *o.RenderOptionsAsRadio
}

// GetRenderOptionsAsRadioOk returns a tuple with the RenderOptionsAsRadio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetRenderOptionsAsRadioOk() (*bool, bool) {
	if o == nil || IsNil(o.RenderOptionsAsRadio) {
		return nil, false
	}
	return o.RenderOptionsAsRadio, true
}

// HasRenderOptionsAsRadio returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasRenderOptionsAsRadio() bool {
	if o != nil && !IsNil(o.RenderOptionsAsRadio) {
		return true
	}

	return false
}

// SetRenderOptionsAsRadio gets a reference to the given bool and assigns it to the RenderOptionsAsRadio field.
func (o *ProgramTrackedEntityAttributeParams) SetRenderOptionsAsRadio(v bool) {
	o.RenderOptionsAsRadio = &v
}

// GetRenderType returns the RenderType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProgramTrackedEntityAttributeParams) GetRenderType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RenderType
}

// GetRenderTypeOk returns a tuple with the RenderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProgramTrackedEntityAttributeParams) GetRenderTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RenderType) {
		return nil, false
	}
	return &o.RenderType, true
}

// HasRenderType returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasRenderType() bool {
	if o != nil && !IsNil(o.RenderType) {
		return true
	}

	return false
}

// SetRenderType gets a reference to the given interface{} and assigns it to the RenderType field.
func (o *ProgramTrackedEntityAttributeParams) SetRenderType(v interface{}) {
	o.RenderType = v
}

// GetSearchable returns the Searchable field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetSearchable() bool {
	if o == nil || IsNil(o.Searchable) {
		var ret bool
		return ret
	}
	return *o.Searchable
}

// GetSearchableOk returns a tuple with the Searchable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetSearchableOk() (*bool, bool) {
	if o == nil || IsNil(o.Searchable) {
		return nil, false
	}
	return o.Searchable, true
}

// HasSearchable returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasSearchable() bool {
	if o != nil && !IsNil(o.Searchable) {
		return true
	}

	return false
}

// SetSearchable gets a reference to the given bool and assigns it to the Searchable field.
func (o *ProgramTrackedEntityAttributeParams) SetSearchable(v bool) {
	o.Searchable = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ProgramTrackedEntityAttributeParams) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetSkipIndividualAnalytics returns the SkipIndividualAnalytics field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetSkipIndividualAnalytics() bool {
	if o == nil || IsNil(o.SkipIndividualAnalytics) {
		var ret bool
		return ret
	}
	return *o.SkipIndividualAnalytics
}

// GetSkipIndividualAnalyticsOk returns a tuple with the SkipIndividualAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetSkipIndividualAnalyticsOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipIndividualAnalytics) {
		return nil, false
	}
	return o.SkipIndividualAnalytics, true
}

// HasSkipIndividualAnalytics returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasSkipIndividualAnalytics() bool {
	if o != nil && !IsNil(o.SkipIndividualAnalytics) {
		return true
	}

	return false
}

// SetSkipIndividualAnalytics gets a reference to the given bool and assigns it to the SkipIndividualAnalytics field.
func (o *ProgramTrackedEntityAttributeParams) SetSkipIndividualAnalytics(v bool) {
	o.SkipIndividualAnalytics = &v
}

// GetSortOrder returns the SortOrder field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetSortOrder() int32 {
	if o == nil || IsNil(o.SortOrder) {
		var ret int32
		return ret
	}
	return *o.SortOrder
}

// GetSortOrderOk returns a tuple with the SortOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetSortOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.SortOrder) {
		return nil, false
	}
	return o.SortOrder, true
}

// HasSortOrder returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasSortOrder() bool {
	if o != nil && !IsNil(o.SortOrder) {
		return true
	}

	return false
}

// SetSortOrder gets a reference to the given int32 and assigns it to the SortOrder field.
func (o *ProgramTrackedEntityAttributeParams) SetSortOrder(v int32) {
	o.SortOrder = &v
}

// GetTrackedEntityAttribute returns the TrackedEntityAttribute field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetTrackedEntityAttribute() TrackedEntityAttributeParams {
	if o == nil || IsNil(o.TrackedEntityAttribute) {
		var ret TrackedEntityAttributeParams
		return ret
	}
	return *o.TrackedEntityAttribute
}

// GetTrackedEntityAttributeOk returns a tuple with the TrackedEntityAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetTrackedEntityAttributeOk() (*TrackedEntityAttributeParams, bool) {
	if o == nil || IsNil(o.TrackedEntityAttribute) {
		return nil, false
	}
	return o.TrackedEntityAttribute, true
}

// HasTrackedEntityAttribute returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasTrackedEntityAttribute() bool {
	if o != nil && !IsNil(o.TrackedEntityAttribute) {
		return true
	}

	return false
}

// SetTrackedEntityAttribute gets a reference to the given TrackedEntityAttributeParams and assigns it to the TrackedEntityAttribute field.
func (o *ProgramTrackedEntityAttributeParams) SetTrackedEntityAttribute(v TrackedEntityAttributeParams) {
	o.TrackedEntityAttribute = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ProgramTrackedEntityAttributeParams) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ProgramTrackedEntityAttributeParams) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *ProgramTrackedEntityAttributeParams) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetValueType returns the ValueType field value
func (o *ProgramTrackedEntityAttributeParams) GetValueType() ValueType {
	if o == nil {
		var ret ValueType
		return ret
	}

	return o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value
// and a boolean to check if the value has been set.
func (o *ProgramTrackedEntityAttributeParams) GetValueTypeOk() (*ValueType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueType, true
}

// SetValueType sets field value
func (o *ProgramTrackedEntityAttributeParams) SetValueType(v ValueType) {
	o.ValueType = v
}

func (o ProgramTrackedEntityAttributeParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramTrackedEntityAttributeParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowFutureDate) {
		toSerialize["allowFutureDate"] = o.AllowFutureDate
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DisplayInList) {
		toSerialize["displayInList"] = o.DisplayInList
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplayShortName) {
		toSerialize["displayShortName"] = o.DisplayShortName
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Mandatory) {
		toSerialize["mandatory"] = o.Mandatory
	}
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.RenderOptionsAsRadio) {
		toSerialize["renderOptionsAsRadio"] = o.RenderOptionsAsRadio
	}
	if o.RenderType != nil {
		toSerialize["renderType"] = o.RenderType
	}
	if !IsNil(o.Searchable) {
		toSerialize["searchable"] = o.Searchable
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.SkipIndividualAnalytics) {
		toSerialize["skipIndividualAnalytics"] = o.SkipIndividualAnalytics
	}
	if !IsNil(o.SortOrder) {
		toSerialize["sortOrder"] = o.SortOrder
	}
	if !IsNil(o.TrackedEntityAttribute) {
		toSerialize["trackedEntityAttribute"] = o.TrackedEntityAttribute
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	toSerialize["valueType"] = o.ValueType
	return toSerialize, nil
}

func (o *ProgramTrackedEntityAttributeParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"valueType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramTrackedEntityAttributeParams := _ProgramTrackedEntityAttributeParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgramTrackedEntityAttributeParams)

	if err != nil {
		return err
	}

	*o = ProgramTrackedEntityAttributeParams(varProgramTrackedEntityAttributeParams)

	return err
}

type NullableProgramTrackedEntityAttributeParams struct {
	value *ProgramTrackedEntityAttributeParams
	isSet bool
}

func (v NullableProgramTrackedEntityAttributeParams) Get() *ProgramTrackedEntityAttributeParams {
	return v.value
}

func (v *NullableProgramTrackedEntityAttributeParams) Set(val *ProgramTrackedEntityAttributeParams) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramTrackedEntityAttributeParams) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramTrackedEntityAttributeParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramTrackedEntityAttributeParams(val *ProgramTrackedEntityAttributeParams) *NullableProgramTrackedEntityAttributeParams {
	return &NullableProgramTrackedEntityAttributeParams{value: val, isSet: true}
}

func (v NullableProgramTrackedEntityAttributeParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramTrackedEntityAttributeParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
