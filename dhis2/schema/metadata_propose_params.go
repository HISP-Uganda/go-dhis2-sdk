/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the MetadataProposeParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataProposeParams{}

// MetadataProposeParams struct for MetadataProposeParams
type MetadataProposeParams struct {
	Change   *Any    `json:"change,omitempty"`
	Comment  *string `json:"comment,omitempty"`
	TargetId *string `json:"targetId,omitempty"`
}

// NewMetadataProposeParams instantiates a new MetadataProposeParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataProposeParams() *MetadataProposeParams {
	this := MetadataProposeParams{}
	return &this
}

// NewMetadataProposeParamsWithDefaults instantiates a new MetadataProposeParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataProposeParamsWithDefaults() *MetadataProposeParams {
	this := MetadataProposeParams{}
	return &this
}

// GetChange returns the Change field value if set, zero value otherwise.
func (o *MetadataProposeParams) GetChange() Any {
	if o == nil || IsNil(o.Change) {
		var ret Any
		return ret
	}
	return *o.Change
}

// GetChangeOk returns a tuple with the Change field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataProposeParams) GetChangeOk() (*Any, bool) {
	if o == nil || IsNil(o.Change) {
		return nil, false
	}
	return o.Change, true
}

// HasChange returns a boolean if a field has been set.
func (o *MetadataProposeParams) HasChange() bool {
	if o != nil && !IsNil(o.Change) {
		return true
	}

	return false
}

// SetChange gets a reference to the given Any and assigns it to the Change field.
func (o *MetadataProposeParams) SetChange(v Any) {
	o.Change = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *MetadataProposeParams) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataProposeParams) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *MetadataProposeParams) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *MetadataProposeParams) SetComment(v string) {
	o.Comment = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *MetadataProposeParams) GetTargetId() string {
	if o == nil || IsNil(o.TargetId) {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataProposeParams) GetTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *MetadataProposeParams) HasTargetId() bool {
	if o != nil && !IsNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *MetadataProposeParams) SetTargetId(v string) {
	o.TargetId = &v
}

func (o MetadataProposeParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataProposeParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Change) {
		toSerialize["change"] = o.Change
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.TargetId) {
		toSerialize["targetId"] = o.TargetId
	}
	return toSerialize, nil
}

type NullableMetadataProposeParams struct {
	value *MetadataProposeParams
	isSet bool
}

func (v NullableMetadataProposeParams) Get() *MetadataProposeParams {
	return v.value
}

func (v *NullableMetadataProposeParams) Set(val *MetadataProposeParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataProposeParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataProposeParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataProposeParams(val *MetadataProposeParams) *NullableMetadataProposeParams {
	return &NullableMetadataProposeParams{value: val, isSet: true}
}

func (v NullableMetadataProposeParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataProposeParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
