/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// MetadataProposalStatus the model 'MetadataProposalStatus'
type MetadataProposalStatus string

// List of MetadataProposalStatus
const (
	METADATAPROPOSALSTATUS_PROPOSED     MetadataProposalStatus = "PROPOSED"
	METADATAPROPOSALSTATUS_ACCEPTED     MetadataProposalStatus = "ACCEPTED"
	METADATAPROPOSALSTATUS_REJECTED     MetadataProposalStatus = "REJECTED"
	METADATAPROPOSALSTATUS_NEEDS_UPDATE MetadataProposalStatus = "NEEDS_UPDATE"
)

// All allowed values of MetadataProposalStatus enum
var AllowedMetadataProposalStatusEnumValues = []MetadataProposalStatus{
	"PROPOSED",
	"ACCEPTED",
	"REJECTED",
	"NEEDS_UPDATE",
}

func (v *MetadataProposalStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MetadataProposalStatus(value)
	for _, existing := range AllowedMetadataProposalStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MetadataProposalStatus", value)
}

// NewMetadataProposalStatusFromValue returns a pointer to a valid MetadataProposalStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMetadataProposalStatusFromValue(v string) (*MetadataProposalStatus, error) {
	ev := MetadataProposalStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MetadataProposalStatus: valid values are %v", v, AllowedMetadataProposalStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MetadataProposalStatus) IsValid() bool {
	for _, existing := range AllowedMetadataProposalStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MetadataProposalStatus value
func (v MetadataProposalStatus) Ptr() *MetadataProposalStatus {
	return &v
}

type NullableMetadataProposalStatus struct {
	value *MetadataProposalStatus
	isSet bool
}

func (v NullableMetadataProposalStatus) Get() *MetadataProposalStatus {
	return v.value
}

func (v *NullableMetadataProposalStatus) Set(val *MetadataProposalStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataProposalStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataProposalStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataProposalStatus(val *MetadataProposalStatus) *NullableMetadataProposalStatus {
	return &NullableMetadataProposalStatus{value: val, isSet: true}
}

func (v NullableMetadataProposalStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataProposalStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
