/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// OptionGroupSetPropertyNames the model 'OptionGroupSetPropertyNames'
type OptionGroupSetPropertyNames string

// List of OptionGroupSetPropertyNames
const (
	OPTIONGROUPSETPROPERTYNAMES_ACCESS                  OptionGroupSetPropertyNames = "access"
	OPTIONGROUPSETPROPERTYNAMES_AGGREGATION_TYPE        OptionGroupSetPropertyNames = "aggregationType"
	OPTIONGROUPSETPROPERTYNAMES_ALL_ITEMS               OptionGroupSetPropertyNames = "allItems"
	OPTIONGROUPSETPROPERTYNAMES_ATTRIBUTE_VALUES        OptionGroupSetPropertyNames = "attributeValues"
	OPTIONGROUPSETPROPERTYNAMES_CODE                    OptionGroupSetPropertyNames = "code"
	OPTIONGROUPSETPROPERTYNAMES_CREATED                 OptionGroupSetPropertyNames = "created"
	OPTIONGROUPSETPROPERTYNAMES_CREATED_BY              OptionGroupSetPropertyNames = "createdBy"
	OPTIONGROUPSETPROPERTYNAMES_DATA_DIMENSION          OptionGroupSetPropertyNames = "dataDimension"
	OPTIONGROUPSETPROPERTYNAMES_DATA_DIMENSION_TYPE     OptionGroupSetPropertyNames = "dataDimensionType"
	OPTIONGROUPSETPROPERTYNAMES_DESCRIPTION             OptionGroupSetPropertyNames = "description"
	OPTIONGROUPSETPROPERTYNAMES_DIMENSION               OptionGroupSetPropertyNames = "dimension"
	OPTIONGROUPSETPROPERTYNAMES_DIMENSION_ITEM_KEYWORDS OptionGroupSetPropertyNames = "dimensionItemKeywords"
	OPTIONGROUPSETPROPERTYNAMES_DISPLAY_DESCRIPTION     OptionGroupSetPropertyNames = "displayDescription"
	OPTIONGROUPSETPROPERTYNAMES_DISPLAY_FORM_NAME       OptionGroupSetPropertyNames = "displayFormName"
	OPTIONGROUPSETPROPERTYNAMES_DISPLAY_NAME            OptionGroupSetPropertyNames = "displayName"
	OPTIONGROUPSETPROPERTYNAMES_DISPLAY_SHORT_NAME      OptionGroupSetPropertyNames = "displayShortName"
	OPTIONGROUPSETPROPERTYNAMES_FAVORITE                OptionGroupSetPropertyNames = "favorite"
	OPTIONGROUPSETPROPERTYNAMES_FAVORITES               OptionGroupSetPropertyNames = "favorites"
	OPTIONGROUPSETPROPERTYNAMES_FILTER                  OptionGroupSetPropertyNames = "filter"
	OPTIONGROUPSETPROPERTYNAMES_FORM_NAME               OptionGroupSetPropertyNames = "formName"
	OPTIONGROUPSETPROPERTYNAMES_HREF                    OptionGroupSetPropertyNames = "href"
	OPTIONGROUPSETPROPERTYNAMES_ID                      OptionGroupSetPropertyNames = "id"
	OPTIONGROUPSETPROPERTYNAMES_ITEMS                   OptionGroupSetPropertyNames = "items"
	OPTIONGROUPSETPROPERTYNAMES_LAST_UPDATED            OptionGroupSetPropertyNames = "lastUpdated"
	OPTIONGROUPSETPROPERTYNAMES_LAST_UPDATED_BY         OptionGroupSetPropertyNames = "lastUpdatedBy"
	OPTIONGROUPSETPROPERTYNAMES_LEGEND_SET              OptionGroupSetPropertyNames = "legendSet"
	OPTIONGROUPSETPROPERTYNAMES_NAME                    OptionGroupSetPropertyNames = "name"
	OPTIONGROUPSETPROPERTYNAMES_OPTION_GROUPS           OptionGroupSetPropertyNames = "optionGroups"
	OPTIONGROUPSETPROPERTYNAMES_OPTION_SET              OptionGroupSetPropertyNames = "optionSet"
	OPTIONGROUPSETPROPERTYNAMES_PROGRAM                 OptionGroupSetPropertyNames = "program"
	OPTIONGROUPSETPROPERTYNAMES_PROGRAM_STAGE           OptionGroupSetPropertyNames = "programStage"
	OPTIONGROUPSETPROPERTYNAMES_REPETITION              OptionGroupSetPropertyNames = "repetition"
	OPTIONGROUPSETPROPERTYNAMES_SHARING                 OptionGroupSetPropertyNames = "sharing"
	OPTIONGROUPSETPROPERTYNAMES_SHORT_NAME              OptionGroupSetPropertyNames = "shortName"
	OPTIONGROUPSETPROPERTYNAMES_TRANSLATIONS            OptionGroupSetPropertyNames = "translations"
	OPTIONGROUPSETPROPERTYNAMES_VALUE_TYPE              OptionGroupSetPropertyNames = "valueType"
)

// All allowed values of OptionGroupSetPropertyNames enum
var AllowedOptionGroupSetPropertyNamesEnumValues = []OptionGroupSetPropertyNames{
	"access",
	"aggregationType",
	"allItems",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"dataDimension",
	"dataDimensionType",
	"description",
	"dimension",
	"dimensionItemKeywords",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"favorite",
	"favorites",
	"filter",
	"formName",
	"href",
	"id",
	"items",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"name",
	"optionGroups",
	"optionSet",
	"program",
	"programStage",
	"repetition",
	"sharing",
	"shortName",
	"translations",
	"valueType",
}

func (v *OptionGroupSetPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OptionGroupSetPropertyNames(value)
	for _, existing := range AllowedOptionGroupSetPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OptionGroupSetPropertyNames", value)
}

// NewOptionGroupSetPropertyNamesFromValue returns a pointer to a valid OptionGroupSetPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOptionGroupSetPropertyNamesFromValue(v string) (*OptionGroupSetPropertyNames, error) {
	ev := OptionGroupSetPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OptionGroupSetPropertyNames: valid values are %v", v, AllowedOptionGroupSetPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OptionGroupSetPropertyNames) IsValid() bool {
	for _, existing := range AllowedOptionGroupSetPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OptionGroupSetPropertyNames value
func (v OptionGroupSetPropertyNames) Ptr() *OptionGroupSetPropertyNames {
	return &v
}

type NullableOptionGroupSetPropertyNames struct {
	value *OptionGroupSetPropertyNames
	isSet bool
}

func (v NullableOptionGroupSetPropertyNames) Get() *OptionGroupSetPropertyNames {
	return v.value
}

func (v *NullableOptionGroupSetPropertyNames) Set(val *OptionGroupSetPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionGroupSetPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionGroupSetPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionGroupSetPropertyNames(val *OptionGroupSetPropertyNames) *NullableOptionGroupSetPropertyNames {
	return &NullableOptionGroupSetPropertyNames{value: val, isSet: true}
}

func (v NullableOptionGroupSetPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionGroupSetPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
