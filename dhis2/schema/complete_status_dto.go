/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the CompleteStatusDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompleteStatusDto{}

// CompleteStatusDto struct for CompleteStatusDto
type CompleteStatusDto struct {
	Complete      *bool      `json:"complete,omitempty"`
	Created       *time.Time `json:"created,omitempty"`
	CreatedBy     *string    `json:"createdBy,omitempty"`
	LastUpdated   *time.Time `json:"lastUpdated,omitempty"`
	LastUpdatedBy *string    `json:"lastUpdatedBy,omitempty"`
}

// NewCompleteStatusDto instantiates a new CompleteStatusDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompleteStatusDto() *CompleteStatusDto {
	this := CompleteStatusDto{}
	return &this
}

// NewCompleteStatusDtoWithDefaults instantiates a new CompleteStatusDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompleteStatusDtoWithDefaults() *CompleteStatusDto {
	this := CompleteStatusDto{}
	return &this
}

// GetComplete returns the Complete field value if set, zero value otherwise.
func (o *CompleteStatusDto) GetComplete() bool {
	if o == nil || IsNil(o.Complete) {
		var ret bool
		return ret
	}
	return *o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteStatusDto) GetCompleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Complete) {
		return nil, false
	}
	return o.Complete, true
}

// HasComplete returns a boolean if a field has been set.
func (o *CompleteStatusDto) HasComplete() bool {
	if o != nil && !IsNil(o.Complete) {
		return true
	}

	return false
}

// SetComplete gets a reference to the given bool and assigns it to the Complete field.
func (o *CompleteStatusDto) SetComplete(v bool) {
	o.Complete = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *CompleteStatusDto) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteStatusDto) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *CompleteStatusDto) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *CompleteStatusDto) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *CompleteStatusDto) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteStatusDto) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *CompleteStatusDto) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *CompleteStatusDto) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *CompleteStatusDto) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteStatusDto) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *CompleteStatusDto) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *CompleteStatusDto) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *CompleteStatusDto) GetLastUpdatedBy() string {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret string
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteStatusDto) GetLastUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *CompleteStatusDto) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given string and assigns it to the LastUpdatedBy field.
func (o *CompleteStatusDto) SetLastUpdatedBy(v string) {
	o.LastUpdatedBy = &v
}

func (o CompleteStatusDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompleteStatusDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Complete) {
		toSerialize["complete"] = o.Complete
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	return toSerialize, nil
}

type NullableCompleteStatusDto struct {
	value *CompleteStatusDto
	isSet bool
}

func (v NullableCompleteStatusDto) Get() *CompleteStatusDto {
	return v.value
}

func (v *NullableCompleteStatusDto) Set(val *CompleteStatusDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCompleteStatusDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCompleteStatusDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompleteStatusDto(val *CompleteStatusDto) *NullableCompleteStatusDto {
	return &NullableCompleteStatusDto{value: val, isSet: true}
}

func (v NullableCompleteStatusDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompleteStatusDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
