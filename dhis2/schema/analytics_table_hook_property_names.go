/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// AnalyticsTableHookPropertyNames the model 'AnalyticsTableHookPropertyNames'
type AnalyticsTableHookPropertyNames string

// List of AnalyticsTableHookPropertyNames
const (
	ANALYTICSTABLEHOOKPROPERTYNAMES_ACCESS               AnalyticsTableHookPropertyNames = "access"
	ANALYTICSTABLEHOOKPROPERTYNAMES_ANALYTICS_TABLE_TYPE AnalyticsTableHookPropertyNames = "analyticsTableType"
	ANALYTICSTABLEHOOKPROPERTYNAMES_ATTRIBUTE_VALUES     AnalyticsTableHookPropertyNames = "attributeValues"
	ANALYTICSTABLEHOOKPROPERTYNAMES_CODE                 AnalyticsTableHookPropertyNames = "code"
	ANALYTICSTABLEHOOKPROPERTYNAMES_CREATED              AnalyticsTableHookPropertyNames = "created"
	ANALYTICSTABLEHOOKPROPERTYNAMES_CREATED_BY           AnalyticsTableHookPropertyNames = "createdBy"
	ANALYTICSTABLEHOOKPROPERTYNAMES_DISPLAY_NAME         AnalyticsTableHookPropertyNames = "displayName"
	ANALYTICSTABLEHOOKPROPERTYNAMES_FAVORITE             AnalyticsTableHookPropertyNames = "favorite"
	ANALYTICSTABLEHOOKPROPERTYNAMES_FAVORITES            AnalyticsTableHookPropertyNames = "favorites"
	ANALYTICSTABLEHOOKPROPERTYNAMES_HREF                 AnalyticsTableHookPropertyNames = "href"
	ANALYTICSTABLEHOOKPROPERTYNAMES_ID                   AnalyticsTableHookPropertyNames = "id"
	ANALYTICSTABLEHOOKPROPERTYNAMES_LAST_UPDATED         AnalyticsTableHookPropertyNames = "lastUpdated"
	ANALYTICSTABLEHOOKPROPERTYNAMES_LAST_UPDATED_BY      AnalyticsTableHookPropertyNames = "lastUpdatedBy"
	ANALYTICSTABLEHOOKPROPERTYNAMES_NAME                 AnalyticsTableHookPropertyNames = "name"
	ANALYTICSTABLEHOOKPROPERTYNAMES_PHASE                AnalyticsTableHookPropertyNames = "phase"
	ANALYTICSTABLEHOOKPROPERTYNAMES_RESOURCE_TABLE_TYPE  AnalyticsTableHookPropertyNames = "resourceTableType"
	ANALYTICSTABLEHOOKPROPERTYNAMES_SHARING              AnalyticsTableHookPropertyNames = "sharing"
	ANALYTICSTABLEHOOKPROPERTYNAMES_SQL                  AnalyticsTableHookPropertyNames = "sql"
	ANALYTICSTABLEHOOKPROPERTYNAMES_TRANSLATIONS         AnalyticsTableHookPropertyNames = "translations"
)

// All allowed values of AnalyticsTableHookPropertyNames enum
var AllowedAnalyticsTableHookPropertyNamesEnumValues = []AnalyticsTableHookPropertyNames{
	"access",
	"analyticsTableType",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"displayName",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"phase",
	"resourceTableType",
	"sharing",
	"sql",
	"translations",
}

func (v *AnalyticsTableHookPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AnalyticsTableHookPropertyNames(value)
	for _, existing := range AllowedAnalyticsTableHookPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AnalyticsTableHookPropertyNames", value)
}

// NewAnalyticsTableHookPropertyNamesFromValue returns a pointer to a valid AnalyticsTableHookPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAnalyticsTableHookPropertyNamesFromValue(v string) (*AnalyticsTableHookPropertyNames, error) {
	ev := AnalyticsTableHookPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AnalyticsTableHookPropertyNames: valid values are %v", v, AllowedAnalyticsTableHookPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AnalyticsTableHookPropertyNames) IsValid() bool {
	for _, existing := range AllowedAnalyticsTableHookPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AnalyticsTableHookPropertyNames value
func (v AnalyticsTableHookPropertyNames) Ptr() *AnalyticsTableHookPropertyNames {
	return &v
}

type NullableAnalyticsTableHookPropertyNames struct {
	value *AnalyticsTableHookPropertyNames
	isSet bool
}

func (v NullableAnalyticsTableHookPropertyNames) Get() *AnalyticsTableHookPropertyNames {
	return v.value
}

func (v *NullableAnalyticsTableHookPropertyNames) Set(val *AnalyticsTableHookPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsTableHookPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsTableHookPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsTableHookPropertyNames(val *AnalyticsTableHookPropertyNames) *NullableAnalyticsTableHookPropertyNames {
	return &NullableAnalyticsTableHookPropertyNames{value: val, isSet: true}
}

func (v NullableAnalyticsTableHookPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsTableHookPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
