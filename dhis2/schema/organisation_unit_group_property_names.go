/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// OrganisationUnitGroupPropertyNames the model 'OrganisationUnitGroupPropertyNames'
type OrganisationUnitGroupPropertyNames string

// List of OrganisationUnitGroupPropertyNames
const (
	ORGANISATIONUNITGROUPPROPERTYNAMES_ACCESS              OrganisationUnitGroupPropertyNames = "access"
	ORGANISATIONUNITGROUPPROPERTYNAMES_AGGREGATION_TYPE    OrganisationUnitGroupPropertyNames = "aggregationType"
	ORGANISATIONUNITGROUPPROPERTYNAMES_ATTRIBUTE_VALUES    OrganisationUnitGroupPropertyNames = "attributeValues"
	ORGANISATIONUNITGROUPPROPERTYNAMES_CODE                OrganisationUnitGroupPropertyNames = "code"
	ORGANISATIONUNITGROUPPROPERTYNAMES_COLOR               OrganisationUnitGroupPropertyNames = "color"
	ORGANISATIONUNITGROUPPROPERTYNAMES_CREATED             OrganisationUnitGroupPropertyNames = "created"
	ORGANISATIONUNITGROUPPROPERTYNAMES_CREATED_BY          OrganisationUnitGroupPropertyNames = "createdBy"
	ORGANISATIONUNITGROUPPROPERTYNAMES_DESCRIPTION         OrganisationUnitGroupPropertyNames = "description"
	ORGANISATIONUNITGROUPPROPERTYNAMES_DIMENSION_ITEM      OrganisationUnitGroupPropertyNames = "dimensionItem"
	ORGANISATIONUNITGROUPPROPERTYNAMES_DISPLAY_DESCRIPTION OrganisationUnitGroupPropertyNames = "displayDescription"
	ORGANISATIONUNITGROUPPROPERTYNAMES_DISPLAY_FORM_NAME   OrganisationUnitGroupPropertyNames = "displayFormName"
	ORGANISATIONUNITGROUPPROPERTYNAMES_DISPLAY_NAME        OrganisationUnitGroupPropertyNames = "displayName"
	ORGANISATIONUNITGROUPPROPERTYNAMES_DISPLAY_SHORT_NAME  OrganisationUnitGroupPropertyNames = "displayShortName"
	ORGANISATIONUNITGROUPPROPERTYNAMES_FAVORITE            OrganisationUnitGroupPropertyNames = "favorite"
	ORGANISATIONUNITGROUPPROPERTYNAMES_FAVORITES           OrganisationUnitGroupPropertyNames = "favorites"
	ORGANISATIONUNITGROUPPROPERTYNAMES_FEATURE_TYPE        OrganisationUnitGroupPropertyNames = "featureType"
	ORGANISATIONUNITGROUPPROPERTYNAMES_FORM_NAME           OrganisationUnitGroupPropertyNames = "formName"
	ORGANISATIONUNITGROUPPROPERTYNAMES_GEOMETRY            OrganisationUnitGroupPropertyNames = "geometry"
	ORGANISATIONUNITGROUPPROPERTYNAMES_GROUP_SETS          OrganisationUnitGroupPropertyNames = "groupSets"
	ORGANISATIONUNITGROUPPROPERTYNAMES_HREF                OrganisationUnitGroupPropertyNames = "href"
	ORGANISATIONUNITGROUPPROPERTYNAMES_ID                  OrganisationUnitGroupPropertyNames = "id"
	ORGANISATIONUNITGROUPPROPERTYNAMES_LAST_UPDATED        OrganisationUnitGroupPropertyNames = "lastUpdated"
	ORGANISATIONUNITGROUPPROPERTYNAMES_LAST_UPDATED_BY     OrganisationUnitGroupPropertyNames = "lastUpdatedBy"
	ORGANISATIONUNITGROUPPROPERTYNAMES_LEGEND_SET          OrganisationUnitGroupPropertyNames = "legendSet"
	ORGANISATIONUNITGROUPPROPERTYNAMES_LEGEND_SETS         OrganisationUnitGroupPropertyNames = "legendSets"
	ORGANISATIONUNITGROUPPROPERTYNAMES_NAME                OrganisationUnitGroupPropertyNames = "name"
	ORGANISATIONUNITGROUPPROPERTYNAMES_ORGANISATION_UNITS  OrganisationUnitGroupPropertyNames = "organisationUnits"
	ORGANISATIONUNITGROUPPROPERTYNAMES_QUERY_MODS          OrganisationUnitGroupPropertyNames = "queryMods"
	ORGANISATIONUNITGROUPPROPERTYNAMES_SHARING             OrganisationUnitGroupPropertyNames = "sharing"
	ORGANISATIONUNITGROUPPROPERTYNAMES_SHORT_NAME          OrganisationUnitGroupPropertyNames = "shortName"
	ORGANISATIONUNITGROUPPROPERTYNAMES_SYMBOL              OrganisationUnitGroupPropertyNames = "symbol"
	ORGANISATIONUNITGROUPPROPERTYNAMES_TRANSLATIONS        OrganisationUnitGroupPropertyNames = "translations"
)

// All allowed values of OrganisationUnitGroupPropertyNames enum
var AllowedOrganisationUnitGroupPropertyNamesEnumValues = []OrganisationUnitGroupPropertyNames{
	"access",
	"aggregationType",
	"attributeValues",
	"code",
	"color",
	"created",
	"createdBy",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"favorite",
	"favorites",
	"featureType",
	"formName",
	"geometry",
	"groupSets",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"name",
	"organisationUnits",
	"queryMods",
	"sharing",
	"shortName",
	"symbol",
	"translations",
}

func (v *OrganisationUnitGroupPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrganisationUnitGroupPropertyNames(value)
	for _, existing := range AllowedOrganisationUnitGroupPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrganisationUnitGroupPropertyNames", value)
}

// NewOrganisationUnitGroupPropertyNamesFromValue returns a pointer to a valid OrganisationUnitGroupPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrganisationUnitGroupPropertyNamesFromValue(v string) (*OrganisationUnitGroupPropertyNames, error) {
	ev := OrganisationUnitGroupPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrganisationUnitGroupPropertyNames: valid values are %v", v, AllowedOrganisationUnitGroupPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrganisationUnitGroupPropertyNames) IsValid() bool {
	for _, existing := range AllowedOrganisationUnitGroupPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrganisationUnitGroupPropertyNames value
func (v OrganisationUnitGroupPropertyNames) Ptr() *OrganisationUnitGroupPropertyNames {
	return &v
}

type NullableOrganisationUnitGroupPropertyNames struct {
	value *OrganisationUnitGroupPropertyNames
	isSet bool
}

func (v NullableOrganisationUnitGroupPropertyNames) Get() *OrganisationUnitGroupPropertyNames {
	return v.value
}

func (v *NullableOrganisationUnitGroupPropertyNames) Set(val *OrganisationUnitGroupPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganisationUnitGroupPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganisationUnitGroupPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganisationUnitGroupPropertyNames(val *OrganisationUnitGroupPropertyNames) *NullableOrganisationUnitGroupPropertyNames {
	return &NullableOrganisationUnitGroupPropertyNames{value: val, isSet: true}
}

func (v NullableOrganisationUnitGroupPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganisationUnitGroupPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
