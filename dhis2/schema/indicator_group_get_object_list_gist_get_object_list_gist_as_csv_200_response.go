/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response - struct for IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response
type IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response struct {
	IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfIndicatorGroup                                                 *[]IndicatorGroup
}

// IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response
func IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response(v *IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response {
	return IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response{
		IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []IndicatorGroupAsIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []IndicatorGroup wrapped in IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfIndicatorGroupAsIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response(v *[]IndicatorGroup) IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response {
	return IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfIndicatorGroup: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfIndicatorGroup
	err = newStrictDecoder(data).Decode(&dst.ArrayOfIndicatorGroup)
	if err == nil {
		jsonArrayOfIndicatorGroup, _ := json.Marshal(dst.ArrayOfIndicatorGroup)
		if string(jsonArrayOfIndicatorGroup) == "{}" { // empty struct
			dst.ArrayOfIndicatorGroup = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfIndicatorGroup = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfIndicatorGroup = nil

		return fmt.Errorf("data matches more than one schema in oneOf(IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfIndicatorGroup != nil {
		return json.Marshal(&src.ArrayOfIndicatorGroup)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfIndicatorGroup != nil {
		return obj.ArrayOfIndicatorGroup
	}

	// all schemas are nil
	return nil
}

type NullableIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) Get() *IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response(val *IndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) *NullableIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndicatorGroupGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
