/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response - struct for OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response
type OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response struct {
	OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfOptionGroup                                                 *[]OptionGroup
}

// OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response
func OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response(v *OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response {
	return OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response{
		OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []OptionGroupAsOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []OptionGroup wrapped in OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfOptionGroupAsOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response(v *[]OptionGroup) OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response {
	return OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfOptionGroup: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonOptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonOptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfOptionGroup
	err = newStrictDecoder(data).Decode(&dst.ArrayOfOptionGroup)
	if err == nil {
		jsonArrayOfOptionGroup, _ := json.Marshal(dst.ArrayOfOptionGroup)
		if string(jsonArrayOfOptionGroup) == "{}" { // empty struct
			dst.ArrayOfOptionGroup = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfOptionGroup = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfOptionGroup = nil

		return fmt.Errorf("data matches more than one schema in oneOf(OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfOptionGroup != nil {
		return json.Marshal(&src.ArrayOfOptionGroup)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.OptionGroupGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfOptionGroup != nil {
		return obj.ArrayOfOptionGroup
	}

	// all schemas are nil
	return nil
}

type NullableOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) Get() *OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response(val *OptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) *NullableOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionGroupGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
