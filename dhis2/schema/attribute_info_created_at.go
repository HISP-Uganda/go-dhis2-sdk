/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
	"time"
)

// AttributeInfoCreatedAt - struct for AttributeInfoCreatedAt
type AttributeInfoCreatedAt struct {
	Int64    *int64
	TimeTime *time.Time
}

// int64AsAttributeInfoCreatedAt is a convenience function that returns int64 wrapped in AttributeInfoCreatedAt
func Int64AsAttributeInfoCreatedAt(v *int64) AttributeInfoCreatedAt {
	return AttributeInfoCreatedAt{
		Int64: v,
	}
}

// time.TimeAsAttributeInfoCreatedAt is a convenience function that returns time.Time wrapped in AttributeInfoCreatedAt
func TimeTimeAsAttributeInfoCreatedAt(v *time.Time) AttributeInfoCreatedAt {
	return AttributeInfoCreatedAt{
		TimeTime: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AttributeInfoCreatedAt) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into Int64
	err = newStrictDecoder(data).Decode(&dst.Int64)
	if err == nil {
		jsonInt64, _ := json.Marshal(dst.Int64)
		if string(jsonInt64) == "{}" { // empty struct
			dst.Int64 = nil
		} else {
			match++
		}
	} else {
		dst.Int64 = nil
	}

	// try to unmarshal data into TimeTime
	err = newStrictDecoder(data).Decode(&dst.TimeTime)
	if err == nil {
		jsonTimeTime, _ := json.Marshal(dst.TimeTime)
		if string(jsonTimeTime) == "{}" { // empty struct
			dst.TimeTime = nil
		} else {
			match++
		}
	} else {
		dst.TimeTime = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.Int64 = nil
		dst.TimeTime = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AttributeInfoCreatedAt)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AttributeInfoCreatedAt)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AttributeInfoCreatedAt) MarshalJSON() ([]byte, error) {
	if src.Int64 != nil {
		return json.Marshal(&src.Int64)
	}

	if src.TimeTime != nil {
		return json.Marshal(&src.TimeTime)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AttributeInfoCreatedAt) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.Int64 != nil {
		return obj.Int64
	}

	if obj.TimeTime != nil {
		return obj.TimeTime
	}

	// all schemas are nil
	return nil
}

type NullableAttributeInfoCreatedAt struct {
	value *AttributeInfoCreatedAt
	isSet bool
}

func (v NullableAttributeInfoCreatedAt) Get() *AttributeInfoCreatedAt {
	return v.value
}

func (v *NullableAttributeInfoCreatedAt) Set(val *AttributeInfoCreatedAt) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeInfoCreatedAt) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeInfoCreatedAt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeInfoCreatedAt(val *AttributeInfoCreatedAt) *NullableAttributeInfoCreatedAt {
	return &NullableAttributeInfoCreatedAt{value: val, isSet: true}
}

func (v NullableAttributeInfoCreatedAt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeInfoCreatedAt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
