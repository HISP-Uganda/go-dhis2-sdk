/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// DimensionItemType the model 'DimensionItemType'
type DimensionItemType string

// List of DimensionItemType
const (
	DIMENSIONITEMTYPE_DATA_ELEMENT                 DimensionItemType = "DATA_ELEMENT"
	DIMENSIONITEMTYPE_DATA_ELEMENT_OPERAND         DimensionItemType = "DATA_ELEMENT_OPERAND"
	DIMENSIONITEMTYPE_INDICATOR                    DimensionItemType = "INDICATOR"
	DIMENSIONITEMTYPE_REPORTING_RATE               DimensionItemType = "REPORTING_RATE"
	DIMENSIONITEMTYPE_PROGRAM_DATA_ELEMENT         DimensionItemType = "PROGRAM_DATA_ELEMENT"
	DIMENSIONITEMTYPE_PROGRAM_DATA_ELEMENT_OPTION  DimensionItemType = "PROGRAM_DATA_ELEMENT_OPTION"
	DIMENSIONITEMTYPE_PROGRAM_ATTRIBUTE            DimensionItemType = "PROGRAM_ATTRIBUTE"
	DIMENSIONITEMTYPE_PROGRAM_ATTRIBUTE_OPTION     DimensionItemType = "PROGRAM_ATTRIBUTE_OPTION"
	DIMENSIONITEMTYPE_PROGRAM_INDICATOR            DimensionItemType = "PROGRAM_INDICATOR"
	DIMENSIONITEMTYPE_PERIOD                       DimensionItemType = "PERIOD"
	DIMENSIONITEMTYPE_ORGANISATION_UNIT            DimensionItemType = "ORGANISATION_UNIT"
	DIMENSIONITEMTYPE_CATEGORY_OPTION              DimensionItemType = "CATEGORY_OPTION"
	DIMENSIONITEMTYPE_OPTION_GROUP                 DimensionItemType = "OPTION_GROUP"
	DIMENSIONITEMTYPE_DATA_ELEMENT_GROUP           DimensionItemType = "DATA_ELEMENT_GROUP"
	DIMENSIONITEMTYPE_ORGANISATION_UNIT_GROUP      DimensionItemType = "ORGANISATION_UNIT_GROUP"
	DIMENSIONITEMTYPE_CATEGORY_OPTION_GROUP        DimensionItemType = "CATEGORY_OPTION_GROUP"
	DIMENSIONITEMTYPE_EXPRESSION_DIMENSION_ITEM    DimensionItemType = "EXPRESSION_DIMENSION_ITEM"
	DIMENSIONITEMTYPE_SUBEXPRESSION_DIMENSION_ITEM DimensionItemType = "SUBEXPRESSION_DIMENSION_ITEM"
)

// All allowed values of DimensionItemType enum
var AllowedDimensionItemTypeEnumValues = []DimensionItemType{
	"DATA_ELEMENT",
	"DATA_ELEMENT_OPERAND",
	"INDICATOR",
	"REPORTING_RATE",
	"PROGRAM_DATA_ELEMENT",
	"PROGRAM_DATA_ELEMENT_OPTION",
	"PROGRAM_ATTRIBUTE",
	"PROGRAM_ATTRIBUTE_OPTION",
	"PROGRAM_INDICATOR",
	"PERIOD",
	"ORGANISATION_UNIT",
	"CATEGORY_OPTION",
	"OPTION_GROUP",
	"DATA_ELEMENT_GROUP",
	"ORGANISATION_UNIT_GROUP",
	"CATEGORY_OPTION_GROUP",
	"EXPRESSION_DIMENSION_ITEM",
	"SUBEXPRESSION_DIMENSION_ITEM",
}

func (v *DimensionItemType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DimensionItemType(value)
	for _, existing := range AllowedDimensionItemTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DimensionItemType", value)
}

// NewDimensionItemTypeFromValue returns a pointer to a valid DimensionItemType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDimensionItemTypeFromValue(v string) (*DimensionItemType, error) {
	ev := DimensionItemType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DimensionItemType: valid values are %v", v, AllowedDimensionItemTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DimensionItemType) IsValid() bool {
	for _, existing := range AllowedDimensionItemTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DimensionItemType value
func (v DimensionItemType) Ptr() *DimensionItemType {
	return &v
}

type NullableDimensionItemType struct {
	value *DimensionItemType
	isSet bool
}

func (v NullableDimensionItemType) Get() *DimensionItemType {
	return v.value
}

func (v *NullableDimensionItemType) Set(val *DimensionItemType) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionItemType) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionItemType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionItemType(val *DimensionItemType) *NullableDimensionItemType {
	return &NullableDimensionItemType{value: val, isSet: true}
}

func (v NullableDimensionItemType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionItemType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
