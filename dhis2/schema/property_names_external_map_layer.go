/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesExternalMapLayer the model 'PropertyNamesExternalMapLayer'
type PropertyNamesExternalMapLayer string

// List of PropertyNames_ExternalMapLayer
const (
	PROPERTYNAMESEXTERNALMAPLAYER_ACCESS              PropertyNamesExternalMapLayer = "access"
	PROPERTYNAMESEXTERNALMAPLAYER_ATTRIBUTE_VALUES    PropertyNamesExternalMapLayer = "attributeValues"
	PROPERTYNAMESEXTERNALMAPLAYER_ATTRIBUTION         PropertyNamesExternalMapLayer = "attribution"
	PROPERTYNAMESEXTERNALMAPLAYER_CODE                PropertyNamesExternalMapLayer = "code"
	PROPERTYNAMESEXTERNALMAPLAYER_CREATED             PropertyNamesExternalMapLayer = "created"
	PROPERTYNAMESEXTERNALMAPLAYER_CREATED_BY          PropertyNamesExternalMapLayer = "createdBy"
	PROPERTYNAMESEXTERNALMAPLAYER_DISPLAY_NAME        PropertyNamesExternalMapLayer = "displayName"
	PROPERTYNAMESEXTERNALMAPLAYER_EXTERNAL_ACCESS     PropertyNamesExternalMapLayer = "externalAccess"
	PROPERTYNAMESEXTERNALMAPLAYER_FAVORITE            PropertyNamesExternalMapLayer = "favorite"
	PROPERTYNAMESEXTERNALMAPLAYER_FAVORITES           PropertyNamesExternalMapLayer = "favorites"
	PROPERTYNAMESEXTERNALMAPLAYER_HREF                PropertyNamesExternalMapLayer = "href"
	PROPERTYNAMESEXTERNALMAPLAYER_ID                  PropertyNamesExternalMapLayer = "id"
	PROPERTYNAMESEXTERNALMAPLAYER_IMAGE_FORMAT        PropertyNamesExternalMapLayer = "imageFormat"
	PROPERTYNAMESEXTERNALMAPLAYER_LAST_UPDATED        PropertyNamesExternalMapLayer = "lastUpdated"
	PROPERTYNAMESEXTERNALMAPLAYER_LAST_UPDATED_BY     PropertyNamesExternalMapLayer = "lastUpdatedBy"
	PROPERTYNAMESEXTERNALMAPLAYER_LAYERS              PropertyNamesExternalMapLayer = "layers"
	PROPERTYNAMESEXTERNALMAPLAYER_LEGEND_SET          PropertyNamesExternalMapLayer = "legendSet"
	PROPERTYNAMESEXTERNALMAPLAYER_LEGEND_SET_URL      PropertyNamesExternalMapLayer = "legendSetUrl"
	PROPERTYNAMESEXTERNALMAPLAYER_MAP_LAYER_POSITION  PropertyNamesExternalMapLayer = "mapLayerPosition"
	PROPERTYNAMESEXTERNALMAPLAYER_MAP_SERVICE         PropertyNamesExternalMapLayer = "mapService"
	PROPERTYNAMESEXTERNALMAPLAYER_NAME                PropertyNamesExternalMapLayer = "name"
	PROPERTYNAMESEXTERNALMAPLAYER_PUBLIC_ACCESS       PropertyNamesExternalMapLayer = "publicAccess"
	PROPERTYNAMESEXTERNALMAPLAYER_SHARING             PropertyNamesExternalMapLayer = "sharing"
	PROPERTYNAMESEXTERNALMAPLAYER_TRANSLATIONS        PropertyNamesExternalMapLayer = "translations"
	PROPERTYNAMESEXTERNALMAPLAYER_URL                 PropertyNamesExternalMapLayer = "url"
	PROPERTYNAMESEXTERNALMAPLAYER_USER                PropertyNamesExternalMapLayer = "user"
	PROPERTYNAMESEXTERNALMAPLAYER_USER_ACCESSES       PropertyNamesExternalMapLayer = "userAccesses"
	PROPERTYNAMESEXTERNALMAPLAYER_USER_GROUP_ACCESSES PropertyNamesExternalMapLayer = "userGroupAccesses"
)

// All allowed values of PropertyNamesExternalMapLayer enum
var AllowedPropertyNamesExternalMapLayerEnumValues = []PropertyNamesExternalMapLayer{
	"access",
	"attributeValues",
	"attribution",
	"code",
	"created",
	"createdBy",
	"displayName",
	"externalAccess",
	"favorite",
	"favorites",
	"href",
	"id",
	"imageFormat",
	"lastUpdated",
	"lastUpdatedBy",
	"layers",
	"legendSet",
	"legendSetUrl",
	"mapLayerPosition",
	"mapService",
	"name",
	"publicAccess",
	"sharing",
	"translations",
	"url",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesExternalMapLayer) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesExternalMapLayer(value)
	for _, existing := range AllowedPropertyNamesExternalMapLayerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesExternalMapLayer", value)
}

// NewPropertyNamesExternalMapLayerFromValue returns a pointer to a valid PropertyNamesExternalMapLayer
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesExternalMapLayerFromValue(v string) (*PropertyNamesExternalMapLayer, error) {
	ev := PropertyNamesExternalMapLayer(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesExternalMapLayer: valid values are %v", v, AllowedPropertyNamesExternalMapLayerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesExternalMapLayer) IsValid() bool {
	for _, existing := range AllowedPropertyNamesExternalMapLayerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_ExternalMapLayer value
func (v PropertyNamesExternalMapLayer) Ptr() *PropertyNamesExternalMapLayer {
	return &v
}

type NullablePropertyNamesExternalMapLayer struct {
	value *PropertyNamesExternalMapLayer
	isSet bool
}

func (v NullablePropertyNamesExternalMapLayer) Get() *PropertyNamesExternalMapLayer {
	return v.value
}

func (v *NullablePropertyNamesExternalMapLayer) Set(val *PropertyNamesExternalMapLayer) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesExternalMapLayer) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesExternalMapLayer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesExternalMapLayer(val *PropertyNamesExternalMapLayer) *NullablePropertyNamesExternalMapLayer {
	return &NullablePropertyNamesExternalMapLayer{value: val, isSet: true}
}

func (v NullablePropertyNamesExternalMapLayer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesExternalMapLayer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
