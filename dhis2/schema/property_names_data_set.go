/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesDataSet the model 'PropertyNamesDataSet'
type PropertyNamesDataSet string

// List of PropertyNames_DataSet
const (
	PROPERTYNAMESDATASET_ACCESS                           PropertyNamesDataSet = "access"
	PROPERTYNAMESDATASET_AGGREGATION_TYPE                 PropertyNamesDataSet = "aggregationType"
	PROPERTYNAMESDATASET_ATTRIBUTE_VALUES                 PropertyNamesDataSet = "attributeValues"
	PROPERTYNAMESDATASET_CATEGORY_COMBO                   PropertyNamesDataSet = "categoryCombo"
	PROPERTYNAMESDATASET_CODE                             PropertyNamesDataSet = "code"
	PROPERTYNAMESDATASET_COMPULSORY_DATA_ELEMENT_OPERANDS PropertyNamesDataSet = "compulsoryDataElementOperands"
	PROPERTYNAMESDATASET_COMPULSORY_FIELDS_COMPLETE_ONLY  PropertyNamesDataSet = "compulsoryFieldsCompleteOnly"
	PROPERTYNAMESDATASET_CREATED                          PropertyNamesDataSet = "created"
	PROPERTYNAMESDATASET_CREATED_BY                       PropertyNamesDataSet = "createdBy"
	PROPERTYNAMESDATASET_DATA_ELEMENT_DECORATION          PropertyNamesDataSet = "dataElementDecoration"
	PROPERTYNAMESDATASET_DATA_ENTRY_FORM                  PropertyNamesDataSet = "dataEntryForm"
	PROPERTYNAMESDATASET_DATA_INPUT_PERIODS               PropertyNamesDataSet = "dataInputPeriods"
	PROPERTYNAMESDATASET_DATA_SET_ELEMENTS                PropertyNamesDataSet = "dataSetElements"
	PROPERTYNAMESDATASET_DESCRIPTION                      PropertyNamesDataSet = "description"
	PROPERTYNAMESDATASET_DIMENSION_ITEM                   PropertyNamesDataSet = "dimensionItem"
	PROPERTYNAMESDATASET_DISPLAY_DESCRIPTION              PropertyNamesDataSet = "displayDescription"
	PROPERTYNAMESDATASET_DISPLAY_FORM_NAME                PropertyNamesDataSet = "displayFormName"
	PROPERTYNAMESDATASET_DISPLAY_NAME                     PropertyNamesDataSet = "displayName"
	PROPERTYNAMESDATASET_DISPLAY_SHORT_NAME               PropertyNamesDataSet = "displayShortName"
	PROPERTYNAMESDATASET_EXPIRY_DAYS                      PropertyNamesDataSet = "expiryDays"
	PROPERTYNAMESDATASET_EXTERNAL_ACCESS                  PropertyNamesDataSet = "externalAccess"
	PROPERTYNAMESDATASET_FAVORITE                         PropertyNamesDataSet = "favorite"
	PROPERTYNAMESDATASET_FAVORITES                        PropertyNamesDataSet = "favorites"
	PROPERTYNAMESDATASET_FIELD_COMBINATION_REQUIRED       PropertyNamesDataSet = "fieldCombinationRequired"
	PROPERTYNAMESDATASET_FORM_NAME                        PropertyNamesDataSet = "formName"
	PROPERTYNAMESDATASET_FORM_TYPE                        PropertyNamesDataSet = "formType"
	PROPERTYNAMESDATASET_HREF                             PropertyNamesDataSet = "href"
	PROPERTYNAMESDATASET_ID                               PropertyNamesDataSet = "id"
	PROPERTYNAMESDATASET_INDICATORS                       PropertyNamesDataSet = "indicators"
	PROPERTYNAMESDATASET_INTERPRETATIONS                  PropertyNamesDataSet = "interpretations"
	PROPERTYNAMESDATASET_LAST_UPDATED                     PropertyNamesDataSet = "lastUpdated"
	PROPERTYNAMESDATASET_LAST_UPDATED_BY                  PropertyNamesDataSet = "lastUpdatedBy"
	PROPERTYNAMESDATASET_LEGEND_SET                       PropertyNamesDataSet = "legendSet"
	PROPERTYNAMESDATASET_LEGEND_SETS                      PropertyNamesDataSet = "legendSets"
	PROPERTYNAMESDATASET_MOBILE                           PropertyNamesDataSet = "mobile"
	PROPERTYNAMESDATASET_NAME                             PropertyNamesDataSet = "name"
	PROPERTYNAMESDATASET_NO_VALUE_REQUIRES_COMMENT        PropertyNamesDataSet = "noValueRequiresComment"
	PROPERTYNAMESDATASET_NOTIFICATION_RECIPIENTS          PropertyNamesDataSet = "notificationRecipients"
	PROPERTYNAMESDATASET_NOTIFY_COMPLETING_USER           PropertyNamesDataSet = "notifyCompletingUser"
	PROPERTYNAMESDATASET_OPEN_FUTURE_PERIODS              PropertyNamesDataSet = "openFuturePeriods"
	PROPERTYNAMESDATASET_OPEN_PERIODS_AFTER_CO_END_DATE   PropertyNamesDataSet = "openPeriodsAfterCoEndDate"
	PROPERTYNAMESDATASET_ORGANISATION_UNITS               PropertyNamesDataSet = "organisationUnits"
	PROPERTYNAMESDATASET_PERIOD_TYPE                      PropertyNamesDataSet = "periodType"
	PROPERTYNAMESDATASET_PUBLIC_ACCESS                    PropertyNamesDataSet = "publicAccess"
	PROPERTYNAMESDATASET_QUERY_MODS                       PropertyNamesDataSet = "queryMods"
	PROPERTYNAMESDATASET_RENDER_AS_TABS                   PropertyNamesDataSet = "renderAsTabs"
	PROPERTYNAMESDATASET_RENDER_HORIZONTALLY              PropertyNamesDataSet = "renderHorizontally"
	PROPERTYNAMESDATASET_SECTIONS                         PropertyNamesDataSet = "sections"
	PROPERTYNAMESDATASET_SHARING                          PropertyNamesDataSet = "sharing"
	PROPERTYNAMESDATASET_SHORT_NAME                       PropertyNamesDataSet = "shortName"
	PROPERTYNAMESDATASET_SKIP_OFFLINE                     PropertyNamesDataSet = "skipOffline"
	PROPERTYNAMESDATASET_STYLE                            PropertyNamesDataSet = "style"
	PROPERTYNAMESDATASET_TIMELY_DAYS                      PropertyNamesDataSet = "timelyDays"
	PROPERTYNAMESDATASET_TRANSLATIONS                     PropertyNamesDataSet = "translations"
	PROPERTYNAMESDATASET_USER                             PropertyNamesDataSet = "user"
	PROPERTYNAMESDATASET_USER_ACCESSES                    PropertyNamesDataSet = "userAccesses"
	PROPERTYNAMESDATASET_USER_GROUP_ACCESSES              PropertyNamesDataSet = "userGroupAccesses"
	PROPERTYNAMESDATASET_VALID_COMPLETE_ONLY              PropertyNamesDataSet = "validCompleteOnly"
	PROPERTYNAMESDATASET_VERSION                          PropertyNamesDataSet = "version"
	PROPERTYNAMESDATASET_WORKFLOW                         PropertyNamesDataSet = "workflow"
)

// All allowed values of PropertyNamesDataSet enum
var AllowedPropertyNamesDataSetEnumValues = []PropertyNamesDataSet{
	"access",
	"aggregationType",
	"attributeValues",
	"categoryCombo",
	"code",
	"compulsoryDataElementOperands",
	"compulsoryFieldsCompleteOnly",
	"created",
	"createdBy",
	"dataElementDecoration",
	"dataEntryForm",
	"dataInputPeriods",
	"dataSetElements",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"expiryDays",
	"externalAccess",
	"favorite",
	"favorites",
	"fieldCombinationRequired",
	"formName",
	"formType",
	"href",
	"id",
	"indicators",
	"interpretations",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"mobile",
	"name",
	"noValueRequiresComment",
	"notificationRecipients",
	"notifyCompletingUser",
	"openFuturePeriods",
	"openPeriodsAfterCoEndDate",
	"organisationUnits",
	"periodType",
	"publicAccess",
	"queryMods",
	"renderAsTabs",
	"renderHorizontally",
	"sections",
	"sharing",
	"shortName",
	"skipOffline",
	"style",
	"timelyDays",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"validCompleteOnly",
	"version",
	"workflow",
}

func (v *PropertyNamesDataSet) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesDataSet(value)
	for _, existing := range AllowedPropertyNamesDataSetEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesDataSet", value)
}

// NewPropertyNamesDataSetFromValue returns a pointer to a valid PropertyNamesDataSet
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesDataSetFromValue(v string) (*PropertyNamesDataSet, error) {
	ev := PropertyNamesDataSet(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesDataSet: valid values are %v", v, AllowedPropertyNamesDataSetEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesDataSet) IsValid() bool {
	for _, existing := range AllowedPropertyNamesDataSetEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_DataSet value
func (v PropertyNamesDataSet) Ptr() *PropertyNamesDataSet {
	return &v
}

type NullablePropertyNamesDataSet struct {
	value *PropertyNamesDataSet
	isSet bool
}

func (v NullablePropertyNamesDataSet) Get() *PropertyNamesDataSet {
	return v.value
}

func (v *NullablePropertyNamesDataSet) Set(val *PropertyNamesDataSet) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesDataSet) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesDataSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesDataSet(val *PropertyNamesDataSet) *NullablePropertyNamesDataSet {
	return &NullablePropertyNamesDataSet{value: val, isSet: true}
}

func (v NullablePropertyNamesDataSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesDataSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
