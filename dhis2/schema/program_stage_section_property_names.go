/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// ProgramStageSectionPropertyNames the model 'ProgramStageSectionPropertyNames'
type ProgramStageSectionPropertyNames string

// List of ProgramStageSectionPropertyNames
const (
	PROGRAMSTAGESECTIONPROPERTYNAMES_ACCESS              ProgramStageSectionPropertyNames = "access"
	PROGRAMSTAGESECTIONPROPERTYNAMES_ATTRIBUTE_VALUES    ProgramStageSectionPropertyNames = "attributeValues"
	PROGRAMSTAGESECTIONPROPERTYNAMES_CODE                ProgramStageSectionPropertyNames = "code"
	PROGRAMSTAGESECTIONPROPERTYNAMES_CREATED             ProgramStageSectionPropertyNames = "created"
	PROGRAMSTAGESECTIONPROPERTYNAMES_CREATED_BY          ProgramStageSectionPropertyNames = "createdBy"
	PROGRAMSTAGESECTIONPROPERTYNAMES_DATA_ELEMENTS       ProgramStageSectionPropertyNames = "dataElements"
	PROGRAMSTAGESECTIONPROPERTYNAMES_DESCRIPTION         ProgramStageSectionPropertyNames = "description"
	PROGRAMSTAGESECTIONPROPERTYNAMES_DISPLAY_DESCRIPTION ProgramStageSectionPropertyNames = "displayDescription"
	PROGRAMSTAGESECTIONPROPERTYNAMES_DISPLAY_FORM_NAME   ProgramStageSectionPropertyNames = "displayFormName"
	PROGRAMSTAGESECTIONPROPERTYNAMES_DISPLAY_NAME        ProgramStageSectionPropertyNames = "displayName"
	PROGRAMSTAGESECTIONPROPERTYNAMES_DISPLAY_SHORT_NAME  ProgramStageSectionPropertyNames = "displayShortName"
	PROGRAMSTAGESECTIONPROPERTYNAMES_FAVORITE            ProgramStageSectionPropertyNames = "favorite"
	PROGRAMSTAGESECTIONPROPERTYNAMES_FAVORITES           ProgramStageSectionPropertyNames = "favorites"
	PROGRAMSTAGESECTIONPROPERTYNAMES_FORM_NAME           ProgramStageSectionPropertyNames = "formName"
	PROGRAMSTAGESECTIONPROPERTYNAMES_HREF                ProgramStageSectionPropertyNames = "href"
	PROGRAMSTAGESECTIONPROPERTYNAMES_ID                  ProgramStageSectionPropertyNames = "id"
	PROGRAMSTAGESECTIONPROPERTYNAMES_LAST_UPDATED        ProgramStageSectionPropertyNames = "lastUpdated"
	PROGRAMSTAGESECTIONPROPERTYNAMES_LAST_UPDATED_BY     ProgramStageSectionPropertyNames = "lastUpdatedBy"
	PROGRAMSTAGESECTIONPROPERTYNAMES_NAME                ProgramStageSectionPropertyNames = "name"
	PROGRAMSTAGESECTIONPROPERTYNAMES_PROGRAM_INDICATORS  ProgramStageSectionPropertyNames = "programIndicators"
	PROGRAMSTAGESECTIONPROPERTYNAMES_PROGRAM_STAGE       ProgramStageSectionPropertyNames = "programStage"
	PROGRAMSTAGESECTIONPROPERTYNAMES_RENDER_TYPE         ProgramStageSectionPropertyNames = "renderType"
	PROGRAMSTAGESECTIONPROPERTYNAMES_SHARING             ProgramStageSectionPropertyNames = "sharing"
	PROGRAMSTAGESECTIONPROPERTYNAMES_SHORT_NAME          ProgramStageSectionPropertyNames = "shortName"
	PROGRAMSTAGESECTIONPROPERTYNAMES_SORT_ORDER          ProgramStageSectionPropertyNames = "sortOrder"
	PROGRAMSTAGESECTIONPROPERTYNAMES_STYLE               ProgramStageSectionPropertyNames = "style"
	PROGRAMSTAGESECTIONPROPERTYNAMES_TRANSLATIONS        ProgramStageSectionPropertyNames = "translations"
)

// All allowed values of ProgramStageSectionPropertyNames enum
var AllowedProgramStageSectionPropertyNamesEnumValues = []ProgramStageSectionPropertyNames{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"dataElements",
	"description",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"favorite",
	"favorites",
	"formName",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"programIndicators",
	"programStage",
	"renderType",
	"sharing",
	"shortName",
	"sortOrder",
	"style",
	"translations",
}

func (v *ProgramStageSectionPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProgramStageSectionPropertyNames(value)
	for _, existing := range AllowedProgramStageSectionPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProgramStageSectionPropertyNames", value)
}

// NewProgramStageSectionPropertyNamesFromValue returns a pointer to a valid ProgramStageSectionPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProgramStageSectionPropertyNamesFromValue(v string) (*ProgramStageSectionPropertyNames, error) {
	ev := ProgramStageSectionPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProgramStageSectionPropertyNames: valid values are %v", v, AllowedProgramStageSectionPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProgramStageSectionPropertyNames) IsValid() bool {
	for _, existing := range AllowedProgramStageSectionPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProgramStageSectionPropertyNames value
func (v ProgramStageSectionPropertyNames) Ptr() *ProgramStageSectionPropertyNames {
	return &v
}

type NullableProgramStageSectionPropertyNames struct {
	value *ProgramStageSectionPropertyNames
	isSet bool
}

func (v NullableProgramStageSectionPropertyNames) Get() *ProgramStageSectionPropertyNames {
	return v.value
}

func (v *NullableProgramStageSectionPropertyNames) Set(val *ProgramStageSectionPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramStageSectionPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramStageSectionPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramStageSectionPropertyNames(val *ProgramStageSectionPropertyNames) *NullableProgramStageSectionPropertyNames {
	return &NullableProgramStageSectionPropertyNames{value: val, isSet: true}
}

func (v NullableProgramStageSectionPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramStageSectionPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
