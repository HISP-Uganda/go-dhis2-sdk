/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PredictorJobParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PredictorJobParameters{}

// PredictorJobParameters struct for PredictorJobParameters
type PredictorJobParameters struct {
	PredictorGroups []string `json:"predictorGroups,omitempty"`
	Predictors      []string `json:"predictors,omitempty"`
	RelativeEnd     int32    `json:"relativeEnd"`
	RelativeStart   int32    `json:"relativeStart"`
}

type _PredictorJobParameters PredictorJobParameters

// NewPredictorJobParameters instantiates a new PredictorJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPredictorJobParameters(relativeEnd int32, relativeStart int32) *PredictorJobParameters {
	this := PredictorJobParameters{}
	this.RelativeEnd = relativeEnd
	this.RelativeStart = relativeStart
	return &this
}

// NewPredictorJobParametersWithDefaults instantiates a new PredictorJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPredictorJobParametersWithDefaults() *PredictorJobParameters {
	this := PredictorJobParameters{}
	return &this
}

// GetPredictorGroups returns the PredictorGroups field value if set, zero value otherwise.
func (o *PredictorJobParameters) GetPredictorGroups() []string {
	if o == nil || IsNil(o.PredictorGroups) {
		var ret []string
		return ret
	}
	return o.PredictorGroups
}

// GetPredictorGroupsOk returns a tuple with the PredictorGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PredictorJobParameters) GetPredictorGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.PredictorGroups) {
		return nil, false
	}
	return o.PredictorGroups, true
}

// HasPredictorGroups returns a boolean if a field has been set.
func (o *PredictorJobParameters) HasPredictorGroups() bool {
	if o != nil && !IsNil(o.PredictorGroups) {
		return true
	}

	return false
}

// SetPredictorGroups gets a reference to the given []string and assigns it to the PredictorGroups field.
func (o *PredictorJobParameters) SetPredictorGroups(v []string) {
	o.PredictorGroups = v
}

// GetPredictors returns the Predictors field value if set, zero value otherwise.
func (o *PredictorJobParameters) GetPredictors() []string {
	if o == nil || IsNil(o.Predictors) {
		var ret []string
		return ret
	}
	return o.Predictors
}

// GetPredictorsOk returns a tuple with the Predictors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PredictorJobParameters) GetPredictorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Predictors) {
		return nil, false
	}
	return o.Predictors, true
}

// HasPredictors returns a boolean if a field has been set.
func (o *PredictorJobParameters) HasPredictors() bool {
	if o != nil && !IsNil(o.Predictors) {
		return true
	}

	return false
}

// SetPredictors gets a reference to the given []string and assigns it to the Predictors field.
func (o *PredictorJobParameters) SetPredictors(v []string) {
	o.Predictors = v
}

// GetRelativeEnd returns the RelativeEnd field value
func (o *PredictorJobParameters) GetRelativeEnd() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RelativeEnd
}

// GetRelativeEndOk returns a tuple with the RelativeEnd field value
// and a boolean to check if the value has been set.
func (o *PredictorJobParameters) GetRelativeEndOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelativeEnd, true
}

// SetRelativeEnd sets field value
func (o *PredictorJobParameters) SetRelativeEnd(v int32) {
	o.RelativeEnd = v
}

// GetRelativeStart returns the RelativeStart field value
func (o *PredictorJobParameters) GetRelativeStart() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RelativeStart
}

// GetRelativeStartOk returns a tuple with the RelativeStart field value
// and a boolean to check if the value has been set.
func (o *PredictorJobParameters) GetRelativeStartOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelativeStart, true
}

// SetRelativeStart sets field value
func (o *PredictorJobParameters) SetRelativeStart(v int32) {
	o.RelativeStart = v
}

func (o PredictorJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PredictorJobParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PredictorGroups) {
		toSerialize["predictorGroups"] = o.PredictorGroups
	}
	if !IsNil(o.Predictors) {
		toSerialize["predictors"] = o.Predictors
	}
	toSerialize["relativeEnd"] = o.RelativeEnd
	toSerialize["relativeStart"] = o.RelativeStart
	return toSerialize, nil
}

func (o *PredictorJobParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"relativeEnd",
		"relativeStart",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPredictorJobParameters := _PredictorJobParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPredictorJobParameters)

	if err != nil {
		return err
	}

	*o = PredictorJobParameters(varPredictorJobParameters)

	return err
}

type NullablePredictorJobParameters struct {
	value *PredictorJobParameters
	isSet bool
}

func (v NullablePredictorJobParameters) Get() *PredictorJobParameters {
	return v.value
}

func (v *NullablePredictorJobParameters) Set(val *PredictorJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullablePredictorJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullablePredictorJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePredictorJobParameters(val *PredictorJobParameters) *NullablePredictorJobParameters {
	return &NullablePredictorJobParameters{value: val, isSet: true}
}

func (v NullablePredictorJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePredictorJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
