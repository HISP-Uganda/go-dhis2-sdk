/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the OptionGroupSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionGroupSet{}

// OptionGroupSet struct for OptionGroupSet
type OptionGroupSet struct {
	Access                *Access                     `json:"access,omitempty"`
	AggregationType       AggregationType             `json:"aggregationType"`
	AllItems              *bool                       `json:"allItems,omitempty"`
	AttributeValues       []AttributeValue            `json:"attributeValues,omitempty"`
	Code                  *string                     `json:"code,omitempty"`
	Created               *time.Time                  `json:"created,omitempty"`
	CreatedBy             *UserDto                    `json:"createdBy,omitempty"`
	DataDimension         *bool                       `json:"dataDimension,omitempty"`
	DataDimensionType     DataDimensionType           `json:"dataDimensionType"`
	Description           *string                     `json:"description,omitempty"`
	Dimension             *string                     `json:"dimension,omitempty"`
	DimensionItemKeywords *DimensionItemKeywords      `json:"dimensionItemKeywords,omitempty"`
	DisplayDescription    *string                     `json:"displayDescription,omitempty"`
	DisplayFormName       *string                     `json:"displayFormName,omitempty"`
	DisplayName           *string                     `json:"displayName,omitempty"`
	DisplayShortName      *string                     `json:"displayShortName,omitempty"`
	Favorite              *bool                       `json:"favorite,omitempty"`
	Favorites             []string                    `json:"favorites,omitempty"`
	Filter                *string                     `json:"filter,omitempty"`
	FormName              *string                     `json:"formName,omitempty"`
	Href                  *string                     `json:"href,omitempty"`
	Id                    *string                     `json:"id,omitempty"`
	Items                 []BaseDimensionalItemObject `json:"items,omitempty"`
	LastUpdated           *time.Time                  `json:"lastUpdated,omitempty"`
	LastUpdatedBy         *UserDto                    `json:"lastUpdatedBy,omitempty"`
	LegendSet             *BaseIdentifiableObject     `json:"legendSet,omitempty"`
	Name                  *string                     `json:"name,omitempty"`
	OptionGroups          []BaseIdentifiableObject    `json:"optionGroups,omitempty"`
	OptionSet             *BaseIdentifiableObject     `json:"optionSet,omitempty"`
	Program               *BaseIdentifiableObject     `json:"program,omitempty"`
	ProgramStage          *BaseIdentifiableObject     `json:"programStage,omitempty"`
	Repetition            *EventRepetition            `json:"repetition,omitempty"`
	Sharing               *Sharing                    `json:"sharing,omitempty"`
	ShortName             *string                     `json:"shortName,omitempty"`
	Translations          []Translation               `json:"translations,omitempty"`
	ValueType             ValueType                   `json:"valueType"`
}

type _OptionGroupSet OptionGroupSet

// NewOptionGroupSet instantiates a new OptionGroupSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionGroupSet(aggregationType AggregationType, dataDimensionType DataDimensionType, valueType ValueType) *OptionGroupSet {
	this := OptionGroupSet{}
	this.AggregationType = aggregationType
	this.DataDimensionType = dataDimensionType
	this.ValueType = valueType
	return &this
}

// NewOptionGroupSetWithDefaults instantiates a new OptionGroupSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionGroupSetWithDefaults() *OptionGroupSet {
	this := OptionGroupSet{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *OptionGroupSet) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *OptionGroupSet) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *OptionGroupSet) SetAccess(v Access) {
	o.Access = &v
}

// GetAggregationType returns the AggregationType field value
func (o *OptionGroupSet) GetAggregationType() AggregationType {
	if o == nil {
		var ret AggregationType
		return ret
	}

	return o.AggregationType
}

// GetAggregationTypeOk returns a tuple with the AggregationType field value
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetAggregationTypeOk() (*AggregationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationType, true
}

// SetAggregationType sets field value
func (o *OptionGroupSet) SetAggregationType(v AggregationType) {
	o.AggregationType = v
}

// GetAllItems returns the AllItems field value if set, zero value otherwise.
func (o *OptionGroupSet) GetAllItems() bool {
	if o == nil || IsNil(o.AllItems) {
		var ret bool
		return ret
	}
	return *o.AllItems
}

// GetAllItemsOk returns a tuple with the AllItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetAllItemsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllItems) {
		return nil, false
	}
	return o.AllItems, true
}

// HasAllItems returns a boolean if a field has been set.
func (o *OptionGroupSet) HasAllItems() bool {
	if o != nil && !IsNil(o.AllItems) {
		return true
	}

	return false
}

// SetAllItems gets a reference to the given bool and assigns it to the AllItems field.
func (o *OptionGroupSet) SetAllItems(v bool) {
	o.AllItems = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *OptionGroupSet) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *OptionGroupSet) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *OptionGroupSet) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OptionGroupSet) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OptionGroupSet) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *OptionGroupSet) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *OptionGroupSet) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *OptionGroupSet) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *OptionGroupSet) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *OptionGroupSet) GetCreatedBy() UserDto {
	if o == nil || IsNil(o.CreatedBy) {
		var ret UserDto
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetCreatedByOk() (*UserDto, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *OptionGroupSet) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given UserDto and assigns it to the CreatedBy field.
func (o *OptionGroupSet) SetCreatedBy(v UserDto) {
	o.CreatedBy = &v
}

// GetDataDimension returns the DataDimension field value if set, zero value otherwise.
func (o *OptionGroupSet) GetDataDimension() bool {
	if o == nil || IsNil(o.DataDimension) {
		var ret bool
		return ret
	}
	return *o.DataDimension
}

// GetDataDimensionOk returns a tuple with the DataDimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetDataDimensionOk() (*bool, bool) {
	if o == nil || IsNil(o.DataDimension) {
		return nil, false
	}
	return o.DataDimension, true
}

// HasDataDimension returns a boolean if a field has been set.
func (o *OptionGroupSet) HasDataDimension() bool {
	if o != nil && !IsNil(o.DataDimension) {
		return true
	}

	return false
}

// SetDataDimension gets a reference to the given bool and assigns it to the DataDimension field.
func (o *OptionGroupSet) SetDataDimension(v bool) {
	o.DataDimension = &v
}

// GetDataDimensionType returns the DataDimensionType field value
func (o *OptionGroupSet) GetDataDimensionType() DataDimensionType {
	if o == nil {
		var ret DataDimensionType
		return ret
	}

	return o.DataDimensionType
}

// GetDataDimensionTypeOk returns a tuple with the DataDimensionType field value
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetDataDimensionTypeOk() (*DataDimensionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataDimensionType, true
}

// SetDataDimensionType sets field value
func (o *OptionGroupSet) SetDataDimensionType(v DataDimensionType) {
	o.DataDimensionType = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OptionGroupSet) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OptionGroupSet) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OptionGroupSet) SetDescription(v string) {
	o.Description = &v
}

// GetDimension returns the Dimension field value if set, zero value otherwise.
func (o *OptionGroupSet) GetDimension() string {
	if o == nil || IsNil(o.Dimension) {
		var ret string
		return ret
	}
	return *o.Dimension
}

// GetDimensionOk returns a tuple with the Dimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetDimensionOk() (*string, bool) {
	if o == nil || IsNil(o.Dimension) {
		return nil, false
	}
	return o.Dimension, true
}

// HasDimension returns a boolean if a field has been set.
func (o *OptionGroupSet) HasDimension() bool {
	if o != nil && !IsNil(o.Dimension) {
		return true
	}

	return false
}

// SetDimension gets a reference to the given string and assigns it to the Dimension field.
func (o *OptionGroupSet) SetDimension(v string) {
	o.Dimension = &v
}

// GetDimensionItemKeywords returns the DimensionItemKeywords field value if set, zero value otherwise.
func (o *OptionGroupSet) GetDimensionItemKeywords() DimensionItemKeywords {
	if o == nil || IsNil(o.DimensionItemKeywords) {
		var ret DimensionItemKeywords
		return ret
	}
	return *o.DimensionItemKeywords
}

// GetDimensionItemKeywordsOk returns a tuple with the DimensionItemKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetDimensionItemKeywordsOk() (*DimensionItemKeywords, bool) {
	if o == nil || IsNil(o.DimensionItemKeywords) {
		return nil, false
	}
	return o.DimensionItemKeywords, true
}

// HasDimensionItemKeywords returns a boolean if a field has been set.
func (o *OptionGroupSet) HasDimensionItemKeywords() bool {
	if o != nil && !IsNil(o.DimensionItemKeywords) {
		return true
	}

	return false
}

// SetDimensionItemKeywords gets a reference to the given DimensionItemKeywords and assigns it to the DimensionItemKeywords field.
func (o *OptionGroupSet) SetDimensionItemKeywords(v DimensionItemKeywords) {
	o.DimensionItemKeywords = &v
}

// GetDisplayDescription returns the DisplayDescription field value if set, zero value otherwise.
func (o *OptionGroupSet) GetDisplayDescription() string {
	if o == nil || IsNil(o.DisplayDescription) {
		var ret string
		return ret
	}
	return *o.DisplayDescription
}

// GetDisplayDescriptionOk returns a tuple with the DisplayDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetDisplayDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDescription) {
		return nil, false
	}
	return o.DisplayDescription, true
}

// HasDisplayDescription returns a boolean if a field has been set.
func (o *OptionGroupSet) HasDisplayDescription() bool {
	if o != nil && !IsNil(o.DisplayDescription) {
		return true
	}

	return false
}

// SetDisplayDescription gets a reference to the given string and assigns it to the DisplayDescription field.
func (o *OptionGroupSet) SetDisplayDescription(v string) {
	o.DisplayDescription = &v
}

// GetDisplayFormName returns the DisplayFormName field value if set, zero value otherwise.
func (o *OptionGroupSet) GetDisplayFormName() string {
	if o == nil || IsNil(o.DisplayFormName) {
		var ret string
		return ret
	}
	return *o.DisplayFormName
}

// GetDisplayFormNameOk returns a tuple with the DisplayFormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetDisplayFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayFormName) {
		return nil, false
	}
	return o.DisplayFormName, true
}

// HasDisplayFormName returns a boolean if a field has been set.
func (o *OptionGroupSet) HasDisplayFormName() bool {
	if o != nil && !IsNil(o.DisplayFormName) {
		return true
	}

	return false
}

// SetDisplayFormName gets a reference to the given string and assigns it to the DisplayFormName field.
func (o *OptionGroupSet) SetDisplayFormName(v string) {
	o.DisplayFormName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *OptionGroupSet) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *OptionGroupSet) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *OptionGroupSet) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayShortName returns the DisplayShortName field value if set, zero value otherwise.
func (o *OptionGroupSet) GetDisplayShortName() string {
	if o == nil || IsNil(o.DisplayShortName) {
		var ret string
		return ret
	}
	return *o.DisplayShortName
}

// GetDisplayShortNameOk returns a tuple with the DisplayShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetDisplayShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayShortName) {
		return nil, false
	}
	return o.DisplayShortName, true
}

// HasDisplayShortName returns a boolean if a field has been set.
func (o *OptionGroupSet) HasDisplayShortName() bool {
	if o != nil && !IsNil(o.DisplayShortName) {
		return true
	}

	return false
}

// SetDisplayShortName gets a reference to the given string and assigns it to the DisplayShortName field.
func (o *OptionGroupSet) SetDisplayShortName(v string) {
	o.DisplayShortName = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *OptionGroupSet) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *OptionGroupSet) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *OptionGroupSet) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *OptionGroupSet) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *OptionGroupSet) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *OptionGroupSet) SetFavorites(v []string) {
	o.Favorites = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *OptionGroupSet) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *OptionGroupSet) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *OptionGroupSet) SetFilter(v string) {
	o.Filter = &v
}

// GetFormName returns the FormName field value if set, zero value otherwise.
func (o *OptionGroupSet) GetFormName() string {
	if o == nil || IsNil(o.FormName) {
		var ret string
		return ret
	}
	return *o.FormName
}

// GetFormNameOk returns a tuple with the FormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.FormName) {
		return nil, false
	}
	return o.FormName, true
}

// HasFormName returns a boolean if a field has been set.
func (o *OptionGroupSet) HasFormName() bool {
	if o != nil && !IsNil(o.FormName) {
		return true
	}

	return false
}

// SetFormName gets a reference to the given string and assigns it to the FormName field.
func (o *OptionGroupSet) SetFormName(v string) {
	o.FormName = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *OptionGroupSet) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *OptionGroupSet) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *OptionGroupSet) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OptionGroupSet) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OptionGroupSet) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OptionGroupSet) SetId(v string) {
	o.Id = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *OptionGroupSet) GetItems() []BaseDimensionalItemObject {
	if o == nil || IsNil(o.Items) {
		var ret []BaseDimensionalItemObject
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetItemsOk() ([]BaseDimensionalItemObject, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *OptionGroupSet) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []BaseDimensionalItemObject and assigns it to the Items field.
func (o *OptionGroupSet) SetItems(v []BaseDimensionalItemObject) {
	o.Items = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *OptionGroupSet) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *OptionGroupSet) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *OptionGroupSet) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *OptionGroupSet) GetLastUpdatedBy() UserDto {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret UserDto
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetLastUpdatedByOk() (*UserDto, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *OptionGroupSet) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given UserDto and assigns it to the LastUpdatedBy field.
func (o *OptionGroupSet) SetLastUpdatedBy(v UserDto) {
	o.LastUpdatedBy = &v
}

// GetLegendSet returns the LegendSet field value if set, zero value otherwise.
func (o *OptionGroupSet) GetLegendSet() BaseIdentifiableObject {
	if o == nil || IsNil(o.LegendSet) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.LegendSet
}

// GetLegendSetOk returns a tuple with the LegendSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetLegendSetOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.LegendSet) {
		return nil, false
	}
	return o.LegendSet, true
}

// HasLegendSet returns a boolean if a field has been set.
func (o *OptionGroupSet) HasLegendSet() bool {
	if o != nil && !IsNil(o.LegendSet) {
		return true
	}

	return false
}

// SetLegendSet gets a reference to the given BaseIdentifiableObject and assigns it to the LegendSet field.
func (o *OptionGroupSet) SetLegendSet(v BaseIdentifiableObject) {
	o.LegendSet = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OptionGroupSet) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OptionGroupSet) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OptionGroupSet) SetName(v string) {
	o.Name = &v
}

// GetOptionGroups returns the OptionGroups field value if set, zero value otherwise.
func (o *OptionGroupSet) GetOptionGroups() []BaseIdentifiableObject {
	if o == nil || IsNil(o.OptionGroups) {
		var ret []BaseIdentifiableObject
		return ret
	}
	return o.OptionGroups
}

// GetOptionGroupsOk returns a tuple with the OptionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetOptionGroupsOk() ([]BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.OptionGroups) {
		return nil, false
	}
	return o.OptionGroups, true
}

// HasOptionGroups returns a boolean if a field has been set.
func (o *OptionGroupSet) HasOptionGroups() bool {
	if o != nil && !IsNil(o.OptionGroups) {
		return true
	}

	return false
}

// SetOptionGroups gets a reference to the given []BaseIdentifiableObject and assigns it to the OptionGroups field.
func (o *OptionGroupSet) SetOptionGroups(v []BaseIdentifiableObject) {
	o.OptionGroups = v
}

// GetOptionSet returns the OptionSet field value if set, zero value otherwise.
func (o *OptionGroupSet) GetOptionSet() BaseIdentifiableObject {
	if o == nil || IsNil(o.OptionSet) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.OptionSet
}

// GetOptionSetOk returns a tuple with the OptionSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetOptionSetOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.OptionSet) {
		return nil, false
	}
	return o.OptionSet, true
}

// HasOptionSet returns a boolean if a field has been set.
func (o *OptionGroupSet) HasOptionSet() bool {
	if o != nil && !IsNil(o.OptionSet) {
		return true
	}

	return false
}

// SetOptionSet gets a reference to the given BaseIdentifiableObject and assigns it to the OptionSet field.
func (o *OptionGroupSet) SetOptionSet(v BaseIdentifiableObject) {
	o.OptionSet = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *OptionGroupSet) GetProgram() BaseIdentifiableObject {
	if o == nil || IsNil(o.Program) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetProgramOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *OptionGroupSet) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given BaseIdentifiableObject and assigns it to the Program field.
func (o *OptionGroupSet) SetProgram(v BaseIdentifiableObject) {
	o.Program = &v
}

// GetProgramStage returns the ProgramStage field value if set, zero value otherwise.
func (o *OptionGroupSet) GetProgramStage() BaseIdentifiableObject {
	if o == nil || IsNil(o.ProgramStage) {
		var ret BaseIdentifiableObject
		return ret
	}
	return *o.ProgramStage
}

// GetProgramStageOk returns a tuple with the ProgramStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetProgramStageOk() (*BaseIdentifiableObject, bool) {
	if o == nil || IsNil(o.ProgramStage) {
		return nil, false
	}
	return o.ProgramStage, true
}

// HasProgramStage returns a boolean if a field has been set.
func (o *OptionGroupSet) HasProgramStage() bool {
	if o != nil && !IsNil(o.ProgramStage) {
		return true
	}

	return false
}

// SetProgramStage gets a reference to the given BaseIdentifiableObject and assigns it to the ProgramStage field.
func (o *OptionGroupSet) SetProgramStage(v BaseIdentifiableObject) {
	o.ProgramStage = &v
}

// GetRepetition returns the Repetition field value if set, zero value otherwise.
func (o *OptionGroupSet) GetRepetition() EventRepetition {
	if o == nil || IsNil(o.Repetition) {
		var ret EventRepetition
		return ret
	}
	return *o.Repetition
}

// GetRepetitionOk returns a tuple with the Repetition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetRepetitionOk() (*EventRepetition, bool) {
	if o == nil || IsNil(o.Repetition) {
		return nil, false
	}
	return o.Repetition, true
}

// HasRepetition returns a boolean if a field has been set.
func (o *OptionGroupSet) HasRepetition() bool {
	if o != nil && !IsNil(o.Repetition) {
		return true
	}

	return false
}

// SetRepetition gets a reference to the given EventRepetition and assigns it to the Repetition field.
func (o *OptionGroupSet) SetRepetition(v EventRepetition) {
	o.Repetition = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *OptionGroupSet) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *OptionGroupSet) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *OptionGroupSet) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *OptionGroupSet) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *OptionGroupSet) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *OptionGroupSet) SetShortName(v string) {
	o.ShortName = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *OptionGroupSet) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *OptionGroupSet) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *OptionGroupSet) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetValueType returns the ValueType field value
func (o *OptionGroupSet) GetValueType() ValueType {
	if o == nil {
		var ret ValueType
		return ret
	}

	return o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value
// and a boolean to check if the value has been set.
func (o *OptionGroupSet) GetValueTypeOk() (*ValueType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueType, true
}

// SetValueType sets field value
func (o *OptionGroupSet) SetValueType(v ValueType) {
	o.ValueType = v
}

func (o OptionGroupSet) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionGroupSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	toSerialize["aggregationType"] = o.AggregationType
	if !IsNil(o.AllItems) {
		toSerialize["allItems"] = o.AllItems
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DataDimension) {
		toSerialize["dataDimension"] = o.DataDimension
	}
	toSerialize["dataDimensionType"] = o.DataDimensionType
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Dimension) {
		toSerialize["dimension"] = o.Dimension
	}
	if !IsNil(o.DimensionItemKeywords) {
		toSerialize["dimensionItemKeywords"] = o.DimensionItemKeywords
	}
	if !IsNil(o.DisplayDescription) {
		toSerialize["displayDescription"] = o.DisplayDescription
	}
	if !IsNil(o.DisplayFormName) {
		toSerialize["displayFormName"] = o.DisplayFormName
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplayShortName) {
		toSerialize["displayShortName"] = o.DisplayShortName
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.FormName) {
		toSerialize["formName"] = o.FormName
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.LegendSet) {
		toSerialize["legendSet"] = o.LegendSet
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OptionGroups) {
		toSerialize["optionGroups"] = o.OptionGroups
	}
	if !IsNil(o.OptionSet) {
		toSerialize["optionSet"] = o.OptionSet
	}
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.ProgramStage) {
		toSerialize["programStage"] = o.ProgramStage
	}
	if !IsNil(o.Repetition) {
		toSerialize["repetition"] = o.Repetition
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	toSerialize["valueType"] = o.ValueType
	return toSerialize, nil
}

func (o *OptionGroupSet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"aggregationType",
		"dataDimensionType",
		"valueType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOptionGroupSet := _OptionGroupSet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOptionGroupSet)

	if err != nil {
		return err
	}

	*o = OptionGroupSet(varOptionGroupSet)

	return err
}

type NullableOptionGroupSet struct {
	value *OptionGroupSet
	isSet bool
}

func (v NullableOptionGroupSet) Get() *OptionGroupSet {
	return v.value
}

func (v *NullableOptionGroupSet) Set(val *OptionGroupSet) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionGroupSet) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionGroupSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionGroupSet(val *OptionGroupSet) *NullableOptionGroupSet {
	return &NullableOptionGroupSet{value: val, isSet: true}
}

func (v NullableOptionGroupSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionGroupSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
