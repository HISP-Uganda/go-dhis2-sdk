/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// MapGetObjectListGistGetObjectListGistAsCsv200Response - struct for MapGetObjectListGistGetObjectListGistAsCsv200Response
type MapGetObjectListGistGetObjectListGistAsCsv200Response struct {
	MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfMap                                                 *[]Map
}

// MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsMapGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in MapGetObjectListGistGetObjectListGistAsCsv200Response
func MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsMapGetObjectListGistGetObjectListGistAsCsv200Response(v *MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) MapGetObjectListGistGetObjectListGistAsCsv200Response {
	return MapGetObjectListGistGetObjectListGistAsCsv200Response{
		MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []MapAsMapGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []Map wrapped in MapGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfMapAsMapGetObjectListGistGetObjectListGistAsCsv200Response(v *[]Map) MapGetObjectListGistGetObjectListGistAsCsv200Response {
	return MapGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfMap: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *MapGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonMapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonMapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfMap
	err = newStrictDecoder(data).Decode(&dst.ArrayOfMap)
	if err == nil {
		jsonArrayOfMap, _ := json.Marshal(dst.ArrayOfMap)
		if string(jsonArrayOfMap) == "{}" { // empty struct
			dst.ArrayOfMap = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfMap = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfMap = nil

		return fmt.Errorf("data matches more than one schema in oneOf(MapGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(MapGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src MapGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfMap != nil {
		return json.Marshal(&src.ArrayOfMap)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *MapGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.MapGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfMap != nil {
		return obj.ArrayOfMap
	}

	// all schemas are nil
	return nil
}

type NullableMapGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *MapGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableMapGetObjectListGistGetObjectListGistAsCsv200Response) Get() *MapGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableMapGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *MapGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableMapGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableMapGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMapGetObjectListGistGetObjectListGistAsCsv200Response(val *MapGetObjectListGistGetObjectListGistAsCsv200Response) *NullableMapGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableMapGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableMapGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMapGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
