/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the TrackedEntityProgramOwnerParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackedEntityProgramOwnerParams{}

// TrackedEntityProgramOwnerParams struct for TrackedEntityProgramOwnerParams
type TrackedEntityProgramOwnerParams struct {
	OrganisationUnit      *OrganisationUnitParams `json:"organisationUnit,omitempty"`
	Program               *ProgramParams          `json:"program,omitempty"`
	TrackedEntityInstance *TrackedEntityParams    `json:"trackedEntityInstance,omitempty"`
}

// NewTrackedEntityProgramOwnerParams instantiates a new TrackedEntityProgramOwnerParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackedEntityProgramOwnerParams() *TrackedEntityProgramOwnerParams {
	this := TrackedEntityProgramOwnerParams{}
	return &this
}

// NewTrackedEntityProgramOwnerParamsWithDefaults instantiates a new TrackedEntityProgramOwnerParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackedEntityProgramOwnerParamsWithDefaults() *TrackedEntityProgramOwnerParams {
	this := TrackedEntityProgramOwnerParams{}
	return &this
}

// GetOrganisationUnit returns the OrganisationUnit field value if set, zero value otherwise.
func (o *TrackedEntityProgramOwnerParams) GetOrganisationUnit() OrganisationUnitParams {
	if o == nil || IsNil(o.OrganisationUnit) {
		var ret OrganisationUnitParams
		return ret
	}
	return *o.OrganisationUnit
}

// GetOrganisationUnitOk returns a tuple with the OrganisationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityProgramOwnerParams) GetOrganisationUnitOk() (*OrganisationUnitParams, bool) {
	if o == nil || IsNil(o.OrganisationUnit) {
		return nil, false
	}
	return o.OrganisationUnit, true
}

// HasOrganisationUnit returns a boolean if a field has been set.
func (o *TrackedEntityProgramOwnerParams) HasOrganisationUnit() bool {
	if o != nil && !IsNil(o.OrganisationUnit) {
		return true
	}

	return false
}

// SetOrganisationUnit gets a reference to the given OrganisationUnitParams and assigns it to the OrganisationUnit field.
func (o *TrackedEntityProgramOwnerParams) SetOrganisationUnit(v OrganisationUnitParams) {
	o.OrganisationUnit = &v
}

// GetProgram returns the Program field value if set, zero value otherwise.
func (o *TrackedEntityProgramOwnerParams) GetProgram() ProgramParams {
	if o == nil || IsNil(o.Program) {
		var ret ProgramParams
		return ret
	}
	return *o.Program
}

// GetProgramOk returns a tuple with the Program field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityProgramOwnerParams) GetProgramOk() (*ProgramParams, bool) {
	if o == nil || IsNil(o.Program) {
		return nil, false
	}
	return o.Program, true
}

// HasProgram returns a boolean if a field has been set.
func (o *TrackedEntityProgramOwnerParams) HasProgram() bool {
	if o != nil && !IsNil(o.Program) {
		return true
	}

	return false
}

// SetProgram gets a reference to the given ProgramParams and assigns it to the Program field.
func (o *TrackedEntityProgramOwnerParams) SetProgram(v ProgramParams) {
	o.Program = &v
}

// GetTrackedEntityInstance returns the TrackedEntityInstance field value if set, zero value otherwise.
func (o *TrackedEntityProgramOwnerParams) GetTrackedEntityInstance() TrackedEntityParams {
	if o == nil || IsNil(o.TrackedEntityInstance) {
		var ret TrackedEntityParams
		return ret
	}
	return *o.TrackedEntityInstance
}

// GetTrackedEntityInstanceOk returns a tuple with the TrackedEntityInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityProgramOwnerParams) GetTrackedEntityInstanceOk() (*TrackedEntityParams, bool) {
	if o == nil || IsNil(o.TrackedEntityInstance) {
		return nil, false
	}
	return o.TrackedEntityInstance, true
}

// HasTrackedEntityInstance returns a boolean if a field has been set.
func (o *TrackedEntityProgramOwnerParams) HasTrackedEntityInstance() bool {
	if o != nil && !IsNil(o.TrackedEntityInstance) {
		return true
	}

	return false
}

// SetTrackedEntityInstance gets a reference to the given TrackedEntityParams and assigns it to the TrackedEntityInstance field.
func (o *TrackedEntityProgramOwnerParams) SetTrackedEntityInstance(v TrackedEntityParams) {
	o.TrackedEntityInstance = &v
}

func (o TrackedEntityProgramOwnerParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackedEntityProgramOwnerParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganisationUnit) {
		toSerialize["organisationUnit"] = o.OrganisationUnit
	}
	if !IsNil(o.Program) {
		toSerialize["program"] = o.Program
	}
	if !IsNil(o.TrackedEntityInstance) {
		toSerialize["trackedEntityInstance"] = o.TrackedEntityInstance
	}
	return toSerialize, nil
}

type NullableTrackedEntityProgramOwnerParams struct {
	value *TrackedEntityProgramOwnerParams
	isSet bool
}

func (v NullableTrackedEntityProgramOwnerParams) Get() *TrackedEntityProgramOwnerParams {
	return v.value
}

func (v *NullableTrackedEntityProgramOwnerParams) Set(val *TrackedEntityProgramOwnerParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackedEntityProgramOwnerParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackedEntityProgramOwnerParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackedEntityProgramOwnerParams(val *TrackedEntityProgramOwnerParams) *NullableTrackedEntityProgramOwnerParams {
	return &NullableTrackedEntityProgramOwnerParams{value: val, isSet: true}
}

func (v NullableTrackedEntityProgramOwnerParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackedEntityProgramOwnerParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
