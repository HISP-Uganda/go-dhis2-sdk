/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the OutlierDetectionMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutlierDetectionMetadata{}

// OutlierDetectionMetadata struct for OutlierDetectionMetadata
type OutlierDetectionMetadata struct {
	Algorithm     string     `json:"algorithm"`
	Count         *int32     `json:"count,omitempty"`
	DataEndDate   *time.Time `json:"dataEndDate,omitempty"`
	DataStartDate *time.Time `json:"dataStartDate,omitempty"`
	MaxResults    *int32     `json:"maxResults,omitempty"`
	OrderBy       string     `json:"orderBy"`
	Threshold     *float64   `json:"threshold,omitempty"`
}

type _OutlierDetectionMetadata OutlierDetectionMetadata

// NewOutlierDetectionMetadata instantiates a new OutlierDetectionMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutlierDetectionMetadata(algorithm string, orderBy string) *OutlierDetectionMetadata {
	this := OutlierDetectionMetadata{}
	this.Algorithm = algorithm
	this.OrderBy = orderBy
	return &this
}

// NewOutlierDetectionMetadataWithDefaults instantiates a new OutlierDetectionMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutlierDetectionMetadataWithDefaults() *OutlierDetectionMetadata {
	this := OutlierDetectionMetadata{}
	return &this
}

// GetAlgorithm returns the Algorithm field value
func (o *OutlierDetectionMetadata) GetAlgorithm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value
// and a boolean to check if the value has been set.
func (o *OutlierDetectionMetadata) GetAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Algorithm, true
}

// SetAlgorithm sets field value
func (o *OutlierDetectionMetadata) SetAlgorithm(v string) {
	o.Algorithm = v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *OutlierDetectionMetadata) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierDetectionMetadata) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *OutlierDetectionMetadata) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *OutlierDetectionMetadata) SetCount(v int32) {
	o.Count = &v
}

// GetDataEndDate returns the DataEndDate field value if set, zero value otherwise.
func (o *OutlierDetectionMetadata) GetDataEndDate() time.Time {
	if o == nil || IsNil(o.DataEndDate) {
		var ret time.Time
		return ret
	}
	return *o.DataEndDate
}

// GetDataEndDateOk returns a tuple with the DataEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierDetectionMetadata) GetDataEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DataEndDate) {
		return nil, false
	}
	return o.DataEndDate, true
}

// HasDataEndDate returns a boolean if a field has been set.
func (o *OutlierDetectionMetadata) HasDataEndDate() bool {
	if o != nil && !IsNil(o.DataEndDate) {
		return true
	}

	return false
}

// SetDataEndDate gets a reference to the given time.Time and assigns it to the DataEndDate field.
func (o *OutlierDetectionMetadata) SetDataEndDate(v time.Time) {
	o.DataEndDate = &v
}

// GetDataStartDate returns the DataStartDate field value if set, zero value otherwise.
func (o *OutlierDetectionMetadata) GetDataStartDate() time.Time {
	if o == nil || IsNil(o.DataStartDate) {
		var ret time.Time
		return ret
	}
	return *o.DataStartDate
}

// GetDataStartDateOk returns a tuple with the DataStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierDetectionMetadata) GetDataStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DataStartDate) {
		return nil, false
	}
	return o.DataStartDate, true
}

// HasDataStartDate returns a boolean if a field has been set.
func (o *OutlierDetectionMetadata) HasDataStartDate() bool {
	if o != nil && !IsNil(o.DataStartDate) {
		return true
	}

	return false
}

// SetDataStartDate gets a reference to the given time.Time and assigns it to the DataStartDate field.
func (o *OutlierDetectionMetadata) SetDataStartDate(v time.Time) {
	o.DataStartDate = &v
}

// GetMaxResults returns the MaxResults field value if set, zero value otherwise.
func (o *OutlierDetectionMetadata) GetMaxResults() int32 {
	if o == nil || IsNil(o.MaxResults) {
		var ret int32
		return ret
	}
	return *o.MaxResults
}

// GetMaxResultsOk returns a tuple with the MaxResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierDetectionMetadata) GetMaxResultsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxResults) {
		return nil, false
	}
	return o.MaxResults, true
}

// HasMaxResults returns a boolean if a field has been set.
func (o *OutlierDetectionMetadata) HasMaxResults() bool {
	if o != nil && !IsNil(o.MaxResults) {
		return true
	}

	return false
}

// SetMaxResults gets a reference to the given int32 and assigns it to the MaxResults field.
func (o *OutlierDetectionMetadata) SetMaxResults(v int32) {
	o.MaxResults = &v
}

// GetOrderBy returns the OrderBy field value
func (o *OutlierDetectionMetadata) GetOrderBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field value
// and a boolean to check if the value has been set.
func (o *OutlierDetectionMetadata) GetOrderByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderBy, true
}

// SetOrderBy sets field value
func (o *OutlierDetectionMetadata) SetOrderBy(v string) {
	o.OrderBy = v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *OutlierDetectionMetadata) GetThreshold() float64 {
	if o == nil || IsNil(o.Threshold) {
		var ret float64
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierDetectionMetadata) GetThresholdOk() (*float64, bool) {
	if o == nil || IsNil(o.Threshold) {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *OutlierDetectionMetadata) HasThreshold() bool {
	if o != nil && !IsNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given float64 and assigns it to the Threshold field.
func (o *OutlierDetectionMetadata) SetThreshold(v float64) {
	o.Threshold = &v
}

func (o OutlierDetectionMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutlierDetectionMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["algorithm"] = o.Algorithm
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.DataEndDate) {
		toSerialize["dataEndDate"] = o.DataEndDate
	}
	if !IsNil(o.DataStartDate) {
		toSerialize["dataStartDate"] = o.DataStartDate
	}
	if !IsNil(o.MaxResults) {
		toSerialize["maxResults"] = o.MaxResults
	}
	toSerialize["orderBy"] = o.OrderBy
	if !IsNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	return toSerialize, nil
}

func (o *OutlierDetectionMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"algorithm",
		"orderBy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutlierDetectionMetadata := _OutlierDetectionMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutlierDetectionMetadata)

	if err != nil {
		return err
	}

	*o = OutlierDetectionMetadata(varOutlierDetectionMetadata)

	return err
}

type NullableOutlierDetectionMetadata struct {
	value *OutlierDetectionMetadata
	isSet bool
}

func (v NullableOutlierDetectionMetadata) Get() *OutlierDetectionMetadata {
	return v.value
}

func (v *NullableOutlierDetectionMetadata) Set(val *OutlierDetectionMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableOutlierDetectionMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableOutlierDetectionMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutlierDetectionMetadata(val *OutlierDetectionMetadata) *NullableOutlierDetectionMetadata {
	return &NullableOutlierDetectionMetadata{value: val, isSet: true}
}

func (v NullableOutlierDetectionMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutlierDetectionMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
