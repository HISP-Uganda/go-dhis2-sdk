/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the TrackerDataValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackerDataValue{}

// TrackerDataValue struct for TrackerDataValue
type TrackerDataValue struct {
	Created               *string           `json:"created,omitempty"`
	CreatedByUserInfo     *UserInfoSnapshot `json:"createdByUserInfo,omitempty"`
	DataElement           *string           `json:"dataElement,omitempty"`
	LastUpdated           *string           `json:"lastUpdated,omitempty"`
	LastUpdatedByUserInfo *UserInfoSnapshot `json:"lastUpdatedByUserInfo,omitempty"`
	ProvidedElsewhere     *bool             `json:"providedElsewhere,omitempty"`
	StoredBy              *string           `json:"storedBy,omitempty"`
	Value                 *string           `json:"value,omitempty"`
}

// NewTrackerDataValue instantiates a new TrackerDataValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackerDataValue() *TrackerDataValue {
	this := TrackerDataValue{}
	return &this
}

// NewTrackerDataValueWithDefaults instantiates a new TrackerDataValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackerDataValueWithDefaults() *TrackerDataValue {
	this := TrackerDataValue{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *TrackerDataValue) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerDataValue) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *TrackerDataValue) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *TrackerDataValue) SetCreated(v string) {
	o.Created = &v
}

// GetCreatedByUserInfo returns the CreatedByUserInfo field value if set, zero value otherwise.
func (o *TrackerDataValue) GetCreatedByUserInfo() UserInfoSnapshot {
	if o == nil || IsNil(o.CreatedByUserInfo) {
		var ret UserInfoSnapshot
		return ret
	}
	return *o.CreatedByUserInfo
}

// GetCreatedByUserInfoOk returns a tuple with the CreatedByUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerDataValue) GetCreatedByUserInfoOk() (*UserInfoSnapshot, bool) {
	if o == nil || IsNil(o.CreatedByUserInfo) {
		return nil, false
	}
	return o.CreatedByUserInfo, true
}

// HasCreatedByUserInfo returns a boolean if a field has been set.
func (o *TrackerDataValue) HasCreatedByUserInfo() bool {
	if o != nil && !IsNil(o.CreatedByUserInfo) {
		return true
	}

	return false
}

// SetCreatedByUserInfo gets a reference to the given UserInfoSnapshot and assigns it to the CreatedByUserInfo field.
func (o *TrackerDataValue) SetCreatedByUserInfo(v UserInfoSnapshot) {
	o.CreatedByUserInfo = &v
}

// GetDataElement returns the DataElement field value if set, zero value otherwise.
func (o *TrackerDataValue) GetDataElement() string {
	if o == nil || IsNil(o.DataElement) {
		var ret string
		return ret
	}
	return *o.DataElement
}

// GetDataElementOk returns a tuple with the DataElement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerDataValue) GetDataElementOk() (*string, bool) {
	if o == nil || IsNil(o.DataElement) {
		return nil, false
	}
	return o.DataElement, true
}

// HasDataElement returns a boolean if a field has been set.
func (o *TrackerDataValue) HasDataElement() bool {
	if o != nil && !IsNil(o.DataElement) {
		return true
	}

	return false
}

// SetDataElement gets a reference to the given string and assigns it to the DataElement field.
func (o *TrackerDataValue) SetDataElement(v string) {
	o.DataElement = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *TrackerDataValue) GetLastUpdated() string {
	if o == nil || IsNil(o.LastUpdated) {
		var ret string
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerDataValue) GetLastUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *TrackerDataValue) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given string and assigns it to the LastUpdated field.
func (o *TrackerDataValue) SetLastUpdated(v string) {
	o.LastUpdated = &v
}

// GetLastUpdatedByUserInfo returns the LastUpdatedByUserInfo field value if set, zero value otherwise.
func (o *TrackerDataValue) GetLastUpdatedByUserInfo() UserInfoSnapshot {
	if o == nil || IsNil(o.LastUpdatedByUserInfo) {
		var ret UserInfoSnapshot
		return ret
	}
	return *o.LastUpdatedByUserInfo
}

// GetLastUpdatedByUserInfoOk returns a tuple with the LastUpdatedByUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerDataValue) GetLastUpdatedByUserInfoOk() (*UserInfoSnapshot, bool) {
	if o == nil || IsNil(o.LastUpdatedByUserInfo) {
		return nil, false
	}
	return o.LastUpdatedByUserInfo, true
}

// HasLastUpdatedByUserInfo returns a boolean if a field has been set.
func (o *TrackerDataValue) HasLastUpdatedByUserInfo() bool {
	if o != nil && !IsNil(o.LastUpdatedByUserInfo) {
		return true
	}

	return false
}

// SetLastUpdatedByUserInfo gets a reference to the given UserInfoSnapshot and assigns it to the LastUpdatedByUserInfo field.
func (o *TrackerDataValue) SetLastUpdatedByUserInfo(v UserInfoSnapshot) {
	o.LastUpdatedByUserInfo = &v
}

// GetProvidedElsewhere returns the ProvidedElsewhere field value if set, zero value otherwise.
func (o *TrackerDataValue) GetProvidedElsewhere() bool {
	if o == nil || IsNil(o.ProvidedElsewhere) {
		var ret bool
		return ret
	}
	return *o.ProvidedElsewhere
}

// GetProvidedElsewhereOk returns a tuple with the ProvidedElsewhere field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerDataValue) GetProvidedElsewhereOk() (*bool, bool) {
	if o == nil || IsNil(o.ProvidedElsewhere) {
		return nil, false
	}
	return o.ProvidedElsewhere, true
}

// HasProvidedElsewhere returns a boolean if a field has been set.
func (o *TrackerDataValue) HasProvidedElsewhere() bool {
	if o != nil && !IsNil(o.ProvidedElsewhere) {
		return true
	}

	return false
}

// SetProvidedElsewhere gets a reference to the given bool and assigns it to the ProvidedElsewhere field.
func (o *TrackerDataValue) SetProvidedElsewhere(v bool) {
	o.ProvidedElsewhere = &v
}

// GetStoredBy returns the StoredBy field value if set, zero value otherwise.
func (o *TrackerDataValue) GetStoredBy() string {
	if o == nil || IsNil(o.StoredBy) {
		var ret string
		return ret
	}
	return *o.StoredBy
}

// GetStoredByOk returns a tuple with the StoredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerDataValue) GetStoredByOk() (*string, bool) {
	if o == nil || IsNil(o.StoredBy) {
		return nil, false
	}
	return o.StoredBy, true
}

// HasStoredBy returns a boolean if a field has been set.
func (o *TrackerDataValue) HasStoredBy() bool {
	if o != nil && !IsNil(o.StoredBy) {
		return true
	}

	return false
}

// SetStoredBy gets a reference to the given string and assigns it to the StoredBy field.
func (o *TrackerDataValue) SetStoredBy(v string) {
	o.StoredBy = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TrackerDataValue) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackerDataValue) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TrackerDataValue) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *TrackerDataValue) SetValue(v string) {
	o.Value = &v
}

func (o TrackerDataValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackerDataValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedByUserInfo) {
		toSerialize["createdByUserInfo"] = o.CreatedByUserInfo
	}
	if !IsNil(o.DataElement) {
		toSerialize["dataElement"] = o.DataElement
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedByUserInfo) {
		toSerialize["lastUpdatedByUserInfo"] = o.LastUpdatedByUserInfo
	}
	if !IsNil(o.ProvidedElsewhere) {
		toSerialize["providedElsewhere"] = o.ProvidedElsewhere
	}
	if !IsNil(o.StoredBy) {
		toSerialize["storedBy"] = o.StoredBy
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableTrackerDataValue struct {
	value *TrackerDataValue
	isSet bool
}

func (v NullableTrackerDataValue) Get() *TrackerDataValue {
	return v.value
}

func (v *NullableTrackerDataValue) Set(val *TrackerDataValue) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackerDataValue) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackerDataValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackerDataValue(val *TrackerDataValue) *NullableTrackerDataValue {
	return &NullableTrackerDataValue{value: val, isSet: true}
}

func (v NullableTrackerDataValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackerDataValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
