/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// CategoryOptionGroupSetPropertyNames the model 'CategoryOptionGroupSetPropertyNames'
type CategoryOptionGroupSetPropertyNames string

// List of CategoryOptionGroupSetPropertyNames
const (
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_ACCESS                  CategoryOptionGroupSetPropertyNames = "access"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_AGGREGATION_TYPE        CategoryOptionGroupSetPropertyNames = "aggregationType"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_ALL_ITEMS               CategoryOptionGroupSetPropertyNames = "allItems"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_ATTRIBUTE_VALUES        CategoryOptionGroupSetPropertyNames = "attributeValues"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_CATEGORY_OPTION_GROUPS  CategoryOptionGroupSetPropertyNames = "categoryOptionGroups"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_CODE                    CategoryOptionGroupSetPropertyNames = "code"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_CREATED                 CategoryOptionGroupSetPropertyNames = "created"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_CREATED_BY              CategoryOptionGroupSetPropertyNames = "createdBy"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_DATA_DIMENSION          CategoryOptionGroupSetPropertyNames = "dataDimension"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_DATA_DIMENSION_TYPE     CategoryOptionGroupSetPropertyNames = "dataDimensionType"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_DESCRIPTION             CategoryOptionGroupSetPropertyNames = "description"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_DIMENSION               CategoryOptionGroupSetPropertyNames = "dimension"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_DIMENSION_ITEM_KEYWORDS CategoryOptionGroupSetPropertyNames = "dimensionItemKeywords"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_DISPLAY_DESCRIPTION     CategoryOptionGroupSetPropertyNames = "displayDescription"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_DISPLAY_FORM_NAME       CategoryOptionGroupSetPropertyNames = "displayFormName"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_DISPLAY_NAME            CategoryOptionGroupSetPropertyNames = "displayName"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_DISPLAY_SHORT_NAME      CategoryOptionGroupSetPropertyNames = "displayShortName"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_FAVORITE                CategoryOptionGroupSetPropertyNames = "favorite"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_FAVORITES               CategoryOptionGroupSetPropertyNames = "favorites"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_FILTER                  CategoryOptionGroupSetPropertyNames = "filter"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_FORM_NAME               CategoryOptionGroupSetPropertyNames = "formName"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_HREF                    CategoryOptionGroupSetPropertyNames = "href"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_ID                      CategoryOptionGroupSetPropertyNames = "id"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_ITEMS                   CategoryOptionGroupSetPropertyNames = "items"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_LAST_UPDATED            CategoryOptionGroupSetPropertyNames = "lastUpdated"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_LAST_UPDATED_BY         CategoryOptionGroupSetPropertyNames = "lastUpdatedBy"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_LEGEND_SET              CategoryOptionGroupSetPropertyNames = "legendSet"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_NAME                    CategoryOptionGroupSetPropertyNames = "name"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_OPTION_SET              CategoryOptionGroupSetPropertyNames = "optionSet"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_PROGRAM                 CategoryOptionGroupSetPropertyNames = "program"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_PROGRAM_STAGE           CategoryOptionGroupSetPropertyNames = "programStage"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_REPETITION              CategoryOptionGroupSetPropertyNames = "repetition"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_SHARING                 CategoryOptionGroupSetPropertyNames = "sharing"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_SHORT_NAME              CategoryOptionGroupSetPropertyNames = "shortName"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_TRANSLATIONS            CategoryOptionGroupSetPropertyNames = "translations"
	CATEGORYOPTIONGROUPSETPROPERTYNAMES_VALUE_TYPE              CategoryOptionGroupSetPropertyNames = "valueType"
)

// All allowed values of CategoryOptionGroupSetPropertyNames enum
var AllowedCategoryOptionGroupSetPropertyNamesEnumValues = []CategoryOptionGroupSetPropertyNames{
	"access",
	"aggregationType",
	"allItems",
	"attributeValues",
	"categoryOptionGroups",
	"code",
	"created",
	"createdBy",
	"dataDimension",
	"dataDimensionType",
	"description",
	"dimension",
	"dimensionItemKeywords",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"favorite",
	"favorites",
	"filter",
	"formName",
	"href",
	"id",
	"items",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"name",
	"optionSet",
	"program",
	"programStage",
	"repetition",
	"sharing",
	"shortName",
	"translations",
	"valueType",
}

func (v *CategoryOptionGroupSetPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CategoryOptionGroupSetPropertyNames(value)
	for _, existing := range AllowedCategoryOptionGroupSetPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CategoryOptionGroupSetPropertyNames", value)
}

// NewCategoryOptionGroupSetPropertyNamesFromValue returns a pointer to a valid CategoryOptionGroupSetPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCategoryOptionGroupSetPropertyNamesFromValue(v string) (*CategoryOptionGroupSetPropertyNames, error) {
	ev := CategoryOptionGroupSetPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CategoryOptionGroupSetPropertyNames: valid values are %v", v, AllowedCategoryOptionGroupSetPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CategoryOptionGroupSetPropertyNames) IsValid() bool {
	for _, existing := range AllowedCategoryOptionGroupSetPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CategoryOptionGroupSetPropertyNames value
func (v CategoryOptionGroupSetPropertyNames) Ptr() *CategoryOptionGroupSetPropertyNames {
	return &v
}

type NullableCategoryOptionGroupSetPropertyNames struct {
	value *CategoryOptionGroupSetPropertyNames
	isSet bool
}

func (v NullableCategoryOptionGroupSetPropertyNames) Get() *CategoryOptionGroupSetPropertyNames {
	return v.value
}

func (v *NullableCategoryOptionGroupSetPropertyNames) Set(val *CategoryOptionGroupSetPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryOptionGroupSetPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryOptionGroupSetPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryOptionGroupSetPropertyNames(val *CategoryOptionGroupSetPropertyNames) *NullableCategoryOptionGroupSetPropertyNames {
	return &NullableCategoryOptionGroupSetPropertyNames{value: val, isSet: true}
}

func (v NullableCategoryOptionGroupSetPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryOptionGroupSetPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
