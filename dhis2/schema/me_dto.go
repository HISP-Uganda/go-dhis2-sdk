/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the MeDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MeDto{}

// MeDto struct for MeDto
type MeDto struct {
	Access                     *Access                                    `json:"access,omitempty"`
	Authorities                []string                                   `json:"authorities,omitempty"`
	Avatar                     *MeDtoAvatar                               `json:"avatar,omitempty"`
	Birthday                   *time.Time                                 `json:"birthday,omitempty"`
	Created                    *time.Time                                 `json:"created,omitempty"`
	DataSets                   []string                                   `json:"dataSets,omitempty"`
	DataViewOrganisationUnits  []CategoryOptionOrganisationUnitsInner     `json:"dataViewOrganisationUnits,omitempty"`
	DisplayName                *string                                    `json:"displayName,omitempty"`
	Education                  *string                                    `json:"education,omitempty"`
	Email                      *string                                    `json:"email,omitempty"`
	Employer                   *string                                    `json:"employer,omitempty"`
	ExternalAccess             *bool                                      `json:"externalAccess,omitempty"`
	FacebookMessenger          *string                                    `json:"facebookMessenger,omitempty"`
	Favorites                  []string                                   `json:"favorites,omitempty"`
	FirstName                  *string                                    `json:"firstName,omitempty"`
	Gender                     *string                                    `json:"gender,omitempty"`
	Id                         *string                                    `json:"id,omitempty"`
	Impersonation              *string                                    `json:"impersonation,omitempty"`
	Interests                  *string                                    `json:"interests,omitempty"`
	Introduction               *string                                    `json:"introduction,omitempty"`
	JobTitle                   *string                                    `json:"jobTitle,omitempty"`
	Languages                  *string                                    `json:"languages,omitempty"`
	LastUpdated                *time.Time                                 `json:"lastUpdated,omitempty"`
	Name                       *string                                    `json:"name,omitempty"`
	Nationality                *string                                    `json:"nationality,omitempty"`
	OrganisationUnits          []CategoryOptionOrganisationUnitsInner     `json:"organisationUnits,omitempty"`
	PhoneNumber                *string                                    `json:"phoneNumber,omitempty"`
	Programs                   []string                                   `json:"programs,omitempty"`
	Settings                   *map[string]FileGetCustomScript200Response `json:"settings,omitempty"`
	Sharing                    *Sharing                                   `json:"sharing,omitempty"`
	Skype                      *string                                    `json:"skype,omitempty"`
	Surname                    *string                                    `json:"surname,omitempty"`
	TeiSearchOrganisationUnits []CategoryOptionOrganisationUnitsInner     `json:"teiSearchOrganisationUnits,omitempty"`
	Telegram                   *string                                    `json:"telegram,omitempty"`
	Translations               []Translation                              `json:"translations,omitempty"`
	Twitter                    *string                                    `json:"twitter,omitempty"`
	UserAccesses               []LegacyUserAccess                         `json:"userAccesses,omitempty"`
	UserCredentials            *UserCredentialsDto                        `json:"userCredentials,omitempty"`
	UserGroupAccesses          []LegacyUserGroupAccess                    `json:"userGroupAccesses,omitempty"`
	UserGroups                 []ConfigurationFeedbackRecipients          `json:"userGroups,omitempty"`
	UserRoles                  []ConfigurationSelfRegistrationRole        `json:"userRoles,omitempty"`
	Username                   *string                                    `json:"username,omitempty"`
	WhatsApp                   *string                                    `json:"whatsApp,omitempty"`
}

// NewMeDto instantiates a new MeDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMeDto() *MeDto {
	this := MeDto{}
	return &this
}

// NewMeDtoWithDefaults instantiates a new MeDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMeDtoWithDefaults() *MeDto {
	this := MeDto{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *MeDto) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *MeDto) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *MeDto) SetAccess(v Access) {
	o.Access = &v
}

// GetAuthorities returns the Authorities field value if set, zero value otherwise.
func (o *MeDto) GetAuthorities() []string {
	if o == nil || IsNil(o.Authorities) {
		var ret []string
		return ret
	}
	return o.Authorities
}

// GetAuthoritiesOk returns a tuple with the Authorities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetAuthoritiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Authorities) {
		return nil, false
	}
	return o.Authorities, true
}

// HasAuthorities returns a boolean if a field has been set.
func (o *MeDto) HasAuthorities() bool {
	if o != nil && !IsNil(o.Authorities) {
		return true
	}

	return false
}

// SetAuthorities gets a reference to the given []string and assigns it to the Authorities field.
func (o *MeDto) SetAuthorities(v []string) {
	o.Authorities = v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *MeDto) GetAvatar() MeDtoAvatar {
	if o == nil || IsNil(o.Avatar) {
		var ret MeDtoAvatar
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetAvatarOk() (*MeDtoAvatar, bool) {
	if o == nil || IsNil(o.Avatar) {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *MeDto) HasAvatar() bool {
	if o != nil && !IsNil(o.Avatar) {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given MeDtoAvatar and assigns it to the Avatar field.
func (o *MeDto) SetAvatar(v MeDtoAvatar) {
	o.Avatar = &v
}

// GetBirthday returns the Birthday field value if set, zero value otherwise.
func (o *MeDto) GetBirthday() time.Time {
	if o == nil || IsNil(o.Birthday) {
		var ret time.Time
		return ret
	}
	return *o.Birthday
}

// GetBirthdayOk returns a tuple with the Birthday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetBirthdayOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Birthday) {
		return nil, false
	}
	return o.Birthday, true
}

// HasBirthday returns a boolean if a field has been set.
func (o *MeDto) HasBirthday() bool {
	if o != nil && !IsNil(o.Birthday) {
		return true
	}

	return false
}

// SetBirthday gets a reference to the given time.Time and assigns it to the Birthday field.
func (o *MeDto) SetBirthday(v time.Time) {
	o.Birthday = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *MeDto) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *MeDto) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *MeDto) SetCreated(v time.Time) {
	o.Created = &v
}

// GetDataSets returns the DataSets field value if set, zero value otherwise.
func (o *MeDto) GetDataSets() []string {
	if o == nil || IsNil(o.DataSets) {
		var ret []string
		return ret
	}
	return o.DataSets
}

// GetDataSetsOk returns a tuple with the DataSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetDataSetsOk() ([]string, bool) {
	if o == nil || IsNil(o.DataSets) {
		return nil, false
	}
	return o.DataSets, true
}

// HasDataSets returns a boolean if a field has been set.
func (o *MeDto) HasDataSets() bool {
	if o != nil && !IsNil(o.DataSets) {
		return true
	}

	return false
}

// SetDataSets gets a reference to the given []string and assigns it to the DataSets field.
func (o *MeDto) SetDataSets(v []string) {
	o.DataSets = v
}

// GetDataViewOrganisationUnits returns the DataViewOrganisationUnits field value if set, zero value otherwise.
func (o *MeDto) GetDataViewOrganisationUnits() []CategoryOptionOrganisationUnitsInner {
	if o == nil || IsNil(o.DataViewOrganisationUnits) {
		var ret []CategoryOptionOrganisationUnitsInner
		return ret
	}
	return o.DataViewOrganisationUnits
}

// GetDataViewOrganisationUnitsOk returns a tuple with the DataViewOrganisationUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetDataViewOrganisationUnitsOk() ([]CategoryOptionOrganisationUnitsInner, bool) {
	if o == nil || IsNil(o.DataViewOrganisationUnits) {
		return nil, false
	}
	return o.DataViewOrganisationUnits, true
}

// HasDataViewOrganisationUnits returns a boolean if a field has been set.
func (o *MeDto) HasDataViewOrganisationUnits() bool {
	if o != nil && !IsNil(o.DataViewOrganisationUnits) {
		return true
	}

	return false
}

// SetDataViewOrganisationUnits gets a reference to the given []CategoryOptionOrganisationUnitsInner and assigns it to the DataViewOrganisationUnits field.
func (o *MeDto) SetDataViewOrganisationUnits(v []CategoryOptionOrganisationUnitsInner) {
	o.DataViewOrganisationUnits = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MeDto) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MeDto) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MeDto) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEducation returns the Education field value if set, zero value otherwise.
func (o *MeDto) GetEducation() string {
	if o == nil || IsNil(o.Education) {
		var ret string
		return ret
	}
	return *o.Education
}

// GetEducationOk returns a tuple with the Education field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetEducationOk() (*string, bool) {
	if o == nil || IsNil(o.Education) {
		return nil, false
	}
	return o.Education, true
}

// HasEducation returns a boolean if a field has been set.
func (o *MeDto) HasEducation() bool {
	if o != nil && !IsNil(o.Education) {
		return true
	}

	return false
}

// SetEducation gets a reference to the given string and assigns it to the Education field.
func (o *MeDto) SetEducation(v string) {
	o.Education = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *MeDto) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *MeDto) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *MeDto) SetEmail(v string) {
	o.Email = &v
}

// GetEmployer returns the Employer field value if set, zero value otherwise.
func (o *MeDto) GetEmployer() string {
	if o == nil || IsNil(o.Employer) {
		var ret string
		return ret
	}
	return *o.Employer
}

// GetEmployerOk returns a tuple with the Employer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetEmployerOk() (*string, bool) {
	if o == nil || IsNil(o.Employer) {
		return nil, false
	}
	return o.Employer, true
}

// HasEmployer returns a boolean if a field has been set.
func (o *MeDto) HasEmployer() bool {
	if o != nil && !IsNil(o.Employer) {
		return true
	}

	return false
}

// SetEmployer gets a reference to the given string and assigns it to the Employer field.
func (o *MeDto) SetEmployer(v string) {
	o.Employer = &v
}

// GetExternalAccess returns the ExternalAccess field value if set, zero value otherwise.
func (o *MeDto) GetExternalAccess() bool {
	if o == nil || IsNil(o.ExternalAccess) {
		var ret bool
		return ret
	}
	return *o.ExternalAccess
}

// GetExternalAccessOk returns a tuple with the ExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetExternalAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalAccess) {
		return nil, false
	}
	return o.ExternalAccess, true
}

// HasExternalAccess returns a boolean if a field has been set.
func (o *MeDto) HasExternalAccess() bool {
	if o != nil && !IsNil(o.ExternalAccess) {
		return true
	}

	return false
}

// SetExternalAccess gets a reference to the given bool and assigns it to the ExternalAccess field.
func (o *MeDto) SetExternalAccess(v bool) {
	o.ExternalAccess = &v
}

// GetFacebookMessenger returns the FacebookMessenger field value if set, zero value otherwise.
func (o *MeDto) GetFacebookMessenger() string {
	if o == nil || IsNil(o.FacebookMessenger) {
		var ret string
		return ret
	}
	return *o.FacebookMessenger
}

// GetFacebookMessengerOk returns a tuple with the FacebookMessenger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetFacebookMessengerOk() (*string, bool) {
	if o == nil || IsNil(o.FacebookMessenger) {
		return nil, false
	}
	return o.FacebookMessenger, true
}

// HasFacebookMessenger returns a boolean if a field has been set.
func (o *MeDto) HasFacebookMessenger() bool {
	if o != nil && !IsNil(o.FacebookMessenger) {
		return true
	}

	return false
}

// SetFacebookMessenger gets a reference to the given string and assigns it to the FacebookMessenger field.
func (o *MeDto) SetFacebookMessenger(v string) {
	o.FacebookMessenger = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *MeDto) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *MeDto) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *MeDto) SetFavorites(v []string) {
	o.Favorites = v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *MeDto) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *MeDto) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *MeDto) SetFirstName(v string) {
	o.FirstName = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *MeDto) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *MeDto) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *MeDto) SetGender(v string) {
	o.Gender = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MeDto) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MeDto) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MeDto) SetId(v string) {
	o.Id = &v
}

// GetImpersonation returns the Impersonation field value if set, zero value otherwise.
func (o *MeDto) GetImpersonation() string {
	if o == nil || IsNil(o.Impersonation) {
		var ret string
		return ret
	}
	return *o.Impersonation
}

// GetImpersonationOk returns a tuple with the Impersonation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetImpersonationOk() (*string, bool) {
	if o == nil || IsNil(o.Impersonation) {
		return nil, false
	}
	return o.Impersonation, true
}

// HasImpersonation returns a boolean if a field has been set.
func (o *MeDto) HasImpersonation() bool {
	if o != nil && !IsNil(o.Impersonation) {
		return true
	}

	return false
}

// SetImpersonation gets a reference to the given string and assigns it to the Impersonation field.
func (o *MeDto) SetImpersonation(v string) {
	o.Impersonation = &v
}

// GetInterests returns the Interests field value if set, zero value otherwise.
func (o *MeDto) GetInterests() string {
	if o == nil || IsNil(o.Interests) {
		var ret string
		return ret
	}
	return *o.Interests
}

// GetInterestsOk returns a tuple with the Interests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetInterestsOk() (*string, bool) {
	if o == nil || IsNil(o.Interests) {
		return nil, false
	}
	return o.Interests, true
}

// HasInterests returns a boolean if a field has been set.
func (o *MeDto) HasInterests() bool {
	if o != nil && !IsNil(o.Interests) {
		return true
	}

	return false
}

// SetInterests gets a reference to the given string and assigns it to the Interests field.
func (o *MeDto) SetInterests(v string) {
	o.Interests = &v
}

// GetIntroduction returns the Introduction field value if set, zero value otherwise.
func (o *MeDto) GetIntroduction() string {
	if o == nil || IsNil(o.Introduction) {
		var ret string
		return ret
	}
	return *o.Introduction
}

// GetIntroductionOk returns a tuple with the Introduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetIntroductionOk() (*string, bool) {
	if o == nil || IsNil(o.Introduction) {
		return nil, false
	}
	return o.Introduction, true
}

// HasIntroduction returns a boolean if a field has been set.
func (o *MeDto) HasIntroduction() bool {
	if o != nil && !IsNil(o.Introduction) {
		return true
	}

	return false
}

// SetIntroduction gets a reference to the given string and assigns it to the Introduction field.
func (o *MeDto) SetIntroduction(v string) {
	o.Introduction = &v
}

// GetJobTitle returns the JobTitle field value if set, zero value otherwise.
func (o *MeDto) GetJobTitle() string {
	if o == nil || IsNil(o.JobTitle) {
		var ret string
		return ret
	}
	return *o.JobTitle
}

// GetJobTitleOk returns a tuple with the JobTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetJobTitleOk() (*string, bool) {
	if o == nil || IsNil(o.JobTitle) {
		return nil, false
	}
	return o.JobTitle, true
}

// HasJobTitle returns a boolean if a field has been set.
func (o *MeDto) HasJobTitle() bool {
	if o != nil && !IsNil(o.JobTitle) {
		return true
	}

	return false
}

// SetJobTitle gets a reference to the given string and assigns it to the JobTitle field.
func (o *MeDto) SetJobTitle(v string) {
	o.JobTitle = &v
}

// GetLanguages returns the Languages field value if set, zero value otherwise.
func (o *MeDto) GetLanguages() string {
	if o == nil || IsNil(o.Languages) {
		var ret string
		return ret
	}
	return *o.Languages
}

// GetLanguagesOk returns a tuple with the Languages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetLanguagesOk() (*string, bool) {
	if o == nil || IsNil(o.Languages) {
		return nil, false
	}
	return o.Languages, true
}

// HasLanguages returns a boolean if a field has been set.
func (o *MeDto) HasLanguages() bool {
	if o != nil && !IsNil(o.Languages) {
		return true
	}

	return false
}

// SetLanguages gets a reference to the given string and assigns it to the Languages field.
func (o *MeDto) SetLanguages(v string) {
	o.Languages = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *MeDto) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *MeDto) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *MeDto) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MeDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MeDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MeDto) SetName(v string) {
	o.Name = &v
}

// GetNationality returns the Nationality field value if set, zero value otherwise.
func (o *MeDto) GetNationality() string {
	if o == nil || IsNil(o.Nationality) {
		var ret string
		return ret
	}
	return *o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetNationalityOk() (*string, bool) {
	if o == nil || IsNil(o.Nationality) {
		return nil, false
	}
	return o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *MeDto) HasNationality() bool {
	if o != nil && !IsNil(o.Nationality) {
		return true
	}

	return false
}

// SetNationality gets a reference to the given string and assigns it to the Nationality field.
func (o *MeDto) SetNationality(v string) {
	o.Nationality = &v
}

// GetOrganisationUnits returns the OrganisationUnits field value if set, zero value otherwise.
func (o *MeDto) GetOrganisationUnits() []CategoryOptionOrganisationUnitsInner {
	if o == nil || IsNil(o.OrganisationUnits) {
		var ret []CategoryOptionOrganisationUnitsInner
		return ret
	}
	return o.OrganisationUnits
}

// GetOrganisationUnitsOk returns a tuple with the OrganisationUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetOrganisationUnitsOk() ([]CategoryOptionOrganisationUnitsInner, bool) {
	if o == nil || IsNil(o.OrganisationUnits) {
		return nil, false
	}
	return o.OrganisationUnits, true
}

// HasOrganisationUnits returns a boolean if a field has been set.
func (o *MeDto) HasOrganisationUnits() bool {
	if o != nil && !IsNil(o.OrganisationUnits) {
		return true
	}

	return false
}

// SetOrganisationUnits gets a reference to the given []CategoryOptionOrganisationUnitsInner and assigns it to the OrganisationUnits field.
func (o *MeDto) SetOrganisationUnits(v []CategoryOptionOrganisationUnitsInner) {
	o.OrganisationUnits = v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *MeDto) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *MeDto) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *MeDto) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetPrograms returns the Programs field value if set, zero value otherwise.
func (o *MeDto) GetPrograms() []string {
	if o == nil || IsNil(o.Programs) {
		var ret []string
		return ret
	}
	return o.Programs
}

// GetProgramsOk returns a tuple with the Programs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetProgramsOk() ([]string, bool) {
	if o == nil || IsNil(o.Programs) {
		return nil, false
	}
	return o.Programs, true
}

// HasPrograms returns a boolean if a field has been set.
func (o *MeDto) HasPrograms() bool {
	if o != nil && !IsNil(o.Programs) {
		return true
	}

	return false
}

// SetPrograms gets a reference to the given []string and assigns it to the Programs field.
func (o *MeDto) SetPrograms(v []string) {
	o.Programs = v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *MeDto) GetSettings() map[string]FileGetCustomScript200Response {
	if o == nil || IsNil(o.Settings) {
		var ret map[string]FileGetCustomScript200Response
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetSettingsOk() (*map[string]FileGetCustomScript200Response, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *MeDto) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given map[string]FileGetCustomScript200Response and assigns it to the Settings field.
func (o *MeDto) SetSettings(v map[string]FileGetCustomScript200Response) {
	o.Settings = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *MeDto) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *MeDto) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *MeDto) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetSkype returns the Skype field value if set, zero value otherwise.
func (o *MeDto) GetSkype() string {
	if o == nil || IsNil(o.Skype) {
		var ret string
		return ret
	}
	return *o.Skype
}

// GetSkypeOk returns a tuple with the Skype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetSkypeOk() (*string, bool) {
	if o == nil || IsNil(o.Skype) {
		return nil, false
	}
	return o.Skype, true
}

// HasSkype returns a boolean if a field has been set.
func (o *MeDto) HasSkype() bool {
	if o != nil && !IsNil(o.Skype) {
		return true
	}

	return false
}

// SetSkype gets a reference to the given string and assigns it to the Skype field.
func (o *MeDto) SetSkype(v string) {
	o.Skype = &v
}

// GetSurname returns the Surname field value if set, zero value otherwise.
func (o *MeDto) GetSurname() string {
	if o == nil || IsNil(o.Surname) {
		var ret string
		return ret
	}
	return *o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetSurnameOk() (*string, bool) {
	if o == nil || IsNil(o.Surname) {
		return nil, false
	}
	return o.Surname, true
}

// HasSurname returns a boolean if a field has been set.
func (o *MeDto) HasSurname() bool {
	if o != nil && !IsNil(o.Surname) {
		return true
	}

	return false
}

// SetSurname gets a reference to the given string and assigns it to the Surname field.
func (o *MeDto) SetSurname(v string) {
	o.Surname = &v
}

// GetTeiSearchOrganisationUnits returns the TeiSearchOrganisationUnits field value if set, zero value otherwise.
func (o *MeDto) GetTeiSearchOrganisationUnits() []CategoryOptionOrganisationUnitsInner {
	if o == nil || IsNil(o.TeiSearchOrganisationUnits) {
		var ret []CategoryOptionOrganisationUnitsInner
		return ret
	}
	return o.TeiSearchOrganisationUnits
}

// GetTeiSearchOrganisationUnitsOk returns a tuple with the TeiSearchOrganisationUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetTeiSearchOrganisationUnitsOk() ([]CategoryOptionOrganisationUnitsInner, bool) {
	if o == nil || IsNil(o.TeiSearchOrganisationUnits) {
		return nil, false
	}
	return o.TeiSearchOrganisationUnits, true
}

// HasTeiSearchOrganisationUnits returns a boolean if a field has been set.
func (o *MeDto) HasTeiSearchOrganisationUnits() bool {
	if o != nil && !IsNil(o.TeiSearchOrganisationUnits) {
		return true
	}

	return false
}

// SetTeiSearchOrganisationUnits gets a reference to the given []CategoryOptionOrganisationUnitsInner and assigns it to the TeiSearchOrganisationUnits field.
func (o *MeDto) SetTeiSearchOrganisationUnits(v []CategoryOptionOrganisationUnitsInner) {
	o.TeiSearchOrganisationUnits = v
}

// GetTelegram returns the Telegram field value if set, zero value otherwise.
func (o *MeDto) GetTelegram() string {
	if o == nil || IsNil(o.Telegram) {
		var ret string
		return ret
	}
	return *o.Telegram
}

// GetTelegramOk returns a tuple with the Telegram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetTelegramOk() (*string, bool) {
	if o == nil || IsNil(o.Telegram) {
		return nil, false
	}
	return o.Telegram, true
}

// HasTelegram returns a boolean if a field has been set.
func (o *MeDto) HasTelegram() bool {
	if o != nil && !IsNil(o.Telegram) {
		return true
	}

	return false
}

// SetTelegram gets a reference to the given string and assigns it to the Telegram field.
func (o *MeDto) SetTelegram(v string) {
	o.Telegram = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *MeDto) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *MeDto) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *MeDto) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetTwitter returns the Twitter field value if set, zero value otherwise.
func (o *MeDto) GetTwitter() string {
	if o == nil || IsNil(o.Twitter) {
		var ret string
		return ret
	}
	return *o.Twitter
}

// GetTwitterOk returns a tuple with the Twitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetTwitterOk() (*string, bool) {
	if o == nil || IsNil(o.Twitter) {
		return nil, false
	}
	return o.Twitter, true
}

// HasTwitter returns a boolean if a field has been set.
func (o *MeDto) HasTwitter() bool {
	if o != nil && !IsNil(o.Twitter) {
		return true
	}

	return false
}

// SetTwitter gets a reference to the given string and assigns it to the Twitter field.
func (o *MeDto) SetTwitter(v string) {
	o.Twitter = &v
}

// GetUserAccesses returns the UserAccesses field value if set, zero value otherwise.
func (o *MeDto) GetUserAccesses() []LegacyUserAccess {
	if o == nil || IsNil(o.UserAccesses) {
		var ret []LegacyUserAccess
		return ret
	}
	return o.UserAccesses
}

// GetUserAccessesOk returns a tuple with the UserAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetUserAccessesOk() ([]LegacyUserAccess, bool) {
	if o == nil || IsNil(o.UserAccesses) {
		return nil, false
	}
	return o.UserAccesses, true
}

// HasUserAccesses returns a boolean if a field has been set.
func (o *MeDto) HasUserAccesses() bool {
	if o != nil && !IsNil(o.UserAccesses) {
		return true
	}

	return false
}

// SetUserAccesses gets a reference to the given []LegacyUserAccess and assigns it to the UserAccesses field.
func (o *MeDto) SetUserAccesses(v []LegacyUserAccess) {
	o.UserAccesses = v
}

// GetUserCredentials returns the UserCredentials field value if set, zero value otherwise.
func (o *MeDto) GetUserCredentials() UserCredentialsDto {
	if o == nil || IsNil(o.UserCredentials) {
		var ret UserCredentialsDto
		return ret
	}
	return *o.UserCredentials
}

// GetUserCredentialsOk returns a tuple with the UserCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetUserCredentialsOk() (*UserCredentialsDto, bool) {
	if o == nil || IsNil(o.UserCredentials) {
		return nil, false
	}
	return o.UserCredentials, true
}

// HasUserCredentials returns a boolean if a field has been set.
func (o *MeDto) HasUserCredentials() bool {
	if o != nil && !IsNil(o.UserCredentials) {
		return true
	}

	return false
}

// SetUserCredentials gets a reference to the given UserCredentialsDto and assigns it to the UserCredentials field.
func (o *MeDto) SetUserCredentials(v UserCredentialsDto) {
	o.UserCredentials = &v
}

// GetUserGroupAccesses returns the UserGroupAccesses field value if set, zero value otherwise.
func (o *MeDto) GetUserGroupAccesses() []LegacyUserGroupAccess {
	if o == nil || IsNil(o.UserGroupAccesses) {
		var ret []LegacyUserGroupAccess
		return ret
	}
	return o.UserGroupAccesses
}

// GetUserGroupAccessesOk returns a tuple with the UserGroupAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetUserGroupAccessesOk() ([]LegacyUserGroupAccess, bool) {
	if o == nil || IsNil(o.UserGroupAccesses) {
		return nil, false
	}
	return o.UserGroupAccesses, true
}

// HasUserGroupAccesses returns a boolean if a field has been set.
func (o *MeDto) HasUserGroupAccesses() bool {
	if o != nil && !IsNil(o.UserGroupAccesses) {
		return true
	}

	return false
}

// SetUserGroupAccesses gets a reference to the given []LegacyUserGroupAccess and assigns it to the UserGroupAccesses field.
func (o *MeDto) SetUserGroupAccesses(v []LegacyUserGroupAccess) {
	o.UserGroupAccesses = v
}

// GetUserGroups returns the UserGroups field value if set, zero value otherwise.
func (o *MeDto) GetUserGroups() []ConfigurationFeedbackRecipients {
	if o == nil || IsNil(o.UserGroups) {
		var ret []ConfigurationFeedbackRecipients
		return ret
	}
	return o.UserGroups
}

// GetUserGroupsOk returns a tuple with the UserGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetUserGroupsOk() ([]ConfigurationFeedbackRecipients, bool) {
	if o == nil || IsNil(o.UserGroups) {
		return nil, false
	}
	return o.UserGroups, true
}

// HasUserGroups returns a boolean if a field has been set.
func (o *MeDto) HasUserGroups() bool {
	if o != nil && !IsNil(o.UserGroups) {
		return true
	}

	return false
}

// SetUserGroups gets a reference to the given []ConfigurationFeedbackRecipients and assigns it to the UserGroups field.
func (o *MeDto) SetUserGroups(v []ConfigurationFeedbackRecipients) {
	o.UserGroups = v
}

// GetUserRoles returns the UserRoles field value if set, zero value otherwise.
func (o *MeDto) GetUserRoles() []ConfigurationSelfRegistrationRole {
	if o == nil || IsNil(o.UserRoles) {
		var ret []ConfigurationSelfRegistrationRole
		return ret
	}
	return o.UserRoles
}

// GetUserRolesOk returns a tuple with the UserRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetUserRolesOk() ([]ConfigurationSelfRegistrationRole, bool) {
	if o == nil || IsNil(o.UserRoles) {
		return nil, false
	}
	return o.UserRoles, true
}

// HasUserRoles returns a boolean if a field has been set.
func (o *MeDto) HasUserRoles() bool {
	if o != nil && !IsNil(o.UserRoles) {
		return true
	}

	return false
}

// SetUserRoles gets a reference to the given []ConfigurationSelfRegistrationRole and assigns it to the UserRoles field.
func (o *MeDto) SetUserRoles(v []ConfigurationSelfRegistrationRole) {
	o.UserRoles = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *MeDto) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *MeDto) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *MeDto) SetUsername(v string) {
	o.Username = &v
}

// GetWhatsApp returns the WhatsApp field value if set, zero value otherwise.
func (o *MeDto) GetWhatsApp() string {
	if o == nil || IsNil(o.WhatsApp) {
		var ret string
		return ret
	}
	return *o.WhatsApp
}

// GetWhatsAppOk returns a tuple with the WhatsApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MeDto) GetWhatsAppOk() (*string, bool) {
	if o == nil || IsNil(o.WhatsApp) {
		return nil, false
	}
	return o.WhatsApp, true
}

// HasWhatsApp returns a boolean if a field has been set.
func (o *MeDto) HasWhatsApp() bool {
	if o != nil && !IsNil(o.WhatsApp) {
		return true
	}

	return false
}

// SetWhatsApp gets a reference to the given string and assigns it to the WhatsApp field.
func (o *MeDto) SetWhatsApp(v string) {
	o.WhatsApp = &v
}

func (o MeDto) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MeDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.Authorities) {
		toSerialize["authorities"] = o.Authorities
	}
	if !IsNil(o.Avatar) {
		toSerialize["avatar"] = o.Avatar
	}
	if !IsNil(o.Birthday) {
		toSerialize["birthday"] = o.Birthday
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.DataSets) {
		toSerialize["dataSets"] = o.DataSets
	}
	if !IsNil(o.DataViewOrganisationUnits) {
		toSerialize["dataViewOrganisationUnits"] = o.DataViewOrganisationUnits
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Education) {
		toSerialize["education"] = o.Education
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Employer) {
		toSerialize["employer"] = o.Employer
	}
	if !IsNil(o.ExternalAccess) {
		toSerialize["externalAccess"] = o.ExternalAccess
	}
	if !IsNil(o.FacebookMessenger) {
		toSerialize["facebookMessenger"] = o.FacebookMessenger
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Impersonation) {
		toSerialize["impersonation"] = o.Impersonation
	}
	if !IsNil(o.Interests) {
		toSerialize["interests"] = o.Interests
	}
	if !IsNil(o.Introduction) {
		toSerialize["introduction"] = o.Introduction
	}
	if !IsNil(o.JobTitle) {
		toSerialize["jobTitle"] = o.JobTitle
	}
	if !IsNil(o.Languages) {
		toSerialize["languages"] = o.Languages
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Nationality) {
		toSerialize["nationality"] = o.Nationality
	}
	if !IsNil(o.OrganisationUnits) {
		toSerialize["organisationUnits"] = o.OrganisationUnits
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.Programs) {
		toSerialize["programs"] = o.Programs
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.Skype) {
		toSerialize["skype"] = o.Skype
	}
	if !IsNil(o.Surname) {
		toSerialize["surname"] = o.Surname
	}
	if !IsNil(o.TeiSearchOrganisationUnits) {
		toSerialize["teiSearchOrganisationUnits"] = o.TeiSearchOrganisationUnits
	}
	if !IsNil(o.Telegram) {
		toSerialize["telegram"] = o.Telegram
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.Twitter) {
		toSerialize["twitter"] = o.Twitter
	}
	if !IsNil(o.UserAccesses) {
		toSerialize["userAccesses"] = o.UserAccesses
	}
	if !IsNil(o.UserCredentials) {
		toSerialize["userCredentials"] = o.UserCredentials
	}
	if !IsNil(o.UserGroupAccesses) {
		toSerialize["userGroupAccesses"] = o.UserGroupAccesses
	}
	if !IsNil(o.UserGroups) {
		toSerialize["userGroups"] = o.UserGroups
	}
	if !IsNil(o.UserRoles) {
		toSerialize["userRoles"] = o.UserRoles
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.WhatsApp) {
		toSerialize["whatsApp"] = o.WhatsApp
	}
	return toSerialize, nil
}

type NullableMeDto struct {
	value *MeDto
	isSet bool
}

func (v NullableMeDto) Get() *MeDto {
	return v.value
}

func (v *NullableMeDto) Set(val *MeDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMeDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMeDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMeDto(val *MeDto) *NullableMeDto {
	return &NullableMeDto{value: val, isSet: true}
}

func (v NullableMeDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMeDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
