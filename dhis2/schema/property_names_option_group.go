/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesOptionGroup the model 'PropertyNamesOptionGroup'
type PropertyNamesOptionGroup string

// List of PropertyNames_OptionGroup
const (
	PROPERTYNAMESOPTIONGROUP_ACCESS              PropertyNamesOptionGroup = "access"
	PROPERTYNAMESOPTIONGROUP_AGGREGATION_TYPE    PropertyNamesOptionGroup = "aggregationType"
	PROPERTYNAMESOPTIONGROUP_ATTRIBUTE_VALUES    PropertyNamesOptionGroup = "attributeValues"
	PROPERTYNAMESOPTIONGROUP_CODE                PropertyNamesOptionGroup = "code"
	PROPERTYNAMESOPTIONGROUP_CREATED             PropertyNamesOptionGroup = "created"
	PROPERTYNAMESOPTIONGROUP_CREATED_BY          PropertyNamesOptionGroup = "createdBy"
	PROPERTYNAMESOPTIONGROUP_DESCRIPTION         PropertyNamesOptionGroup = "description"
	PROPERTYNAMESOPTIONGROUP_DIMENSION_ITEM      PropertyNamesOptionGroup = "dimensionItem"
	PROPERTYNAMESOPTIONGROUP_DISPLAY_DESCRIPTION PropertyNamesOptionGroup = "displayDescription"
	PROPERTYNAMESOPTIONGROUP_DISPLAY_FORM_NAME   PropertyNamesOptionGroup = "displayFormName"
	PROPERTYNAMESOPTIONGROUP_DISPLAY_NAME        PropertyNamesOptionGroup = "displayName"
	PROPERTYNAMESOPTIONGROUP_DISPLAY_SHORT_NAME  PropertyNamesOptionGroup = "displayShortName"
	PROPERTYNAMESOPTIONGROUP_EXTERNAL_ACCESS     PropertyNamesOptionGroup = "externalAccess"
	PROPERTYNAMESOPTIONGROUP_FAVORITE            PropertyNamesOptionGroup = "favorite"
	PROPERTYNAMESOPTIONGROUP_FAVORITES           PropertyNamesOptionGroup = "favorites"
	PROPERTYNAMESOPTIONGROUP_FORM_NAME           PropertyNamesOptionGroup = "formName"
	PROPERTYNAMESOPTIONGROUP_HREF                PropertyNamesOptionGroup = "href"
	PROPERTYNAMESOPTIONGROUP_ID                  PropertyNamesOptionGroup = "id"
	PROPERTYNAMESOPTIONGROUP_LAST_UPDATED        PropertyNamesOptionGroup = "lastUpdated"
	PROPERTYNAMESOPTIONGROUP_LAST_UPDATED_BY     PropertyNamesOptionGroup = "lastUpdatedBy"
	PROPERTYNAMESOPTIONGROUP_LEGEND_SET          PropertyNamesOptionGroup = "legendSet"
	PROPERTYNAMESOPTIONGROUP_LEGEND_SETS         PropertyNamesOptionGroup = "legendSets"
	PROPERTYNAMESOPTIONGROUP_NAME                PropertyNamesOptionGroup = "name"
	PROPERTYNAMESOPTIONGROUP_OPTION_SET          PropertyNamesOptionGroup = "optionSet"
	PROPERTYNAMESOPTIONGROUP_OPTIONS             PropertyNamesOptionGroup = "options"
	PROPERTYNAMESOPTIONGROUP_PUBLIC_ACCESS       PropertyNamesOptionGroup = "publicAccess"
	PROPERTYNAMESOPTIONGROUP_QUERY_MODS          PropertyNamesOptionGroup = "queryMods"
	PROPERTYNAMESOPTIONGROUP_SHARING             PropertyNamesOptionGroup = "sharing"
	PROPERTYNAMESOPTIONGROUP_SHORT_NAME          PropertyNamesOptionGroup = "shortName"
	PROPERTYNAMESOPTIONGROUP_TRANSLATIONS        PropertyNamesOptionGroup = "translations"
	PROPERTYNAMESOPTIONGROUP_USER                PropertyNamesOptionGroup = "user"
	PROPERTYNAMESOPTIONGROUP_USER_ACCESSES       PropertyNamesOptionGroup = "userAccesses"
	PROPERTYNAMESOPTIONGROUP_USER_GROUP_ACCESSES PropertyNamesOptionGroup = "userGroupAccesses"
)

// All allowed values of PropertyNamesOptionGroup enum
var AllowedPropertyNamesOptionGroupEnumValues = []PropertyNamesOptionGroup{
	"access",
	"aggregationType",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"externalAccess",
	"favorite",
	"favorites",
	"formName",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"name",
	"optionSet",
	"options",
	"publicAccess",
	"queryMods",
	"sharing",
	"shortName",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesOptionGroup) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesOptionGroup(value)
	for _, existing := range AllowedPropertyNamesOptionGroupEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesOptionGroup", value)
}

// NewPropertyNamesOptionGroupFromValue returns a pointer to a valid PropertyNamesOptionGroup
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesOptionGroupFromValue(v string) (*PropertyNamesOptionGroup, error) {
	ev := PropertyNamesOptionGroup(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesOptionGroup: valid values are %v", v, AllowedPropertyNamesOptionGroupEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesOptionGroup) IsValid() bool {
	for _, existing := range AllowedPropertyNamesOptionGroupEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_OptionGroup value
func (v PropertyNamesOptionGroup) Ptr() *PropertyNamesOptionGroup {
	return &v
}

type NullablePropertyNamesOptionGroup struct {
	value *PropertyNamesOptionGroup
	isSet bool
}

func (v NullablePropertyNamesOptionGroup) Get() *PropertyNamesOptionGroup {
	return v.value
}

func (v *NullablePropertyNamesOptionGroup) Set(val *PropertyNamesOptionGroup) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesOptionGroup) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesOptionGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesOptionGroup(val *PropertyNamesOptionGroup) *NullablePropertyNamesOptionGroup {
	return &NullablePropertyNamesOptionGroup{value: val, isSet: true}
}

func (v NullablePropertyNamesOptionGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesOptionGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
