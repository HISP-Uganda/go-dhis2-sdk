/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the AnalyticsJobParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsJobParameters{}

// AnalyticsJobParameters struct for AnalyticsJobParameters
type AnalyticsJobParameters struct {
	LastYears          *int32               `json:"lastYears,omitempty"`
	SkipOutliers       *bool                `json:"skipOutliers,omitempty"`
	SkipPrograms       []string             `json:"skipPrograms,omitempty"`
	SkipResourceTables *bool                `json:"skipResourceTables,omitempty"`
	SkipTableTypes     []AnalyticsTableType `json:"skipTableTypes,omitempty"`
}

// NewAnalyticsJobParameters instantiates a new AnalyticsJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsJobParameters() *AnalyticsJobParameters {
	this := AnalyticsJobParameters{}
	return &this
}

// NewAnalyticsJobParametersWithDefaults instantiates a new AnalyticsJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsJobParametersWithDefaults() *AnalyticsJobParameters {
	this := AnalyticsJobParameters{}
	return &this
}

// GetLastYears returns the LastYears field value if set, zero value otherwise.
func (o *AnalyticsJobParameters) GetLastYears() int32 {
	if o == nil || IsNil(o.LastYears) {
		var ret int32
		return ret
	}
	return *o.LastYears
}

// GetLastYearsOk returns a tuple with the LastYears field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsJobParameters) GetLastYearsOk() (*int32, bool) {
	if o == nil || IsNil(o.LastYears) {
		return nil, false
	}
	return o.LastYears, true
}

// HasLastYears returns a boolean if a field has been set.
func (o *AnalyticsJobParameters) HasLastYears() bool {
	if o != nil && !IsNil(o.LastYears) {
		return true
	}

	return false
}

// SetLastYears gets a reference to the given int32 and assigns it to the LastYears field.
func (o *AnalyticsJobParameters) SetLastYears(v int32) {
	o.LastYears = &v
}

// GetSkipOutliers returns the SkipOutliers field value if set, zero value otherwise.
func (o *AnalyticsJobParameters) GetSkipOutliers() bool {
	if o == nil || IsNil(o.SkipOutliers) {
		var ret bool
		return ret
	}
	return *o.SkipOutliers
}

// GetSkipOutliersOk returns a tuple with the SkipOutliers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsJobParameters) GetSkipOutliersOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipOutliers) {
		return nil, false
	}
	return o.SkipOutliers, true
}

// HasSkipOutliers returns a boolean if a field has been set.
func (o *AnalyticsJobParameters) HasSkipOutliers() bool {
	if o != nil && !IsNil(o.SkipOutliers) {
		return true
	}

	return false
}

// SetSkipOutliers gets a reference to the given bool and assigns it to the SkipOutliers field.
func (o *AnalyticsJobParameters) SetSkipOutliers(v bool) {
	o.SkipOutliers = &v
}

// GetSkipPrograms returns the SkipPrograms field value if set, zero value otherwise.
func (o *AnalyticsJobParameters) GetSkipPrograms() []string {
	if o == nil || IsNil(o.SkipPrograms) {
		var ret []string
		return ret
	}
	return o.SkipPrograms
}

// GetSkipProgramsOk returns a tuple with the SkipPrograms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsJobParameters) GetSkipProgramsOk() ([]string, bool) {
	if o == nil || IsNil(o.SkipPrograms) {
		return nil, false
	}
	return o.SkipPrograms, true
}

// HasSkipPrograms returns a boolean if a field has been set.
func (o *AnalyticsJobParameters) HasSkipPrograms() bool {
	if o != nil && !IsNil(o.SkipPrograms) {
		return true
	}

	return false
}

// SetSkipPrograms gets a reference to the given []string and assigns it to the SkipPrograms field.
func (o *AnalyticsJobParameters) SetSkipPrograms(v []string) {
	o.SkipPrograms = v
}

// GetSkipResourceTables returns the SkipResourceTables field value if set, zero value otherwise.
func (o *AnalyticsJobParameters) GetSkipResourceTables() bool {
	if o == nil || IsNil(o.SkipResourceTables) {
		var ret bool
		return ret
	}
	return *o.SkipResourceTables
}

// GetSkipResourceTablesOk returns a tuple with the SkipResourceTables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsJobParameters) GetSkipResourceTablesOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipResourceTables) {
		return nil, false
	}
	return o.SkipResourceTables, true
}

// HasSkipResourceTables returns a boolean if a field has been set.
func (o *AnalyticsJobParameters) HasSkipResourceTables() bool {
	if o != nil && !IsNil(o.SkipResourceTables) {
		return true
	}

	return false
}

// SetSkipResourceTables gets a reference to the given bool and assigns it to the SkipResourceTables field.
func (o *AnalyticsJobParameters) SetSkipResourceTables(v bool) {
	o.SkipResourceTables = &v
}

// GetSkipTableTypes returns the SkipTableTypes field value if set, zero value otherwise.
func (o *AnalyticsJobParameters) GetSkipTableTypes() []AnalyticsTableType {
	if o == nil || IsNil(o.SkipTableTypes) {
		var ret []AnalyticsTableType
		return ret
	}
	return o.SkipTableTypes
}

// GetSkipTableTypesOk returns a tuple with the SkipTableTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsJobParameters) GetSkipTableTypesOk() ([]AnalyticsTableType, bool) {
	if o == nil || IsNil(o.SkipTableTypes) {
		return nil, false
	}
	return o.SkipTableTypes, true
}

// HasSkipTableTypes returns a boolean if a field has been set.
func (o *AnalyticsJobParameters) HasSkipTableTypes() bool {
	if o != nil && !IsNil(o.SkipTableTypes) {
		return true
	}

	return false
}

// SetSkipTableTypes gets a reference to the given []AnalyticsTableType and assigns it to the SkipTableTypes field.
func (o *AnalyticsJobParameters) SetSkipTableTypes(v []AnalyticsTableType) {
	o.SkipTableTypes = v
}

func (o AnalyticsJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsJobParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastYears) {
		toSerialize["lastYears"] = o.LastYears
	}
	if !IsNil(o.SkipOutliers) {
		toSerialize["skipOutliers"] = o.SkipOutliers
	}
	if !IsNil(o.SkipPrograms) {
		toSerialize["skipPrograms"] = o.SkipPrograms
	}
	if !IsNil(o.SkipResourceTables) {
		toSerialize["skipResourceTables"] = o.SkipResourceTables
	}
	if !IsNil(o.SkipTableTypes) {
		toSerialize["skipTableTypes"] = o.SkipTableTypes
	}
	return toSerialize, nil
}

type NullableAnalyticsJobParameters struct {
	value *AnalyticsJobParameters
	isSet bool
}

func (v NullableAnalyticsJobParameters) Get() *AnalyticsJobParameters {
	return v.value
}

func (v *NullableAnalyticsJobParameters) Set(val *AnalyticsJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsJobParameters(val *AnalyticsJobParameters) *NullableAnalyticsJobParameters {
	return &NullableAnalyticsJobParameters{value: val, isSet: true}
}

func (v NullableAnalyticsJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
