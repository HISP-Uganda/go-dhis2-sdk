/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the Dhis2OAuth2Authorization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dhis2OAuth2Authorization{}

// Dhis2OAuth2Authorization struct for Dhis2OAuth2Authorization
type Dhis2OAuth2Authorization struct {
	Access                     *Access          `json:"access,omitempty"`
	AccessTokenExpiresAt       *time.Time       `json:"accessTokenExpiresAt,omitempty"`
	AccessTokenIssuedAt        *time.Time       `json:"accessTokenIssuedAt,omitempty"`
	AccessTokenMetadata        *string          `json:"accessTokenMetadata,omitempty"`
	AccessTokenScopes          *string          `json:"accessTokenScopes,omitempty"`
	AccessTokenType            *string          `json:"accessTokenType,omitempty"`
	AccessTokenValue           *string          `json:"accessTokenValue,omitempty"`
	AttributeValues            []AttributeValue `json:"attributeValues,omitempty"`
	Attributes                 *string          `json:"attributes,omitempty"`
	AuthorizationCodeExpiresAt *time.Time       `json:"authorizationCodeExpiresAt,omitempty"`
	AuthorizationCodeIssuedAt  *time.Time       `json:"authorizationCodeIssuedAt,omitempty"`
	AuthorizationCodeMetadata  *string          `json:"authorizationCodeMetadata,omitempty"`
	AuthorizationCodeValue     *string          `json:"authorizationCodeValue,omitempty"`
	AuthorizationGrantType     *string          `json:"authorizationGrantType,omitempty"`
	AuthorizedScopes           *string          `json:"authorizedScopes,omitempty"`
	Code                       *string          `json:"code,omitempty"`
	Created                    *time.Time       `json:"created,omitempty"`
	CreatedBy                  *UserDto         `json:"createdBy,omitempty"`
	DeviceCodeExpiresAt        *time.Time       `json:"deviceCodeExpiresAt,omitempty"`
	DeviceCodeIssuedAt         *time.Time       `json:"deviceCodeIssuedAt,omitempty"`
	DeviceCodeMetadata         *string          `json:"deviceCodeMetadata,omitempty"`
	DeviceCodeValue            *string          `json:"deviceCodeValue,omitempty"`
	DisplayName                *string          `json:"displayName,omitempty"`
	Favorite                   *bool            `json:"favorite,omitempty"`
	Favorites                  []string         `json:"favorites,omitempty"`
	Href                       *string          `json:"href,omitempty"`
	Id                         *string          `json:"id,omitempty"`
	LastUpdated                *time.Time       `json:"lastUpdated,omitempty"`
	LastUpdatedBy              *UserDto         `json:"lastUpdatedBy,omitempty"`
	Name                       *string          `json:"name,omitempty"`
	OidcIdTokenClaims          *string          `json:"oidcIdTokenClaims,omitempty"`
	OidcIdTokenExpiresAt       *time.Time       `json:"oidcIdTokenExpiresAt,omitempty"`
	OidcIdTokenIssuedAt        *time.Time       `json:"oidcIdTokenIssuedAt,omitempty"`
	OidcIdTokenMetadata        *string          `json:"oidcIdTokenMetadata,omitempty"`
	OidcIdTokenValue           *string          `json:"oidcIdTokenValue,omitempty"`
	PrincipalName              *string          `json:"principalName,omitempty"`
	RefreshTokenExpiresAt      *time.Time       `json:"refreshTokenExpiresAt,omitempty"`
	RefreshTokenIssuedAt       *time.Time       `json:"refreshTokenIssuedAt,omitempty"`
	RefreshTokenMetadata       *string          `json:"refreshTokenMetadata,omitempty"`
	RefreshTokenValue          *string          `json:"refreshTokenValue,omitempty"`
	RegisteredClientId         *string          `json:"registeredClientId,omitempty"`
	Sharing                    *Sharing         `json:"sharing,omitempty"`
	State                      *string          `json:"state,omitempty"`
	Translations               []Translation    `json:"translations,omitempty"`
	UserCodeExpiresAt          *time.Time       `json:"userCodeExpiresAt,omitempty"`
	UserCodeIssuedAt           *time.Time       `json:"userCodeIssuedAt,omitempty"`
	UserCodeMetadata           *string          `json:"userCodeMetadata,omitempty"`
	UserCodeValue              *string          `json:"userCodeValue,omitempty"`
}

// NewDhis2OAuth2Authorization instantiates a new Dhis2OAuth2Authorization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDhis2OAuth2Authorization() *Dhis2OAuth2Authorization {
	this := Dhis2OAuth2Authorization{}
	return &this
}

// NewDhis2OAuth2AuthorizationWithDefaults instantiates a new Dhis2OAuth2Authorization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDhis2OAuth2AuthorizationWithDefaults() *Dhis2OAuth2Authorization {
	this := Dhis2OAuth2Authorization{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *Dhis2OAuth2Authorization) SetAccess(v Access) {
	o.Access = &v
}

// GetAccessTokenExpiresAt returns the AccessTokenExpiresAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAccessTokenExpiresAt() time.Time {
	if o == nil || IsNil(o.AccessTokenExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.AccessTokenExpiresAt
}

// GetAccessTokenExpiresAtOk returns a tuple with the AccessTokenExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAccessTokenExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AccessTokenExpiresAt) {
		return nil, false
	}
	return o.AccessTokenExpiresAt, true
}

// HasAccessTokenExpiresAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAccessTokenExpiresAt() bool {
	if o != nil && !IsNil(o.AccessTokenExpiresAt) {
		return true
	}

	return false
}

// SetAccessTokenExpiresAt gets a reference to the given time.Time and assigns it to the AccessTokenExpiresAt field.
func (o *Dhis2OAuth2Authorization) SetAccessTokenExpiresAt(v time.Time) {
	o.AccessTokenExpiresAt = &v
}

// GetAccessTokenIssuedAt returns the AccessTokenIssuedAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAccessTokenIssuedAt() time.Time {
	if o == nil || IsNil(o.AccessTokenIssuedAt) {
		var ret time.Time
		return ret
	}
	return *o.AccessTokenIssuedAt
}

// GetAccessTokenIssuedAtOk returns a tuple with the AccessTokenIssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAccessTokenIssuedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AccessTokenIssuedAt) {
		return nil, false
	}
	return o.AccessTokenIssuedAt, true
}

// HasAccessTokenIssuedAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAccessTokenIssuedAt() bool {
	if o != nil && !IsNil(o.AccessTokenIssuedAt) {
		return true
	}

	return false
}

// SetAccessTokenIssuedAt gets a reference to the given time.Time and assigns it to the AccessTokenIssuedAt field.
func (o *Dhis2OAuth2Authorization) SetAccessTokenIssuedAt(v time.Time) {
	o.AccessTokenIssuedAt = &v
}

// GetAccessTokenMetadata returns the AccessTokenMetadata field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAccessTokenMetadata() string {
	if o == nil || IsNil(o.AccessTokenMetadata) {
		var ret string
		return ret
	}
	return *o.AccessTokenMetadata
}

// GetAccessTokenMetadataOk returns a tuple with the AccessTokenMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAccessTokenMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.AccessTokenMetadata) {
		return nil, false
	}
	return o.AccessTokenMetadata, true
}

// HasAccessTokenMetadata returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAccessTokenMetadata() bool {
	if o != nil && !IsNil(o.AccessTokenMetadata) {
		return true
	}

	return false
}

// SetAccessTokenMetadata gets a reference to the given string and assigns it to the AccessTokenMetadata field.
func (o *Dhis2OAuth2Authorization) SetAccessTokenMetadata(v string) {
	o.AccessTokenMetadata = &v
}

// GetAccessTokenScopes returns the AccessTokenScopes field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAccessTokenScopes() string {
	if o == nil || IsNil(o.AccessTokenScopes) {
		var ret string
		return ret
	}
	return *o.AccessTokenScopes
}

// GetAccessTokenScopesOk returns a tuple with the AccessTokenScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAccessTokenScopesOk() (*string, bool) {
	if o == nil || IsNil(o.AccessTokenScopes) {
		return nil, false
	}
	return o.AccessTokenScopes, true
}

// HasAccessTokenScopes returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAccessTokenScopes() bool {
	if o != nil && !IsNil(o.AccessTokenScopes) {
		return true
	}

	return false
}

// SetAccessTokenScopes gets a reference to the given string and assigns it to the AccessTokenScopes field.
func (o *Dhis2OAuth2Authorization) SetAccessTokenScopes(v string) {
	o.AccessTokenScopes = &v
}

// GetAccessTokenType returns the AccessTokenType field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAccessTokenType() string {
	if o == nil || IsNil(o.AccessTokenType) {
		var ret string
		return ret
	}
	return *o.AccessTokenType
}

// GetAccessTokenTypeOk returns a tuple with the AccessTokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAccessTokenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccessTokenType) {
		return nil, false
	}
	return o.AccessTokenType, true
}

// HasAccessTokenType returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAccessTokenType() bool {
	if o != nil && !IsNil(o.AccessTokenType) {
		return true
	}

	return false
}

// SetAccessTokenType gets a reference to the given string and assigns it to the AccessTokenType field.
func (o *Dhis2OAuth2Authorization) SetAccessTokenType(v string) {
	o.AccessTokenType = &v
}

// GetAccessTokenValue returns the AccessTokenValue field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAccessTokenValue() string {
	if o == nil || IsNil(o.AccessTokenValue) {
		var ret string
		return ret
	}
	return *o.AccessTokenValue
}

// GetAccessTokenValueOk returns a tuple with the AccessTokenValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAccessTokenValueOk() (*string, bool) {
	if o == nil || IsNil(o.AccessTokenValue) {
		return nil, false
	}
	return o.AccessTokenValue, true
}

// HasAccessTokenValue returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAccessTokenValue() bool {
	if o != nil && !IsNil(o.AccessTokenValue) {
		return true
	}

	return false
}

// SetAccessTokenValue gets a reference to the given string and assigns it to the AccessTokenValue field.
func (o *Dhis2OAuth2Authorization) SetAccessTokenValue(v string) {
	o.AccessTokenValue = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *Dhis2OAuth2Authorization) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAttributes() string {
	if o == nil || IsNil(o.Attributes) {
		var ret string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAttributesOk() (*string, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given string and assigns it to the Attributes field.
func (o *Dhis2OAuth2Authorization) SetAttributes(v string) {
	o.Attributes = &v
}

// GetAuthorizationCodeExpiresAt returns the AuthorizationCodeExpiresAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAuthorizationCodeExpiresAt() time.Time {
	if o == nil || IsNil(o.AuthorizationCodeExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.AuthorizationCodeExpiresAt
}

// GetAuthorizationCodeExpiresAtOk returns a tuple with the AuthorizationCodeExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAuthorizationCodeExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AuthorizationCodeExpiresAt) {
		return nil, false
	}
	return o.AuthorizationCodeExpiresAt, true
}

// HasAuthorizationCodeExpiresAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAuthorizationCodeExpiresAt() bool {
	if o != nil && !IsNil(o.AuthorizationCodeExpiresAt) {
		return true
	}

	return false
}

// SetAuthorizationCodeExpiresAt gets a reference to the given time.Time and assigns it to the AuthorizationCodeExpiresAt field.
func (o *Dhis2OAuth2Authorization) SetAuthorizationCodeExpiresAt(v time.Time) {
	o.AuthorizationCodeExpiresAt = &v
}

// GetAuthorizationCodeIssuedAt returns the AuthorizationCodeIssuedAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAuthorizationCodeIssuedAt() time.Time {
	if o == nil || IsNil(o.AuthorizationCodeIssuedAt) {
		var ret time.Time
		return ret
	}
	return *o.AuthorizationCodeIssuedAt
}

// GetAuthorizationCodeIssuedAtOk returns a tuple with the AuthorizationCodeIssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAuthorizationCodeIssuedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.AuthorizationCodeIssuedAt) {
		return nil, false
	}
	return o.AuthorizationCodeIssuedAt, true
}

// HasAuthorizationCodeIssuedAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAuthorizationCodeIssuedAt() bool {
	if o != nil && !IsNil(o.AuthorizationCodeIssuedAt) {
		return true
	}

	return false
}

// SetAuthorizationCodeIssuedAt gets a reference to the given time.Time and assigns it to the AuthorizationCodeIssuedAt field.
func (o *Dhis2OAuth2Authorization) SetAuthorizationCodeIssuedAt(v time.Time) {
	o.AuthorizationCodeIssuedAt = &v
}

// GetAuthorizationCodeMetadata returns the AuthorizationCodeMetadata field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAuthorizationCodeMetadata() string {
	if o == nil || IsNil(o.AuthorizationCodeMetadata) {
		var ret string
		return ret
	}
	return *o.AuthorizationCodeMetadata
}

// GetAuthorizationCodeMetadataOk returns a tuple with the AuthorizationCodeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAuthorizationCodeMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationCodeMetadata) {
		return nil, false
	}
	return o.AuthorizationCodeMetadata, true
}

// HasAuthorizationCodeMetadata returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAuthorizationCodeMetadata() bool {
	if o != nil && !IsNil(o.AuthorizationCodeMetadata) {
		return true
	}

	return false
}

// SetAuthorizationCodeMetadata gets a reference to the given string and assigns it to the AuthorizationCodeMetadata field.
func (o *Dhis2OAuth2Authorization) SetAuthorizationCodeMetadata(v string) {
	o.AuthorizationCodeMetadata = &v
}

// GetAuthorizationCodeValue returns the AuthorizationCodeValue field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAuthorizationCodeValue() string {
	if o == nil || IsNil(o.AuthorizationCodeValue) {
		var ret string
		return ret
	}
	return *o.AuthorizationCodeValue
}

// GetAuthorizationCodeValueOk returns a tuple with the AuthorizationCodeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAuthorizationCodeValueOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationCodeValue) {
		return nil, false
	}
	return o.AuthorizationCodeValue, true
}

// HasAuthorizationCodeValue returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAuthorizationCodeValue() bool {
	if o != nil && !IsNil(o.AuthorizationCodeValue) {
		return true
	}

	return false
}

// SetAuthorizationCodeValue gets a reference to the given string and assigns it to the AuthorizationCodeValue field.
func (o *Dhis2OAuth2Authorization) SetAuthorizationCodeValue(v string) {
	o.AuthorizationCodeValue = &v
}

// GetAuthorizationGrantType returns the AuthorizationGrantType field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAuthorizationGrantType() string {
	if o == nil || IsNil(o.AuthorizationGrantType) {
		var ret string
		return ret
	}
	return *o.AuthorizationGrantType
}

// GetAuthorizationGrantTypeOk returns a tuple with the AuthorizationGrantType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAuthorizationGrantTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationGrantType) {
		return nil, false
	}
	return o.AuthorizationGrantType, true
}

// HasAuthorizationGrantType returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAuthorizationGrantType() bool {
	if o != nil && !IsNil(o.AuthorizationGrantType) {
		return true
	}

	return false
}

// SetAuthorizationGrantType gets a reference to the given string and assigns it to the AuthorizationGrantType field.
func (o *Dhis2OAuth2Authorization) SetAuthorizationGrantType(v string) {
	o.AuthorizationGrantType = &v
}

// GetAuthorizedScopes returns the AuthorizedScopes field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetAuthorizedScopes() string {
	if o == nil || IsNil(o.AuthorizedScopes) {
		var ret string
		return ret
	}
	return *o.AuthorizedScopes
}

// GetAuthorizedScopesOk returns a tuple with the AuthorizedScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetAuthorizedScopesOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizedScopes) {
		return nil, false
	}
	return o.AuthorizedScopes, true
}

// HasAuthorizedScopes returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasAuthorizedScopes() bool {
	if o != nil && !IsNil(o.AuthorizedScopes) {
		return true
	}

	return false
}

// SetAuthorizedScopes gets a reference to the given string and assigns it to the AuthorizedScopes field.
func (o *Dhis2OAuth2Authorization) SetAuthorizedScopes(v string) {
	o.AuthorizedScopes = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *Dhis2OAuth2Authorization) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *Dhis2OAuth2Authorization) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetCreatedBy() UserDto {
	if o == nil || IsNil(o.CreatedBy) {
		var ret UserDto
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetCreatedByOk() (*UserDto, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given UserDto and assigns it to the CreatedBy field.
func (o *Dhis2OAuth2Authorization) SetCreatedBy(v UserDto) {
	o.CreatedBy = &v
}

// GetDeviceCodeExpiresAt returns the DeviceCodeExpiresAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetDeviceCodeExpiresAt() time.Time {
	if o == nil || IsNil(o.DeviceCodeExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.DeviceCodeExpiresAt
}

// GetDeviceCodeExpiresAtOk returns a tuple with the DeviceCodeExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetDeviceCodeExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeviceCodeExpiresAt) {
		return nil, false
	}
	return o.DeviceCodeExpiresAt, true
}

// HasDeviceCodeExpiresAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasDeviceCodeExpiresAt() bool {
	if o != nil && !IsNil(o.DeviceCodeExpiresAt) {
		return true
	}

	return false
}

// SetDeviceCodeExpiresAt gets a reference to the given time.Time and assigns it to the DeviceCodeExpiresAt field.
func (o *Dhis2OAuth2Authorization) SetDeviceCodeExpiresAt(v time.Time) {
	o.DeviceCodeExpiresAt = &v
}

// GetDeviceCodeIssuedAt returns the DeviceCodeIssuedAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetDeviceCodeIssuedAt() time.Time {
	if o == nil || IsNil(o.DeviceCodeIssuedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeviceCodeIssuedAt
}

// GetDeviceCodeIssuedAtOk returns a tuple with the DeviceCodeIssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetDeviceCodeIssuedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeviceCodeIssuedAt) {
		return nil, false
	}
	return o.DeviceCodeIssuedAt, true
}

// HasDeviceCodeIssuedAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasDeviceCodeIssuedAt() bool {
	if o != nil && !IsNil(o.DeviceCodeIssuedAt) {
		return true
	}

	return false
}

// SetDeviceCodeIssuedAt gets a reference to the given time.Time and assigns it to the DeviceCodeIssuedAt field.
func (o *Dhis2OAuth2Authorization) SetDeviceCodeIssuedAt(v time.Time) {
	o.DeviceCodeIssuedAt = &v
}

// GetDeviceCodeMetadata returns the DeviceCodeMetadata field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetDeviceCodeMetadata() string {
	if o == nil || IsNil(o.DeviceCodeMetadata) {
		var ret string
		return ret
	}
	return *o.DeviceCodeMetadata
}

// GetDeviceCodeMetadataOk returns a tuple with the DeviceCodeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetDeviceCodeMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceCodeMetadata) {
		return nil, false
	}
	return o.DeviceCodeMetadata, true
}

// HasDeviceCodeMetadata returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasDeviceCodeMetadata() bool {
	if o != nil && !IsNil(o.DeviceCodeMetadata) {
		return true
	}

	return false
}

// SetDeviceCodeMetadata gets a reference to the given string and assigns it to the DeviceCodeMetadata field.
func (o *Dhis2OAuth2Authorization) SetDeviceCodeMetadata(v string) {
	o.DeviceCodeMetadata = &v
}

// GetDeviceCodeValue returns the DeviceCodeValue field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetDeviceCodeValue() string {
	if o == nil || IsNil(o.DeviceCodeValue) {
		var ret string
		return ret
	}
	return *o.DeviceCodeValue
}

// GetDeviceCodeValueOk returns a tuple with the DeviceCodeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetDeviceCodeValueOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceCodeValue) {
		return nil, false
	}
	return o.DeviceCodeValue, true
}

// HasDeviceCodeValue returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasDeviceCodeValue() bool {
	if o != nil && !IsNil(o.DeviceCodeValue) {
		return true
	}

	return false
}

// SetDeviceCodeValue gets a reference to the given string and assigns it to the DeviceCodeValue field.
func (o *Dhis2OAuth2Authorization) SetDeviceCodeValue(v string) {
	o.DeviceCodeValue = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Dhis2OAuth2Authorization) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *Dhis2OAuth2Authorization) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *Dhis2OAuth2Authorization) SetFavorites(v []string) {
	o.Favorites = v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *Dhis2OAuth2Authorization) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Dhis2OAuth2Authorization) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Dhis2OAuth2Authorization) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetLastUpdatedBy() UserDto {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret UserDto
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetLastUpdatedByOk() (*UserDto, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given UserDto and assigns it to the LastUpdatedBy field.
func (o *Dhis2OAuth2Authorization) SetLastUpdatedBy(v UserDto) {
	o.LastUpdatedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Dhis2OAuth2Authorization) SetName(v string) {
	o.Name = &v
}

// GetOidcIdTokenClaims returns the OidcIdTokenClaims field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetOidcIdTokenClaims() string {
	if o == nil || IsNil(o.OidcIdTokenClaims) {
		var ret string
		return ret
	}
	return *o.OidcIdTokenClaims
}

// GetOidcIdTokenClaimsOk returns a tuple with the OidcIdTokenClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetOidcIdTokenClaimsOk() (*string, bool) {
	if o == nil || IsNil(o.OidcIdTokenClaims) {
		return nil, false
	}
	return o.OidcIdTokenClaims, true
}

// HasOidcIdTokenClaims returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasOidcIdTokenClaims() bool {
	if o != nil && !IsNil(o.OidcIdTokenClaims) {
		return true
	}

	return false
}

// SetOidcIdTokenClaims gets a reference to the given string and assigns it to the OidcIdTokenClaims field.
func (o *Dhis2OAuth2Authorization) SetOidcIdTokenClaims(v string) {
	o.OidcIdTokenClaims = &v
}

// GetOidcIdTokenExpiresAt returns the OidcIdTokenExpiresAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetOidcIdTokenExpiresAt() time.Time {
	if o == nil || IsNil(o.OidcIdTokenExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.OidcIdTokenExpiresAt
}

// GetOidcIdTokenExpiresAtOk returns a tuple with the OidcIdTokenExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetOidcIdTokenExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OidcIdTokenExpiresAt) {
		return nil, false
	}
	return o.OidcIdTokenExpiresAt, true
}

// HasOidcIdTokenExpiresAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasOidcIdTokenExpiresAt() bool {
	if o != nil && !IsNil(o.OidcIdTokenExpiresAt) {
		return true
	}

	return false
}

// SetOidcIdTokenExpiresAt gets a reference to the given time.Time and assigns it to the OidcIdTokenExpiresAt field.
func (o *Dhis2OAuth2Authorization) SetOidcIdTokenExpiresAt(v time.Time) {
	o.OidcIdTokenExpiresAt = &v
}

// GetOidcIdTokenIssuedAt returns the OidcIdTokenIssuedAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetOidcIdTokenIssuedAt() time.Time {
	if o == nil || IsNil(o.OidcIdTokenIssuedAt) {
		var ret time.Time
		return ret
	}
	return *o.OidcIdTokenIssuedAt
}

// GetOidcIdTokenIssuedAtOk returns a tuple with the OidcIdTokenIssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetOidcIdTokenIssuedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OidcIdTokenIssuedAt) {
		return nil, false
	}
	return o.OidcIdTokenIssuedAt, true
}

// HasOidcIdTokenIssuedAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasOidcIdTokenIssuedAt() bool {
	if o != nil && !IsNil(o.OidcIdTokenIssuedAt) {
		return true
	}

	return false
}

// SetOidcIdTokenIssuedAt gets a reference to the given time.Time and assigns it to the OidcIdTokenIssuedAt field.
func (o *Dhis2OAuth2Authorization) SetOidcIdTokenIssuedAt(v time.Time) {
	o.OidcIdTokenIssuedAt = &v
}

// GetOidcIdTokenMetadata returns the OidcIdTokenMetadata field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetOidcIdTokenMetadata() string {
	if o == nil || IsNil(o.OidcIdTokenMetadata) {
		var ret string
		return ret
	}
	return *o.OidcIdTokenMetadata
}

// GetOidcIdTokenMetadataOk returns a tuple with the OidcIdTokenMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetOidcIdTokenMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.OidcIdTokenMetadata) {
		return nil, false
	}
	return o.OidcIdTokenMetadata, true
}

// HasOidcIdTokenMetadata returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasOidcIdTokenMetadata() bool {
	if o != nil && !IsNil(o.OidcIdTokenMetadata) {
		return true
	}

	return false
}

// SetOidcIdTokenMetadata gets a reference to the given string and assigns it to the OidcIdTokenMetadata field.
func (o *Dhis2OAuth2Authorization) SetOidcIdTokenMetadata(v string) {
	o.OidcIdTokenMetadata = &v
}

// GetOidcIdTokenValue returns the OidcIdTokenValue field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetOidcIdTokenValue() string {
	if o == nil || IsNil(o.OidcIdTokenValue) {
		var ret string
		return ret
	}
	return *o.OidcIdTokenValue
}

// GetOidcIdTokenValueOk returns a tuple with the OidcIdTokenValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetOidcIdTokenValueOk() (*string, bool) {
	if o == nil || IsNil(o.OidcIdTokenValue) {
		return nil, false
	}
	return o.OidcIdTokenValue, true
}

// HasOidcIdTokenValue returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasOidcIdTokenValue() bool {
	if o != nil && !IsNil(o.OidcIdTokenValue) {
		return true
	}

	return false
}

// SetOidcIdTokenValue gets a reference to the given string and assigns it to the OidcIdTokenValue field.
func (o *Dhis2OAuth2Authorization) SetOidcIdTokenValue(v string) {
	o.OidcIdTokenValue = &v
}

// GetPrincipalName returns the PrincipalName field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetPrincipalName() string {
	if o == nil || IsNil(o.PrincipalName) {
		var ret string
		return ret
	}
	return *o.PrincipalName
}

// GetPrincipalNameOk returns a tuple with the PrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetPrincipalNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrincipalName) {
		return nil, false
	}
	return o.PrincipalName, true
}

// HasPrincipalName returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasPrincipalName() bool {
	if o != nil && !IsNil(o.PrincipalName) {
		return true
	}

	return false
}

// SetPrincipalName gets a reference to the given string and assigns it to the PrincipalName field.
func (o *Dhis2OAuth2Authorization) SetPrincipalName(v string) {
	o.PrincipalName = &v
}

// GetRefreshTokenExpiresAt returns the RefreshTokenExpiresAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetRefreshTokenExpiresAt() time.Time {
	if o == nil || IsNil(o.RefreshTokenExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.RefreshTokenExpiresAt
}

// GetRefreshTokenExpiresAtOk returns a tuple with the RefreshTokenExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetRefreshTokenExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RefreshTokenExpiresAt) {
		return nil, false
	}
	return o.RefreshTokenExpiresAt, true
}

// HasRefreshTokenExpiresAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasRefreshTokenExpiresAt() bool {
	if o != nil && !IsNil(o.RefreshTokenExpiresAt) {
		return true
	}

	return false
}

// SetRefreshTokenExpiresAt gets a reference to the given time.Time and assigns it to the RefreshTokenExpiresAt field.
func (o *Dhis2OAuth2Authorization) SetRefreshTokenExpiresAt(v time.Time) {
	o.RefreshTokenExpiresAt = &v
}

// GetRefreshTokenIssuedAt returns the RefreshTokenIssuedAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetRefreshTokenIssuedAt() time.Time {
	if o == nil || IsNil(o.RefreshTokenIssuedAt) {
		var ret time.Time
		return ret
	}
	return *o.RefreshTokenIssuedAt
}

// GetRefreshTokenIssuedAtOk returns a tuple with the RefreshTokenIssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetRefreshTokenIssuedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RefreshTokenIssuedAt) {
		return nil, false
	}
	return o.RefreshTokenIssuedAt, true
}

// HasRefreshTokenIssuedAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasRefreshTokenIssuedAt() bool {
	if o != nil && !IsNil(o.RefreshTokenIssuedAt) {
		return true
	}

	return false
}

// SetRefreshTokenIssuedAt gets a reference to the given time.Time and assigns it to the RefreshTokenIssuedAt field.
func (o *Dhis2OAuth2Authorization) SetRefreshTokenIssuedAt(v time.Time) {
	o.RefreshTokenIssuedAt = &v
}

// GetRefreshTokenMetadata returns the RefreshTokenMetadata field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetRefreshTokenMetadata() string {
	if o == nil || IsNil(o.RefreshTokenMetadata) {
		var ret string
		return ret
	}
	return *o.RefreshTokenMetadata
}

// GetRefreshTokenMetadataOk returns a tuple with the RefreshTokenMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetRefreshTokenMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshTokenMetadata) {
		return nil, false
	}
	return o.RefreshTokenMetadata, true
}

// HasRefreshTokenMetadata returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasRefreshTokenMetadata() bool {
	if o != nil && !IsNil(o.RefreshTokenMetadata) {
		return true
	}

	return false
}

// SetRefreshTokenMetadata gets a reference to the given string and assigns it to the RefreshTokenMetadata field.
func (o *Dhis2OAuth2Authorization) SetRefreshTokenMetadata(v string) {
	o.RefreshTokenMetadata = &v
}

// GetRefreshTokenValue returns the RefreshTokenValue field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetRefreshTokenValue() string {
	if o == nil || IsNil(o.RefreshTokenValue) {
		var ret string
		return ret
	}
	return *o.RefreshTokenValue
}

// GetRefreshTokenValueOk returns a tuple with the RefreshTokenValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetRefreshTokenValueOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshTokenValue) {
		return nil, false
	}
	return o.RefreshTokenValue, true
}

// HasRefreshTokenValue returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasRefreshTokenValue() bool {
	if o != nil && !IsNil(o.RefreshTokenValue) {
		return true
	}

	return false
}

// SetRefreshTokenValue gets a reference to the given string and assigns it to the RefreshTokenValue field.
func (o *Dhis2OAuth2Authorization) SetRefreshTokenValue(v string) {
	o.RefreshTokenValue = &v
}

// GetRegisteredClientId returns the RegisteredClientId field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetRegisteredClientId() string {
	if o == nil || IsNil(o.RegisteredClientId) {
		var ret string
		return ret
	}
	return *o.RegisteredClientId
}

// GetRegisteredClientIdOk returns a tuple with the RegisteredClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetRegisteredClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.RegisteredClientId) {
		return nil, false
	}
	return o.RegisteredClientId, true
}

// HasRegisteredClientId returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasRegisteredClientId() bool {
	if o != nil && !IsNil(o.RegisteredClientId) {
		return true
	}

	return false
}

// SetRegisteredClientId gets a reference to the given string and assigns it to the RegisteredClientId field.
func (o *Dhis2OAuth2Authorization) SetRegisteredClientId(v string) {
	o.RegisteredClientId = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *Dhis2OAuth2Authorization) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Dhis2OAuth2Authorization) SetState(v string) {
	o.State = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *Dhis2OAuth2Authorization) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUserCodeExpiresAt returns the UserCodeExpiresAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetUserCodeExpiresAt() time.Time {
	if o == nil || IsNil(o.UserCodeExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.UserCodeExpiresAt
}

// GetUserCodeExpiresAtOk returns a tuple with the UserCodeExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetUserCodeExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UserCodeExpiresAt) {
		return nil, false
	}
	return o.UserCodeExpiresAt, true
}

// HasUserCodeExpiresAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasUserCodeExpiresAt() bool {
	if o != nil && !IsNil(o.UserCodeExpiresAt) {
		return true
	}

	return false
}

// SetUserCodeExpiresAt gets a reference to the given time.Time and assigns it to the UserCodeExpiresAt field.
func (o *Dhis2OAuth2Authorization) SetUserCodeExpiresAt(v time.Time) {
	o.UserCodeExpiresAt = &v
}

// GetUserCodeIssuedAt returns the UserCodeIssuedAt field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetUserCodeIssuedAt() time.Time {
	if o == nil || IsNil(o.UserCodeIssuedAt) {
		var ret time.Time
		return ret
	}
	return *o.UserCodeIssuedAt
}

// GetUserCodeIssuedAtOk returns a tuple with the UserCodeIssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetUserCodeIssuedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UserCodeIssuedAt) {
		return nil, false
	}
	return o.UserCodeIssuedAt, true
}

// HasUserCodeIssuedAt returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasUserCodeIssuedAt() bool {
	if o != nil && !IsNil(o.UserCodeIssuedAt) {
		return true
	}

	return false
}

// SetUserCodeIssuedAt gets a reference to the given time.Time and assigns it to the UserCodeIssuedAt field.
func (o *Dhis2OAuth2Authorization) SetUserCodeIssuedAt(v time.Time) {
	o.UserCodeIssuedAt = &v
}

// GetUserCodeMetadata returns the UserCodeMetadata field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetUserCodeMetadata() string {
	if o == nil || IsNil(o.UserCodeMetadata) {
		var ret string
		return ret
	}
	return *o.UserCodeMetadata
}

// GetUserCodeMetadataOk returns a tuple with the UserCodeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetUserCodeMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.UserCodeMetadata) {
		return nil, false
	}
	return o.UserCodeMetadata, true
}

// HasUserCodeMetadata returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasUserCodeMetadata() bool {
	if o != nil && !IsNil(o.UserCodeMetadata) {
		return true
	}

	return false
}

// SetUserCodeMetadata gets a reference to the given string and assigns it to the UserCodeMetadata field.
func (o *Dhis2OAuth2Authorization) SetUserCodeMetadata(v string) {
	o.UserCodeMetadata = &v
}

// GetUserCodeValue returns the UserCodeValue field value if set, zero value otherwise.
func (o *Dhis2OAuth2Authorization) GetUserCodeValue() string {
	if o == nil || IsNil(o.UserCodeValue) {
		var ret string
		return ret
	}
	return *o.UserCodeValue
}

// GetUserCodeValueOk returns a tuple with the UserCodeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dhis2OAuth2Authorization) GetUserCodeValueOk() (*string, bool) {
	if o == nil || IsNil(o.UserCodeValue) {
		return nil, false
	}
	return o.UserCodeValue, true
}

// HasUserCodeValue returns a boolean if a field has been set.
func (o *Dhis2OAuth2Authorization) HasUserCodeValue() bool {
	if o != nil && !IsNil(o.UserCodeValue) {
		return true
	}

	return false
}

// SetUserCodeValue gets a reference to the given string and assigns it to the UserCodeValue field.
func (o *Dhis2OAuth2Authorization) SetUserCodeValue(v string) {
	o.UserCodeValue = &v
}

func (o Dhis2OAuth2Authorization) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dhis2OAuth2Authorization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.AccessTokenExpiresAt) {
		toSerialize["accessTokenExpiresAt"] = o.AccessTokenExpiresAt
	}
	if !IsNil(o.AccessTokenIssuedAt) {
		toSerialize["accessTokenIssuedAt"] = o.AccessTokenIssuedAt
	}
	if !IsNil(o.AccessTokenMetadata) {
		toSerialize["accessTokenMetadata"] = o.AccessTokenMetadata
	}
	if !IsNil(o.AccessTokenScopes) {
		toSerialize["accessTokenScopes"] = o.AccessTokenScopes
	}
	if !IsNil(o.AccessTokenType) {
		toSerialize["accessTokenType"] = o.AccessTokenType
	}
	if !IsNil(o.AccessTokenValue) {
		toSerialize["accessTokenValue"] = o.AccessTokenValue
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.AuthorizationCodeExpiresAt) {
		toSerialize["authorizationCodeExpiresAt"] = o.AuthorizationCodeExpiresAt
	}
	if !IsNil(o.AuthorizationCodeIssuedAt) {
		toSerialize["authorizationCodeIssuedAt"] = o.AuthorizationCodeIssuedAt
	}
	if !IsNil(o.AuthorizationCodeMetadata) {
		toSerialize["authorizationCodeMetadata"] = o.AuthorizationCodeMetadata
	}
	if !IsNil(o.AuthorizationCodeValue) {
		toSerialize["authorizationCodeValue"] = o.AuthorizationCodeValue
	}
	if !IsNil(o.AuthorizationGrantType) {
		toSerialize["authorizationGrantType"] = o.AuthorizationGrantType
	}
	if !IsNil(o.AuthorizedScopes) {
		toSerialize["authorizedScopes"] = o.AuthorizedScopes
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DeviceCodeExpiresAt) {
		toSerialize["deviceCodeExpiresAt"] = o.DeviceCodeExpiresAt
	}
	if !IsNil(o.DeviceCodeIssuedAt) {
		toSerialize["deviceCodeIssuedAt"] = o.DeviceCodeIssuedAt
	}
	if !IsNil(o.DeviceCodeMetadata) {
		toSerialize["deviceCodeMetadata"] = o.DeviceCodeMetadata
	}
	if !IsNil(o.DeviceCodeValue) {
		toSerialize["deviceCodeValue"] = o.DeviceCodeValue
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OidcIdTokenClaims) {
		toSerialize["oidcIdTokenClaims"] = o.OidcIdTokenClaims
	}
	if !IsNil(o.OidcIdTokenExpiresAt) {
		toSerialize["oidcIdTokenExpiresAt"] = o.OidcIdTokenExpiresAt
	}
	if !IsNil(o.OidcIdTokenIssuedAt) {
		toSerialize["oidcIdTokenIssuedAt"] = o.OidcIdTokenIssuedAt
	}
	if !IsNil(o.OidcIdTokenMetadata) {
		toSerialize["oidcIdTokenMetadata"] = o.OidcIdTokenMetadata
	}
	if !IsNil(o.OidcIdTokenValue) {
		toSerialize["oidcIdTokenValue"] = o.OidcIdTokenValue
	}
	if !IsNil(o.PrincipalName) {
		toSerialize["principalName"] = o.PrincipalName
	}
	if !IsNil(o.RefreshTokenExpiresAt) {
		toSerialize["refreshTokenExpiresAt"] = o.RefreshTokenExpiresAt
	}
	if !IsNil(o.RefreshTokenIssuedAt) {
		toSerialize["refreshTokenIssuedAt"] = o.RefreshTokenIssuedAt
	}
	if !IsNil(o.RefreshTokenMetadata) {
		toSerialize["refreshTokenMetadata"] = o.RefreshTokenMetadata
	}
	if !IsNil(o.RefreshTokenValue) {
		toSerialize["refreshTokenValue"] = o.RefreshTokenValue
	}
	if !IsNil(o.RegisteredClientId) {
		toSerialize["registeredClientId"] = o.RegisteredClientId
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.UserCodeExpiresAt) {
		toSerialize["userCodeExpiresAt"] = o.UserCodeExpiresAt
	}
	if !IsNil(o.UserCodeIssuedAt) {
		toSerialize["userCodeIssuedAt"] = o.UserCodeIssuedAt
	}
	if !IsNil(o.UserCodeMetadata) {
		toSerialize["userCodeMetadata"] = o.UserCodeMetadata
	}
	if !IsNil(o.UserCodeValue) {
		toSerialize["userCodeValue"] = o.UserCodeValue
	}
	return toSerialize, nil
}

type NullableDhis2OAuth2Authorization struct {
	value *Dhis2OAuth2Authorization
	isSet bool
}

func (v NullableDhis2OAuth2Authorization) Get() *Dhis2OAuth2Authorization {
	return v.value
}

func (v *NullableDhis2OAuth2Authorization) Set(val *Dhis2OAuth2Authorization) {
	v.value = val
	v.isSet = true
}

func (v NullableDhis2OAuth2Authorization) IsSet() bool {
	return v.isSet
}

func (v *NullableDhis2OAuth2Authorization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhis2OAuth2Authorization(val *Dhis2OAuth2Authorization) *NullableDhis2OAuth2Authorization {
	return &NullableDhis2OAuth2Authorization{value: val, isSet: true}
}

func (v NullableDhis2OAuth2Authorization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhis2OAuth2Authorization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
