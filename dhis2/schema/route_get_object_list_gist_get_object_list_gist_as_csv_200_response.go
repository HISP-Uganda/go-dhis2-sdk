/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// RouteGetObjectListGistGetObjectListGistAsCsv200Response - struct for RouteGetObjectListGistGetObjectListGistAsCsv200Response
type RouteGetObjectListGistGetObjectListGistAsCsv200Response struct {
	RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfRoute                                                 *[]Route
}

// RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsRouteGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in RouteGetObjectListGistGetObjectListGistAsCsv200Response
func RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsRouteGetObjectListGistGetObjectListGistAsCsv200Response(v *RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) RouteGetObjectListGistGetObjectListGistAsCsv200Response {
	return RouteGetObjectListGistGetObjectListGistAsCsv200Response{
		RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []RouteAsRouteGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []Route wrapped in RouteGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfRouteAsRouteGetObjectListGistGetObjectListGistAsCsv200Response(v *[]Route) RouteGetObjectListGistGetObjectListGistAsCsv200Response {
	return RouteGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfRoute: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *RouteGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonRouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonRouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfRoute
	err = newStrictDecoder(data).Decode(&dst.ArrayOfRoute)
	if err == nil {
		jsonArrayOfRoute, _ := json.Marshal(dst.ArrayOfRoute)
		if string(jsonArrayOfRoute) == "{}" { // empty struct
			dst.ArrayOfRoute = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfRoute = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfRoute = nil

		return fmt.Errorf("data matches more than one schema in oneOf(RouteGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(RouteGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src RouteGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfRoute != nil {
		return json.Marshal(&src.ArrayOfRoute)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *RouteGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.RouteGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfRoute != nil {
		return obj.ArrayOfRoute
	}

	// all schemas are nil
	return nil
}

type NullableRouteGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *RouteGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableRouteGetObjectListGistGetObjectListGistAsCsv200Response) Get() *RouteGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableRouteGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *RouteGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteGetObjectListGistGetObjectListGistAsCsv200Response(val *RouteGetObjectListGistGetObjectListGistAsCsv200Response) *NullableRouteGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableRouteGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableRouteGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
