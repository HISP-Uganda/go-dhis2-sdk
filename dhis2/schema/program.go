/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Program type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Program{}

// Program struct for Program
type Program struct {
	Access                          *Access                                `json:"access,omitempty"`
	AccessLevel                     string                                 `json:"accessLevel"`
	AttributeValues                 []AttributeValue                       `json:"attributeValues,omitempty"`
	CategoryCombo                   *CategoryCategoryCombosInner           `json:"categoryCombo,omitempty"`
	Code                            *string                                `json:"code,omitempty"`
	CompleteEventsExpiryDays        int32                                  `json:"completeEventsExpiryDays"`
	Created                         *time.Time                             `json:"created,omitempty"`
	CreatedBy                       *AggregateDataExchangeCreatedBy        `json:"createdBy,omitempty"`
	DataEntryForm                   *DataSetDataEntryForm                  `json:"dataEntryForm,omitempty"`
	Description                     *string                                `json:"description,omitempty"`
	DisplayDescription              *string                                `json:"displayDescription,omitempty"`
	DisplayEnrollmentDateLabel      *string                                `json:"displayEnrollmentDateLabel,omitempty"`
	DisplayFormName                 *string                                `json:"displayFormName,omitempty"`
	DisplayFrontPageList            *bool                                  `json:"displayFrontPageList,omitempty"`
	DisplayIncidentDate             *bool                                  `json:"displayIncidentDate,omitempty"`
	DisplayIncidentDateLabel        *string                                `json:"displayIncidentDateLabel,omitempty"`
	DisplayName                     *string                                `json:"displayName,omitempty"`
	DisplayShortName                *string                                `json:"displayShortName,omitempty"`
	EnrollmentDateLabel             *string                                `json:"enrollmentDateLabel,omitempty"`
	ExpiryDays                      int32                                  `json:"expiryDays"`
	ExpiryPeriodType                *string                                `json:"expiryPeriodType,omitempty"`
	ExternalAccess                  *bool                                  `json:"externalAccess,omitempty"`
	Favorite                        *bool                                  `json:"favorite,omitempty"`
	Favorites                       []string                               `json:"favorites,omitempty"`
	FeatureType                     string                                 `json:"featureType"`
	FormName                        *string                                `json:"formName,omitempty"`
	Href                            *string                                `json:"href,omitempty"`
	Id                              *string                                `json:"id,omitempty"`
	IgnoreOverdueEvents             *bool                                  `json:"ignoreOverdueEvents,omitempty"`
	IncidentDateLabel               *string                                `json:"incidentDateLabel,omitempty"`
	LastUpdated                     *time.Time                             `json:"lastUpdated,omitempty"`
	LastUpdatedBy                   *AggregateDataExchangeCreatedBy        `json:"lastUpdatedBy,omitempty"`
	MaxTeiCountToReturn             int32                                  `json:"maxTeiCountToReturn"`
	MinAttributesRequiredToSearch   int32                                  `json:"minAttributesRequiredToSearch"`
	Name                            *string                                `json:"name,omitempty"`
	NotificationTemplates           []ProgramNotificationTemplatesInner    `json:"notificationTemplates,omitempty"`
	OnlyEnrollOnce                  *bool                                  `json:"onlyEnrollOnce,omitempty"`
	OpenDaysAfterCoEndDate          int32                                  `json:"openDaysAfterCoEndDate"`
	OrganisationUnits               []CategoryOptionOrganisationUnitsInner `json:"organisationUnits,omitempty"`
	ProgramIndicators               []DataDimensionItemProgramIndicator    `json:"programIndicators,omitempty"`
	ProgramRuleVariables            []ProgramProgramRuleVariablesInner     `json:"programRuleVariables,omitempty"`
	ProgramSections                 []ProgramProgramSectionsInner          `json:"programSections,omitempty"`
	ProgramStages                   []CategoryProgramStage                 `json:"programStages,omitempty"`
	ProgramTrackedEntityAttributes  []ProgramTrackedEntityAttribute        `json:"programTrackedEntityAttributes,omitempty"`
	ProgramType                     string                                 `json:"programType"`
	PublicAccess                    *string                                `json:"publicAccess,omitempty"`
	Registration                    *bool                                  `json:"registration,omitempty"`
	RelatedProgram                  *EventVisualizationProgram             `json:"relatedProgram,omitempty"`
	SelectEnrollmentDatesInFuture   *bool                                  `json:"selectEnrollmentDatesInFuture,omitempty"`
	SelectIncidentDatesInFuture     *bool                                  `json:"selectIncidentDatesInFuture,omitempty"`
	Sharing                         *Sharing                               `json:"sharing,omitempty"`
	ShortName                       *string                                `json:"shortName,omitempty"`
	SkipOffline                     *bool                                  `json:"skipOffline,omitempty"`
	Style                           *ObjectStyle                           `json:"style,omitempty"`
	TrackedEntityType               *MapViewTrackedEntityType              `json:"trackedEntityType,omitempty"`
	Translations                    []Translation                          `json:"translations,omitempty"`
	UseFirstStageDuringRegistration *bool                                  `json:"useFirstStageDuringRegistration,omitempty"`
	User                            *AggregateDataExchangeCreatedBy        `json:"user,omitempty"`
	UserAccesses                    []LegacyUserAccess                     `json:"userAccesses,omitempty"`
	UserGroupAccesses               []LegacyUserGroupAccess                `json:"userGroupAccesses,omitempty"`
	UserRoles                       []ConfigurationSelfRegistrationRole    `json:"userRoles,omitempty"`
	Version                         int32                                  `json:"version"`
	WithoutRegistration             *bool                                  `json:"withoutRegistration,omitempty"`
}

type _Program Program

// NewProgram instantiates a new Program object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgram(accessLevel string, completeEventsExpiryDays int32, expiryDays int32, featureType string, maxTeiCountToReturn int32, minAttributesRequiredToSearch int32, openDaysAfterCoEndDate int32, programType string, version int32) *Program {
	this := Program{}
	this.AccessLevel = accessLevel
	this.CompleteEventsExpiryDays = completeEventsExpiryDays
	this.ExpiryDays = expiryDays
	this.FeatureType = featureType
	this.MaxTeiCountToReturn = maxTeiCountToReturn
	this.MinAttributesRequiredToSearch = minAttributesRequiredToSearch
	this.OpenDaysAfterCoEndDate = openDaysAfterCoEndDate
	this.ProgramType = programType
	this.Version = version
	return &this
}

// NewProgramWithDefaults instantiates a new Program object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramWithDefaults() *Program {
	this := Program{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *Program) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *Program) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *Program) SetAccess(v Access) {
	o.Access = &v
}

// GetAccessLevel returns the AccessLevel field value
func (o *Program) GetAccessLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessLevel
}

// GetAccessLevelOk returns a tuple with the AccessLevel field value
// and a boolean to check if the value has been set.
func (o *Program) GetAccessLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessLevel, true
}

// SetAccessLevel sets field value
func (o *Program) SetAccessLevel(v string) {
	o.AccessLevel = v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *Program) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *Program) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *Program) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetCategoryCombo returns the CategoryCombo field value if set, zero value otherwise.
func (o *Program) GetCategoryCombo() CategoryCategoryCombosInner {
	if o == nil || IsNil(o.CategoryCombo) {
		var ret CategoryCategoryCombosInner
		return ret
	}
	return *o.CategoryCombo
}

// GetCategoryComboOk returns a tuple with the CategoryCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetCategoryComboOk() (*CategoryCategoryCombosInner, bool) {
	if o == nil || IsNil(o.CategoryCombo) {
		return nil, false
	}
	return o.CategoryCombo, true
}

// HasCategoryCombo returns a boolean if a field has been set.
func (o *Program) HasCategoryCombo() bool {
	if o != nil && !IsNil(o.CategoryCombo) {
		return true
	}

	return false
}

// SetCategoryCombo gets a reference to the given CategoryCategoryCombosInner and assigns it to the CategoryCombo field.
func (o *Program) SetCategoryCombo(v CategoryCategoryCombosInner) {
	o.CategoryCombo = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *Program) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *Program) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *Program) SetCode(v string) {
	o.Code = &v
}

// GetCompleteEventsExpiryDays returns the CompleteEventsExpiryDays field value
func (o *Program) GetCompleteEventsExpiryDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CompleteEventsExpiryDays
}

// GetCompleteEventsExpiryDaysOk returns a tuple with the CompleteEventsExpiryDays field value
// and a boolean to check if the value has been set.
func (o *Program) GetCompleteEventsExpiryDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompleteEventsExpiryDays, true
}

// SetCompleteEventsExpiryDays sets field value
func (o *Program) SetCompleteEventsExpiryDays(v int32) {
	o.CompleteEventsExpiryDays = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *Program) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Program) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *Program) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Program) GetCreatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetCreatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Program) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the CreatedBy field.
func (o *Program) SetCreatedBy(v AggregateDataExchangeCreatedBy) {
	o.CreatedBy = &v
}

// GetDataEntryForm returns the DataEntryForm field value if set, zero value otherwise.
func (o *Program) GetDataEntryForm() DataSetDataEntryForm {
	if o == nil || IsNil(o.DataEntryForm) {
		var ret DataSetDataEntryForm
		return ret
	}
	return *o.DataEntryForm
}

// GetDataEntryFormOk returns a tuple with the DataEntryForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetDataEntryFormOk() (*DataSetDataEntryForm, bool) {
	if o == nil || IsNil(o.DataEntryForm) {
		return nil, false
	}
	return o.DataEntryForm, true
}

// HasDataEntryForm returns a boolean if a field has been set.
func (o *Program) HasDataEntryForm() bool {
	if o != nil && !IsNil(o.DataEntryForm) {
		return true
	}

	return false
}

// SetDataEntryForm gets a reference to the given DataSetDataEntryForm and assigns it to the DataEntryForm field.
func (o *Program) SetDataEntryForm(v DataSetDataEntryForm) {
	o.DataEntryForm = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Program) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Program) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Program) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayDescription returns the DisplayDescription field value if set, zero value otherwise.
func (o *Program) GetDisplayDescription() string {
	if o == nil || IsNil(o.DisplayDescription) {
		var ret string
		return ret
	}
	return *o.DisplayDescription
}

// GetDisplayDescriptionOk returns a tuple with the DisplayDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetDisplayDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDescription) {
		return nil, false
	}
	return o.DisplayDescription, true
}

// HasDisplayDescription returns a boolean if a field has been set.
func (o *Program) HasDisplayDescription() bool {
	if o != nil && !IsNil(o.DisplayDescription) {
		return true
	}

	return false
}

// SetDisplayDescription gets a reference to the given string and assigns it to the DisplayDescription field.
func (o *Program) SetDisplayDescription(v string) {
	o.DisplayDescription = &v
}

// GetDisplayEnrollmentDateLabel returns the DisplayEnrollmentDateLabel field value if set, zero value otherwise.
func (o *Program) GetDisplayEnrollmentDateLabel() string {
	if o == nil || IsNil(o.DisplayEnrollmentDateLabel) {
		var ret string
		return ret
	}
	return *o.DisplayEnrollmentDateLabel
}

// GetDisplayEnrollmentDateLabelOk returns a tuple with the DisplayEnrollmentDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetDisplayEnrollmentDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayEnrollmentDateLabel) {
		return nil, false
	}
	return o.DisplayEnrollmentDateLabel, true
}

// HasDisplayEnrollmentDateLabel returns a boolean if a field has been set.
func (o *Program) HasDisplayEnrollmentDateLabel() bool {
	if o != nil && !IsNil(o.DisplayEnrollmentDateLabel) {
		return true
	}

	return false
}

// SetDisplayEnrollmentDateLabel gets a reference to the given string and assigns it to the DisplayEnrollmentDateLabel field.
func (o *Program) SetDisplayEnrollmentDateLabel(v string) {
	o.DisplayEnrollmentDateLabel = &v
}

// GetDisplayFormName returns the DisplayFormName field value if set, zero value otherwise.
func (o *Program) GetDisplayFormName() string {
	if o == nil || IsNil(o.DisplayFormName) {
		var ret string
		return ret
	}
	return *o.DisplayFormName
}

// GetDisplayFormNameOk returns a tuple with the DisplayFormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetDisplayFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayFormName) {
		return nil, false
	}
	return o.DisplayFormName, true
}

// HasDisplayFormName returns a boolean if a field has been set.
func (o *Program) HasDisplayFormName() bool {
	if o != nil && !IsNil(o.DisplayFormName) {
		return true
	}

	return false
}

// SetDisplayFormName gets a reference to the given string and assigns it to the DisplayFormName field.
func (o *Program) SetDisplayFormName(v string) {
	o.DisplayFormName = &v
}

// GetDisplayFrontPageList returns the DisplayFrontPageList field value if set, zero value otherwise.
func (o *Program) GetDisplayFrontPageList() bool {
	if o == nil || IsNil(o.DisplayFrontPageList) {
		var ret bool
		return ret
	}
	return *o.DisplayFrontPageList
}

// GetDisplayFrontPageListOk returns a tuple with the DisplayFrontPageList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetDisplayFrontPageListOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayFrontPageList) {
		return nil, false
	}
	return o.DisplayFrontPageList, true
}

// HasDisplayFrontPageList returns a boolean if a field has been set.
func (o *Program) HasDisplayFrontPageList() bool {
	if o != nil && !IsNil(o.DisplayFrontPageList) {
		return true
	}

	return false
}

// SetDisplayFrontPageList gets a reference to the given bool and assigns it to the DisplayFrontPageList field.
func (o *Program) SetDisplayFrontPageList(v bool) {
	o.DisplayFrontPageList = &v
}

// GetDisplayIncidentDate returns the DisplayIncidentDate field value if set, zero value otherwise.
func (o *Program) GetDisplayIncidentDate() bool {
	if o == nil || IsNil(o.DisplayIncidentDate) {
		var ret bool
		return ret
	}
	return *o.DisplayIncidentDate
}

// GetDisplayIncidentDateOk returns a tuple with the DisplayIncidentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetDisplayIncidentDateOk() (*bool, bool) {
	if o == nil || IsNil(o.DisplayIncidentDate) {
		return nil, false
	}
	return o.DisplayIncidentDate, true
}

// HasDisplayIncidentDate returns a boolean if a field has been set.
func (o *Program) HasDisplayIncidentDate() bool {
	if o != nil && !IsNil(o.DisplayIncidentDate) {
		return true
	}

	return false
}

// SetDisplayIncidentDate gets a reference to the given bool and assigns it to the DisplayIncidentDate field.
func (o *Program) SetDisplayIncidentDate(v bool) {
	o.DisplayIncidentDate = &v
}

// GetDisplayIncidentDateLabel returns the DisplayIncidentDateLabel field value if set, zero value otherwise.
func (o *Program) GetDisplayIncidentDateLabel() string {
	if o == nil || IsNil(o.DisplayIncidentDateLabel) {
		var ret string
		return ret
	}
	return *o.DisplayIncidentDateLabel
}

// GetDisplayIncidentDateLabelOk returns a tuple with the DisplayIncidentDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetDisplayIncidentDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayIncidentDateLabel) {
		return nil, false
	}
	return o.DisplayIncidentDateLabel, true
}

// HasDisplayIncidentDateLabel returns a boolean if a field has been set.
func (o *Program) HasDisplayIncidentDateLabel() bool {
	if o != nil && !IsNil(o.DisplayIncidentDateLabel) {
		return true
	}

	return false
}

// SetDisplayIncidentDateLabel gets a reference to the given string and assigns it to the DisplayIncidentDateLabel field.
func (o *Program) SetDisplayIncidentDateLabel(v string) {
	o.DisplayIncidentDateLabel = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Program) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Program) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Program) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayShortName returns the DisplayShortName field value if set, zero value otherwise.
func (o *Program) GetDisplayShortName() string {
	if o == nil || IsNil(o.DisplayShortName) {
		var ret string
		return ret
	}
	return *o.DisplayShortName
}

// GetDisplayShortNameOk returns a tuple with the DisplayShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetDisplayShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayShortName) {
		return nil, false
	}
	return o.DisplayShortName, true
}

// HasDisplayShortName returns a boolean if a field has been set.
func (o *Program) HasDisplayShortName() bool {
	if o != nil && !IsNil(o.DisplayShortName) {
		return true
	}

	return false
}

// SetDisplayShortName gets a reference to the given string and assigns it to the DisplayShortName field.
func (o *Program) SetDisplayShortName(v string) {
	o.DisplayShortName = &v
}

// GetEnrollmentDateLabel returns the EnrollmentDateLabel field value if set, zero value otherwise.
func (o *Program) GetEnrollmentDateLabel() string {
	if o == nil || IsNil(o.EnrollmentDateLabel) {
		var ret string
		return ret
	}
	return *o.EnrollmentDateLabel
}

// GetEnrollmentDateLabelOk returns a tuple with the EnrollmentDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetEnrollmentDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.EnrollmentDateLabel) {
		return nil, false
	}
	return o.EnrollmentDateLabel, true
}

// HasEnrollmentDateLabel returns a boolean if a field has been set.
func (o *Program) HasEnrollmentDateLabel() bool {
	if o != nil && !IsNil(o.EnrollmentDateLabel) {
		return true
	}

	return false
}

// SetEnrollmentDateLabel gets a reference to the given string and assigns it to the EnrollmentDateLabel field.
func (o *Program) SetEnrollmentDateLabel(v string) {
	o.EnrollmentDateLabel = &v
}

// GetExpiryDays returns the ExpiryDays field value
func (o *Program) GetExpiryDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpiryDays
}

// GetExpiryDaysOk returns a tuple with the ExpiryDays field value
// and a boolean to check if the value has been set.
func (o *Program) GetExpiryDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiryDays, true
}

// SetExpiryDays sets field value
func (o *Program) SetExpiryDays(v int32) {
	o.ExpiryDays = v
}

// GetExpiryPeriodType returns the ExpiryPeriodType field value if set, zero value otherwise.
func (o *Program) GetExpiryPeriodType() string {
	if o == nil || IsNil(o.ExpiryPeriodType) {
		var ret string
		return ret
	}
	return *o.ExpiryPeriodType
}

// GetExpiryPeriodTypeOk returns a tuple with the ExpiryPeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetExpiryPeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiryPeriodType) {
		return nil, false
	}
	return o.ExpiryPeriodType, true
}

// HasExpiryPeriodType returns a boolean if a field has been set.
func (o *Program) HasExpiryPeriodType() bool {
	if o != nil && !IsNil(o.ExpiryPeriodType) {
		return true
	}

	return false
}

// SetExpiryPeriodType gets a reference to the given string and assigns it to the ExpiryPeriodType field.
func (o *Program) SetExpiryPeriodType(v string) {
	o.ExpiryPeriodType = &v
}

// GetExternalAccess returns the ExternalAccess field value if set, zero value otherwise.
func (o *Program) GetExternalAccess() bool {
	if o == nil || IsNil(o.ExternalAccess) {
		var ret bool
		return ret
	}
	return *o.ExternalAccess
}

// GetExternalAccessOk returns a tuple with the ExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetExternalAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalAccess) {
		return nil, false
	}
	return o.ExternalAccess, true
}

// HasExternalAccess returns a boolean if a field has been set.
func (o *Program) HasExternalAccess() bool {
	if o != nil && !IsNil(o.ExternalAccess) {
		return true
	}

	return false
}

// SetExternalAccess gets a reference to the given bool and assigns it to the ExternalAccess field.
func (o *Program) SetExternalAccess(v bool) {
	o.ExternalAccess = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *Program) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *Program) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *Program) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *Program) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *Program) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *Program) SetFavorites(v []string) {
	o.Favorites = v
}

// GetFeatureType returns the FeatureType field value
func (o *Program) GetFeatureType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeatureType
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value
// and a boolean to check if the value has been set.
func (o *Program) GetFeatureTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureType, true
}

// SetFeatureType sets field value
func (o *Program) SetFeatureType(v string) {
	o.FeatureType = v
}

// GetFormName returns the FormName field value if set, zero value otherwise.
func (o *Program) GetFormName() string {
	if o == nil || IsNil(o.FormName) {
		var ret string
		return ret
	}
	return *o.FormName
}

// GetFormNameOk returns a tuple with the FormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.FormName) {
		return nil, false
	}
	return o.FormName, true
}

// HasFormName returns a boolean if a field has been set.
func (o *Program) HasFormName() bool {
	if o != nil && !IsNil(o.FormName) {
		return true
	}

	return false
}

// SetFormName gets a reference to the given string and assigns it to the FormName field.
func (o *Program) SetFormName(v string) {
	o.FormName = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *Program) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *Program) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *Program) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Program) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Program) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Program) SetId(v string) {
	o.Id = &v
}

// GetIgnoreOverdueEvents returns the IgnoreOverdueEvents field value if set, zero value otherwise.
func (o *Program) GetIgnoreOverdueEvents() bool {
	if o == nil || IsNil(o.IgnoreOverdueEvents) {
		var ret bool
		return ret
	}
	return *o.IgnoreOverdueEvents
}

// GetIgnoreOverdueEventsOk returns a tuple with the IgnoreOverdueEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetIgnoreOverdueEventsOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreOverdueEvents) {
		return nil, false
	}
	return o.IgnoreOverdueEvents, true
}

// HasIgnoreOverdueEvents returns a boolean if a field has been set.
func (o *Program) HasIgnoreOverdueEvents() bool {
	if o != nil && !IsNil(o.IgnoreOverdueEvents) {
		return true
	}

	return false
}

// SetIgnoreOverdueEvents gets a reference to the given bool and assigns it to the IgnoreOverdueEvents field.
func (o *Program) SetIgnoreOverdueEvents(v bool) {
	o.IgnoreOverdueEvents = &v
}

// GetIncidentDateLabel returns the IncidentDateLabel field value if set, zero value otherwise.
func (o *Program) GetIncidentDateLabel() string {
	if o == nil || IsNil(o.IncidentDateLabel) {
		var ret string
		return ret
	}
	return *o.IncidentDateLabel
}

// GetIncidentDateLabelOk returns a tuple with the IncidentDateLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetIncidentDateLabelOk() (*string, bool) {
	if o == nil || IsNil(o.IncidentDateLabel) {
		return nil, false
	}
	return o.IncidentDateLabel, true
}

// HasIncidentDateLabel returns a boolean if a field has been set.
func (o *Program) HasIncidentDateLabel() bool {
	if o != nil && !IsNil(o.IncidentDateLabel) {
		return true
	}

	return false
}

// SetIncidentDateLabel gets a reference to the given string and assigns it to the IncidentDateLabel field.
func (o *Program) SetIncidentDateLabel(v string) {
	o.IncidentDateLabel = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *Program) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *Program) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *Program) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *Program) GetLastUpdatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetLastUpdatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *Program) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the LastUpdatedBy field.
func (o *Program) SetLastUpdatedBy(v AggregateDataExchangeCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetMaxTeiCountToReturn returns the MaxTeiCountToReturn field value
func (o *Program) GetMaxTeiCountToReturn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxTeiCountToReturn
}

// GetMaxTeiCountToReturnOk returns a tuple with the MaxTeiCountToReturn field value
// and a boolean to check if the value has been set.
func (o *Program) GetMaxTeiCountToReturnOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxTeiCountToReturn, true
}

// SetMaxTeiCountToReturn sets field value
func (o *Program) SetMaxTeiCountToReturn(v int32) {
	o.MaxTeiCountToReturn = v
}

// GetMinAttributesRequiredToSearch returns the MinAttributesRequiredToSearch field value
func (o *Program) GetMinAttributesRequiredToSearch() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinAttributesRequiredToSearch
}

// GetMinAttributesRequiredToSearchOk returns a tuple with the MinAttributesRequiredToSearch field value
// and a boolean to check if the value has been set.
func (o *Program) GetMinAttributesRequiredToSearchOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinAttributesRequiredToSearch, true
}

// SetMinAttributesRequiredToSearch sets field value
func (o *Program) SetMinAttributesRequiredToSearch(v int32) {
	o.MinAttributesRequiredToSearch = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Program) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Program) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Program) SetName(v string) {
	o.Name = &v
}

// GetNotificationTemplates returns the NotificationTemplates field value if set, zero value otherwise.
func (o *Program) GetNotificationTemplates() []ProgramNotificationTemplatesInner {
	if o == nil || IsNil(o.NotificationTemplates) {
		var ret []ProgramNotificationTemplatesInner
		return ret
	}
	return o.NotificationTemplates
}

// GetNotificationTemplatesOk returns a tuple with the NotificationTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetNotificationTemplatesOk() ([]ProgramNotificationTemplatesInner, bool) {
	if o == nil || IsNil(o.NotificationTemplates) {
		return nil, false
	}
	return o.NotificationTemplates, true
}

// HasNotificationTemplates returns a boolean if a field has been set.
func (o *Program) HasNotificationTemplates() bool {
	if o != nil && !IsNil(o.NotificationTemplates) {
		return true
	}

	return false
}

// SetNotificationTemplates gets a reference to the given []ProgramNotificationTemplatesInner and assigns it to the NotificationTemplates field.
func (o *Program) SetNotificationTemplates(v []ProgramNotificationTemplatesInner) {
	o.NotificationTemplates = v
}

// GetOnlyEnrollOnce returns the OnlyEnrollOnce field value if set, zero value otherwise.
func (o *Program) GetOnlyEnrollOnce() bool {
	if o == nil || IsNil(o.OnlyEnrollOnce) {
		var ret bool
		return ret
	}
	return *o.OnlyEnrollOnce
}

// GetOnlyEnrollOnceOk returns a tuple with the OnlyEnrollOnce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetOnlyEnrollOnceOk() (*bool, bool) {
	if o == nil || IsNil(o.OnlyEnrollOnce) {
		return nil, false
	}
	return o.OnlyEnrollOnce, true
}

// HasOnlyEnrollOnce returns a boolean if a field has been set.
func (o *Program) HasOnlyEnrollOnce() bool {
	if o != nil && !IsNil(o.OnlyEnrollOnce) {
		return true
	}

	return false
}

// SetOnlyEnrollOnce gets a reference to the given bool and assigns it to the OnlyEnrollOnce field.
func (o *Program) SetOnlyEnrollOnce(v bool) {
	o.OnlyEnrollOnce = &v
}

// GetOpenDaysAfterCoEndDate returns the OpenDaysAfterCoEndDate field value
func (o *Program) GetOpenDaysAfterCoEndDate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OpenDaysAfterCoEndDate
}

// GetOpenDaysAfterCoEndDateOk returns a tuple with the OpenDaysAfterCoEndDate field value
// and a boolean to check if the value has been set.
func (o *Program) GetOpenDaysAfterCoEndDateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenDaysAfterCoEndDate, true
}

// SetOpenDaysAfterCoEndDate sets field value
func (o *Program) SetOpenDaysAfterCoEndDate(v int32) {
	o.OpenDaysAfterCoEndDate = v
}

// GetOrganisationUnits returns the OrganisationUnits field value if set, zero value otherwise.
func (o *Program) GetOrganisationUnits() []CategoryOptionOrganisationUnitsInner {
	if o == nil || IsNil(o.OrganisationUnits) {
		var ret []CategoryOptionOrganisationUnitsInner
		return ret
	}
	return o.OrganisationUnits
}

// GetOrganisationUnitsOk returns a tuple with the OrganisationUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetOrganisationUnitsOk() ([]CategoryOptionOrganisationUnitsInner, bool) {
	if o == nil || IsNil(o.OrganisationUnits) {
		return nil, false
	}
	return o.OrganisationUnits, true
}

// HasOrganisationUnits returns a boolean if a field has been set.
func (o *Program) HasOrganisationUnits() bool {
	if o != nil && !IsNil(o.OrganisationUnits) {
		return true
	}

	return false
}

// SetOrganisationUnits gets a reference to the given []CategoryOptionOrganisationUnitsInner and assigns it to the OrganisationUnits field.
func (o *Program) SetOrganisationUnits(v []CategoryOptionOrganisationUnitsInner) {
	o.OrganisationUnits = v
}

// GetProgramIndicators returns the ProgramIndicators field value if set, zero value otherwise.
func (o *Program) GetProgramIndicators() []DataDimensionItemProgramIndicator {
	if o == nil || IsNil(o.ProgramIndicators) {
		var ret []DataDimensionItemProgramIndicator
		return ret
	}
	return o.ProgramIndicators
}

// GetProgramIndicatorsOk returns a tuple with the ProgramIndicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetProgramIndicatorsOk() ([]DataDimensionItemProgramIndicator, bool) {
	if o == nil || IsNil(o.ProgramIndicators) {
		return nil, false
	}
	return o.ProgramIndicators, true
}

// HasProgramIndicators returns a boolean if a field has been set.
func (o *Program) HasProgramIndicators() bool {
	if o != nil && !IsNil(o.ProgramIndicators) {
		return true
	}

	return false
}

// SetProgramIndicators gets a reference to the given []DataDimensionItemProgramIndicator and assigns it to the ProgramIndicators field.
func (o *Program) SetProgramIndicators(v []DataDimensionItemProgramIndicator) {
	o.ProgramIndicators = v
}

// GetProgramRuleVariables returns the ProgramRuleVariables field value if set, zero value otherwise.
func (o *Program) GetProgramRuleVariables() []ProgramProgramRuleVariablesInner {
	if o == nil || IsNil(o.ProgramRuleVariables) {
		var ret []ProgramProgramRuleVariablesInner
		return ret
	}
	return o.ProgramRuleVariables
}

// GetProgramRuleVariablesOk returns a tuple with the ProgramRuleVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetProgramRuleVariablesOk() ([]ProgramProgramRuleVariablesInner, bool) {
	if o == nil || IsNil(o.ProgramRuleVariables) {
		return nil, false
	}
	return o.ProgramRuleVariables, true
}

// HasProgramRuleVariables returns a boolean if a field has been set.
func (o *Program) HasProgramRuleVariables() bool {
	if o != nil && !IsNil(o.ProgramRuleVariables) {
		return true
	}

	return false
}

// SetProgramRuleVariables gets a reference to the given []ProgramProgramRuleVariablesInner and assigns it to the ProgramRuleVariables field.
func (o *Program) SetProgramRuleVariables(v []ProgramProgramRuleVariablesInner) {
	o.ProgramRuleVariables = v
}

// GetProgramSections returns the ProgramSections field value if set, zero value otherwise.
func (o *Program) GetProgramSections() []ProgramProgramSectionsInner {
	if o == nil || IsNil(o.ProgramSections) {
		var ret []ProgramProgramSectionsInner
		return ret
	}
	return o.ProgramSections
}

// GetProgramSectionsOk returns a tuple with the ProgramSections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetProgramSectionsOk() ([]ProgramProgramSectionsInner, bool) {
	if o == nil || IsNil(o.ProgramSections) {
		return nil, false
	}
	return o.ProgramSections, true
}

// HasProgramSections returns a boolean if a field has been set.
func (o *Program) HasProgramSections() bool {
	if o != nil && !IsNil(o.ProgramSections) {
		return true
	}

	return false
}

// SetProgramSections gets a reference to the given []ProgramProgramSectionsInner and assigns it to the ProgramSections field.
func (o *Program) SetProgramSections(v []ProgramProgramSectionsInner) {
	o.ProgramSections = v
}

// GetProgramStages returns the ProgramStages field value if set, zero value otherwise.
func (o *Program) GetProgramStages() []CategoryProgramStage {
	if o == nil || IsNil(o.ProgramStages) {
		var ret []CategoryProgramStage
		return ret
	}
	return o.ProgramStages
}

// GetProgramStagesOk returns a tuple with the ProgramStages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetProgramStagesOk() ([]CategoryProgramStage, bool) {
	if o == nil || IsNil(o.ProgramStages) {
		return nil, false
	}
	return o.ProgramStages, true
}

// HasProgramStages returns a boolean if a field has been set.
func (o *Program) HasProgramStages() bool {
	if o != nil && !IsNil(o.ProgramStages) {
		return true
	}

	return false
}

// SetProgramStages gets a reference to the given []CategoryProgramStage and assigns it to the ProgramStages field.
func (o *Program) SetProgramStages(v []CategoryProgramStage) {
	o.ProgramStages = v
}

// GetProgramTrackedEntityAttributes returns the ProgramTrackedEntityAttributes field value if set, zero value otherwise.
func (o *Program) GetProgramTrackedEntityAttributes() []ProgramTrackedEntityAttribute {
	if o == nil || IsNil(o.ProgramTrackedEntityAttributes) {
		var ret []ProgramTrackedEntityAttribute
		return ret
	}
	return o.ProgramTrackedEntityAttributes
}

// GetProgramTrackedEntityAttributesOk returns a tuple with the ProgramTrackedEntityAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetProgramTrackedEntityAttributesOk() ([]ProgramTrackedEntityAttribute, bool) {
	if o == nil || IsNil(o.ProgramTrackedEntityAttributes) {
		return nil, false
	}
	return o.ProgramTrackedEntityAttributes, true
}

// HasProgramTrackedEntityAttributes returns a boolean if a field has been set.
func (o *Program) HasProgramTrackedEntityAttributes() bool {
	if o != nil && !IsNil(o.ProgramTrackedEntityAttributes) {
		return true
	}

	return false
}

// SetProgramTrackedEntityAttributes gets a reference to the given []ProgramTrackedEntityAttribute and assigns it to the ProgramTrackedEntityAttributes field.
func (o *Program) SetProgramTrackedEntityAttributes(v []ProgramTrackedEntityAttribute) {
	o.ProgramTrackedEntityAttributes = v
}

// GetProgramType returns the ProgramType field value
func (o *Program) GetProgramType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProgramType
}

// GetProgramTypeOk returns a tuple with the ProgramType field value
// and a boolean to check if the value has been set.
func (o *Program) GetProgramTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProgramType, true
}

// SetProgramType sets field value
func (o *Program) SetProgramType(v string) {
	o.ProgramType = v
}

// GetPublicAccess returns the PublicAccess field value if set, zero value otherwise.
func (o *Program) GetPublicAccess() string {
	if o == nil || IsNil(o.PublicAccess) {
		var ret string
		return ret
	}
	return *o.PublicAccess
}

// GetPublicAccessOk returns a tuple with the PublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetPublicAccessOk() (*string, bool) {
	if o == nil || IsNil(o.PublicAccess) {
		return nil, false
	}
	return o.PublicAccess, true
}

// HasPublicAccess returns a boolean if a field has been set.
func (o *Program) HasPublicAccess() bool {
	if o != nil && !IsNil(o.PublicAccess) {
		return true
	}

	return false
}

// SetPublicAccess gets a reference to the given string and assigns it to the PublicAccess field.
func (o *Program) SetPublicAccess(v string) {
	o.PublicAccess = &v
}

// GetRegistration returns the Registration field value if set, zero value otherwise.
func (o *Program) GetRegistration() bool {
	if o == nil || IsNil(o.Registration) {
		var ret bool
		return ret
	}
	return *o.Registration
}

// GetRegistrationOk returns a tuple with the Registration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetRegistrationOk() (*bool, bool) {
	if o == nil || IsNil(o.Registration) {
		return nil, false
	}
	return o.Registration, true
}

// HasRegistration returns a boolean if a field has been set.
func (o *Program) HasRegistration() bool {
	if o != nil && !IsNil(o.Registration) {
		return true
	}

	return false
}

// SetRegistration gets a reference to the given bool and assigns it to the Registration field.
func (o *Program) SetRegistration(v bool) {
	o.Registration = &v
}

// GetRelatedProgram returns the RelatedProgram field value if set, zero value otherwise.
func (o *Program) GetRelatedProgram() EventVisualizationProgram {
	if o == nil || IsNil(o.RelatedProgram) {
		var ret EventVisualizationProgram
		return ret
	}
	return *o.RelatedProgram
}

// GetRelatedProgramOk returns a tuple with the RelatedProgram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetRelatedProgramOk() (*EventVisualizationProgram, bool) {
	if o == nil || IsNil(o.RelatedProgram) {
		return nil, false
	}
	return o.RelatedProgram, true
}

// HasRelatedProgram returns a boolean if a field has been set.
func (o *Program) HasRelatedProgram() bool {
	if o != nil && !IsNil(o.RelatedProgram) {
		return true
	}

	return false
}

// SetRelatedProgram gets a reference to the given EventVisualizationProgram and assigns it to the RelatedProgram field.
func (o *Program) SetRelatedProgram(v EventVisualizationProgram) {
	o.RelatedProgram = &v
}

// GetSelectEnrollmentDatesInFuture returns the SelectEnrollmentDatesInFuture field value if set, zero value otherwise.
func (o *Program) GetSelectEnrollmentDatesInFuture() bool {
	if o == nil || IsNil(o.SelectEnrollmentDatesInFuture) {
		var ret bool
		return ret
	}
	return *o.SelectEnrollmentDatesInFuture
}

// GetSelectEnrollmentDatesInFutureOk returns a tuple with the SelectEnrollmentDatesInFuture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetSelectEnrollmentDatesInFutureOk() (*bool, bool) {
	if o == nil || IsNil(o.SelectEnrollmentDatesInFuture) {
		return nil, false
	}
	return o.SelectEnrollmentDatesInFuture, true
}

// HasSelectEnrollmentDatesInFuture returns a boolean if a field has been set.
func (o *Program) HasSelectEnrollmentDatesInFuture() bool {
	if o != nil && !IsNil(o.SelectEnrollmentDatesInFuture) {
		return true
	}

	return false
}

// SetSelectEnrollmentDatesInFuture gets a reference to the given bool and assigns it to the SelectEnrollmentDatesInFuture field.
func (o *Program) SetSelectEnrollmentDatesInFuture(v bool) {
	o.SelectEnrollmentDatesInFuture = &v
}

// GetSelectIncidentDatesInFuture returns the SelectIncidentDatesInFuture field value if set, zero value otherwise.
func (o *Program) GetSelectIncidentDatesInFuture() bool {
	if o == nil || IsNil(o.SelectIncidentDatesInFuture) {
		var ret bool
		return ret
	}
	return *o.SelectIncidentDatesInFuture
}

// GetSelectIncidentDatesInFutureOk returns a tuple with the SelectIncidentDatesInFuture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetSelectIncidentDatesInFutureOk() (*bool, bool) {
	if o == nil || IsNil(o.SelectIncidentDatesInFuture) {
		return nil, false
	}
	return o.SelectIncidentDatesInFuture, true
}

// HasSelectIncidentDatesInFuture returns a boolean if a field has been set.
func (o *Program) HasSelectIncidentDatesInFuture() bool {
	if o != nil && !IsNil(o.SelectIncidentDatesInFuture) {
		return true
	}

	return false
}

// SetSelectIncidentDatesInFuture gets a reference to the given bool and assigns it to the SelectIncidentDatesInFuture field.
func (o *Program) SetSelectIncidentDatesInFuture(v bool) {
	o.SelectIncidentDatesInFuture = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *Program) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *Program) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *Program) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *Program) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *Program) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *Program) SetShortName(v string) {
	o.ShortName = &v
}

// GetSkipOffline returns the SkipOffline field value if set, zero value otherwise.
func (o *Program) GetSkipOffline() bool {
	if o == nil || IsNil(o.SkipOffline) {
		var ret bool
		return ret
	}
	return *o.SkipOffline
}

// GetSkipOfflineOk returns a tuple with the SkipOffline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetSkipOfflineOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipOffline) {
		return nil, false
	}
	return o.SkipOffline, true
}

// HasSkipOffline returns a boolean if a field has been set.
func (o *Program) HasSkipOffline() bool {
	if o != nil && !IsNil(o.SkipOffline) {
		return true
	}

	return false
}

// SetSkipOffline gets a reference to the given bool and assigns it to the SkipOffline field.
func (o *Program) SetSkipOffline(v bool) {
	o.SkipOffline = &v
}

// GetStyle returns the Style field value if set, zero value otherwise.
func (o *Program) GetStyle() ObjectStyle {
	if o == nil || IsNil(o.Style) {
		var ret ObjectStyle
		return ret
	}
	return *o.Style
}

// GetStyleOk returns a tuple with the Style field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetStyleOk() (*ObjectStyle, bool) {
	if o == nil || IsNil(o.Style) {
		return nil, false
	}
	return o.Style, true
}

// HasStyle returns a boolean if a field has been set.
func (o *Program) HasStyle() bool {
	if o != nil && !IsNil(o.Style) {
		return true
	}

	return false
}

// SetStyle gets a reference to the given ObjectStyle and assigns it to the Style field.
func (o *Program) SetStyle(v ObjectStyle) {
	o.Style = &v
}

// GetTrackedEntityType returns the TrackedEntityType field value if set, zero value otherwise.
func (o *Program) GetTrackedEntityType() MapViewTrackedEntityType {
	if o == nil || IsNil(o.TrackedEntityType) {
		var ret MapViewTrackedEntityType
		return ret
	}
	return *o.TrackedEntityType
}

// GetTrackedEntityTypeOk returns a tuple with the TrackedEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetTrackedEntityTypeOk() (*MapViewTrackedEntityType, bool) {
	if o == nil || IsNil(o.TrackedEntityType) {
		return nil, false
	}
	return o.TrackedEntityType, true
}

// HasTrackedEntityType returns a boolean if a field has been set.
func (o *Program) HasTrackedEntityType() bool {
	if o != nil && !IsNil(o.TrackedEntityType) {
		return true
	}

	return false
}

// SetTrackedEntityType gets a reference to the given MapViewTrackedEntityType and assigns it to the TrackedEntityType field.
func (o *Program) SetTrackedEntityType(v MapViewTrackedEntityType) {
	o.TrackedEntityType = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *Program) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *Program) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *Program) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUseFirstStageDuringRegistration returns the UseFirstStageDuringRegistration field value if set, zero value otherwise.
func (o *Program) GetUseFirstStageDuringRegistration() bool {
	if o == nil || IsNil(o.UseFirstStageDuringRegistration) {
		var ret bool
		return ret
	}
	return *o.UseFirstStageDuringRegistration
}

// GetUseFirstStageDuringRegistrationOk returns a tuple with the UseFirstStageDuringRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetUseFirstStageDuringRegistrationOk() (*bool, bool) {
	if o == nil || IsNil(o.UseFirstStageDuringRegistration) {
		return nil, false
	}
	return o.UseFirstStageDuringRegistration, true
}

// HasUseFirstStageDuringRegistration returns a boolean if a field has been set.
func (o *Program) HasUseFirstStageDuringRegistration() bool {
	if o != nil && !IsNil(o.UseFirstStageDuringRegistration) {
		return true
	}

	return false
}

// SetUseFirstStageDuringRegistration gets a reference to the given bool and assigns it to the UseFirstStageDuringRegistration field.
func (o *Program) SetUseFirstStageDuringRegistration(v bool) {
	o.UseFirstStageDuringRegistration = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Program) GetUser() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.User) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetUserOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *Program) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the User field.
func (o *Program) SetUser(v AggregateDataExchangeCreatedBy) {
	o.User = &v
}

// GetUserAccesses returns the UserAccesses field value if set, zero value otherwise.
func (o *Program) GetUserAccesses() []LegacyUserAccess {
	if o == nil || IsNil(o.UserAccesses) {
		var ret []LegacyUserAccess
		return ret
	}
	return o.UserAccesses
}

// GetUserAccessesOk returns a tuple with the UserAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetUserAccessesOk() ([]LegacyUserAccess, bool) {
	if o == nil || IsNil(o.UserAccesses) {
		return nil, false
	}
	return o.UserAccesses, true
}

// HasUserAccesses returns a boolean if a field has been set.
func (o *Program) HasUserAccesses() bool {
	if o != nil && !IsNil(o.UserAccesses) {
		return true
	}

	return false
}

// SetUserAccesses gets a reference to the given []LegacyUserAccess and assigns it to the UserAccesses field.
func (o *Program) SetUserAccesses(v []LegacyUserAccess) {
	o.UserAccesses = v
}

// GetUserGroupAccesses returns the UserGroupAccesses field value if set, zero value otherwise.
func (o *Program) GetUserGroupAccesses() []LegacyUserGroupAccess {
	if o == nil || IsNil(o.UserGroupAccesses) {
		var ret []LegacyUserGroupAccess
		return ret
	}
	return o.UserGroupAccesses
}

// GetUserGroupAccessesOk returns a tuple with the UserGroupAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetUserGroupAccessesOk() ([]LegacyUserGroupAccess, bool) {
	if o == nil || IsNil(o.UserGroupAccesses) {
		return nil, false
	}
	return o.UserGroupAccesses, true
}

// HasUserGroupAccesses returns a boolean if a field has been set.
func (o *Program) HasUserGroupAccesses() bool {
	if o != nil && !IsNil(o.UserGroupAccesses) {
		return true
	}

	return false
}

// SetUserGroupAccesses gets a reference to the given []LegacyUserGroupAccess and assigns it to the UserGroupAccesses field.
func (o *Program) SetUserGroupAccesses(v []LegacyUserGroupAccess) {
	o.UserGroupAccesses = v
}

// GetUserRoles returns the UserRoles field value if set, zero value otherwise.
func (o *Program) GetUserRoles() []ConfigurationSelfRegistrationRole {
	if o == nil || IsNil(o.UserRoles) {
		var ret []ConfigurationSelfRegistrationRole
		return ret
	}
	return o.UserRoles
}

// GetUserRolesOk returns a tuple with the UserRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetUserRolesOk() ([]ConfigurationSelfRegistrationRole, bool) {
	if o == nil || IsNil(o.UserRoles) {
		return nil, false
	}
	return o.UserRoles, true
}

// HasUserRoles returns a boolean if a field has been set.
func (o *Program) HasUserRoles() bool {
	if o != nil && !IsNil(o.UserRoles) {
		return true
	}

	return false
}

// SetUserRoles gets a reference to the given []ConfigurationSelfRegistrationRole and assigns it to the UserRoles field.
func (o *Program) SetUserRoles(v []ConfigurationSelfRegistrationRole) {
	o.UserRoles = v
}

// GetVersion returns the Version field value
func (o *Program) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *Program) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *Program) SetVersion(v int32) {
	o.Version = v
}

// GetWithoutRegistration returns the WithoutRegistration field value if set, zero value otherwise.
func (o *Program) GetWithoutRegistration() bool {
	if o == nil || IsNil(o.WithoutRegistration) {
		var ret bool
		return ret
	}
	return *o.WithoutRegistration
}

// GetWithoutRegistrationOk returns a tuple with the WithoutRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Program) GetWithoutRegistrationOk() (*bool, bool) {
	if o == nil || IsNil(o.WithoutRegistration) {
		return nil, false
	}
	return o.WithoutRegistration, true
}

// HasWithoutRegistration returns a boolean if a field has been set.
func (o *Program) HasWithoutRegistration() bool {
	if o != nil && !IsNil(o.WithoutRegistration) {
		return true
	}

	return false
}

// SetWithoutRegistration gets a reference to the given bool and assigns it to the WithoutRegistration field.
func (o *Program) SetWithoutRegistration(v bool) {
	o.WithoutRegistration = &v
}

func (o Program) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Program) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	toSerialize["accessLevel"] = o.AccessLevel
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.CategoryCombo) {
		toSerialize["categoryCombo"] = o.CategoryCombo
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	toSerialize["completeEventsExpiryDays"] = o.CompleteEventsExpiryDays
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DataEntryForm) {
		toSerialize["dataEntryForm"] = o.DataEntryForm
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayDescription) {
		toSerialize["displayDescription"] = o.DisplayDescription
	}
	if !IsNil(o.DisplayEnrollmentDateLabel) {
		toSerialize["displayEnrollmentDateLabel"] = o.DisplayEnrollmentDateLabel
	}
	if !IsNil(o.DisplayFormName) {
		toSerialize["displayFormName"] = o.DisplayFormName
	}
	if !IsNil(o.DisplayFrontPageList) {
		toSerialize["displayFrontPageList"] = o.DisplayFrontPageList
	}
	if !IsNil(o.DisplayIncidentDate) {
		toSerialize["displayIncidentDate"] = o.DisplayIncidentDate
	}
	if !IsNil(o.DisplayIncidentDateLabel) {
		toSerialize["displayIncidentDateLabel"] = o.DisplayIncidentDateLabel
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplayShortName) {
		toSerialize["displayShortName"] = o.DisplayShortName
	}
	if !IsNil(o.EnrollmentDateLabel) {
		toSerialize["enrollmentDateLabel"] = o.EnrollmentDateLabel
	}
	toSerialize["expiryDays"] = o.ExpiryDays
	if !IsNil(o.ExpiryPeriodType) {
		toSerialize["expiryPeriodType"] = o.ExpiryPeriodType
	}
	if !IsNil(o.ExternalAccess) {
		toSerialize["externalAccess"] = o.ExternalAccess
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	toSerialize["featureType"] = o.FeatureType
	if !IsNil(o.FormName) {
		toSerialize["formName"] = o.FormName
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IgnoreOverdueEvents) {
		toSerialize["ignoreOverdueEvents"] = o.IgnoreOverdueEvents
	}
	if !IsNil(o.IncidentDateLabel) {
		toSerialize["incidentDateLabel"] = o.IncidentDateLabel
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	toSerialize["maxTeiCountToReturn"] = o.MaxTeiCountToReturn
	toSerialize["minAttributesRequiredToSearch"] = o.MinAttributesRequiredToSearch
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NotificationTemplates) {
		toSerialize["notificationTemplates"] = o.NotificationTemplates
	}
	if !IsNil(o.OnlyEnrollOnce) {
		toSerialize["onlyEnrollOnce"] = o.OnlyEnrollOnce
	}
	toSerialize["openDaysAfterCoEndDate"] = o.OpenDaysAfterCoEndDate
	if !IsNil(o.OrganisationUnits) {
		toSerialize["organisationUnits"] = o.OrganisationUnits
	}
	if !IsNil(o.ProgramIndicators) {
		toSerialize["programIndicators"] = o.ProgramIndicators
	}
	if !IsNil(o.ProgramRuleVariables) {
		toSerialize["programRuleVariables"] = o.ProgramRuleVariables
	}
	if !IsNil(o.ProgramSections) {
		toSerialize["programSections"] = o.ProgramSections
	}
	if !IsNil(o.ProgramStages) {
		toSerialize["programStages"] = o.ProgramStages
	}
	if !IsNil(o.ProgramTrackedEntityAttributes) {
		toSerialize["programTrackedEntityAttributes"] = o.ProgramTrackedEntityAttributes
	}
	toSerialize["programType"] = o.ProgramType
	if !IsNil(o.PublicAccess) {
		toSerialize["publicAccess"] = o.PublicAccess
	}
	if !IsNil(o.Registration) {
		toSerialize["registration"] = o.Registration
	}
	if !IsNil(o.RelatedProgram) {
		toSerialize["relatedProgram"] = o.RelatedProgram
	}
	if !IsNil(o.SelectEnrollmentDatesInFuture) {
		toSerialize["selectEnrollmentDatesInFuture"] = o.SelectEnrollmentDatesInFuture
	}
	if !IsNil(o.SelectIncidentDatesInFuture) {
		toSerialize["selectIncidentDatesInFuture"] = o.SelectIncidentDatesInFuture
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.SkipOffline) {
		toSerialize["skipOffline"] = o.SkipOffline
	}
	if !IsNil(o.Style) {
		toSerialize["style"] = o.Style
	}
	if !IsNil(o.TrackedEntityType) {
		toSerialize["trackedEntityType"] = o.TrackedEntityType
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.UseFirstStageDuringRegistration) {
		toSerialize["useFirstStageDuringRegistration"] = o.UseFirstStageDuringRegistration
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserAccesses) {
		toSerialize["userAccesses"] = o.UserAccesses
	}
	if !IsNil(o.UserGroupAccesses) {
		toSerialize["userGroupAccesses"] = o.UserGroupAccesses
	}
	if !IsNil(o.UserRoles) {
		toSerialize["userRoles"] = o.UserRoles
	}
	toSerialize["version"] = o.Version
	if !IsNil(o.WithoutRegistration) {
		toSerialize["withoutRegistration"] = o.WithoutRegistration
	}
	return toSerialize, nil
}

func (o *Program) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accessLevel",
		"completeEventsExpiryDays",
		"expiryDays",
		"featureType",
		"maxTeiCountToReturn",
		"minAttributesRequiredToSearch",
		"openDaysAfterCoEndDate",
		"programType",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgram := _Program{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgram)

	if err != nil {
		return err
	}

	*o = Program(varProgram)

	return err
}

type NullableProgram struct {
	value *Program
	isSet bool
}

func (v NullableProgram) Get() *Program {
	return v.value
}

func (v *NullableProgram) Set(val *Program) {
	v.value = val
	v.isSet = true
}

func (v NullableProgram) IsSet() bool {
	return v.isSet
}

func (v *NullableProgram) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgram(val *Program) *NullableProgram {
	return &NullableProgram{value: val, isSet: true}
}

func (v NullableProgram) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgram) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
