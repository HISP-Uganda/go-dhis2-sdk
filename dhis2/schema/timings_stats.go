/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the TimingsStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimingsStats{}

// TimingsStats struct for TimingsStats
type TimingsStats struct {
	Timers *map[string]string `json:"timers,omitempty"`
}

// NewTimingsStats instantiates a new TimingsStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimingsStats() *TimingsStats {
	this := TimingsStats{}
	return &this
}

// NewTimingsStatsWithDefaults instantiates a new TimingsStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimingsStatsWithDefaults() *TimingsStats {
	this := TimingsStats{}
	return &this
}

// GetTimers returns the Timers field value if set, zero value otherwise.
func (o *TimingsStats) GetTimers() map[string]string {
	if o == nil || IsNil(o.Timers) {
		var ret map[string]string
		return ret
	}
	return *o.Timers
}

// GetTimersOk returns a tuple with the Timers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimingsStats) GetTimersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Timers) {
		return nil, false
	}
	return o.Timers, true
}

// HasTimers returns a boolean if a field has been set.
func (o *TimingsStats) HasTimers() bool {
	if o != nil && !IsNil(o.Timers) {
		return true
	}

	return false
}

// SetTimers gets a reference to the given map[string]string and assigns it to the Timers field.
func (o *TimingsStats) SetTimers(v map[string]string) {
	o.Timers = &v
}

func (o TimingsStats) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimingsStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timers) {
		toSerialize["timers"] = o.Timers
	}
	return toSerialize, nil
}

type NullableTimingsStats struct {
	value *TimingsStats
	isSet bool
}

func (v NullableTimingsStats) Get() *TimingsStats {
	return v.value
}

func (v *NullableTimingsStats) Set(val *TimingsStats) {
	v.value = val
	v.isSet = true
}

func (v NullableTimingsStats) IsSet() bool {
	return v.isSet
}

func (v *NullableTimingsStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimingsStats(val *TimingsStats) *NullableTimingsStats {
	return &NullableTimingsStats{value: val, isSet: true}
}

func (v NullableTimingsStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimingsStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
