/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// OutlierDetectionAlgorithm the model 'OutlierDetectionAlgorithm'
type OutlierDetectionAlgorithm string

// List of OutlierDetectionAlgorithm
const (
	OUTLIERDETECTIONALGORITHM_Z_SCORE     OutlierDetectionAlgorithm = "Z_SCORE"
	OUTLIERDETECTIONALGORITHM_MIN_MAX     OutlierDetectionAlgorithm = "MIN_MAX"
	OUTLIERDETECTIONALGORITHM_MOD_Z_SCORE OutlierDetectionAlgorithm = "MOD_Z_SCORE"
)

// All allowed values of OutlierDetectionAlgorithm enum
var AllowedOutlierDetectionAlgorithmEnumValues = []OutlierDetectionAlgorithm{
	"Z_SCORE",
	"MIN_MAX",
	"MOD_Z_SCORE",
}

func (v *OutlierDetectionAlgorithm) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OutlierDetectionAlgorithm(value)
	for _, existing := range AllowedOutlierDetectionAlgorithmEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OutlierDetectionAlgorithm", value)
}

// NewOutlierDetectionAlgorithmFromValue returns a pointer to a valid OutlierDetectionAlgorithm
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOutlierDetectionAlgorithmFromValue(v string) (*OutlierDetectionAlgorithm, error) {
	ev := OutlierDetectionAlgorithm(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OutlierDetectionAlgorithm: valid values are %v", v, AllowedOutlierDetectionAlgorithmEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OutlierDetectionAlgorithm) IsValid() bool {
	for _, existing := range AllowedOutlierDetectionAlgorithmEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OutlierDetectionAlgorithm value
func (v OutlierDetectionAlgorithm) Ptr() *OutlierDetectionAlgorithm {
	return &v
}

type NullableOutlierDetectionAlgorithm struct {
	value *OutlierDetectionAlgorithm
	isSet bool
}

func (v NullableOutlierDetectionAlgorithm) Get() *OutlierDetectionAlgorithm {
	return v.value
}

func (v *NullableOutlierDetectionAlgorithm) Set(val *OutlierDetectionAlgorithm) {
	v.value = val
	v.isSet = true
}

func (v NullableOutlierDetectionAlgorithm) IsSet() bool {
	return v.isSet
}

func (v *NullableOutlierDetectionAlgorithm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutlierDetectionAlgorithm(val *OutlierDetectionAlgorithm) *NullableOutlierDetectionAlgorithm {
	return &NullableOutlierDetectionAlgorithm{value: val, isSet: true}
}

func (v NullableOutlierDetectionAlgorithm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutlierDetectionAlgorithm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
