/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the EmailParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailParams{}

// EmailParams struct for EmailParams
type EmailParams struct {
	Recipients []AggregateDataExchangeParamsCreatedBy `json:"recipients,omitempty"`
	Sender     *UserParams                            `json:"sender,omitempty"`
	Subject    *string                                `json:"subject,omitempty"`
	Text       *string                                `json:"text,omitempty"`
}

// NewEmailParams instantiates a new EmailParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailParams() *EmailParams {
	this := EmailParams{}
	return &this
}

// NewEmailParamsWithDefaults instantiates a new EmailParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailParamsWithDefaults() *EmailParams {
	this := EmailParams{}
	return &this
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *EmailParams) GetRecipients() []AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.Recipients) {
		var ret []AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailParams) GetRecipientsOk() ([]AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *EmailParams) HasRecipients() bool {
	if o != nil && !IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []AggregateDataExchangeParamsCreatedBy and assigns it to the Recipients field.
func (o *EmailParams) SetRecipients(v []AggregateDataExchangeParamsCreatedBy) {
	o.Recipients = v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *EmailParams) GetSender() UserParams {
	if o == nil || IsNil(o.Sender) {
		var ret UserParams
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailParams) GetSenderOk() (*UserParams, bool) {
	if o == nil || IsNil(o.Sender) {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *EmailParams) HasSender() bool {
	if o != nil && !IsNil(o.Sender) {
		return true
	}

	return false
}

// SetSender gets a reference to the given UserParams and assigns it to the Sender field.
func (o *EmailParams) SetSender(v UserParams) {
	o.Sender = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *EmailParams) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailParams) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *EmailParams) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *EmailParams) SetSubject(v string) {
	o.Subject = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *EmailParams) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailParams) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *EmailParams) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *EmailParams) SetText(v string) {
	o.Text = &v
}

func (o EmailParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	if !IsNil(o.Sender) {
		toSerialize["sender"] = o.Sender
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	return toSerialize, nil
}

type NullableEmailParams struct {
	value *EmailParams
	isSet bool
}

func (v NullableEmailParams) Get() *EmailParams {
	return v.value
}

func (v *NullableEmailParams) Set(val *EmailParams) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailParams) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailParams(val *EmailParams) *NullableEmailParams {
	return &NullableEmailParams{value: val, isSet: true}
}

func (v NullableEmailParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
