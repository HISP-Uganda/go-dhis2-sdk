/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// ApiTokenPropertyNames the model 'ApiTokenPropertyNames'
type ApiTokenPropertyNames string

// List of ApiTokenPropertyNames
const (
	APITOKENPROPERTYNAMES_ACCESS           ApiTokenPropertyNames = "access"
	APITOKENPROPERTYNAMES_ATTRIBUTE_VALUES ApiTokenPropertyNames = "attributeValues"
	APITOKENPROPERTYNAMES_ATTRIBUTES       ApiTokenPropertyNames = "attributes"
	APITOKENPROPERTYNAMES_CODE             ApiTokenPropertyNames = "code"
	APITOKENPROPERTYNAMES_CREATED          ApiTokenPropertyNames = "created"
	APITOKENPROPERTYNAMES_CREATED_BY       ApiTokenPropertyNames = "createdBy"
	APITOKENPROPERTYNAMES_DISPLAY_NAME     ApiTokenPropertyNames = "displayName"
	APITOKENPROPERTYNAMES_EXPIRE           ApiTokenPropertyNames = "expire"
	APITOKENPROPERTYNAMES_FAVORITE         ApiTokenPropertyNames = "favorite"
	APITOKENPROPERTYNAMES_FAVORITES        ApiTokenPropertyNames = "favorites"
	APITOKENPROPERTYNAMES_HREF             ApiTokenPropertyNames = "href"
	APITOKENPROPERTYNAMES_ID               ApiTokenPropertyNames = "id"
	APITOKENPROPERTYNAMES_LAST_UPDATED     ApiTokenPropertyNames = "lastUpdated"
	APITOKENPROPERTYNAMES_LAST_UPDATED_BY  ApiTokenPropertyNames = "lastUpdatedBy"
	APITOKENPROPERTYNAMES_NAME             ApiTokenPropertyNames = "name"
	APITOKENPROPERTYNAMES_SHARING          ApiTokenPropertyNames = "sharing"
	APITOKENPROPERTYNAMES_TRANSLATIONS     ApiTokenPropertyNames = "translations"
	APITOKENPROPERTYNAMES_TYPE             ApiTokenPropertyNames = "type"
	APITOKENPROPERTYNAMES_VERSION          ApiTokenPropertyNames = "version"
)

// All allowed values of ApiTokenPropertyNames enum
var AllowedApiTokenPropertyNamesEnumValues = []ApiTokenPropertyNames{
	"access",
	"attributeValues",
	"attributes",
	"code",
	"created",
	"createdBy",
	"displayName",
	"expire",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"sharing",
	"translations",
	"type",
	"version",
}

func (v *ApiTokenPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ApiTokenPropertyNames(value)
	for _, existing := range AllowedApiTokenPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ApiTokenPropertyNames", value)
}

// NewApiTokenPropertyNamesFromValue returns a pointer to a valid ApiTokenPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewApiTokenPropertyNamesFromValue(v string) (*ApiTokenPropertyNames, error) {
	ev := ApiTokenPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ApiTokenPropertyNames: valid values are %v", v, AllowedApiTokenPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ApiTokenPropertyNames) IsValid() bool {
	for _, existing := range AllowedApiTokenPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ApiTokenPropertyNames value
func (v ApiTokenPropertyNames) Ptr() *ApiTokenPropertyNames {
	return &v
}

type NullableApiTokenPropertyNames struct {
	value *ApiTokenPropertyNames
	isSet bool
}

func (v NullableApiTokenPropertyNames) Get() *ApiTokenPropertyNames {
	return v.value
}

func (v *NullableApiTokenPropertyNames) Set(val *ApiTokenPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableApiTokenPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableApiTokenPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiTokenPropertyNames(val *ApiTokenPropertyNames) *NullableApiTokenPropertyNames {
	return &NullableApiTokenPropertyNames{value: val, isSet: true}
}

func (v NullableApiTokenPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiTokenPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
