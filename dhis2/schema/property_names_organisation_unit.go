/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesOrganisationUnit the model 'PropertyNamesOrganisationUnit'
type PropertyNamesOrganisationUnit string

// List of PropertyNames_OrganisationUnit
const (
	PROPERTYNAMESORGANISATIONUNIT_ACCESS                   PropertyNamesOrganisationUnit = "access"
	PROPERTYNAMESORGANISATIONUNIT_ADDRESS                  PropertyNamesOrganisationUnit = "address"
	PROPERTYNAMESORGANISATIONUNIT_AGGREGATION_TYPE         PropertyNamesOrganisationUnit = "aggregationType"
	PROPERTYNAMESORGANISATIONUNIT_ANCESTORS                PropertyNamesOrganisationUnit = "ancestors"
	PROPERTYNAMESORGANISATIONUNIT_ATTRIBUTE_VALUES         PropertyNamesOrganisationUnit = "attributeValues"
	PROPERTYNAMESORGANISATIONUNIT_CHILDREN                 PropertyNamesOrganisationUnit = "children"
	PROPERTYNAMESORGANISATIONUNIT_CLOSED_DATE              PropertyNamesOrganisationUnit = "closedDate"
	PROPERTYNAMESORGANISATIONUNIT_CODE                     PropertyNamesOrganisationUnit = "code"
	PROPERTYNAMESORGANISATIONUNIT_COMMENT                  PropertyNamesOrganisationUnit = "comment"
	PROPERTYNAMESORGANISATIONUNIT_CONTACT_PERSON           PropertyNamesOrganisationUnit = "contactPerson"
	PROPERTYNAMESORGANISATIONUNIT_CREATED                  PropertyNamesOrganisationUnit = "created"
	PROPERTYNAMESORGANISATIONUNIT_CREATED_BY               PropertyNamesOrganisationUnit = "createdBy"
	PROPERTYNAMESORGANISATIONUNIT_DATA_SETS                PropertyNamesOrganisationUnit = "dataSets"
	PROPERTYNAMESORGANISATIONUNIT_DESCRIPTION              PropertyNamesOrganisationUnit = "description"
	PROPERTYNAMESORGANISATIONUNIT_DIMENSION_ITEM           PropertyNamesOrganisationUnit = "dimensionItem"
	PROPERTYNAMESORGANISATIONUNIT_DISPLAY_DESCRIPTION      PropertyNamesOrganisationUnit = "displayDescription"
	PROPERTYNAMESORGANISATIONUNIT_DISPLAY_FORM_NAME        PropertyNamesOrganisationUnit = "displayFormName"
	PROPERTYNAMESORGANISATIONUNIT_DISPLAY_NAME             PropertyNamesOrganisationUnit = "displayName"
	PROPERTYNAMESORGANISATIONUNIT_DISPLAY_SHORT_NAME       PropertyNamesOrganisationUnit = "displayShortName"
	PROPERTYNAMESORGANISATIONUNIT_EMAIL                    PropertyNamesOrganisationUnit = "email"
	PROPERTYNAMESORGANISATIONUNIT_EXTERNAL_ACCESS          PropertyNamesOrganisationUnit = "externalAccess"
	PROPERTYNAMESORGANISATIONUNIT_FAVORITE                 PropertyNamesOrganisationUnit = "favorite"
	PROPERTYNAMESORGANISATIONUNIT_FAVORITES                PropertyNamesOrganisationUnit = "favorites"
	PROPERTYNAMESORGANISATIONUNIT_FORM_NAME                PropertyNamesOrganisationUnit = "formName"
	PROPERTYNAMESORGANISATIONUNIT_GEOMETRY                 PropertyNamesOrganisationUnit = "geometry"
	PROPERTYNAMESORGANISATIONUNIT_HREF                     PropertyNamesOrganisationUnit = "href"
	PROPERTYNAMESORGANISATIONUNIT_ID                       PropertyNamesOrganisationUnit = "id"
	PROPERTYNAMESORGANISATIONUNIT_IMAGE                    PropertyNamesOrganisationUnit = "image"
	PROPERTYNAMESORGANISATIONUNIT_LAST_UPDATED             PropertyNamesOrganisationUnit = "lastUpdated"
	PROPERTYNAMESORGANISATIONUNIT_LAST_UPDATED_BY          PropertyNamesOrganisationUnit = "lastUpdatedBy"
	PROPERTYNAMESORGANISATIONUNIT_LEAF                     PropertyNamesOrganisationUnit = "leaf"
	PROPERTYNAMESORGANISATIONUNIT_LEGEND_SET               PropertyNamesOrganisationUnit = "legendSet"
	PROPERTYNAMESORGANISATIONUNIT_LEGEND_SETS              PropertyNamesOrganisationUnit = "legendSets"
	PROPERTYNAMESORGANISATIONUNIT_LEVEL                    PropertyNamesOrganisationUnit = "level"
	PROPERTYNAMESORGANISATIONUNIT_MEMBER_COUNT             PropertyNamesOrganisationUnit = "memberCount"
	PROPERTYNAMESORGANISATIONUNIT_NAME                     PropertyNamesOrganisationUnit = "name"
	PROPERTYNAMESORGANISATIONUNIT_OPENING_DATE             PropertyNamesOrganisationUnit = "openingDate"
	PROPERTYNAMESORGANISATIONUNIT_ORGANISATION_UNIT_GROUPS PropertyNamesOrganisationUnit = "organisationUnitGroups"
	PROPERTYNAMESORGANISATIONUNIT_PARENT                   PropertyNamesOrganisationUnit = "parent"
	PROPERTYNAMESORGANISATIONUNIT_PATH                     PropertyNamesOrganisationUnit = "path"
	PROPERTYNAMESORGANISATIONUNIT_PHONE_NUMBER             PropertyNamesOrganisationUnit = "phoneNumber"
	PROPERTYNAMESORGANISATIONUNIT_PROGRAMS                 PropertyNamesOrganisationUnit = "programs"
	PROPERTYNAMESORGANISATIONUNIT_PUBLIC_ACCESS            PropertyNamesOrganisationUnit = "publicAccess"
	PROPERTYNAMESORGANISATIONUNIT_QUERY_MODS               PropertyNamesOrganisationUnit = "queryMods"
	PROPERTYNAMESORGANISATIONUNIT_SHARING                  PropertyNamesOrganisationUnit = "sharing"
	PROPERTYNAMESORGANISATIONUNIT_SHORT_NAME               PropertyNamesOrganisationUnit = "shortName"
	PROPERTYNAMESORGANISATIONUNIT_TRANSLATIONS             PropertyNamesOrganisationUnit = "translations"
	PROPERTYNAMESORGANISATIONUNIT_TYPE                     PropertyNamesOrganisationUnit = "type"
	PROPERTYNAMESORGANISATIONUNIT_URL                      PropertyNamesOrganisationUnit = "url"
	PROPERTYNAMESORGANISATIONUNIT_USER                     PropertyNamesOrganisationUnit = "user"
	PROPERTYNAMESORGANISATIONUNIT_USER_ACCESSES            PropertyNamesOrganisationUnit = "userAccesses"
	PROPERTYNAMESORGANISATIONUNIT_USER_GROUP_ACCESSES      PropertyNamesOrganisationUnit = "userGroupAccesses"
	PROPERTYNAMESORGANISATIONUNIT_USERS                    PropertyNamesOrganisationUnit = "users"
)

// All allowed values of PropertyNamesOrganisationUnit enum
var AllowedPropertyNamesOrganisationUnitEnumValues = []PropertyNamesOrganisationUnit{
	"access",
	"address",
	"aggregationType",
	"ancestors",
	"attributeValues",
	"children",
	"closedDate",
	"code",
	"comment",
	"contactPerson",
	"created",
	"createdBy",
	"dataSets",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"email",
	"externalAccess",
	"favorite",
	"favorites",
	"formName",
	"geometry",
	"href",
	"id",
	"image",
	"lastUpdated",
	"lastUpdatedBy",
	"leaf",
	"legendSet",
	"legendSets",
	"level",
	"memberCount",
	"name",
	"openingDate",
	"organisationUnitGroups",
	"parent",
	"path",
	"phoneNumber",
	"programs",
	"publicAccess",
	"queryMods",
	"sharing",
	"shortName",
	"translations",
	"type",
	"url",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"users",
}

func (v *PropertyNamesOrganisationUnit) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesOrganisationUnit(value)
	for _, existing := range AllowedPropertyNamesOrganisationUnitEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesOrganisationUnit", value)
}

// NewPropertyNamesOrganisationUnitFromValue returns a pointer to a valid PropertyNamesOrganisationUnit
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesOrganisationUnitFromValue(v string) (*PropertyNamesOrganisationUnit, error) {
	ev := PropertyNamesOrganisationUnit(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesOrganisationUnit: valid values are %v", v, AllowedPropertyNamesOrganisationUnitEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesOrganisationUnit) IsValid() bool {
	for _, existing := range AllowedPropertyNamesOrganisationUnitEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_OrganisationUnit value
func (v PropertyNamesOrganisationUnit) Ptr() *PropertyNamesOrganisationUnit {
	return &v
}

type NullablePropertyNamesOrganisationUnit struct {
	value *PropertyNamesOrganisationUnit
	isSet bool
}

func (v NullablePropertyNamesOrganisationUnit) Get() *PropertyNamesOrganisationUnit {
	return v.value
}

func (v *NullablePropertyNamesOrganisationUnit) Set(val *PropertyNamesOrganisationUnit) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesOrganisationUnit) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesOrganisationUnit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesOrganisationUnit(val *PropertyNamesOrganisationUnit) *NullablePropertyNamesOrganisationUnit {
	return &NullablePropertyNamesOrganisationUnit{value: val, isSet: true}
}

func (v NullablePropertyNamesOrganisationUnit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesOrganisationUnit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
