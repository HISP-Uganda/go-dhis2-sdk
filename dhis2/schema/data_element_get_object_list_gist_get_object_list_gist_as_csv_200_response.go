/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// DataElementGetObjectListGistGetObjectListGistAsCsv200Response - struct for DataElementGetObjectListGistGetObjectListGistAsCsv200Response
type DataElementGetObjectListGistGetObjectListGistAsCsv200Response struct {
	DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfDataElement                                                 *[]DataElement
}

// DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsDataElementGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in DataElementGetObjectListGistGetObjectListGistAsCsv200Response
func DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsDataElementGetObjectListGistGetObjectListGistAsCsv200Response(v *DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) DataElementGetObjectListGistGetObjectListGistAsCsv200Response {
	return DataElementGetObjectListGistGetObjectListGistAsCsv200Response{
		DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []DataElementAsDataElementGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []DataElement wrapped in DataElementGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfDataElementAsDataElementGetObjectListGistGetObjectListGistAsCsv200Response(v *[]DataElement) DataElementGetObjectListGistGetObjectListGistAsCsv200Response {
	return DataElementGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfDataElement: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *DataElementGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonDataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonDataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfDataElement
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDataElement)
	if err == nil {
		jsonArrayOfDataElement, _ := json.Marshal(dst.ArrayOfDataElement)
		if string(jsonArrayOfDataElement) == "{}" { // empty struct
			dst.ArrayOfDataElement = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDataElement = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfDataElement = nil

		return fmt.Errorf("data matches more than one schema in oneOf(DataElementGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(DataElementGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src DataElementGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfDataElement != nil {
		return json.Marshal(&src.ArrayOfDataElement)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *DataElementGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.DataElementGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfDataElement != nil {
		return obj.ArrayOfDataElement
	}

	// all schemas are nil
	return nil
}

type NullableDataElementGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *DataElementGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableDataElementGetObjectListGistGetObjectListGistAsCsv200Response) Get() *DataElementGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableDataElementGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *DataElementGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDataElementGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDataElementGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataElementGetObjectListGistGetObjectListGistAsCsv200Response(val *DataElementGetObjectListGistGetObjectListGistAsCsv200Response) *NullableDataElementGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableDataElementGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableDataElementGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataElementGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
