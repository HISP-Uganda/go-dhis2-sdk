/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SourceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceRequest{}

// SourceRequest struct for SourceRequest
type SourceRequest struct {
	AggregationType           AggregationType `json:"aggregationType"`
	Dx                        []string        `json:"dx,omitempty"`
	Filters                   []Filter        `json:"filters,omitempty"`
	InputIdScheme             *string         `json:"inputIdScheme,omitempty"`
	Name                      *string         `json:"name,omitempty"`
	Ou                        []string        `json:"ou,omitempty"`
	OutputDataElementIdScheme *string         `json:"outputDataElementIdScheme,omitempty"`
	OutputDataItemIdScheme    *string         `json:"outputDataItemIdScheme,omitempty"`
	OutputIdScheme            *string         `json:"outputIdScheme,omitempty"`
	OutputOrgUnitIdScheme     *string         `json:"outputOrgUnitIdScheme,omitempty"`
	Pe                        []string        `json:"pe,omitempty"`
	Visualization             *string         `json:"visualization,omitempty"`
}

type _SourceRequest SourceRequest

// NewSourceRequest instantiates a new SourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceRequest(aggregationType AggregationType) *SourceRequest {
	this := SourceRequest{}
	this.AggregationType = aggregationType
	return &this
}

// NewSourceRequestWithDefaults instantiates a new SourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceRequestWithDefaults() *SourceRequest {
	this := SourceRequest{}
	return &this
}

// GetAggregationType returns the AggregationType field value
func (o *SourceRequest) GetAggregationType() AggregationType {
	if o == nil {
		var ret AggregationType
		return ret
	}

	return o.AggregationType
}

// GetAggregationTypeOk returns a tuple with the AggregationType field value
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetAggregationTypeOk() (*AggregationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationType, true
}

// SetAggregationType sets field value
func (o *SourceRequest) SetAggregationType(v AggregationType) {
	o.AggregationType = v
}

// GetDx returns the Dx field value if set, zero value otherwise.
func (o *SourceRequest) GetDx() []string {
	if o == nil || IsNil(o.Dx) {
		var ret []string
		return ret
	}
	return o.Dx
}

// GetDxOk returns a tuple with the Dx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetDxOk() ([]string, bool) {
	if o == nil || IsNil(o.Dx) {
		return nil, false
	}
	return o.Dx, true
}

// HasDx returns a boolean if a field has been set.
func (o *SourceRequest) HasDx() bool {
	if o != nil && !IsNil(o.Dx) {
		return true
	}

	return false
}

// SetDx gets a reference to the given []string and assigns it to the Dx field.
func (o *SourceRequest) SetDx(v []string) {
	o.Dx = v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *SourceRequest) GetFilters() []Filter {
	if o == nil || IsNil(o.Filters) {
		var ret []Filter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetFiltersOk() ([]Filter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *SourceRequest) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []Filter and assigns it to the Filters field.
func (o *SourceRequest) SetFilters(v []Filter) {
	o.Filters = v
}

// GetInputIdScheme returns the InputIdScheme field value if set, zero value otherwise.
func (o *SourceRequest) GetInputIdScheme() string {
	if o == nil || IsNil(o.InputIdScheme) {
		var ret string
		return ret
	}
	return *o.InputIdScheme
}

// GetInputIdSchemeOk returns a tuple with the InputIdScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetInputIdSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.InputIdScheme) {
		return nil, false
	}
	return o.InputIdScheme, true
}

// HasInputIdScheme returns a boolean if a field has been set.
func (o *SourceRequest) HasInputIdScheme() bool {
	if o != nil && !IsNil(o.InputIdScheme) {
		return true
	}

	return false
}

// SetInputIdScheme gets a reference to the given string and assigns it to the InputIdScheme field.
func (o *SourceRequest) SetInputIdScheme(v string) {
	o.InputIdScheme = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SourceRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SourceRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SourceRequest) SetName(v string) {
	o.Name = &v
}

// GetOu returns the Ou field value if set, zero value otherwise.
func (o *SourceRequest) GetOu() []string {
	if o == nil || IsNil(o.Ou) {
		var ret []string
		return ret
	}
	return o.Ou
}

// GetOuOk returns a tuple with the Ou field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetOuOk() ([]string, bool) {
	if o == nil || IsNil(o.Ou) {
		return nil, false
	}
	return o.Ou, true
}

// HasOu returns a boolean if a field has been set.
func (o *SourceRequest) HasOu() bool {
	if o != nil && !IsNil(o.Ou) {
		return true
	}

	return false
}

// SetOu gets a reference to the given []string and assigns it to the Ou field.
func (o *SourceRequest) SetOu(v []string) {
	o.Ou = v
}

// GetOutputDataElementIdScheme returns the OutputDataElementIdScheme field value if set, zero value otherwise.
func (o *SourceRequest) GetOutputDataElementIdScheme() string {
	if o == nil || IsNil(o.OutputDataElementIdScheme) {
		var ret string
		return ret
	}
	return *o.OutputDataElementIdScheme
}

// GetOutputDataElementIdSchemeOk returns a tuple with the OutputDataElementIdScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetOutputDataElementIdSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.OutputDataElementIdScheme) {
		return nil, false
	}
	return o.OutputDataElementIdScheme, true
}

// HasOutputDataElementIdScheme returns a boolean if a field has been set.
func (o *SourceRequest) HasOutputDataElementIdScheme() bool {
	if o != nil && !IsNil(o.OutputDataElementIdScheme) {
		return true
	}

	return false
}

// SetOutputDataElementIdScheme gets a reference to the given string and assigns it to the OutputDataElementIdScheme field.
func (o *SourceRequest) SetOutputDataElementIdScheme(v string) {
	o.OutputDataElementIdScheme = &v
}

// GetOutputDataItemIdScheme returns the OutputDataItemIdScheme field value if set, zero value otherwise.
func (o *SourceRequest) GetOutputDataItemIdScheme() string {
	if o == nil || IsNil(o.OutputDataItemIdScheme) {
		var ret string
		return ret
	}
	return *o.OutputDataItemIdScheme
}

// GetOutputDataItemIdSchemeOk returns a tuple with the OutputDataItemIdScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetOutputDataItemIdSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.OutputDataItemIdScheme) {
		return nil, false
	}
	return o.OutputDataItemIdScheme, true
}

// HasOutputDataItemIdScheme returns a boolean if a field has been set.
func (o *SourceRequest) HasOutputDataItemIdScheme() bool {
	if o != nil && !IsNil(o.OutputDataItemIdScheme) {
		return true
	}

	return false
}

// SetOutputDataItemIdScheme gets a reference to the given string and assigns it to the OutputDataItemIdScheme field.
func (o *SourceRequest) SetOutputDataItemIdScheme(v string) {
	o.OutputDataItemIdScheme = &v
}

// GetOutputIdScheme returns the OutputIdScheme field value if set, zero value otherwise.
func (o *SourceRequest) GetOutputIdScheme() string {
	if o == nil || IsNil(o.OutputIdScheme) {
		var ret string
		return ret
	}
	return *o.OutputIdScheme
}

// GetOutputIdSchemeOk returns a tuple with the OutputIdScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetOutputIdSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.OutputIdScheme) {
		return nil, false
	}
	return o.OutputIdScheme, true
}

// HasOutputIdScheme returns a boolean if a field has been set.
func (o *SourceRequest) HasOutputIdScheme() bool {
	if o != nil && !IsNil(o.OutputIdScheme) {
		return true
	}

	return false
}

// SetOutputIdScheme gets a reference to the given string and assigns it to the OutputIdScheme field.
func (o *SourceRequest) SetOutputIdScheme(v string) {
	o.OutputIdScheme = &v
}

// GetOutputOrgUnitIdScheme returns the OutputOrgUnitIdScheme field value if set, zero value otherwise.
func (o *SourceRequest) GetOutputOrgUnitIdScheme() string {
	if o == nil || IsNil(o.OutputOrgUnitIdScheme) {
		var ret string
		return ret
	}
	return *o.OutputOrgUnitIdScheme
}

// GetOutputOrgUnitIdSchemeOk returns a tuple with the OutputOrgUnitIdScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetOutputOrgUnitIdSchemeOk() (*string, bool) {
	if o == nil || IsNil(o.OutputOrgUnitIdScheme) {
		return nil, false
	}
	return o.OutputOrgUnitIdScheme, true
}

// HasOutputOrgUnitIdScheme returns a boolean if a field has been set.
func (o *SourceRequest) HasOutputOrgUnitIdScheme() bool {
	if o != nil && !IsNil(o.OutputOrgUnitIdScheme) {
		return true
	}

	return false
}

// SetOutputOrgUnitIdScheme gets a reference to the given string and assigns it to the OutputOrgUnitIdScheme field.
func (o *SourceRequest) SetOutputOrgUnitIdScheme(v string) {
	o.OutputOrgUnitIdScheme = &v
}

// GetPe returns the Pe field value if set, zero value otherwise.
func (o *SourceRequest) GetPe() []string {
	if o == nil || IsNil(o.Pe) {
		var ret []string
		return ret
	}
	return o.Pe
}

// GetPeOk returns a tuple with the Pe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetPeOk() ([]string, bool) {
	if o == nil || IsNil(o.Pe) {
		return nil, false
	}
	return o.Pe, true
}

// HasPe returns a boolean if a field has been set.
func (o *SourceRequest) HasPe() bool {
	if o != nil && !IsNil(o.Pe) {
		return true
	}

	return false
}

// SetPe gets a reference to the given []string and assigns it to the Pe field.
func (o *SourceRequest) SetPe(v []string) {
	o.Pe = v
}

// GetVisualization returns the Visualization field value if set, zero value otherwise.
func (o *SourceRequest) GetVisualization() string {
	if o == nil || IsNil(o.Visualization) {
		var ret string
		return ret
	}
	return *o.Visualization
}

// GetVisualizationOk returns a tuple with the Visualization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceRequest) GetVisualizationOk() (*string, bool) {
	if o == nil || IsNil(o.Visualization) {
		return nil, false
	}
	return o.Visualization, true
}

// HasVisualization returns a boolean if a field has been set.
func (o *SourceRequest) HasVisualization() bool {
	if o != nil && !IsNil(o.Visualization) {
		return true
	}

	return false
}

// SetVisualization gets a reference to the given string and assigns it to the Visualization field.
func (o *SourceRequest) SetVisualization(v string) {
	o.Visualization = &v
}

func (o SourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["aggregationType"] = o.AggregationType
	if !IsNil(o.Dx) {
		toSerialize["dx"] = o.Dx
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.InputIdScheme) {
		toSerialize["inputIdScheme"] = o.InputIdScheme
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Ou) {
		toSerialize["ou"] = o.Ou
	}
	if !IsNil(o.OutputDataElementIdScheme) {
		toSerialize["outputDataElementIdScheme"] = o.OutputDataElementIdScheme
	}
	if !IsNil(o.OutputDataItemIdScheme) {
		toSerialize["outputDataItemIdScheme"] = o.OutputDataItemIdScheme
	}
	if !IsNil(o.OutputIdScheme) {
		toSerialize["outputIdScheme"] = o.OutputIdScheme
	}
	if !IsNil(o.OutputOrgUnitIdScheme) {
		toSerialize["outputOrgUnitIdScheme"] = o.OutputOrgUnitIdScheme
	}
	if !IsNil(o.Pe) {
		toSerialize["pe"] = o.Pe
	}
	if !IsNil(o.Visualization) {
		toSerialize["visualization"] = o.Visualization
	}
	return toSerialize, nil
}

func (o *SourceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"aggregationType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSourceRequest := _SourceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSourceRequest)

	if err != nil {
		return err
	}

	*o = SourceRequest(varSourceRequest)

	return err
}

type NullableSourceRequest struct {
	value *SourceRequest
	isSet bool
}

func (v NullableSourceRequest) Get() *SourceRequest {
	return v.value
}

func (v *NullableSourceRequest) Set(val *SourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceRequest(val *SourceRequest) *NullableSourceRequest {
	return &NullableSourceRequest{value: val, isSet: true}
}

func (v NullableSourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
