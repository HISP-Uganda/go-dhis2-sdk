/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the I18nOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &I18nOutput{}

// I18nOutput struct for I18nOutput
type I18nOutput struct {
	Translations *map[string]string `json:"translations,omitempty"`
}

// NewI18nOutput instantiates a new I18nOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewI18nOutput() *I18nOutput {
	this := I18nOutput{}
	return &this
}

// NewI18nOutputWithDefaults instantiates a new I18nOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewI18nOutputWithDefaults() *I18nOutput {
	this := I18nOutput{}
	return &this
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *I18nOutput) GetTranslations() map[string]string {
	if o == nil || IsNil(o.Translations) {
		var ret map[string]string
		return ret
	}
	return *o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *I18nOutput) GetTranslationsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *I18nOutput) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given map[string]string and assigns it to the Translations field.
func (o *I18nOutput) SetTranslations(v map[string]string) {
	o.Translations = &v
}

func (o I18nOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o I18nOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	return toSerialize, nil
}

type NullableI18nOutput struct {
	value *I18nOutput
	isSet bool
}

func (v NullableI18nOutput) Get() *I18nOutput {
	return v.value
}

func (v *NullableI18nOutput) Set(val *I18nOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableI18nOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableI18nOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableI18nOutput(val *I18nOutput) *NullableI18nOutput {
	return &NullableI18nOutput{value: val, isSet: true}
}

func (v NullableI18nOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableI18nOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
