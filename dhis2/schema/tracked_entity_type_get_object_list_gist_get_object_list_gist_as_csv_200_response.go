/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response - struct for TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response
type TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response struct {
	TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfTrackedEntityType                                                 *[]TrackedEntityType
}

// TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response
func TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response(v *TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response {
	return TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response{
		TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []TrackedEntityTypeAsTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []TrackedEntityType wrapped in TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfTrackedEntityTypeAsTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response(v *[]TrackedEntityType) TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response {
	return TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfTrackedEntityType: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfTrackedEntityType
	err = newStrictDecoder(data).Decode(&dst.ArrayOfTrackedEntityType)
	if err == nil {
		jsonArrayOfTrackedEntityType, _ := json.Marshal(dst.ArrayOfTrackedEntityType)
		if string(jsonArrayOfTrackedEntityType) == "{}" { // empty struct
			dst.ArrayOfTrackedEntityType = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfTrackedEntityType = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfTrackedEntityType = nil

		return fmt.Errorf("data matches more than one schema in oneOf(TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfTrackedEntityType != nil {
		return json.Marshal(&src.ArrayOfTrackedEntityType)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfTrackedEntityType != nil {
		return obj.ArrayOfTrackedEntityType
	}

	// all schemas are nil
	return nil
}

type NullableTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) Get() *TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response(val *TrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) *NullableTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackedEntityTypeGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
