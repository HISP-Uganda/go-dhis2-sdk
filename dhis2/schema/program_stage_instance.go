/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ProgramStageInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramStageInstance{}

// ProgramStageInstance struct for ProgramStageInstance
type ProgramStageInstance struct {
	Access                 *Access                                         `json:"access,omitempty"`
	AssignedUser           *AggregateDataExchangeCreatedBy                 `json:"assignedUser,omitempty"`
	AttributeOptionCombo   *CategoryComboCategoryOptionCombosInner         `json:"attributeOptionCombo,omitempty"`
	AttributeValues        []AttributeValue                                `json:"attributeValues,omitempty"`
	Code                   *string                                         `json:"code,omitempty"`
	Comments               []ProgramStageInstanceCommentsInner             `json:"comments,omitempty"`
	Completed              *bool                                           `json:"completed,omitempty"`
	CompletedBy            *string                                         `json:"completedBy,omitempty"`
	CompletedDate          *time.Time                                      `json:"completedDate,omitempty"`
	CreatableInSearchScope *bool                                           `json:"creatableInSearchScope,omitempty"`
	Created                *time.Time                                      `json:"created,omitempty"`
	CreatedAtClient        *time.Time                                      `json:"createdAtClient,omitempty"`
	CreatedBy              *AggregateDataExchangeCreatedBy                 `json:"createdBy,omitempty"`
	CreatedByUserInfo      *UserInfoSnapshot                               `json:"createdByUserInfo,omitempty"`
	Deleted                *bool                                           `json:"deleted,omitempty"`
	DisplayName            *string                                         `json:"displayName,omitempty"`
	DueDate                *time.Time                                      `json:"dueDate,omitempty"`
	EventDataValues        []EventDataValue                                `json:"eventDataValues,omitempty"`
	EventDate              *time.Time                                      `json:"eventDate,omitempty"`
	ExternalAccess         *bool                                           `json:"externalAccess,omitempty"`
	Favorite               *bool                                           `json:"favorite,omitempty"`
	Favorites              []string                                        `json:"favorites,omitempty"`
	Geometry               map[string]interface{}                          `json:"geometry,omitempty"`
	Href                   *string                                         `json:"href,omitempty"`
	Id                     *string                                         `json:"id,omitempty"`
	LastUpdated            *time.Time                                      `json:"lastUpdated,omitempty"`
	LastUpdatedAtClient    *time.Time                                      `json:"lastUpdatedAtClient,omitempty"`
	LastUpdatedBy          *AggregateDataExchangeCreatedBy                 `json:"lastUpdatedBy,omitempty"`
	LastUpdatedByUserInfo  *UserInfoSnapshot                               `json:"lastUpdatedByUserInfo,omitempty"`
	MessageConversations   []ProgramStageInstanceMessageConversationsInner `json:"messageConversations,omitempty"`
	Name                   *string                                         `json:"name,omitempty"`
	OrganisationUnit       *CategoryOptionOrganisationUnitsInner           `json:"organisationUnit,omitempty"`
	ProgramInstance        *ProgramMessageProgramInstance                  `json:"programInstance,omitempty"`
	ProgramStage           *CategoryProgramStage                           `json:"programStage,omitempty"`
	PublicAccess           *string                                         `json:"publicAccess,omitempty"`
	RelationshipItems      []RelationshipItem                              `json:"relationshipItems,omitempty"`
	Sharing                *Sharing                                        `json:"sharing,omitempty"`
	Status                 string                                          `json:"status"`
	StoredBy               *string                                         `json:"storedBy,omitempty"`
	Translations           []Translation                                   `json:"translations,omitempty"`
	User                   *AggregateDataExchangeCreatedBy                 `json:"user,omitempty"`
	UserAccesses           []LegacyUserAccess                              `json:"userAccesses,omitempty"`
	UserGroupAccesses      []LegacyUserGroupAccess                         `json:"userGroupAccesses,omitempty"`
}

type _ProgramStageInstance ProgramStageInstance

// NewProgramStageInstance instantiates a new ProgramStageInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramStageInstance(status string) *ProgramStageInstance {
	this := ProgramStageInstance{}
	this.Status = status
	return &this
}

// NewProgramStageInstanceWithDefaults instantiates a new ProgramStageInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramStageInstanceWithDefaults() *ProgramStageInstance {
	this := ProgramStageInstance{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *ProgramStageInstance) SetAccess(v Access) {
	o.Access = &v
}

// GetAssignedUser returns the AssignedUser field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetAssignedUser() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.AssignedUser) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.AssignedUser
}

// GetAssignedUserOk returns a tuple with the AssignedUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetAssignedUserOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.AssignedUser) {
		return nil, false
	}
	return o.AssignedUser, true
}

// HasAssignedUser returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasAssignedUser() bool {
	if o != nil && !IsNil(o.AssignedUser) {
		return true
	}

	return false
}

// SetAssignedUser gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the AssignedUser field.
func (o *ProgramStageInstance) SetAssignedUser(v AggregateDataExchangeCreatedBy) {
	o.AssignedUser = &v
}

// GetAttributeOptionCombo returns the AttributeOptionCombo field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetAttributeOptionCombo() CategoryComboCategoryOptionCombosInner {
	if o == nil || IsNil(o.AttributeOptionCombo) {
		var ret CategoryComboCategoryOptionCombosInner
		return ret
	}
	return *o.AttributeOptionCombo
}

// GetAttributeOptionComboOk returns a tuple with the AttributeOptionCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetAttributeOptionComboOk() (*CategoryComboCategoryOptionCombosInner, bool) {
	if o == nil || IsNil(o.AttributeOptionCombo) {
		return nil, false
	}
	return o.AttributeOptionCombo, true
}

// HasAttributeOptionCombo returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasAttributeOptionCombo() bool {
	if o != nil && !IsNil(o.AttributeOptionCombo) {
		return true
	}

	return false
}

// SetAttributeOptionCombo gets a reference to the given CategoryComboCategoryOptionCombosInner and assigns it to the AttributeOptionCombo field.
func (o *ProgramStageInstance) SetAttributeOptionCombo(v CategoryComboCategoryOptionCombosInner) {
	o.AttributeOptionCombo = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *ProgramStageInstance) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProgramStageInstance) SetCode(v string) {
	o.Code = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetComments() []ProgramStageInstanceCommentsInner {
	if o == nil || IsNil(o.Comments) {
		var ret []ProgramStageInstanceCommentsInner
		return ret
	}
	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetCommentsOk() ([]ProgramStageInstanceCommentsInner, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given []ProgramStageInstanceCommentsInner and assigns it to the Comments field.
func (o *ProgramStageInstance) SetComments(v []ProgramStageInstanceCommentsInner) {
	o.Comments = v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetCompleted() bool {
	if o == nil || IsNil(o.Completed) {
		var ret bool
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Completed) {
		return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasCompleted() bool {
	if o != nil && !IsNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given bool and assigns it to the Completed field.
func (o *ProgramStageInstance) SetCompleted(v bool) {
	o.Completed = &v
}

// GetCompletedBy returns the CompletedBy field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetCompletedBy() string {
	if o == nil || IsNil(o.CompletedBy) {
		var ret string
		return ret
	}
	return *o.CompletedBy
}

// GetCompletedByOk returns a tuple with the CompletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetCompletedByOk() (*string, bool) {
	if o == nil || IsNil(o.CompletedBy) {
		return nil, false
	}
	return o.CompletedBy, true
}

// HasCompletedBy returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasCompletedBy() bool {
	if o != nil && !IsNil(o.CompletedBy) {
		return true
	}

	return false
}

// SetCompletedBy gets a reference to the given string and assigns it to the CompletedBy field.
func (o *ProgramStageInstance) SetCompletedBy(v string) {
	o.CompletedBy = &v
}

// GetCompletedDate returns the CompletedDate field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetCompletedDate() time.Time {
	if o == nil || IsNil(o.CompletedDate) {
		var ret time.Time
		return ret
	}
	return *o.CompletedDate
}

// GetCompletedDateOk returns a tuple with the CompletedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetCompletedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CompletedDate) {
		return nil, false
	}
	return o.CompletedDate, true
}

// HasCompletedDate returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasCompletedDate() bool {
	if o != nil && !IsNil(o.CompletedDate) {
		return true
	}

	return false
}

// SetCompletedDate gets a reference to the given time.Time and assigns it to the CompletedDate field.
func (o *ProgramStageInstance) SetCompletedDate(v time.Time) {
	o.CompletedDate = &v
}

// GetCreatableInSearchScope returns the CreatableInSearchScope field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetCreatableInSearchScope() bool {
	if o == nil || IsNil(o.CreatableInSearchScope) {
		var ret bool
		return ret
	}
	return *o.CreatableInSearchScope
}

// GetCreatableInSearchScopeOk returns a tuple with the CreatableInSearchScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetCreatableInSearchScopeOk() (*bool, bool) {
	if o == nil || IsNil(o.CreatableInSearchScope) {
		return nil, false
	}
	return o.CreatableInSearchScope, true
}

// HasCreatableInSearchScope returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasCreatableInSearchScope() bool {
	if o != nil && !IsNil(o.CreatableInSearchScope) {
		return true
	}

	return false
}

// SetCreatableInSearchScope gets a reference to the given bool and assigns it to the CreatableInSearchScope field.
func (o *ProgramStageInstance) SetCreatableInSearchScope(v bool) {
	o.CreatableInSearchScope = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ProgramStageInstance) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedAtClient returns the CreatedAtClient field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetCreatedAtClient() time.Time {
	if o == nil || IsNil(o.CreatedAtClient) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtClient
}

// GetCreatedAtClientOk returns a tuple with the CreatedAtClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetCreatedAtClientOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAtClient) {
		return nil, false
	}
	return o.CreatedAtClient, true
}

// HasCreatedAtClient returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasCreatedAtClient() bool {
	if o != nil && !IsNil(o.CreatedAtClient) {
		return true
	}

	return false
}

// SetCreatedAtClient gets a reference to the given time.Time and assigns it to the CreatedAtClient field.
func (o *ProgramStageInstance) SetCreatedAtClient(v time.Time) {
	o.CreatedAtClient = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetCreatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetCreatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the CreatedBy field.
func (o *ProgramStageInstance) SetCreatedBy(v AggregateDataExchangeCreatedBy) {
	o.CreatedBy = &v
}

// GetCreatedByUserInfo returns the CreatedByUserInfo field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetCreatedByUserInfo() UserInfoSnapshot {
	if o == nil || IsNil(o.CreatedByUserInfo) {
		var ret UserInfoSnapshot
		return ret
	}
	return *o.CreatedByUserInfo
}

// GetCreatedByUserInfoOk returns a tuple with the CreatedByUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetCreatedByUserInfoOk() (*UserInfoSnapshot, bool) {
	if o == nil || IsNil(o.CreatedByUserInfo) {
		return nil, false
	}
	return o.CreatedByUserInfo, true
}

// HasCreatedByUserInfo returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasCreatedByUserInfo() bool {
	if o != nil && !IsNil(o.CreatedByUserInfo) {
		return true
	}

	return false
}

// SetCreatedByUserInfo gets a reference to the given UserInfoSnapshot and assigns it to the CreatedByUserInfo field.
func (o *ProgramStageInstance) SetCreatedByUserInfo(v UserInfoSnapshot) {
	o.CreatedByUserInfo = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *ProgramStageInstance) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProgramStageInstance) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetDueDate() time.Time {
	if o == nil || IsNil(o.DueDate) {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *ProgramStageInstance) SetDueDate(v time.Time) {
	o.DueDate = &v
}

// GetEventDataValues returns the EventDataValues field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetEventDataValues() []EventDataValue {
	if o == nil || IsNil(o.EventDataValues) {
		var ret []EventDataValue
		return ret
	}
	return o.EventDataValues
}

// GetEventDataValuesOk returns a tuple with the EventDataValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetEventDataValuesOk() ([]EventDataValue, bool) {
	if o == nil || IsNil(o.EventDataValues) {
		return nil, false
	}
	return o.EventDataValues, true
}

// HasEventDataValues returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasEventDataValues() bool {
	if o != nil && !IsNil(o.EventDataValues) {
		return true
	}

	return false
}

// SetEventDataValues gets a reference to the given []EventDataValue and assigns it to the EventDataValues field.
func (o *ProgramStageInstance) SetEventDataValues(v []EventDataValue) {
	o.EventDataValues = v
}

// GetEventDate returns the EventDate field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetEventDate() time.Time {
	if o == nil || IsNil(o.EventDate) {
		var ret time.Time
		return ret
	}
	return *o.EventDate
}

// GetEventDateOk returns a tuple with the EventDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetEventDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EventDate) {
		return nil, false
	}
	return o.EventDate, true
}

// HasEventDate returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasEventDate() bool {
	if o != nil && !IsNil(o.EventDate) {
		return true
	}

	return false
}

// SetEventDate gets a reference to the given time.Time and assigns it to the EventDate field.
func (o *ProgramStageInstance) SetEventDate(v time.Time) {
	o.EventDate = &v
}

// GetExternalAccess returns the ExternalAccess field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetExternalAccess() bool {
	if o == nil || IsNil(o.ExternalAccess) {
		var ret bool
		return ret
	}
	return *o.ExternalAccess
}

// GetExternalAccessOk returns a tuple with the ExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetExternalAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalAccess) {
		return nil, false
	}
	return o.ExternalAccess, true
}

// HasExternalAccess returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasExternalAccess() bool {
	if o != nil && !IsNil(o.ExternalAccess) {
		return true
	}

	return false
}

// SetExternalAccess gets a reference to the given bool and assigns it to the ExternalAccess field.
func (o *ProgramStageInstance) SetExternalAccess(v bool) {
	o.ExternalAccess = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ProgramStageInstance) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *ProgramStageInstance) SetFavorites(v []string) {
	o.Favorites = v
}

// GetGeometry returns the Geometry field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetGeometry() map[string]interface{} {
	if o == nil || IsNil(o.Geometry) {
		var ret map[string]interface{}
		return ret
	}
	return o.Geometry
}

// GetGeometryOk returns a tuple with the Geometry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetGeometryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Geometry) {
		return map[string]interface{}{}, false
	}
	return o.Geometry, true
}

// HasGeometry returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasGeometry() bool {
	if o != nil && !IsNil(o.Geometry) {
		return true
	}

	return false
}

// SetGeometry gets a reference to the given map[string]interface{} and assigns it to the Geometry field.
func (o *ProgramStageInstance) SetGeometry(v map[string]interface{}) {
	o.Geometry = v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ProgramStageInstance) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProgramStageInstance) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ProgramStageInstance) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedAtClient returns the LastUpdatedAtClient field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetLastUpdatedAtClient() time.Time {
	if o == nil || IsNil(o.LastUpdatedAtClient) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedAtClient
}

// GetLastUpdatedAtClientOk returns a tuple with the LastUpdatedAtClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetLastUpdatedAtClientOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdatedAtClient) {
		return nil, false
	}
	return o.LastUpdatedAtClient, true
}

// HasLastUpdatedAtClient returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasLastUpdatedAtClient() bool {
	if o != nil && !IsNil(o.LastUpdatedAtClient) {
		return true
	}

	return false
}

// SetLastUpdatedAtClient gets a reference to the given time.Time and assigns it to the LastUpdatedAtClient field.
func (o *ProgramStageInstance) SetLastUpdatedAtClient(v time.Time) {
	o.LastUpdatedAtClient = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetLastUpdatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetLastUpdatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the LastUpdatedBy field.
func (o *ProgramStageInstance) SetLastUpdatedBy(v AggregateDataExchangeCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetLastUpdatedByUserInfo returns the LastUpdatedByUserInfo field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetLastUpdatedByUserInfo() UserInfoSnapshot {
	if o == nil || IsNil(o.LastUpdatedByUserInfo) {
		var ret UserInfoSnapshot
		return ret
	}
	return *o.LastUpdatedByUserInfo
}

// GetLastUpdatedByUserInfoOk returns a tuple with the LastUpdatedByUserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetLastUpdatedByUserInfoOk() (*UserInfoSnapshot, bool) {
	if o == nil || IsNil(o.LastUpdatedByUserInfo) {
		return nil, false
	}
	return o.LastUpdatedByUserInfo, true
}

// HasLastUpdatedByUserInfo returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasLastUpdatedByUserInfo() bool {
	if o != nil && !IsNil(o.LastUpdatedByUserInfo) {
		return true
	}

	return false
}

// SetLastUpdatedByUserInfo gets a reference to the given UserInfoSnapshot and assigns it to the LastUpdatedByUserInfo field.
func (o *ProgramStageInstance) SetLastUpdatedByUserInfo(v UserInfoSnapshot) {
	o.LastUpdatedByUserInfo = &v
}

// GetMessageConversations returns the MessageConversations field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetMessageConversations() []ProgramStageInstanceMessageConversationsInner {
	if o == nil || IsNil(o.MessageConversations) {
		var ret []ProgramStageInstanceMessageConversationsInner
		return ret
	}
	return o.MessageConversations
}

// GetMessageConversationsOk returns a tuple with the MessageConversations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetMessageConversationsOk() ([]ProgramStageInstanceMessageConversationsInner, bool) {
	if o == nil || IsNil(o.MessageConversations) {
		return nil, false
	}
	return o.MessageConversations, true
}

// HasMessageConversations returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasMessageConversations() bool {
	if o != nil && !IsNil(o.MessageConversations) {
		return true
	}

	return false
}

// SetMessageConversations gets a reference to the given []ProgramStageInstanceMessageConversationsInner and assigns it to the MessageConversations field.
func (o *ProgramStageInstance) SetMessageConversations(v []ProgramStageInstanceMessageConversationsInner) {
	o.MessageConversations = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProgramStageInstance) SetName(v string) {
	o.Name = &v
}

// GetOrganisationUnit returns the OrganisationUnit field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetOrganisationUnit() CategoryOptionOrganisationUnitsInner {
	if o == nil || IsNil(o.OrganisationUnit) {
		var ret CategoryOptionOrganisationUnitsInner
		return ret
	}
	return *o.OrganisationUnit
}

// GetOrganisationUnitOk returns a tuple with the OrganisationUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetOrganisationUnitOk() (*CategoryOptionOrganisationUnitsInner, bool) {
	if o == nil || IsNil(o.OrganisationUnit) {
		return nil, false
	}
	return o.OrganisationUnit, true
}

// HasOrganisationUnit returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasOrganisationUnit() bool {
	if o != nil && !IsNil(o.OrganisationUnit) {
		return true
	}

	return false
}

// SetOrganisationUnit gets a reference to the given CategoryOptionOrganisationUnitsInner and assigns it to the OrganisationUnit field.
func (o *ProgramStageInstance) SetOrganisationUnit(v CategoryOptionOrganisationUnitsInner) {
	o.OrganisationUnit = &v
}

// GetProgramInstance returns the ProgramInstance field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetProgramInstance() ProgramMessageProgramInstance {
	if o == nil || IsNil(o.ProgramInstance) {
		var ret ProgramMessageProgramInstance
		return ret
	}
	return *o.ProgramInstance
}

// GetProgramInstanceOk returns a tuple with the ProgramInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetProgramInstanceOk() (*ProgramMessageProgramInstance, bool) {
	if o == nil || IsNil(o.ProgramInstance) {
		return nil, false
	}
	return o.ProgramInstance, true
}

// HasProgramInstance returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasProgramInstance() bool {
	if o != nil && !IsNil(o.ProgramInstance) {
		return true
	}

	return false
}

// SetProgramInstance gets a reference to the given ProgramMessageProgramInstance and assigns it to the ProgramInstance field.
func (o *ProgramStageInstance) SetProgramInstance(v ProgramMessageProgramInstance) {
	o.ProgramInstance = &v
}

// GetProgramStage returns the ProgramStage field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetProgramStage() CategoryProgramStage {
	if o == nil || IsNil(o.ProgramStage) {
		var ret CategoryProgramStage
		return ret
	}
	return *o.ProgramStage
}

// GetProgramStageOk returns a tuple with the ProgramStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetProgramStageOk() (*CategoryProgramStage, bool) {
	if o == nil || IsNil(o.ProgramStage) {
		return nil, false
	}
	return o.ProgramStage, true
}

// HasProgramStage returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasProgramStage() bool {
	if o != nil && !IsNil(o.ProgramStage) {
		return true
	}

	return false
}

// SetProgramStage gets a reference to the given CategoryProgramStage and assigns it to the ProgramStage field.
func (o *ProgramStageInstance) SetProgramStage(v CategoryProgramStage) {
	o.ProgramStage = &v
}

// GetPublicAccess returns the PublicAccess field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetPublicAccess() string {
	if o == nil || IsNil(o.PublicAccess) {
		var ret string
		return ret
	}
	return *o.PublicAccess
}

// GetPublicAccessOk returns a tuple with the PublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetPublicAccessOk() (*string, bool) {
	if o == nil || IsNil(o.PublicAccess) {
		return nil, false
	}
	return o.PublicAccess, true
}

// HasPublicAccess returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasPublicAccess() bool {
	if o != nil && !IsNil(o.PublicAccess) {
		return true
	}

	return false
}

// SetPublicAccess gets a reference to the given string and assigns it to the PublicAccess field.
func (o *ProgramStageInstance) SetPublicAccess(v string) {
	o.PublicAccess = &v
}

// GetRelationshipItems returns the RelationshipItems field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetRelationshipItems() []RelationshipItem {
	if o == nil || IsNil(o.RelationshipItems) {
		var ret []RelationshipItem
		return ret
	}
	return o.RelationshipItems
}

// GetRelationshipItemsOk returns a tuple with the RelationshipItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetRelationshipItemsOk() ([]RelationshipItem, bool) {
	if o == nil || IsNil(o.RelationshipItems) {
		return nil, false
	}
	return o.RelationshipItems, true
}

// HasRelationshipItems returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasRelationshipItems() bool {
	if o != nil && !IsNil(o.RelationshipItems) {
		return true
	}

	return false
}

// SetRelationshipItems gets a reference to the given []RelationshipItem and assigns it to the RelationshipItems field.
func (o *ProgramStageInstance) SetRelationshipItems(v []RelationshipItem) {
	o.RelationshipItems = v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ProgramStageInstance) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetStatus returns the Status field value
func (o *ProgramStageInstance) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ProgramStageInstance) SetStatus(v string) {
	o.Status = v
}

// GetStoredBy returns the StoredBy field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetStoredBy() string {
	if o == nil || IsNil(o.StoredBy) {
		var ret string
		return ret
	}
	return *o.StoredBy
}

// GetStoredByOk returns a tuple with the StoredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetStoredByOk() (*string, bool) {
	if o == nil || IsNil(o.StoredBy) {
		return nil, false
	}
	return o.StoredBy, true
}

// HasStoredBy returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasStoredBy() bool {
	if o != nil && !IsNil(o.StoredBy) {
		return true
	}

	return false
}

// SetStoredBy gets a reference to the given string and assigns it to the StoredBy field.
func (o *ProgramStageInstance) SetStoredBy(v string) {
	o.StoredBy = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *ProgramStageInstance) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetUser() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.User) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetUserOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the User field.
func (o *ProgramStageInstance) SetUser(v AggregateDataExchangeCreatedBy) {
	o.User = &v
}

// GetUserAccesses returns the UserAccesses field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetUserAccesses() []LegacyUserAccess {
	if o == nil || IsNil(o.UserAccesses) {
		var ret []LegacyUserAccess
		return ret
	}
	return o.UserAccesses
}

// GetUserAccessesOk returns a tuple with the UserAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetUserAccessesOk() ([]LegacyUserAccess, bool) {
	if o == nil || IsNil(o.UserAccesses) {
		return nil, false
	}
	return o.UserAccesses, true
}

// HasUserAccesses returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasUserAccesses() bool {
	if o != nil && !IsNil(o.UserAccesses) {
		return true
	}

	return false
}

// SetUserAccesses gets a reference to the given []LegacyUserAccess and assigns it to the UserAccesses field.
func (o *ProgramStageInstance) SetUserAccesses(v []LegacyUserAccess) {
	o.UserAccesses = v
}

// GetUserGroupAccesses returns the UserGroupAccesses field value if set, zero value otherwise.
func (o *ProgramStageInstance) GetUserGroupAccesses() []LegacyUserGroupAccess {
	if o == nil || IsNil(o.UserGroupAccesses) {
		var ret []LegacyUserGroupAccess
		return ret
	}
	return o.UserGroupAccesses
}

// GetUserGroupAccessesOk returns a tuple with the UserGroupAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramStageInstance) GetUserGroupAccessesOk() ([]LegacyUserGroupAccess, bool) {
	if o == nil || IsNil(o.UserGroupAccesses) {
		return nil, false
	}
	return o.UserGroupAccesses, true
}

// HasUserGroupAccesses returns a boolean if a field has been set.
func (o *ProgramStageInstance) HasUserGroupAccesses() bool {
	if o != nil && !IsNil(o.UserGroupAccesses) {
		return true
	}

	return false
}

// SetUserGroupAccesses gets a reference to the given []LegacyUserGroupAccess and assigns it to the UserGroupAccesses field.
func (o *ProgramStageInstance) SetUserGroupAccesses(v []LegacyUserGroupAccess) {
	o.UserGroupAccesses = v
}

func (o ProgramStageInstance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramStageInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.AssignedUser) {
		toSerialize["assignedUser"] = o.AssignedUser
	}
	if !IsNil(o.AttributeOptionCombo) {
		toSerialize["attributeOptionCombo"] = o.AttributeOptionCombo
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	if !IsNil(o.CompletedBy) {
		toSerialize["completedBy"] = o.CompletedBy
	}
	if !IsNil(o.CompletedDate) {
		toSerialize["completedDate"] = o.CompletedDate
	}
	if !IsNil(o.CreatableInSearchScope) {
		toSerialize["creatableInSearchScope"] = o.CreatableInSearchScope
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedAtClient) {
		toSerialize["createdAtClient"] = o.CreatedAtClient
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedByUserInfo) {
		toSerialize["createdByUserInfo"] = o.CreatedByUserInfo
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.EventDataValues) {
		toSerialize["eventDataValues"] = o.EventDataValues
	}
	if !IsNil(o.EventDate) {
		toSerialize["eventDate"] = o.EventDate
	}
	if !IsNil(o.ExternalAccess) {
		toSerialize["externalAccess"] = o.ExternalAccess
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Geometry) {
		toSerialize["geometry"] = o.Geometry
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedAtClient) {
		toSerialize["lastUpdatedAtClient"] = o.LastUpdatedAtClient
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.LastUpdatedByUserInfo) {
		toSerialize["lastUpdatedByUserInfo"] = o.LastUpdatedByUserInfo
	}
	if !IsNil(o.MessageConversations) {
		toSerialize["messageConversations"] = o.MessageConversations
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganisationUnit) {
		toSerialize["organisationUnit"] = o.OrganisationUnit
	}
	if !IsNil(o.ProgramInstance) {
		toSerialize["programInstance"] = o.ProgramInstance
	}
	if !IsNil(o.ProgramStage) {
		toSerialize["programStage"] = o.ProgramStage
	}
	if !IsNil(o.PublicAccess) {
		toSerialize["publicAccess"] = o.PublicAccess
	}
	if !IsNil(o.RelationshipItems) {
		toSerialize["relationshipItems"] = o.RelationshipItems
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.StoredBy) {
		toSerialize["storedBy"] = o.StoredBy
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserAccesses) {
		toSerialize["userAccesses"] = o.UserAccesses
	}
	if !IsNil(o.UserGroupAccesses) {
		toSerialize["userGroupAccesses"] = o.UserGroupAccesses
	}
	return toSerialize, nil
}

func (o *ProgramStageInstance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramStageInstance := _ProgramStageInstance{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgramStageInstance)

	if err != nil {
		return err
	}

	*o = ProgramStageInstance(varProgramStageInstance)

	return err
}

type NullableProgramStageInstance struct {
	value *ProgramStageInstance
	isSet bool
}

func (v NullableProgramStageInstance) Get() *ProgramStageInstance {
	return v.value
}

func (v *NullableProgramStageInstance) Set(val *ProgramStageInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramStageInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramStageInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramStageInstance(val *ProgramStageInstance) *NullableProgramStageInstance {
	return &NullableProgramStageInstance{value: val, isSet: true}
}

func (v NullableProgramStageInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramStageInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
