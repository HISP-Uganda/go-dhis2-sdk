/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesProgramRuleVariable the model 'PropertyNamesProgramRuleVariable'
type PropertyNamesProgramRuleVariable string

// List of PropertyNames_ProgramRuleVariable
const (
	PROPERTYNAMESPROGRAMRULEVARIABLE_ACCESS                            PropertyNamesProgramRuleVariable = "access"
	PROPERTYNAMESPROGRAMRULEVARIABLE_ATTRIBUTE_VALUES                  PropertyNamesProgramRuleVariable = "attributeValues"
	PROPERTYNAMESPROGRAMRULEVARIABLE_CODE                              PropertyNamesProgramRuleVariable = "code"
	PROPERTYNAMESPROGRAMRULEVARIABLE_CREATED                           PropertyNamesProgramRuleVariable = "created"
	PROPERTYNAMESPROGRAMRULEVARIABLE_CREATED_BY                        PropertyNamesProgramRuleVariable = "createdBy"
	PROPERTYNAMESPROGRAMRULEVARIABLE_DATA_ELEMENT                      PropertyNamesProgramRuleVariable = "dataElement"
	PROPERTYNAMESPROGRAMRULEVARIABLE_DISPLAY_NAME                      PropertyNamesProgramRuleVariable = "displayName"
	PROPERTYNAMESPROGRAMRULEVARIABLE_EXTERNAL_ACCESS                   PropertyNamesProgramRuleVariable = "externalAccess"
	PROPERTYNAMESPROGRAMRULEVARIABLE_FAVORITE                          PropertyNamesProgramRuleVariable = "favorite"
	PROPERTYNAMESPROGRAMRULEVARIABLE_FAVORITES                         PropertyNamesProgramRuleVariable = "favorites"
	PROPERTYNAMESPROGRAMRULEVARIABLE_HREF                              PropertyNamesProgramRuleVariable = "href"
	PROPERTYNAMESPROGRAMRULEVARIABLE_ID                                PropertyNamesProgramRuleVariable = "id"
	PROPERTYNAMESPROGRAMRULEVARIABLE_LAST_UPDATED                      PropertyNamesProgramRuleVariable = "lastUpdated"
	PROPERTYNAMESPROGRAMRULEVARIABLE_LAST_UPDATED_BY                   PropertyNamesProgramRuleVariable = "lastUpdatedBy"
	PROPERTYNAMESPROGRAMRULEVARIABLE_NAME                              PropertyNamesProgramRuleVariable = "name"
	PROPERTYNAMESPROGRAMRULEVARIABLE_PROGRAM                           PropertyNamesProgramRuleVariable = "program"
	PROPERTYNAMESPROGRAMRULEVARIABLE_PROGRAM_RULE_VARIABLE_SOURCE_TYPE PropertyNamesProgramRuleVariable = "programRuleVariableSourceType"
	PROPERTYNAMESPROGRAMRULEVARIABLE_PROGRAM_STAGE                     PropertyNamesProgramRuleVariable = "programStage"
	PROPERTYNAMESPROGRAMRULEVARIABLE_PUBLIC_ACCESS                     PropertyNamesProgramRuleVariable = "publicAccess"
	PROPERTYNAMESPROGRAMRULEVARIABLE_SHARING                           PropertyNamesProgramRuleVariable = "sharing"
	PROPERTYNAMESPROGRAMRULEVARIABLE_TRACKED_ENTITY_ATTRIBUTE          PropertyNamesProgramRuleVariable = "trackedEntityAttribute"
	PROPERTYNAMESPROGRAMRULEVARIABLE_TRANSLATIONS                      PropertyNamesProgramRuleVariable = "translations"
	PROPERTYNAMESPROGRAMRULEVARIABLE_USE_CODE_FOR_OPTION_SET           PropertyNamesProgramRuleVariable = "useCodeForOptionSet"
	PROPERTYNAMESPROGRAMRULEVARIABLE_USER                              PropertyNamesProgramRuleVariable = "user"
	PROPERTYNAMESPROGRAMRULEVARIABLE_USER_ACCESSES                     PropertyNamesProgramRuleVariable = "userAccesses"
	PROPERTYNAMESPROGRAMRULEVARIABLE_USER_GROUP_ACCESSES               PropertyNamesProgramRuleVariable = "userGroupAccesses"
	PROPERTYNAMESPROGRAMRULEVARIABLE_VALUE_TYPE                        PropertyNamesProgramRuleVariable = "valueType"
)

// All allowed values of PropertyNamesProgramRuleVariable enum
var AllowedPropertyNamesProgramRuleVariableEnumValues = []PropertyNamesProgramRuleVariable{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"dataElement",
	"displayName",
	"externalAccess",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"program",
	"programRuleVariableSourceType",
	"programStage",
	"publicAccess",
	"sharing",
	"trackedEntityAttribute",
	"translations",
	"useCodeForOptionSet",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"valueType",
}

func (v *PropertyNamesProgramRuleVariable) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesProgramRuleVariable(value)
	for _, existing := range AllowedPropertyNamesProgramRuleVariableEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesProgramRuleVariable", value)
}

// NewPropertyNamesProgramRuleVariableFromValue returns a pointer to a valid PropertyNamesProgramRuleVariable
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesProgramRuleVariableFromValue(v string) (*PropertyNamesProgramRuleVariable, error) {
	ev := PropertyNamesProgramRuleVariable(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesProgramRuleVariable: valid values are %v", v, AllowedPropertyNamesProgramRuleVariableEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesProgramRuleVariable) IsValid() bool {
	for _, existing := range AllowedPropertyNamesProgramRuleVariableEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_ProgramRuleVariable value
func (v PropertyNamesProgramRuleVariable) Ptr() *PropertyNamesProgramRuleVariable {
	return &v
}

type NullablePropertyNamesProgramRuleVariable struct {
	value *PropertyNamesProgramRuleVariable
	isSet bool
}

func (v NullablePropertyNamesProgramRuleVariable) Get() *PropertyNamesProgramRuleVariable {
	return v.value
}

func (v *NullablePropertyNamesProgramRuleVariable) Set(val *PropertyNamesProgramRuleVariable) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesProgramRuleVariable) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesProgramRuleVariable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesProgramRuleVariable(val *PropertyNamesProgramRuleVariable) *NullablePropertyNamesProgramRuleVariable {
	return &NullablePropertyNamesProgramRuleVariable{value: val, isSet: true}
}

func (v NullablePropertyNamesProgramRuleVariable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesProgramRuleVariable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
