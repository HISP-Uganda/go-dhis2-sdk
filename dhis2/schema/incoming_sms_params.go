/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"time"
)

// checks if the IncomingSmsParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IncomingSmsParams{}

// IncomingSmsParams struct for IncomingSmsParams
type IncomingSmsParams struct {
	AttributeValues []AttributeValueParams                `json:"attributeValues,omitempty"`
	Code            *string                               `json:"code,omitempty"`
	Created         *time.Time                            `json:"created,omitempty"`
	CreatedBy       *AggregateDataExchangeParamsCreatedBy `json:"createdBy,omitempty"`
	DisplayName     *string                               `json:"displayName,omitempty"`
	Favorite        *bool                                 `json:"favorite,omitempty"`
	Favorites       []string                              `json:"favorites,omitempty"`
	Gatewayid       *string                               `json:"gatewayid,omitempty"`
	Id              *string                               `json:"id,omitempty"`
	LastUpdated     *time.Time                            `json:"lastUpdated,omitempty"`
	LastUpdatedBy   *AggregateDataExchangeParamsCreatedBy `json:"lastUpdatedBy,omitempty"`
	Name            *string                               `json:"name,omitempty"`
	Originator      *string                               `json:"originator,omitempty"`
	Receiveddate    *time.Time                            `json:"receiveddate,omitempty"`
	Sentdate        *time.Time                            `json:"sentdate,omitempty"`
	Sharing         *Sharing                              `json:"sharing,omitempty"`
	Smsencoding     *SmsMessageEncoding                   `json:"smsencoding,omitempty"`
	Smsstatus       *SmsMessageStatus                     `json:"smsstatus,omitempty"`
	Text            *string                               `json:"text,omitempty"`
	Translations    []Translation                         `json:"translations,omitempty"`
}

// NewIncomingSmsParams instantiates a new IncomingSmsParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIncomingSmsParams() *IncomingSmsParams {
	this := IncomingSmsParams{}
	return &this
}

// NewIncomingSmsParamsWithDefaults instantiates a new IncomingSmsParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIncomingSmsParamsWithDefaults() *IncomingSmsParams {
	this := IncomingSmsParams{}
	return &this
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetAttributeValues() []AttributeValueParams {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValueParams
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetAttributeValuesOk() ([]AttributeValueParams, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValueParams and assigns it to the AttributeValues field.
func (o *IncomingSmsParams) SetAttributeValues(v []AttributeValueParams) {
	o.AttributeValues = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *IncomingSmsParams) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *IncomingSmsParams) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetCreatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetCreatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the CreatedBy field.
func (o *IncomingSmsParams) SetCreatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.CreatedBy = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *IncomingSmsParams) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *IncomingSmsParams) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *IncomingSmsParams) SetFavorites(v []string) {
	o.Favorites = v
}

// GetGatewayid returns the Gatewayid field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetGatewayid() string {
	if o == nil || IsNil(o.Gatewayid) {
		var ret string
		return ret
	}
	return *o.Gatewayid
}

// GetGatewayidOk returns a tuple with the Gatewayid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetGatewayidOk() (*string, bool) {
	if o == nil || IsNil(o.Gatewayid) {
		return nil, false
	}
	return o.Gatewayid, true
}

// HasGatewayid returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasGatewayid() bool {
	if o != nil && !IsNil(o.Gatewayid) {
		return true
	}

	return false
}

// SetGatewayid gets a reference to the given string and assigns it to the Gatewayid field.
func (o *IncomingSmsParams) SetGatewayid(v string) {
	o.Gatewayid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IncomingSmsParams) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *IncomingSmsParams) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetLastUpdatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetLastUpdatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the LastUpdatedBy field.
func (o *IncomingSmsParams) SetLastUpdatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IncomingSmsParams) SetName(v string) {
	o.Name = &v
}

// GetOriginator returns the Originator field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetOriginator() string {
	if o == nil || IsNil(o.Originator) {
		var ret string
		return ret
	}
	return *o.Originator
}

// GetOriginatorOk returns a tuple with the Originator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetOriginatorOk() (*string, bool) {
	if o == nil || IsNil(o.Originator) {
		return nil, false
	}
	return o.Originator, true
}

// HasOriginator returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasOriginator() bool {
	if o != nil && !IsNil(o.Originator) {
		return true
	}

	return false
}

// SetOriginator gets a reference to the given string and assigns it to the Originator field.
func (o *IncomingSmsParams) SetOriginator(v string) {
	o.Originator = &v
}

// GetReceiveddate returns the Receiveddate field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetReceiveddate() time.Time {
	if o == nil || IsNil(o.Receiveddate) {
		var ret time.Time
		return ret
	}
	return *o.Receiveddate
}

// GetReceiveddateOk returns a tuple with the Receiveddate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetReceiveddateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Receiveddate) {
		return nil, false
	}
	return o.Receiveddate, true
}

// HasReceiveddate returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasReceiveddate() bool {
	if o != nil && !IsNil(o.Receiveddate) {
		return true
	}

	return false
}

// SetReceiveddate gets a reference to the given time.Time and assigns it to the Receiveddate field.
func (o *IncomingSmsParams) SetReceiveddate(v time.Time) {
	o.Receiveddate = &v
}

// GetSentdate returns the Sentdate field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetSentdate() time.Time {
	if o == nil || IsNil(o.Sentdate) {
		var ret time.Time
		return ret
	}
	return *o.Sentdate
}

// GetSentdateOk returns a tuple with the Sentdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetSentdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Sentdate) {
		return nil, false
	}
	return o.Sentdate, true
}

// HasSentdate returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasSentdate() bool {
	if o != nil && !IsNil(o.Sentdate) {
		return true
	}

	return false
}

// SetSentdate gets a reference to the given time.Time and assigns it to the Sentdate field.
func (o *IncomingSmsParams) SetSentdate(v time.Time) {
	o.Sentdate = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *IncomingSmsParams) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetSmsencoding returns the Smsencoding field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetSmsencoding() SmsMessageEncoding {
	if o == nil || IsNil(o.Smsencoding) {
		var ret SmsMessageEncoding
		return ret
	}
	return *o.Smsencoding
}

// GetSmsencodingOk returns a tuple with the Smsencoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetSmsencodingOk() (*SmsMessageEncoding, bool) {
	if o == nil || IsNil(o.Smsencoding) {
		return nil, false
	}
	return o.Smsencoding, true
}

// HasSmsencoding returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasSmsencoding() bool {
	if o != nil && !IsNil(o.Smsencoding) {
		return true
	}

	return false
}

// SetSmsencoding gets a reference to the given SmsMessageEncoding and assigns it to the Smsencoding field.
func (o *IncomingSmsParams) SetSmsencoding(v SmsMessageEncoding) {
	o.Smsencoding = &v
}

// GetSmsstatus returns the Smsstatus field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetSmsstatus() SmsMessageStatus {
	if o == nil || IsNil(o.Smsstatus) {
		var ret SmsMessageStatus
		return ret
	}
	return *o.Smsstatus
}

// GetSmsstatusOk returns a tuple with the Smsstatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetSmsstatusOk() (*SmsMessageStatus, bool) {
	if o == nil || IsNil(o.Smsstatus) {
		return nil, false
	}
	return o.Smsstatus, true
}

// HasSmsstatus returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasSmsstatus() bool {
	if o != nil && !IsNil(o.Smsstatus) {
		return true
	}

	return false
}

// SetSmsstatus gets a reference to the given SmsMessageStatus and assigns it to the Smsstatus field.
func (o *IncomingSmsParams) SetSmsstatus(v SmsMessageStatus) {
	o.Smsstatus = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *IncomingSmsParams) SetText(v string) {
	o.Text = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *IncomingSmsParams) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncomingSmsParams) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *IncomingSmsParams) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *IncomingSmsParams) SetTranslations(v []Translation) {
	o.Translations = v
}

func (o IncomingSmsParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IncomingSmsParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Gatewayid) {
		toSerialize["gatewayid"] = o.Gatewayid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Originator) {
		toSerialize["originator"] = o.Originator
	}
	if !IsNil(o.Receiveddate) {
		toSerialize["receiveddate"] = o.Receiveddate
	}
	if !IsNil(o.Sentdate) {
		toSerialize["sentdate"] = o.Sentdate
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.Smsencoding) {
		toSerialize["smsencoding"] = o.Smsencoding
	}
	if !IsNil(o.Smsstatus) {
		toSerialize["smsstatus"] = o.Smsstatus
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	return toSerialize, nil
}

type NullableIncomingSmsParams struct {
	value *IncomingSmsParams
	isSet bool
}

func (v NullableIncomingSmsParams) Get() *IncomingSmsParams {
	return v.value
}

func (v *NullableIncomingSmsParams) Set(val *IncomingSmsParams) {
	v.value = val
	v.isSet = true
}

func (v NullableIncomingSmsParams) IsSet() bool {
	return v.isSet
}

func (v *NullableIncomingSmsParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncomingSmsParams(val *IncomingSmsParams) *NullableIncomingSmsParams {
	return &NullableIncomingSmsParams{value: val, isSet: true}
}

func (v NullableIncomingSmsParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncomingSmsParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
