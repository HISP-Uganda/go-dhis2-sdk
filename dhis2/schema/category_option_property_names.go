/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// CategoryOptionPropertyNames the model 'CategoryOptionPropertyNames'
type CategoryOptionPropertyNames string

// List of CategoryOptionPropertyNames
const (
	CATEGORYOPTIONPROPERTYNAMES_ACCESS                 CategoryOptionPropertyNames = "access"
	CATEGORYOPTIONPROPERTYNAMES_AGGREGATION_TYPE       CategoryOptionPropertyNames = "aggregationType"
	CATEGORYOPTIONPROPERTYNAMES_ATTRIBUTE_VALUES       CategoryOptionPropertyNames = "attributeValues"
	CATEGORYOPTIONPROPERTYNAMES_CATEGORIES             CategoryOptionPropertyNames = "categories"
	CATEGORYOPTIONPROPERTYNAMES_CATEGORY_OPTION_COMBOS CategoryOptionPropertyNames = "categoryOptionCombos"
	CATEGORYOPTIONPROPERTYNAMES_CATEGORY_OPTION_GROUPS CategoryOptionPropertyNames = "categoryOptionGroups"
	CATEGORYOPTIONPROPERTYNAMES_CODE                   CategoryOptionPropertyNames = "code"
	CATEGORYOPTIONPROPERTYNAMES_CREATED                CategoryOptionPropertyNames = "created"
	CATEGORYOPTIONPROPERTYNAMES_CREATED_BY             CategoryOptionPropertyNames = "createdBy"
	CATEGORYOPTIONPROPERTYNAMES_DESCRIPTION            CategoryOptionPropertyNames = "description"
	CATEGORYOPTIONPROPERTYNAMES_DIMENSION_ITEM         CategoryOptionPropertyNames = "dimensionItem"
	CATEGORYOPTIONPROPERTYNAMES_DISPLAY_DESCRIPTION    CategoryOptionPropertyNames = "displayDescription"
	CATEGORYOPTIONPROPERTYNAMES_DISPLAY_FORM_NAME      CategoryOptionPropertyNames = "displayFormName"
	CATEGORYOPTIONPROPERTYNAMES_DISPLAY_NAME           CategoryOptionPropertyNames = "displayName"
	CATEGORYOPTIONPROPERTYNAMES_DISPLAY_SHORT_NAME     CategoryOptionPropertyNames = "displayShortName"
	CATEGORYOPTIONPROPERTYNAMES_END_DATE               CategoryOptionPropertyNames = "endDate"
	CATEGORYOPTIONPROPERTYNAMES_FAVORITE               CategoryOptionPropertyNames = "favorite"
	CATEGORYOPTIONPROPERTYNAMES_FAVORITES              CategoryOptionPropertyNames = "favorites"
	CATEGORYOPTIONPROPERTYNAMES_FORM_NAME              CategoryOptionPropertyNames = "formName"
	CATEGORYOPTIONPROPERTYNAMES_HREF                   CategoryOptionPropertyNames = "href"
	CATEGORYOPTIONPROPERTYNAMES_ID                     CategoryOptionPropertyNames = "id"
	CATEGORYOPTIONPROPERTYNAMES_IS_DEFAULT             CategoryOptionPropertyNames = "isDefault"
	CATEGORYOPTIONPROPERTYNAMES_LAST_UPDATED           CategoryOptionPropertyNames = "lastUpdated"
	CATEGORYOPTIONPROPERTYNAMES_LAST_UPDATED_BY        CategoryOptionPropertyNames = "lastUpdatedBy"
	CATEGORYOPTIONPROPERTYNAMES_LEGEND_SET             CategoryOptionPropertyNames = "legendSet"
	CATEGORYOPTIONPROPERTYNAMES_LEGEND_SETS            CategoryOptionPropertyNames = "legendSets"
	CATEGORYOPTIONPROPERTYNAMES_NAME                   CategoryOptionPropertyNames = "name"
	CATEGORYOPTIONPROPERTYNAMES_ORGANISATION_UNITS     CategoryOptionPropertyNames = "organisationUnits"
	CATEGORYOPTIONPROPERTYNAMES_QUERY_MODS             CategoryOptionPropertyNames = "queryMods"
	CATEGORYOPTIONPROPERTYNAMES_SHARING                CategoryOptionPropertyNames = "sharing"
	CATEGORYOPTIONPROPERTYNAMES_SHORT_NAME             CategoryOptionPropertyNames = "shortName"
	CATEGORYOPTIONPROPERTYNAMES_START_DATE             CategoryOptionPropertyNames = "startDate"
	CATEGORYOPTIONPROPERTYNAMES_STYLE                  CategoryOptionPropertyNames = "style"
	CATEGORYOPTIONPROPERTYNAMES_TRANSLATIONS           CategoryOptionPropertyNames = "translations"
)

// All allowed values of CategoryOptionPropertyNames enum
var AllowedCategoryOptionPropertyNamesEnumValues = []CategoryOptionPropertyNames{
	"access",
	"aggregationType",
	"attributeValues",
	"categories",
	"categoryOptionCombos",
	"categoryOptionGroups",
	"code",
	"created",
	"createdBy",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayName",
	"displayShortName",
	"endDate",
	"favorite",
	"favorites",
	"formName",
	"href",
	"id",
	"isDefault",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"name",
	"organisationUnits",
	"queryMods",
	"sharing",
	"shortName",
	"startDate",
	"style",
	"translations",
}

func (v *CategoryOptionPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CategoryOptionPropertyNames(value)
	for _, existing := range AllowedCategoryOptionPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CategoryOptionPropertyNames", value)
}

// NewCategoryOptionPropertyNamesFromValue returns a pointer to a valid CategoryOptionPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCategoryOptionPropertyNamesFromValue(v string) (*CategoryOptionPropertyNames, error) {
	ev := CategoryOptionPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CategoryOptionPropertyNames: valid values are %v", v, AllowedCategoryOptionPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CategoryOptionPropertyNames) IsValid() bool {
	for _, existing := range AllowedCategoryOptionPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CategoryOptionPropertyNames value
func (v CategoryOptionPropertyNames) Ptr() *CategoryOptionPropertyNames {
	return &v
}

type NullableCategoryOptionPropertyNames struct {
	value *CategoryOptionPropertyNames
	isSet bool
}

func (v NullableCategoryOptionPropertyNames) Get() *CategoryOptionPropertyNames {
	return v.value
}

func (v *NullableCategoryOptionPropertyNames) Set(val *CategoryOptionPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryOptionPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryOptionPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryOptionPropertyNames(val *CategoryOptionPropertyNames) *NullableCategoryOptionPropertyNames {
	return &NullableCategoryOptionPropertyNames{value: val, isSet: true}
}

func (v NullableCategoryOptionPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryOptionPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
