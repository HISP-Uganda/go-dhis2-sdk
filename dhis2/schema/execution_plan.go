/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ExecutionPlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecutionPlan{}

// ExecutionPlan struct for ExecutionPlan
type ExecutionPlan struct {
	ExecutionTime *float64               `json:"executionTime,omitempty"`
	Plan          map[string]interface{} `json:"plan,omitempty"`
	PlanningTime  *float64               `json:"planningTime,omitempty"`
	Query         *string                `json:"query,omitempty"`
	TimeInMillis  *float64               `json:"timeInMillis,omitempty"`
}

// NewExecutionPlan instantiates a new ExecutionPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionPlan() *ExecutionPlan {
	this := ExecutionPlan{}
	return &this
}

// NewExecutionPlanWithDefaults instantiates a new ExecutionPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionPlanWithDefaults() *ExecutionPlan {
	this := ExecutionPlan{}
	return &this
}

// GetExecutionTime returns the ExecutionTime field value if set, zero value otherwise.
func (o *ExecutionPlan) GetExecutionTime() float64 {
	if o == nil || IsNil(o.ExecutionTime) {
		var ret float64
		return ret
	}
	return *o.ExecutionTime
}

// GetExecutionTimeOk returns a tuple with the ExecutionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPlan) GetExecutionTimeOk() (*float64, bool) {
	if o == nil || IsNil(o.ExecutionTime) {
		return nil, false
	}
	return o.ExecutionTime, true
}

// HasExecutionTime returns a boolean if a field has been set.
func (o *ExecutionPlan) HasExecutionTime() bool {
	if o != nil && !IsNil(o.ExecutionTime) {
		return true
	}

	return false
}

// SetExecutionTime gets a reference to the given float64 and assigns it to the ExecutionTime field.
func (o *ExecutionPlan) SetExecutionTime(v float64) {
	o.ExecutionTime = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *ExecutionPlan) GetPlan() map[string]interface{} {
	if o == nil || IsNil(o.Plan) {
		var ret map[string]interface{}
		return ret
	}
	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPlan) GetPlanOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Plan) {
		return map[string]interface{}{}, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *ExecutionPlan) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given map[string]interface{} and assigns it to the Plan field.
func (o *ExecutionPlan) SetPlan(v map[string]interface{}) {
	o.Plan = v
}

// GetPlanningTime returns the PlanningTime field value if set, zero value otherwise.
func (o *ExecutionPlan) GetPlanningTime() float64 {
	if o == nil || IsNil(o.PlanningTime) {
		var ret float64
		return ret
	}
	return *o.PlanningTime
}

// GetPlanningTimeOk returns a tuple with the PlanningTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPlan) GetPlanningTimeOk() (*float64, bool) {
	if o == nil || IsNil(o.PlanningTime) {
		return nil, false
	}
	return o.PlanningTime, true
}

// HasPlanningTime returns a boolean if a field has been set.
func (o *ExecutionPlan) HasPlanningTime() bool {
	if o != nil && !IsNil(o.PlanningTime) {
		return true
	}

	return false
}

// SetPlanningTime gets a reference to the given float64 and assigns it to the PlanningTime field.
func (o *ExecutionPlan) SetPlanningTime(v float64) {
	o.PlanningTime = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *ExecutionPlan) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPlan) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *ExecutionPlan) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *ExecutionPlan) SetQuery(v string) {
	o.Query = &v
}

// GetTimeInMillis returns the TimeInMillis field value if set, zero value otherwise.
func (o *ExecutionPlan) GetTimeInMillis() float64 {
	if o == nil || IsNil(o.TimeInMillis) {
		var ret float64
		return ret
	}
	return *o.TimeInMillis
}

// GetTimeInMillisOk returns a tuple with the TimeInMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionPlan) GetTimeInMillisOk() (*float64, bool) {
	if o == nil || IsNil(o.TimeInMillis) {
		return nil, false
	}
	return o.TimeInMillis, true
}

// HasTimeInMillis returns a boolean if a field has been set.
func (o *ExecutionPlan) HasTimeInMillis() bool {
	if o != nil && !IsNil(o.TimeInMillis) {
		return true
	}

	return false
}

// SetTimeInMillis gets a reference to the given float64 and assigns it to the TimeInMillis field.
func (o *ExecutionPlan) SetTimeInMillis(v float64) {
	o.TimeInMillis = &v
}

func (o ExecutionPlan) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecutionPlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExecutionTime) {
		toSerialize["executionTime"] = o.ExecutionTime
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.PlanningTime) {
		toSerialize["planningTime"] = o.PlanningTime
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.TimeInMillis) {
		toSerialize["timeInMillis"] = o.TimeInMillis
	}
	return toSerialize, nil
}

type NullableExecutionPlan struct {
	value *ExecutionPlan
	isSet bool
}

func (v NullableExecutionPlan) Get() *ExecutionPlan {
	return v.value
}

func (v *NullableExecutionPlan) Set(val *ExecutionPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionPlan(val *ExecutionPlan) *NullableExecutionPlan {
	return &NullableExecutionPlan{value: val, isSet: true}
}

func (v NullableExecutionPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
