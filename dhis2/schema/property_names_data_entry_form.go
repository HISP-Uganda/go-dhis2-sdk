/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesDataEntryForm the model 'PropertyNamesDataEntryForm'
type PropertyNamesDataEntryForm string

// List of PropertyNames_DataEntryForm
const (
	PROPERTYNAMESDATAENTRYFORM_ACCESS              PropertyNamesDataEntryForm = "access"
	PROPERTYNAMESDATAENTRYFORM_ATTRIBUTE_VALUES    PropertyNamesDataEntryForm = "attributeValues"
	PROPERTYNAMESDATAENTRYFORM_CODE                PropertyNamesDataEntryForm = "code"
	PROPERTYNAMESDATAENTRYFORM_CREATED             PropertyNamesDataEntryForm = "created"
	PROPERTYNAMESDATAENTRYFORM_CREATED_BY          PropertyNamesDataEntryForm = "createdBy"
	PROPERTYNAMESDATAENTRYFORM_DISPLAY_NAME        PropertyNamesDataEntryForm = "displayName"
	PROPERTYNAMESDATAENTRYFORM_EXTERNAL_ACCESS     PropertyNamesDataEntryForm = "externalAccess"
	PROPERTYNAMESDATAENTRYFORM_FAVORITE            PropertyNamesDataEntryForm = "favorite"
	PROPERTYNAMESDATAENTRYFORM_FAVORITES           PropertyNamesDataEntryForm = "favorites"
	PROPERTYNAMESDATAENTRYFORM_FORMAT              PropertyNamesDataEntryForm = "format"
	PROPERTYNAMESDATAENTRYFORM_HREF                PropertyNamesDataEntryForm = "href"
	PROPERTYNAMESDATAENTRYFORM_HTML_CODE           PropertyNamesDataEntryForm = "htmlCode"
	PROPERTYNAMESDATAENTRYFORM_ID                  PropertyNamesDataEntryForm = "id"
	PROPERTYNAMESDATAENTRYFORM_LAST_UPDATED        PropertyNamesDataEntryForm = "lastUpdated"
	PROPERTYNAMESDATAENTRYFORM_LAST_UPDATED_BY     PropertyNamesDataEntryForm = "lastUpdatedBy"
	PROPERTYNAMESDATAENTRYFORM_NAME                PropertyNamesDataEntryForm = "name"
	PROPERTYNAMESDATAENTRYFORM_PUBLIC_ACCESS       PropertyNamesDataEntryForm = "publicAccess"
	PROPERTYNAMESDATAENTRYFORM_SHARING             PropertyNamesDataEntryForm = "sharing"
	PROPERTYNAMESDATAENTRYFORM_STYLE               PropertyNamesDataEntryForm = "style"
	PROPERTYNAMESDATAENTRYFORM_TRANSLATIONS        PropertyNamesDataEntryForm = "translations"
	PROPERTYNAMESDATAENTRYFORM_USER                PropertyNamesDataEntryForm = "user"
	PROPERTYNAMESDATAENTRYFORM_USER_ACCESSES       PropertyNamesDataEntryForm = "userAccesses"
	PROPERTYNAMESDATAENTRYFORM_USER_GROUP_ACCESSES PropertyNamesDataEntryForm = "userGroupAccesses"
)

// All allowed values of PropertyNamesDataEntryForm enum
var AllowedPropertyNamesDataEntryFormEnumValues = []PropertyNamesDataEntryForm{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"displayName",
	"externalAccess",
	"favorite",
	"favorites",
	"format",
	"href",
	"htmlCode",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"publicAccess",
	"sharing",
	"style",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesDataEntryForm) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesDataEntryForm(value)
	for _, existing := range AllowedPropertyNamesDataEntryFormEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesDataEntryForm", value)
}

// NewPropertyNamesDataEntryFormFromValue returns a pointer to a valid PropertyNamesDataEntryForm
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesDataEntryFormFromValue(v string) (*PropertyNamesDataEntryForm, error) {
	ev := PropertyNamesDataEntryForm(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesDataEntryForm: valid values are %v", v, AllowedPropertyNamesDataEntryFormEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesDataEntryForm) IsValid() bool {
	for _, existing := range AllowedPropertyNamesDataEntryFormEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_DataEntryForm value
func (v PropertyNamesDataEntryForm) Ptr() *PropertyNamesDataEntryForm {
	return &v
}

type NullablePropertyNamesDataEntryForm struct {
	value *PropertyNamesDataEntryForm
	isSet bool
}

func (v NullablePropertyNamesDataEntryForm) Get() *PropertyNamesDataEntryForm {
	return v.value
}

func (v *NullablePropertyNamesDataEntryForm) Set(val *PropertyNamesDataEntryForm) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesDataEntryForm) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesDataEntryForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesDataEntryForm(val *PropertyNamesDataEntryForm) *NullablePropertyNamesDataEntryForm {
	return &NullablePropertyNamesDataEntryForm{value: val, isSet: true}
}

func (v NullablePropertyNamesDataEntryForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesDataEntryForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
