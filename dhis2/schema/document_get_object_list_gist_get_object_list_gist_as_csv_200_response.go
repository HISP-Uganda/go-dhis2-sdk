/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// DocumentGetObjectListGistGetObjectListGistAsCsv200Response - struct for DocumentGetObjectListGistGetObjectListGistAsCsv200Response
type DocumentGetObjectListGistGetObjectListGistAsCsv200Response struct {
	DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfDocument                                                 *[]Document
}

// DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsDocumentGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in DocumentGetObjectListGistGetObjectListGistAsCsv200Response
func DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsDocumentGetObjectListGistGetObjectListGistAsCsv200Response(v *DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) DocumentGetObjectListGistGetObjectListGistAsCsv200Response {
	return DocumentGetObjectListGistGetObjectListGistAsCsv200Response{
		DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []DocumentAsDocumentGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []Document wrapped in DocumentGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfDocumentAsDocumentGetObjectListGistGetObjectListGistAsCsv200Response(v *[]Document) DocumentGetObjectListGistGetObjectListGistAsCsv200Response {
	return DocumentGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfDocument: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *DocumentGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonDocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonDocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfDocument
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDocument)
	if err == nil {
		jsonArrayOfDocument, _ := json.Marshal(dst.ArrayOfDocument)
		if string(jsonArrayOfDocument) == "{}" { // empty struct
			dst.ArrayOfDocument = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDocument = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfDocument = nil

		return fmt.Errorf("data matches more than one schema in oneOf(DocumentGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(DocumentGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src DocumentGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfDocument != nil {
		return json.Marshal(&src.ArrayOfDocument)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *DocumentGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.DocumentGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfDocument != nil {
		return obj.ArrayOfDocument
	}

	// all schemas are nil
	return nil
}

type NullableDocumentGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *DocumentGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableDocumentGetObjectListGistGetObjectListGistAsCsv200Response) Get() *DocumentGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableDocumentGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *DocumentGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentGetObjectListGistGetObjectListGistAsCsv200Response(val *DocumentGetObjectListGistGetObjectListGistAsCsv200Response) *NullableDocumentGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableDocumentGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableDocumentGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
