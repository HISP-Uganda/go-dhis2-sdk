/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the WebModule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebModule{}

// WebModule struct for WebModule
type WebModule struct {
	DefaultAction *string       `json:"defaultAction,omitempty"`
	Description   *string       `json:"description,omitempty"`
	DisplayName   *string       `json:"displayName,omitempty"`
	Icon          *string       `json:"icon,omitempty"`
	Name          *string       `json:"name,omitempty"`
	Namespace     *string       `json:"namespace,omitempty"`
	Shortcuts     []AppShortcut `json:"shortcuts,omitempty"`
	Version       *string       `json:"version,omitempty"`
}

// NewWebModule instantiates a new WebModule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebModule() *WebModule {
	this := WebModule{}
	return &this
}

// NewWebModuleWithDefaults instantiates a new WebModule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebModuleWithDefaults() *WebModule {
	this := WebModule{}
	return &this
}

// GetDefaultAction returns the DefaultAction field value if set, zero value otherwise.
func (o *WebModule) GetDefaultAction() string {
	if o == nil || IsNil(o.DefaultAction) {
		var ret string
		return ret
	}
	return *o.DefaultAction
}

// GetDefaultActionOk returns a tuple with the DefaultAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebModule) GetDefaultActionOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultAction) {
		return nil, false
	}
	return o.DefaultAction, true
}

// HasDefaultAction returns a boolean if a field has been set.
func (o *WebModule) HasDefaultAction() bool {
	if o != nil && !IsNil(o.DefaultAction) {
		return true
	}

	return false
}

// SetDefaultAction gets a reference to the given string and assigns it to the DefaultAction field.
func (o *WebModule) SetDefaultAction(v string) {
	o.DefaultAction = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WebModule) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebModule) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WebModule) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WebModule) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *WebModule) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebModule) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *WebModule) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *WebModule) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *WebModule) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebModule) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *WebModule) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *WebModule) SetIcon(v string) {
	o.Icon = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WebModule) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebModule) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WebModule) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WebModule) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *WebModule) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebModule) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *WebModule) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *WebModule) SetNamespace(v string) {
	o.Namespace = &v
}

// GetShortcuts returns the Shortcuts field value if set, zero value otherwise.
func (o *WebModule) GetShortcuts() []AppShortcut {
	if o == nil || IsNil(o.Shortcuts) {
		var ret []AppShortcut
		return ret
	}
	return o.Shortcuts
}

// GetShortcutsOk returns a tuple with the Shortcuts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebModule) GetShortcutsOk() ([]AppShortcut, bool) {
	if o == nil || IsNil(o.Shortcuts) {
		return nil, false
	}
	return o.Shortcuts, true
}

// HasShortcuts returns a boolean if a field has been set.
func (o *WebModule) HasShortcuts() bool {
	if o != nil && !IsNil(o.Shortcuts) {
		return true
	}

	return false
}

// SetShortcuts gets a reference to the given []AppShortcut and assigns it to the Shortcuts field.
func (o *WebModule) SetShortcuts(v []AppShortcut) {
	o.Shortcuts = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *WebModule) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebModule) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *WebModule) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *WebModule) SetVersion(v string) {
	o.Version = &v
}

func (o WebModule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebModule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultAction) {
		toSerialize["defaultAction"] = o.DefaultAction
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Shortcuts) {
		toSerialize["shortcuts"] = o.Shortcuts
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableWebModule struct {
	value *WebModule
	isSet bool
}

func (v NullableWebModule) Get() *WebModule {
	return v.value
}

func (v *NullableWebModule) Set(val *WebModule) {
	v.value = val
	v.isSet = true
}

func (v NullableWebModule) IsSet() bool {
	return v.isSet
}

func (v *NullableWebModule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebModule(val *WebModule) *NullableWebModule {
	return &NullableWebModule{value: val, isSet: true}
}

func (v NullableWebModule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebModule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
