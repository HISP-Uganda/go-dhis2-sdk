/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the WebMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebMessage{}

// WebMessage struct for WebMessage
type WebMessage struct {
	Code           *int32              `json:"code,omitempty"`
	DevMessage     *string             `json:"devMessage,omitempty"`
	ErrorCode      ErrorCode           `json:"errorCode"`
	HttpStatus     *string             `json:"httpStatus,omitempty"`
	HttpStatusCode int32               `json:"httpStatusCode"`
	Message        *string             `json:"message,omitempty"`
	Response       *WebMessageResponse `json:"response,omitempty"`
	Status         Status              `json:"status"`
}

type _WebMessage WebMessage

// NewWebMessage instantiates a new WebMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebMessage(errorCode ErrorCode, httpStatusCode int32, status Status) *WebMessage {
	this := WebMessage{}
	this.ErrorCode = errorCode
	this.HttpStatusCode = httpStatusCode
	this.Status = status
	return &this
}

// NewWebMessageWithDefaults instantiates a new WebMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebMessageWithDefaults() *WebMessage {
	this := WebMessage{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *WebMessage) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebMessage) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *WebMessage) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *WebMessage) SetCode(v int32) {
	o.Code = &v
}

// GetDevMessage returns the DevMessage field value if set, zero value otherwise.
func (o *WebMessage) GetDevMessage() string {
	if o == nil || IsNil(o.DevMessage) {
		var ret string
		return ret
	}
	return *o.DevMessage
}

// GetDevMessageOk returns a tuple with the DevMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebMessage) GetDevMessageOk() (*string, bool) {
	if o == nil || IsNil(o.DevMessage) {
		return nil, false
	}
	return o.DevMessage, true
}

// HasDevMessage returns a boolean if a field has been set.
func (o *WebMessage) HasDevMessage() bool {
	if o != nil && !IsNil(o.DevMessage) {
		return true
	}

	return false
}

// SetDevMessage gets a reference to the given string and assigns it to the DevMessage field.
func (o *WebMessage) SetDevMessage(v string) {
	o.DevMessage = &v
}

// GetErrorCode returns the ErrorCode field value
func (o *WebMessage) GetErrorCode() ErrorCode {
	if o == nil {
		var ret ErrorCode
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *WebMessage) GetErrorCodeOk() (*ErrorCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *WebMessage) SetErrorCode(v ErrorCode) {
	o.ErrorCode = v
}

// GetHttpStatus returns the HttpStatus field value if set, zero value otherwise.
func (o *WebMessage) GetHttpStatus() string {
	if o == nil || IsNil(o.HttpStatus) {
		var ret string
		return ret
	}
	return *o.HttpStatus
}

// GetHttpStatusOk returns a tuple with the HttpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebMessage) GetHttpStatusOk() (*string, bool) {
	if o == nil || IsNil(o.HttpStatus) {
		return nil, false
	}
	return o.HttpStatus, true
}

// HasHttpStatus returns a boolean if a field has been set.
func (o *WebMessage) HasHttpStatus() bool {
	if o != nil && !IsNil(o.HttpStatus) {
		return true
	}

	return false
}

// SetHttpStatus gets a reference to the given string and assigns it to the HttpStatus field.
func (o *WebMessage) SetHttpStatus(v string) {
	o.HttpStatus = &v
}

// GetHttpStatusCode returns the HttpStatusCode field value
func (o *WebMessage) GetHttpStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HttpStatusCode
}

// GetHttpStatusCodeOk returns a tuple with the HttpStatusCode field value
// and a boolean to check if the value has been set.
func (o *WebMessage) GetHttpStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HttpStatusCode, true
}

// SetHttpStatusCode sets field value
func (o *WebMessage) SetHttpStatusCode(v int32) {
	o.HttpStatusCode = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *WebMessage) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebMessage) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *WebMessage) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *WebMessage) SetMessage(v string) {
	o.Message = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *WebMessage) GetResponse() WebMessageResponse {
	if o == nil || IsNil(o.Response) {
		var ret WebMessageResponse
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebMessage) GetResponseOk() (*WebMessageResponse, bool) {
	if o == nil || IsNil(o.Response) {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *WebMessage) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given WebMessageResponse and assigns it to the Response field.
func (o *WebMessage) SetResponse(v WebMessageResponse) {
	o.Response = &v
}

// GetStatus returns the Status field value
func (o *WebMessage) GetStatus() Status {
	if o == nil {
		var ret Status
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WebMessage) GetStatusOk() (*Status, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WebMessage) SetStatus(v Status) {
	o.Status = v
}

func (o WebMessage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.DevMessage) {
		toSerialize["devMessage"] = o.DevMessage
	}
	toSerialize["errorCode"] = o.ErrorCode
	if !IsNil(o.HttpStatus) {
		toSerialize["httpStatus"] = o.HttpStatus
	}
	toSerialize["httpStatusCode"] = o.HttpStatusCode
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *WebMessage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"errorCode",
		"httpStatusCode",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebMessage := _WebMessage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebMessage)

	if err != nil {
		return err
	}

	*o = WebMessage(varWebMessage)

	return err
}

type NullableWebMessage struct {
	value *WebMessage
	isSet bool
}

func (v NullableWebMessage) Get() *WebMessage {
	return v.value
}

func (v *NullableWebMessage) Set(val *WebMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableWebMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableWebMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebMessage(val *WebMessage) *NullableWebMessage {
	return &NullableWebMessage{value: val, isSet: true}
}

func (v NullableWebMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
