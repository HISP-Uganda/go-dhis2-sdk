/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response - struct for DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response
type DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response struct {
	DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfDashboardItem                                                 *[]DashboardItem
}

// DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response
func DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response(v *DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response {
	return DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response{
		DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []DashboardItemAsDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []DashboardItem wrapped in DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfDashboardItemAsDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response(v *[]DashboardItem) DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response {
	return DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfDashboardItem: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonDashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonDashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfDashboardItem
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDashboardItem)
	if err == nil {
		jsonArrayOfDashboardItem, _ := json.Marshal(dst.ArrayOfDashboardItem)
		if string(jsonArrayOfDashboardItem) == "{}" { // empty struct
			dst.ArrayOfDashboardItem = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDashboardItem = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfDashboardItem = nil

		return fmt.Errorf("data matches more than one schema in oneOf(DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfDashboardItem != nil {
		return json.Marshal(&src.ArrayOfDashboardItem)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.DashboardItemGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfDashboardItem != nil {
		return obj.ArrayOfDashboardItem
	}

	// all schemas are nil
	return nil
}

type NullableDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) Get() *DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response(val *DashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) *NullableDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardItemGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
