/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the OrganisationUnitParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganisationUnitParams{}

// OrganisationUnitParams struct for OrganisationUnitParams
type OrganisationUnitParams struct {
	Address                *string                                           `json:"address,omitempty"`
	AggregationType        AggregationType                                   `json:"aggregationType"`
	Ancestors              []CategoryOptionParamsOrganisationUnitsInner      `json:"ancestors,omitempty"`
	AttributeValues        []AttributeValueParams                            `json:"attributeValues,omitempty"`
	Children               []CategoryOptionParamsOrganisationUnitsInner      `json:"children,omitempty"`
	ClosedDate             *time.Time                                        `json:"closedDate,omitempty"`
	Code                   *string                                           `json:"code,omitempty"`
	Comment                *string                                           `json:"comment,omitempty"`
	ContactPerson          *string                                           `json:"contactPerson,omitempty"`
	Created                *time.Time                                        `json:"created,omitempty"`
	CreatedBy              *AggregateDataExchangeParamsCreatedBy             `json:"createdBy,omitempty"`
	DataSets               []DataApprovalWorkflowParamsDataSetsInner         `json:"dataSets,omitempty"`
	Description            *string                                           `json:"description,omitempty"`
	DimensionItem          *string                                           `json:"dimensionItem,omitempty"`
	DisplayDescription     *string                                           `json:"displayDescription,omitempty"`
	DisplayFormName        *string                                           `json:"displayFormName,omitempty"`
	DisplayName            *string                                           `json:"displayName,omitempty"`
	DisplayShortName       *string                                           `json:"displayShortName,omitempty"`
	Email                  *string                                           `json:"email,omitempty"`
	Favorite               *bool                                             `json:"favorite,omitempty"`
	Favorites              []string                                          `json:"favorites,omitempty"`
	FormName               *string                                           `json:"formName,omitempty"`
	Geometry               map[string]interface{}                            `json:"geometry,omitempty"`
	Id                     *string                                           `json:"id,omitempty"`
	Image                  *MessageConversationInfoParamsAttachmentsInner    `json:"image,omitempty"`
	LastUpdated            *time.Time                                        `json:"lastUpdated,omitempty"`
	LastUpdatedBy          *AggregateDataExchangeParamsCreatedBy             `json:"lastUpdatedBy,omitempty"`
	Leaf                   *bool                                             `json:"leaf,omitempty"`
	LegendSet              *CategoryOptionComboParamsLegendSet               `json:"legendSet,omitempty"`
	LegendSets             []CategoryOptionComboParamsLegendSet              `json:"legendSets,omitempty"`
	MemberCount            *int32                                            `json:"memberCount,omitempty"`
	Name                   *string                                           `json:"name,omitempty"`
	OpeningDate            *time.Time                                        `json:"openingDate,omitempty"`
	OrganisationUnitGroups []EventChartParamsItemOrganisationUnitGroupsInner `json:"organisationUnitGroups,omitempty"`
	Parent                 *OrganisationUnitParams                           `json:"parent,omitempty"`
	Path                   *string                                           `json:"path,omitempty"`
	PhoneNumber            *string                                           `json:"phoneNumber,omitempty"`
	Programs               []EventVisualizationParamsProgramDimensionsInner  `json:"programs,omitempty"`
	QueryMods              *QueryModifiers                                   `json:"queryMods,omitempty"`
	Sharing                *Sharing                                          `json:"sharing,omitempty"`
	ShortName              *string                                           `json:"shortName,omitempty"`
	Translations           []Translation                                     `json:"translations,omitempty"`
	Type                   *string                                           `json:"type,omitempty"`
	Url                    *string                                           `json:"url,omitempty"`
	Users                  []AggregateDataExchangeParamsCreatedBy            `json:"users,omitempty"`
}

type _OrganisationUnitParams OrganisationUnitParams

// NewOrganisationUnitParams instantiates a new OrganisationUnitParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganisationUnitParams(aggregationType AggregationType) *OrganisationUnitParams {
	this := OrganisationUnitParams{}
	this.AggregationType = aggregationType
	return &this
}

// NewOrganisationUnitParamsWithDefaults instantiates a new OrganisationUnitParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganisationUnitParamsWithDefaults() *OrganisationUnitParams {
	this := OrganisationUnitParams{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *OrganisationUnitParams) SetAddress(v string) {
	o.Address = &v
}

// GetAggregationType returns the AggregationType field value
func (o *OrganisationUnitParams) GetAggregationType() AggregationType {
	if o == nil {
		var ret AggregationType
		return ret
	}

	return o.AggregationType
}

// GetAggregationTypeOk returns a tuple with the AggregationType field value
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetAggregationTypeOk() (*AggregationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationType, true
}

// SetAggregationType sets field value
func (o *OrganisationUnitParams) SetAggregationType(v AggregationType) {
	o.AggregationType = v
}

// GetAncestors returns the Ancestors field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetAncestors() []CategoryOptionParamsOrganisationUnitsInner {
	if o == nil || IsNil(o.Ancestors) {
		var ret []CategoryOptionParamsOrganisationUnitsInner
		return ret
	}
	return o.Ancestors
}

// GetAncestorsOk returns a tuple with the Ancestors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetAncestorsOk() ([]CategoryOptionParamsOrganisationUnitsInner, bool) {
	if o == nil || IsNil(o.Ancestors) {
		return nil, false
	}
	return o.Ancestors, true
}

// HasAncestors returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasAncestors() bool {
	if o != nil && !IsNil(o.Ancestors) {
		return true
	}

	return false
}

// SetAncestors gets a reference to the given []CategoryOptionParamsOrganisationUnitsInner and assigns it to the Ancestors field.
func (o *OrganisationUnitParams) SetAncestors(v []CategoryOptionParamsOrganisationUnitsInner) {
	o.Ancestors = v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetAttributeValues() []AttributeValueParams {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValueParams
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetAttributeValuesOk() ([]AttributeValueParams, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValueParams and assigns it to the AttributeValues field.
func (o *OrganisationUnitParams) SetAttributeValues(v []AttributeValueParams) {
	o.AttributeValues = v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetChildren() []CategoryOptionParamsOrganisationUnitsInner {
	if o == nil || IsNil(o.Children) {
		var ret []CategoryOptionParamsOrganisationUnitsInner
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetChildrenOk() ([]CategoryOptionParamsOrganisationUnitsInner, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []CategoryOptionParamsOrganisationUnitsInner and assigns it to the Children field.
func (o *OrganisationUnitParams) SetChildren(v []CategoryOptionParamsOrganisationUnitsInner) {
	o.Children = v
}

// GetClosedDate returns the ClosedDate field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetClosedDate() time.Time {
	if o == nil || IsNil(o.ClosedDate) {
		var ret time.Time
		return ret
	}
	return *o.ClosedDate
}

// GetClosedDateOk returns a tuple with the ClosedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetClosedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ClosedDate) {
		return nil, false
	}
	return o.ClosedDate, true
}

// HasClosedDate returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasClosedDate() bool {
	if o != nil && !IsNil(o.ClosedDate) {
		return true
	}

	return false
}

// SetClosedDate gets a reference to the given time.Time and assigns it to the ClosedDate field.
func (o *OrganisationUnitParams) SetClosedDate(v time.Time) {
	o.ClosedDate = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *OrganisationUnitParams) SetCode(v string) {
	o.Code = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *OrganisationUnitParams) SetComment(v string) {
	o.Comment = &v
}

// GetContactPerson returns the ContactPerson field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetContactPerson() string {
	if o == nil || IsNil(o.ContactPerson) {
		var ret string
		return ret
	}
	return *o.ContactPerson
}

// GetContactPersonOk returns a tuple with the ContactPerson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetContactPersonOk() (*string, bool) {
	if o == nil || IsNil(o.ContactPerson) {
		return nil, false
	}
	return o.ContactPerson, true
}

// HasContactPerson returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasContactPerson() bool {
	if o != nil && !IsNil(o.ContactPerson) {
		return true
	}

	return false
}

// SetContactPerson gets a reference to the given string and assigns it to the ContactPerson field.
func (o *OrganisationUnitParams) SetContactPerson(v string) {
	o.ContactPerson = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *OrganisationUnitParams) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetCreatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetCreatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the CreatedBy field.
func (o *OrganisationUnitParams) SetCreatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.CreatedBy = &v
}

// GetDataSets returns the DataSets field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetDataSets() []DataApprovalWorkflowParamsDataSetsInner {
	if o == nil || IsNil(o.DataSets) {
		var ret []DataApprovalWorkflowParamsDataSetsInner
		return ret
	}
	return o.DataSets
}

// GetDataSetsOk returns a tuple with the DataSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetDataSetsOk() ([]DataApprovalWorkflowParamsDataSetsInner, bool) {
	if o == nil || IsNil(o.DataSets) {
		return nil, false
	}
	return o.DataSets, true
}

// HasDataSets returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasDataSets() bool {
	if o != nil && !IsNil(o.DataSets) {
		return true
	}

	return false
}

// SetDataSets gets a reference to the given []DataApprovalWorkflowParamsDataSetsInner and assigns it to the DataSets field.
func (o *OrganisationUnitParams) SetDataSets(v []DataApprovalWorkflowParamsDataSetsInner) {
	o.DataSets = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrganisationUnitParams) SetDescription(v string) {
	o.Description = &v
}

// GetDimensionItem returns the DimensionItem field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetDimensionItem() string {
	if o == nil || IsNil(o.DimensionItem) {
		var ret string
		return ret
	}
	return *o.DimensionItem
}

// GetDimensionItemOk returns a tuple with the DimensionItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetDimensionItemOk() (*string, bool) {
	if o == nil || IsNil(o.DimensionItem) {
		return nil, false
	}
	return o.DimensionItem, true
}

// HasDimensionItem returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasDimensionItem() bool {
	if o != nil && !IsNil(o.DimensionItem) {
		return true
	}

	return false
}

// SetDimensionItem gets a reference to the given string and assigns it to the DimensionItem field.
func (o *OrganisationUnitParams) SetDimensionItem(v string) {
	o.DimensionItem = &v
}

// GetDisplayDescription returns the DisplayDescription field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetDisplayDescription() string {
	if o == nil || IsNil(o.DisplayDescription) {
		var ret string
		return ret
	}
	return *o.DisplayDescription
}

// GetDisplayDescriptionOk returns a tuple with the DisplayDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetDisplayDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDescription) {
		return nil, false
	}
	return o.DisplayDescription, true
}

// HasDisplayDescription returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasDisplayDescription() bool {
	if o != nil && !IsNil(o.DisplayDescription) {
		return true
	}

	return false
}

// SetDisplayDescription gets a reference to the given string and assigns it to the DisplayDescription field.
func (o *OrganisationUnitParams) SetDisplayDescription(v string) {
	o.DisplayDescription = &v
}

// GetDisplayFormName returns the DisplayFormName field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetDisplayFormName() string {
	if o == nil || IsNil(o.DisplayFormName) {
		var ret string
		return ret
	}
	return *o.DisplayFormName
}

// GetDisplayFormNameOk returns a tuple with the DisplayFormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetDisplayFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayFormName) {
		return nil, false
	}
	return o.DisplayFormName, true
}

// HasDisplayFormName returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasDisplayFormName() bool {
	if o != nil && !IsNil(o.DisplayFormName) {
		return true
	}

	return false
}

// SetDisplayFormName gets a reference to the given string and assigns it to the DisplayFormName field.
func (o *OrganisationUnitParams) SetDisplayFormName(v string) {
	o.DisplayFormName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *OrganisationUnitParams) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayShortName returns the DisplayShortName field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetDisplayShortName() string {
	if o == nil || IsNil(o.DisplayShortName) {
		var ret string
		return ret
	}
	return *o.DisplayShortName
}

// GetDisplayShortNameOk returns a tuple with the DisplayShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetDisplayShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayShortName) {
		return nil, false
	}
	return o.DisplayShortName, true
}

// HasDisplayShortName returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasDisplayShortName() bool {
	if o != nil && !IsNil(o.DisplayShortName) {
		return true
	}

	return false
}

// SetDisplayShortName gets a reference to the given string and assigns it to the DisplayShortName field.
func (o *OrganisationUnitParams) SetDisplayShortName(v string) {
	o.DisplayShortName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrganisationUnitParams) SetEmail(v string) {
	o.Email = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *OrganisationUnitParams) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *OrganisationUnitParams) SetFavorites(v []string) {
	o.Favorites = v
}

// GetFormName returns the FormName field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetFormName() string {
	if o == nil || IsNil(o.FormName) {
		var ret string
		return ret
	}
	return *o.FormName
}

// GetFormNameOk returns a tuple with the FormName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetFormNameOk() (*string, bool) {
	if o == nil || IsNil(o.FormName) {
		return nil, false
	}
	return o.FormName, true
}

// HasFormName returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasFormName() bool {
	if o != nil && !IsNil(o.FormName) {
		return true
	}

	return false
}

// SetFormName gets a reference to the given string and assigns it to the FormName field.
func (o *OrganisationUnitParams) SetFormName(v string) {
	o.FormName = &v
}

// GetGeometry returns the Geometry field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetGeometry() map[string]interface{} {
	if o == nil || IsNil(o.Geometry) {
		var ret map[string]interface{}
		return ret
	}
	return o.Geometry
}

// GetGeometryOk returns a tuple with the Geometry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetGeometryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Geometry) {
		return map[string]interface{}{}, false
	}
	return o.Geometry, true
}

// HasGeometry returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasGeometry() bool {
	if o != nil && !IsNil(o.Geometry) {
		return true
	}

	return false
}

// SetGeometry gets a reference to the given map[string]interface{} and assigns it to the Geometry field.
func (o *OrganisationUnitParams) SetGeometry(v map[string]interface{}) {
	o.Geometry = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganisationUnitParams) SetId(v string) {
	o.Id = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetImage() MessageConversationInfoParamsAttachmentsInner {
	if o == nil || IsNil(o.Image) {
		var ret MessageConversationInfoParamsAttachmentsInner
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetImageOk() (*MessageConversationInfoParamsAttachmentsInner, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given MessageConversationInfoParamsAttachmentsInner and assigns it to the Image field.
func (o *OrganisationUnitParams) SetImage(v MessageConversationInfoParamsAttachmentsInner) {
	o.Image = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *OrganisationUnitParams) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetLastUpdatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetLastUpdatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the LastUpdatedBy field.
func (o *OrganisationUnitParams) SetLastUpdatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetLeaf returns the Leaf field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetLeaf() bool {
	if o == nil || IsNil(o.Leaf) {
		var ret bool
		return ret
	}
	return *o.Leaf
}

// GetLeafOk returns a tuple with the Leaf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetLeafOk() (*bool, bool) {
	if o == nil || IsNil(o.Leaf) {
		return nil, false
	}
	return o.Leaf, true
}

// HasLeaf returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasLeaf() bool {
	if o != nil && !IsNil(o.Leaf) {
		return true
	}

	return false
}

// SetLeaf gets a reference to the given bool and assigns it to the Leaf field.
func (o *OrganisationUnitParams) SetLeaf(v bool) {
	o.Leaf = &v
}

// GetLegendSet returns the LegendSet field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetLegendSet() CategoryOptionComboParamsLegendSet {
	if o == nil || IsNil(o.LegendSet) {
		var ret CategoryOptionComboParamsLegendSet
		return ret
	}
	return *o.LegendSet
}

// GetLegendSetOk returns a tuple with the LegendSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetLegendSetOk() (*CategoryOptionComboParamsLegendSet, bool) {
	if o == nil || IsNil(o.LegendSet) {
		return nil, false
	}
	return o.LegendSet, true
}

// HasLegendSet returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasLegendSet() bool {
	if o != nil && !IsNil(o.LegendSet) {
		return true
	}

	return false
}

// SetLegendSet gets a reference to the given CategoryOptionComboParamsLegendSet and assigns it to the LegendSet field.
func (o *OrganisationUnitParams) SetLegendSet(v CategoryOptionComboParamsLegendSet) {
	o.LegendSet = &v
}

// GetLegendSets returns the LegendSets field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetLegendSets() []CategoryOptionComboParamsLegendSet {
	if o == nil || IsNil(o.LegendSets) {
		var ret []CategoryOptionComboParamsLegendSet
		return ret
	}
	return o.LegendSets
}

// GetLegendSetsOk returns a tuple with the LegendSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetLegendSetsOk() ([]CategoryOptionComboParamsLegendSet, bool) {
	if o == nil || IsNil(o.LegendSets) {
		return nil, false
	}
	return o.LegendSets, true
}

// HasLegendSets returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasLegendSets() bool {
	if o != nil && !IsNil(o.LegendSets) {
		return true
	}

	return false
}

// SetLegendSets gets a reference to the given []CategoryOptionComboParamsLegendSet and assigns it to the LegendSets field.
func (o *OrganisationUnitParams) SetLegendSets(v []CategoryOptionComboParamsLegendSet) {
	o.LegendSets = v
}

// GetMemberCount returns the MemberCount field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetMemberCount() int32 {
	if o == nil || IsNil(o.MemberCount) {
		var ret int32
		return ret
	}
	return *o.MemberCount
}

// GetMemberCountOk returns a tuple with the MemberCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetMemberCountOk() (*int32, bool) {
	if o == nil || IsNil(o.MemberCount) {
		return nil, false
	}
	return o.MemberCount, true
}

// HasMemberCount returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasMemberCount() bool {
	if o != nil && !IsNil(o.MemberCount) {
		return true
	}

	return false
}

// SetMemberCount gets a reference to the given int32 and assigns it to the MemberCount field.
func (o *OrganisationUnitParams) SetMemberCount(v int32) {
	o.MemberCount = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganisationUnitParams) SetName(v string) {
	o.Name = &v
}

// GetOpeningDate returns the OpeningDate field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetOpeningDate() time.Time {
	if o == nil || IsNil(o.OpeningDate) {
		var ret time.Time
		return ret
	}
	return *o.OpeningDate
}

// GetOpeningDateOk returns a tuple with the OpeningDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetOpeningDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OpeningDate) {
		return nil, false
	}
	return o.OpeningDate, true
}

// HasOpeningDate returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasOpeningDate() bool {
	if o != nil && !IsNil(o.OpeningDate) {
		return true
	}

	return false
}

// SetOpeningDate gets a reference to the given time.Time and assigns it to the OpeningDate field.
func (o *OrganisationUnitParams) SetOpeningDate(v time.Time) {
	o.OpeningDate = &v
}

// GetOrganisationUnitGroups returns the OrganisationUnitGroups field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetOrganisationUnitGroups() []EventChartParamsItemOrganisationUnitGroupsInner {
	if o == nil || IsNil(o.OrganisationUnitGroups) {
		var ret []EventChartParamsItemOrganisationUnitGroupsInner
		return ret
	}
	return o.OrganisationUnitGroups
}

// GetOrganisationUnitGroupsOk returns a tuple with the OrganisationUnitGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetOrganisationUnitGroupsOk() ([]EventChartParamsItemOrganisationUnitGroupsInner, bool) {
	if o == nil || IsNil(o.OrganisationUnitGroups) {
		return nil, false
	}
	return o.OrganisationUnitGroups, true
}

// HasOrganisationUnitGroups returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasOrganisationUnitGroups() bool {
	if o != nil && !IsNil(o.OrganisationUnitGroups) {
		return true
	}

	return false
}

// SetOrganisationUnitGroups gets a reference to the given []EventChartParamsItemOrganisationUnitGroupsInner and assigns it to the OrganisationUnitGroups field.
func (o *OrganisationUnitParams) SetOrganisationUnitGroups(v []EventChartParamsItemOrganisationUnitGroupsInner) {
	o.OrganisationUnitGroups = v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetParent() OrganisationUnitParams {
	if o == nil || IsNil(o.Parent) {
		var ret OrganisationUnitParams
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetParentOk() (*OrganisationUnitParams, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given OrganisationUnitParams and assigns it to the Parent field.
func (o *OrganisationUnitParams) SetParent(v OrganisationUnitParams) {
	o.Parent = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *OrganisationUnitParams) SetPath(v string) {
	o.Path = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *OrganisationUnitParams) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetPrograms returns the Programs field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetPrograms() []EventVisualizationParamsProgramDimensionsInner {
	if o == nil || IsNil(o.Programs) {
		var ret []EventVisualizationParamsProgramDimensionsInner
		return ret
	}
	return o.Programs
}

// GetProgramsOk returns a tuple with the Programs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetProgramsOk() ([]EventVisualizationParamsProgramDimensionsInner, bool) {
	if o == nil || IsNil(o.Programs) {
		return nil, false
	}
	return o.Programs, true
}

// HasPrograms returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasPrograms() bool {
	if o != nil && !IsNil(o.Programs) {
		return true
	}

	return false
}

// SetPrograms gets a reference to the given []EventVisualizationParamsProgramDimensionsInner and assigns it to the Programs field.
func (o *OrganisationUnitParams) SetPrograms(v []EventVisualizationParamsProgramDimensionsInner) {
	o.Programs = v
}

// GetQueryMods returns the QueryMods field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetQueryMods() QueryModifiers {
	if o == nil || IsNil(o.QueryMods) {
		var ret QueryModifiers
		return ret
	}
	return *o.QueryMods
}

// GetQueryModsOk returns a tuple with the QueryMods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetQueryModsOk() (*QueryModifiers, bool) {
	if o == nil || IsNil(o.QueryMods) {
		return nil, false
	}
	return o.QueryMods, true
}

// HasQueryMods returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasQueryMods() bool {
	if o != nil && !IsNil(o.QueryMods) {
		return true
	}

	return false
}

// SetQueryMods gets a reference to the given QueryModifiers and assigns it to the QueryMods field.
func (o *OrganisationUnitParams) SetQueryMods(v QueryModifiers) {
	o.QueryMods = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *OrganisationUnitParams) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *OrganisationUnitParams) SetShortName(v string) {
	o.ShortName = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *OrganisationUnitParams) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OrganisationUnitParams) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OrganisationUnitParams) SetUrl(v string) {
	o.Url = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *OrganisationUnitParams) GetUsers() []AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.Users) {
		var ret []AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganisationUnitParams) GetUsersOk() ([]AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *OrganisationUnitParams) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []AggregateDataExchangeParamsCreatedBy and assigns it to the Users field.
func (o *OrganisationUnitParams) SetUsers(v []AggregateDataExchangeParamsCreatedBy) {
	o.Users = v
}

func (o OrganisationUnitParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganisationUnitParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	toSerialize["aggregationType"] = o.AggregationType
	if !IsNil(o.Ancestors) {
		toSerialize["ancestors"] = o.Ancestors
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.ClosedDate) {
		toSerialize["closedDate"] = o.ClosedDate
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ContactPerson) {
		toSerialize["contactPerson"] = o.ContactPerson
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DataSets) {
		toSerialize["dataSets"] = o.DataSets
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DimensionItem) {
		toSerialize["dimensionItem"] = o.DimensionItem
	}
	if !IsNil(o.DisplayDescription) {
		toSerialize["displayDescription"] = o.DisplayDescription
	}
	if !IsNil(o.DisplayFormName) {
		toSerialize["displayFormName"] = o.DisplayFormName
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplayShortName) {
		toSerialize["displayShortName"] = o.DisplayShortName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.FormName) {
		toSerialize["formName"] = o.FormName
	}
	if !IsNil(o.Geometry) {
		toSerialize["geometry"] = o.Geometry
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Leaf) {
		toSerialize["leaf"] = o.Leaf
	}
	if !IsNil(o.LegendSet) {
		toSerialize["legendSet"] = o.LegendSet
	}
	if !IsNil(o.LegendSets) {
		toSerialize["legendSets"] = o.LegendSets
	}
	if !IsNil(o.MemberCount) {
		toSerialize["memberCount"] = o.MemberCount
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OpeningDate) {
		toSerialize["openingDate"] = o.OpeningDate
	}
	if !IsNil(o.OrganisationUnitGroups) {
		toSerialize["organisationUnitGroups"] = o.OrganisationUnitGroups
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.Programs) {
		toSerialize["programs"] = o.Programs
	}
	if !IsNil(o.QueryMods) {
		toSerialize["queryMods"] = o.QueryMods
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

func (o *OrganisationUnitParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"aggregationType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganisationUnitParams := _OrganisationUnitParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrganisationUnitParams)

	if err != nil {
		return err
	}

	*o = OrganisationUnitParams(varOrganisationUnitParams)

	return err
}

type NullableOrganisationUnitParams struct {
	value *OrganisationUnitParams
	isSet bool
}

func (v NullableOrganisationUnitParams) Get() *OrganisationUnitParams {
	return v.value
}

func (v *NullableOrganisationUnitParams) Set(val *OrganisationUnitParams) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganisationUnitParams) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganisationUnitParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganisationUnitParams(val *OrganisationUnitParams) *NullableOrganisationUnitParams {
	return &NullableOrganisationUnitParams{value: val, isSet: true}
}

func (v NullableOrganisationUnitParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganisationUnitParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
