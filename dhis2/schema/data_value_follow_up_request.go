/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the DataValueFollowUpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataValueFollowUpRequest{}

// DataValueFollowUpRequest struct for DataValueFollowUpRequest
type DataValueFollowUpRequest struct {
	Attribute *DataValueCategoryDto `json:"attribute,omitempty"`
	// A UID for an CategoryOptionCombo object   (Java name `org.hisp.dhis.category.CategoryOptionCombo`)
	AttributeOptionCombo *string `json:"attributeOptionCombo,omitempty"`
	// A UID for an CategoryOptionCombo object   (Java name `org.hisp.dhis.category.CategoryOptionCombo`)
	CategoryOptionCombo *string `json:"categoryOptionCombo,omitempty"`
	// A UID for an DataSet object   (Java name `org.hisp.dhis.dataset.DataSet`)
	DataElement *string `json:"dataElement,omitempty"`
	Followup    *bool   `json:"followup,omitempty"`
	// A UID for an OrganisationUnit object   (Java name `org.hisp.dhis.organisationunit.OrganisationUnit`)
	OrgUnit *string `json:"orgUnit,omitempty"`
	Period  *string `json:"period,omitempty"`
}

// NewDataValueFollowUpRequest instantiates a new DataValueFollowUpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataValueFollowUpRequest() *DataValueFollowUpRequest {
	this := DataValueFollowUpRequest{}
	return &this
}

// NewDataValueFollowUpRequestWithDefaults instantiates a new DataValueFollowUpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataValueFollowUpRequestWithDefaults() *DataValueFollowUpRequest {
	this := DataValueFollowUpRequest{}
	return &this
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *DataValueFollowUpRequest) GetAttribute() DataValueCategoryDto {
	if o == nil || IsNil(o.Attribute) {
		var ret DataValueCategoryDto
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataValueFollowUpRequest) GetAttributeOk() (*DataValueCategoryDto, bool) {
	if o == nil || IsNil(o.Attribute) {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *DataValueFollowUpRequest) HasAttribute() bool {
	if o != nil && !IsNil(o.Attribute) {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given DataValueCategoryDto and assigns it to the Attribute field.
func (o *DataValueFollowUpRequest) SetAttribute(v DataValueCategoryDto) {
	o.Attribute = &v
}

// GetAttributeOptionCombo returns the AttributeOptionCombo field value if set, zero value otherwise.
func (o *DataValueFollowUpRequest) GetAttributeOptionCombo() string {
	if o == nil || IsNil(o.AttributeOptionCombo) {
		var ret string
		return ret
	}
	return *o.AttributeOptionCombo
}

// GetAttributeOptionComboOk returns a tuple with the AttributeOptionCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataValueFollowUpRequest) GetAttributeOptionComboOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeOptionCombo) {
		return nil, false
	}
	return o.AttributeOptionCombo, true
}

// HasAttributeOptionCombo returns a boolean if a field has been set.
func (o *DataValueFollowUpRequest) HasAttributeOptionCombo() bool {
	if o != nil && !IsNil(o.AttributeOptionCombo) {
		return true
	}

	return false
}

// SetAttributeOptionCombo gets a reference to the given string and assigns it to the AttributeOptionCombo field.
func (o *DataValueFollowUpRequest) SetAttributeOptionCombo(v string) {
	o.AttributeOptionCombo = &v
}

// GetCategoryOptionCombo returns the CategoryOptionCombo field value if set, zero value otherwise.
func (o *DataValueFollowUpRequest) GetCategoryOptionCombo() string {
	if o == nil || IsNil(o.CategoryOptionCombo) {
		var ret string
		return ret
	}
	return *o.CategoryOptionCombo
}

// GetCategoryOptionComboOk returns a tuple with the CategoryOptionCombo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataValueFollowUpRequest) GetCategoryOptionComboOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryOptionCombo) {
		return nil, false
	}
	return o.CategoryOptionCombo, true
}

// HasCategoryOptionCombo returns a boolean if a field has been set.
func (o *DataValueFollowUpRequest) HasCategoryOptionCombo() bool {
	if o != nil && !IsNil(o.CategoryOptionCombo) {
		return true
	}

	return false
}

// SetCategoryOptionCombo gets a reference to the given string and assigns it to the CategoryOptionCombo field.
func (o *DataValueFollowUpRequest) SetCategoryOptionCombo(v string) {
	o.CategoryOptionCombo = &v
}

// GetDataElement returns the DataElement field value if set, zero value otherwise.
func (o *DataValueFollowUpRequest) GetDataElement() string {
	if o == nil || IsNil(o.DataElement) {
		var ret string
		return ret
	}
	return *o.DataElement
}

// GetDataElementOk returns a tuple with the DataElement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataValueFollowUpRequest) GetDataElementOk() (*string, bool) {
	if o == nil || IsNil(o.DataElement) {
		return nil, false
	}
	return o.DataElement, true
}

// HasDataElement returns a boolean if a field has been set.
func (o *DataValueFollowUpRequest) HasDataElement() bool {
	if o != nil && !IsNil(o.DataElement) {
		return true
	}

	return false
}

// SetDataElement gets a reference to the given string and assigns it to the DataElement field.
func (o *DataValueFollowUpRequest) SetDataElement(v string) {
	o.DataElement = &v
}

// GetFollowup returns the Followup field value if set, zero value otherwise.
func (o *DataValueFollowUpRequest) GetFollowup() bool {
	if o == nil || IsNil(o.Followup) {
		var ret bool
		return ret
	}
	return *o.Followup
}

// GetFollowupOk returns a tuple with the Followup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataValueFollowUpRequest) GetFollowupOk() (*bool, bool) {
	if o == nil || IsNil(o.Followup) {
		return nil, false
	}
	return o.Followup, true
}

// HasFollowup returns a boolean if a field has been set.
func (o *DataValueFollowUpRequest) HasFollowup() bool {
	if o != nil && !IsNil(o.Followup) {
		return true
	}

	return false
}

// SetFollowup gets a reference to the given bool and assigns it to the Followup field.
func (o *DataValueFollowUpRequest) SetFollowup(v bool) {
	o.Followup = &v
}

// GetOrgUnit returns the OrgUnit field value if set, zero value otherwise.
func (o *DataValueFollowUpRequest) GetOrgUnit() string {
	if o == nil || IsNil(o.OrgUnit) {
		var ret string
		return ret
	}
	return *o.OrgUnit
}

// GetOrgUnitOk returns a tuple with the OrgUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataValueFollowUpRequest) GetOrgUnitOk() (*string, bool) {
	if o == nil || IsNil(o.OrgUnit) {
		return nil, false
	}
	return o.OrgUnit, true
}

// HasOrgUnit returns a boolean if a field has been set.
func (o *DataValueFollowUpRequest) HasOrgUnit() bool {
	if o != nil && !IsNil(o.OrgUnit) {
		return true
	}

	return false
}

// SetOrgUnit gets a reference to the given string and assigns it to the OrgUnit field.
func (o *DataValueFollowUpRequest) SetOrgUnit(v string) {
	o.OrgUnit = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *DataValueFollowUpRequest) GetPeriod() string {
	if o == nil || IsNil(o.Period) {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataValueFollowUpRequest) GetPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *DataValueFollowUpRequest) HasPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *DataValueFollowUpRequest) SetPeriod(v string) {
	o.Period = &v
}

func (o DataValueFollowUpRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataValueFollowUpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attribute) {
		toSerialize["attribute"] = o.Attribute
	}
	if !IsNil(o.AttributeOptionCombo) {
		toSerialize["attributeOptionCombo"] = o.AttributeOptionCombo
	}
	if !IsNil(o.CategoryOptionCombo) {
		toSerialize["categoryOptionCombo"] = o.CategoryOptionCombo
	}
	if !IsNil(o.DataElement) {
		toSerialize["dataElement"] = o.DataElement
	}
	if !IsNil(o.Followup) {
		toSerialize["followup"] = o.Followup
	}
	if !IsNil(o.OrgUnit) {
		toSerialize["orgUnit"] = o.OrgUnit
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	return toSerialize, nil
}

type NullableDataValueFollowUpRequest struct {
	value *DataValueFollowUpRequest
	isSet bool
}

func (v NullableDataValueFollowUpRequest) Get() *DataValueFollowUpRequest {
	return v.value
}

func (v *NullableDataValueFollowUpRequest) Set(val *DataValueFollowUpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDataValueFollowUpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDataValueFollowUpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataValueFollowUpRequest(val *DataValueFollowUpRequest) *NullableDataValueFollowUpRequest {
	return &NullableDataValueFollowUpRequest{value: val, isSet: true}
}

func (v NullableDataValueFollowUpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataValueFollowUpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
