/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the RelativePeriods type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelativePeriods{}

// RelativePeriods struct for RelativePeriods
type RelativePeriods struct {
	BiMonthsThisYear     *bool `json:"biMonthsThisYear,omitempty"`
	Last10FinancialYears *bool `json:"last10FinancialYears,omitempty"`
	Last10Years          *bool `json:"last10Years,omitempty"`
	Last12Months         *bool `json:"last12Months,omitempty"`
	Last12Weeks          *bool `json:"last12Weeks,omitempty"`
	Last14Days           *bool `json:"last14Days,omitempty"`
	Last180Days          *bool `json:"last180Days,omitempty"`
	Last2SixMonths       *bool `json:"last2SixMonths,omitempty"`
	Last30Days           *bool `json:"last30Days,omitempty"`
	Last3Days            *bool `json:"last3Days,omitempty"`
	Last3Months          *bool `json:"last3Months,omitempty"`
	Last4BiWeeks         *bool `json:"last4BiWeeks,omitempty"`
	Last4Quarters        *bool `json:"last4Quarters,omitempty"`
	Last4Weeks           *bool `json:"last4Weeks,omitempty"`
	Last52Weeks          *bool `json:"last52Weeks,omitempty"`
	Last5FinancialYears  *bool `json:"last5FinancialYears,omitempty"`
	Last5Years           *bool `json:"last5Years,omitempty"`
	Last60Days           *bool `json:"last60Days,omitempty"`
	Last6BiMonths        *bool `json:"last6BiMonths,omitempty"`
	Last6Months          *bool `json:"last6Months,omitempty"`
	Last7Days            *bool `json:"last7Days,omitempty"`
	Last90Days           *bool `json:"last90Days,omitempty"`
	LastBiWeek           *bool `json:"lastBiWeek,omitempty"`
	LastBimonth          *bool `json:"lastBimonth,omitempty"`
	LastFinancialYear    *bool `json:"lastFinancialYear,omitempty"`
	LastMonth            *bool `json:"lastMonth,omitempty"`
	LastQuarter          *bool `json:"lastQuarter,omitempty"`
	LastSixMonth         *bool `json:"lastSixMonth,omitempty"`
	LastWeek             *bool `json:"lastWeek,omitempty"`
	LastYear             *bool `json:"lastYear,omitempty"`
	MonthsLastYear       *bool `json:"monthsLastYear,omitempty"`
	MonthsThisYear       *bool `json:"monthsThisYear,omitempty"`
	QuartersLastYear     *bool `json:"quartersLastYear,omitempty"`
	QuartersThisYear     *bool `json:"quartersThisYear,omitempty"`
	ThisBiWeek           *bool `json:"thisBiWeek,omitempty"`
	ThisBimonth          *bool `json:"thisBimonth,omitempty"`
	ThisDay              *bool `json:"thisDay,omitempty"`
	ThisFinancialYear    *bool `json:"thisFinancialYear,omitempty"`
	ThisMonth            *bool `json:"thisMonth,omitempty"`
	ThisQuarter          *bool `json:"thisQuarter,omitempty"`
	ThisSixMonth         *bool `json:"thisSixMonth,omitempty"`
	ThisWeek             *bool `json:"thisWeek,omitempty"`
	ThisYear             *bool `json:"thisYear,omitempty"`
	WeeksThisYear        *bool `json:"weeksThisYear,omitempty"`
	Yesterday            *bool `json:"yesterday,omitempty"`
}

// NewRelativePeriods instantiates a new RelativePeriods object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelativePeriods() *RelativePeriods {
	this := RelativePeriods{}
	return &this
}

// NewRelativePeriodsWithDefaults instantiates a new RelativePeriods object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelativePeriodsWithDefaults() *RelativePeriods {
	this := RelativePeriods{}
	return &this
}

// GetBiMonthsThisYear returns the BiMonthsThisYear field value if set, zero value otherwise.
func (o *RelativePeriods) GetBiMonthsThisYear() bool {
	if o == nil || IsNil(o.BiMonthsThisYear) {
		var ret bool
		return ret
	}
	return *o.BiMonthsThisYear
}

// GetBiMonthsThisYearOk returns a tuple with the BiMonthsThisYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetBiMonthsThisYearOk() (*bool, bool) {
	if o == nil || IsNil(o.BiMonthsThisYear) {
		return nil, false
	}
	return o.BiMonthsThisYear, true
}

// HasBiMonthsThisYear returns a boolean if a field has been set.
func (o *RelativePeriods) HasBiMonthsThisYear() bool {
	if o != nil && !IsNil(o.BiMonthsThisYear) {
		return true
	}

	return false
}

// SetBiMonthsThisYear gets a reference to the given bool and assigns it to the BiMonthsThisYear field.
func (o *RelativePeriods) SetBiMonthsThisYear(v bool) {
	o.BiMonthsThisYear = &v
}

// GetLast10FinancialYears returns the Last10FinancialYears field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast10FinancialYears() bool {
	if o == nil || IsNil(o.Last10FinancialYears) {
		var ret bool
		return ret
	}
	return *o.Last10FinancialYears
}

// GetLast10FinancialYearsOk returns a tuple with the Last10FinancialYears field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast10FinancialYearsOk() (*bool, bool) {
	if o == nil || IsNil(o.Last10FinancialYears) {
		return nil, false
	}
	return o.Last10FinancialYears, true
}

// HasLast10FinancialYears returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast10FinancialYears() bool {
	if o != nil && !IsNil(o.Last10FinancialYears) {
		return true
	}

	return false
}

// SetLast10FinancialYears gets a reference to the given bool and assigns it to the Last10FinancialYears field.
func (o *RelativePeriods) SetLast10FinancialYears(v bool) {
	o.Last10FinancialYears = &v
}

// GetLast10Years returns the Last10Years field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast10Years() bool {
	if o == nil || IsNil(o.Last10Years) {
		var ret bool
		return ret
	}
	return *o.Last10Years
}

// GetLast10YearsOk returns a tuple with the Last10Years field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast10YearsOk() (*bool, bool) {
	if o == nil || IsNil(o.Last10Years) {
		return nil, false
	}
	return o.Last10Years, true
}

// HasLast10Years returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast10Years() bool {
	if o != nil && !IsNil(o.Last10Years) {
		return true
	}

	return false
}

// SetLast10Years gets a reference to the given bool and assigns it to the Last10Years field.
func (o *RelativePeriods) SetLast10Years(v bool) {
	o.Last10Years = &v
}

// GetLast12Months returns the Last12Months field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast12Months() bool {
	if o == nil || IsNil(o.Last12Months) {
		var ret bool
		return ret
	}
	return *o.Last12Months
}

// GetLast12MonthsOk returns a tuple with the Last12Months field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast12MonthsOk() (*bool, bool) {
	if o == nil || IsNil(o.Last12Months) {
		return nil, false
	}
	return o.Last12Months, true
}

// HasLast12Months returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast12Months() bool {
	if o != nil && !IsNil(o.Last12Months) {
		return true
	}

	return false
}

// SetLast12Months gets a reference to the given bool and assigns it to the Last12Months field.
func (o *RelativePeriods) SetLast12Months(v bool) {
	o.Last12Months = &v
}

// GetLast12Weeks returns the Last12Weeks field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast12Weeks() bool {
	if o == nil || IsNil(o.Last12Weeks) {
		var ret bool
		return ret
	}
	return *o.Last12Weeks
}

// GetLast12WeeksOk returns a tuple with the Last12Weeks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast12WeeksOk() (*bool, bool) {
	if o == nil || IsNil(o.Last12Weeks) {
		return nil, false
	}
	return o.Last12Weeks, true
}

// HasLast12Weeks returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast12Weeks() bool {
	if o != nil && !IsNil(o.Last12Weeks) {
		return true
	}

	return false
}

// SetLast12Weeks gets a reference to the given bool and assigns it to the Last12Weeks field.
func (o *RelativePeriods) SetLast12Weeks(v bool) {
	o.Last12Weeks = &v
}

// GetLast14Days returns the Last14Days field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast14Days() bool {
	if o == nil || IsNil(o.Last14Days) {
		var ret bool
		return ret
	}
	return *o.Last14Days
}

// GetLast14DaysOk returns a tuple with the Last14Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast14DaysOk() (*bool, bool) {
	if o == nil || IsNil(o.Last14Days) {
		return nil, false
	}
	return o.Last14Days, true
}

// HasLast14Days returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast14Days() bool {
	if o != nil && !IsNil(o.Last14Days) {
		return true
	}

	return false
}

// SetLast14Days gets a reference to the given bool and assigns it to the Last14Days field.
func (o *RelativePeriods) SetLast14Days(v bool) {
	o.Last14Days = &v
}

// GetLast180Days returns the Last180Days field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast180Days() bool {
	if o == nil || IsNil(o.Last180Days) {
		var ret bool
		return ret
	}
	return *o.Last180Days
}

// GetLast180DaysOk returns a tuple with the Last180Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast180DaysOk() (*bool, bool) {
	if o == nil || IsNil(o.Last180Days) {
		return nil, false
	}
	return o.Last180Days, true
}

// HasLast180Days returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast180Days() bool {
	if o != nil && !IsNil(o.Last180Days) {
		return true
	}

	return false
}

// SetLast180Days gets a reference to the given bool and assigns it to the Last180Days field.
func (o *RelativePeriods) SetLast180Days(v bool) {
	o.Last180Days = &v
}

// GetLast2SixMonths returns the Last2SixMonths field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast2SixMonths() bool {
	if o == nil || IsNil(o.Last2SixMonths) {
		var ret bool
		return ret
	}
	return *o.Last2SixMonths
}

// GetLast2SixMonthsOk returns a tuple with the Last2SixMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast2SixMonthsOk() (*bool, bool) {
	if o == nil || IsNil(o.Last2SixMonths) {
		return nil, false
	}
	return o.Last2SixMonths, true
}

// HasLast2SixMonths returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast2SixMonths() bool {
	if o != nil && !IsNil(o.Last2SixMonths) {
		return true
	}

	return false
}

// SetLast2SixMonths gets a reference to the given bool and assigns it to the Last2SixMonths field.
func (o *RelativePeriods) SetLast2SixMonths(v bool) {
	o.Last2SixMonths = &v
}

// GetLast30Days returns the Last30Days field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast30Days() bool {
	if o == nil || IsNil(o.Last30Days) {
		var ret bool
		return ret
	}
	return *o.Last30Days
}

// GetLast30DaysOk returns a tuple with the Last30Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast30DaysOk() (*bool, bool) {
	if o == nil || IsNil(o.Last30Days) {
		return nil, false
	}
	return o.Last30Days, true
}

// HasLast30Days returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast30Days() bool {
	if o != nil && !IsNil(o.Last30Days) {
		return true
	}

	return false
}

// SetLast30Days gets a reference to the given bool and assigns it to the Last30Days field.
func (o *RelativePeriods) SetLast30Days(v bool) {
	o.Last30Days = &v
}

// GetLast3Days returns the Last3Days field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast3Days() bool {
	if o == nil || IsNil(o.Last3Days) {
		var ret bool
		return ret
	}
	return *o.Last3Days
}

// GetLast3DaysOk returns a tuple with the Last3Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast3DaysOk() (*bool, bool) {
	if o == nil || IsNil(o.Last3Days) {
		return nil, false
	}
	return o.Last3Days, true
}

// HasLast3Days returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast3Days() bool {
	if o != nil && !IsNil(o.Last3Days) {
		return true
	}

	return false
}

// SetLast3Days gets a reference to the given bool and assigns it to the Last3Days field.
func (o *RelativePeriods) SetLast3Days(v bool) {
	o.Last3Days = &v
}

// GetLast3Months returns the Last3Months field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast3Months() bool {
	if o == nil || IsNil(o.Last3Months) {
		var ret bool
		return ret
	}
	return *o.Last3Months
}

// GetLast3MonthsOk returns a tuple with the Last3Months field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast3MonthsOk() (*bool, bool) {
	if o == nil || IsNil(o.Last3Months) {
		return nil, false
	}
	return o.Last3Months, true
}

// HasLast3Months returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast3Months() bool {
	if o != nil && !IsNil(o.Last3Months) {
		return true
	}

	return false
}

// SetLast3Months gets a reference to the given bool and assigns it to the Last3Months field.
func (o *RelativePeriods) SetLast3Months(v bool) {
	o.Last3Months = &v
}

// GetLast4BiWeeks returns the Last4BiWeeks field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast4BiWeeks() bool {
	if o == nil || IsNil(o.Last4BiWeeks) {
		var ret bool
		return ret
	}
	return *o.Last4BiWeeks
}

// GetLast4BiWeeksOk returns a tuple with the Last4BiWeeks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast4BiWeeksOk() (*bool, bool) {
	if o == nil || IsNil(o.Last4BiWeeks) {
		return nil, false
	}
	return o.Last4BiWeeks, true
}

// HasLast4BiWeeks returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast4BiWeeks() bool {
	if o != nil && !IsNil(o.Last4BiWeeks) {
		return true
	}

	return false
}

// SetLast4BiWeeks gets a reference to the given bool and assigns it to the Last4BiWeeks field.
func (o *RelativePeriods) SetLast4BiWeeks(v bool) {
	o.Last4BiWeeks = &v
}

// GetLast4Quarters returns the Last4Quarters field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast4Quarters() bool {
	if o == nil || IsNil(o.Last4Quarters) {
		var ret bool
		return ret
	}
	return *o.Last4Quarters
}

// GetLast4QuartersOk returns a tuple with the Last4Quarters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast4QuartersOk() (*bool, bool) {
	if o == nil || IsNil(o.Last4Quarters) {
		return nil, false
	}
	return o.Last4Quarters, true
}

// HasLast4Quarters returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast4Quarters() bool {
	if o != nil && !IsNil(o.Last4Quarters) {
		return true
	}

	return false
}

// SetLast4Quarters gets a reference to the given bool and assigns it to the Last4Quarters field.
func (o *RelativePeriods) SetLast4Quarters(v bool) {
	o.Last4Quarters = &v
}

// GetLast4Weeks returns the Last4Weeks field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast4Weeks() bool {
	if o == nil || IsNil(o.Last4Weeks) {
		var ret bool
		return ret
	}
	return *o.Last4Weeks
}

// GetLast4WeeksOk returns a tuple with the Last4Weeks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast4WeeksOk() (*bool, bool) {
	if o == nil || IsNil(o.Last4Weeks) {
		return nil, false
	}
	return o.Last4Weeks, true
}

// HasLast4Weeks returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast4Weeks() bool {
	if o != nil && !IsNil(o.Last4Weeks) {
		return true
	}

	return false
}

// SetLast4Weeks gets a reference to the given bool and assigns it to the Last4Weeks field.
func (o *RelativePeriods) SetLast4Weeks(v bool) {
	o.Last4Weeks = &v
}

// GetLast52Weeks returns the Last52Weeks field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast52Weeks() bool {
	if o == nil || IsNil(o.Last52Weeks) {
		var ret bool
		return ret
	}
	return *o.Last52Weeks
}

// GetLast52WeeksOk returns a tuple with the Last52Weeks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast52WeeksOk() (*bool, bool) {
	if o == nil || IsNil(o.Last52Weeks) {
		return nil, false
	}
	return o.Last52Weeks, true
}

// HasLast52Weeks returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast52Weeks() bool {
	if o != nil && !IsNil(o.Last52Weeks) {
		return true
	}

	return false
}

// SetLast52Weeks gets a reference to the given bool and assigns it to the Last52Weeks field.
func (o *RelativePeriods) SetLast52Weeks(v bool) {
	o.Last52Weeks = &v
}

// GetLast5FinancialYears returns the Last5FinancialYears field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast5FinancialYears() bool {
	if o == nil || IsNil(o.Last5FinancialYears) {
		var ret bool
		return ret
	}
	return *o.Last5FinancialYears
}

// GetLast5FinancialYearsOk returns a tuple with the Last5FinancialYears field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast5FinancialYearsOk() (*bool, bool) {
	if o == nil || IsNil(o.Last5FinancialYears) {
		return nil, false
	}
	return o.Last5FinancialYears, true
}

// HasLast5FinancialYears returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast5FinancialYears() bool {
	if o != nil && !IsNil(o.Last5FinancialYears) {
		return true
	}

	return false
}

// SetLast5FinancialYears gets a reference to the given bool and assigns it to the Last5FinancialYears field.
func (o *RelativePeriods) SetLast5FinancialYears(v bool) {
	o.Last5FinancialYears = &v
}

// GetLast5Years returns the Last5Years field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast5Years() bool {
	if o == nil || IsNil(o.Last5Years) {
		var ret bool
		return ret
	}
	return *o.Last5Years
}

// GetLast5YearsOk returns a tuple with the Last5Years field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast5YearsOk() (*bool, bool) {
	if o == nil || IsNil(o.Last5Years) {
		return nil, false
	}
	return o.Last5Years, true
}

// HasLast5Years returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast5Years() bool {
	if o != nil && !IsNil(o.Last5Years) {
		return true
	}

	return false
}

// SetLast5Years gets a reference to the given bool and assigns it to the Last5Years field.
func (o *RelativePeriods) SetLast5Years(v bool) {
	o.Last5Years = &v
}

// GetLast60Days returns the Last60Days field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast60Days() bool {
	if o == nil || IsNil(o.Last60Days) {
		var ret bool
		return ret
	}
	return *o.Last60Days
}

// GetLast60DaysOk returns a tuple with the Last60Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast60DaysOk() (*bool, bool) {
	if o == nil || IsNil(o.Last60Days) {
		return nil, false
	}
	return o.Last60Days, true
}

// HasLast60Days returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast60Days() bool {
	if o != nil && !IsNil(o.Last60Days) {
		return true
	}

	return false
}

// SetLast60Days gets a reference to the given bool and assigns it to the Last60Days field.
func (o *RelativePeriods) SetLast60Days(v bool) {
	o.Last60Days = &v
}

// GetLast6BiMonths returns the Last6BiMonths field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast6BiMonths() bool {
	if o == nil || IsNil(o.Last6BiMonths) {
		var ret bool
		return ret
	}
	return *o.Last6BiMonths
}

// GetLast6BiMonthsOk returns a tuple with the Last6BiMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast6BiMonthsOk() (*bool, bool) {
	if o == nil || IsNil(o.Last6BiMonths) {
		return nil, false
	}
	return o.Last6BiMonths, true
}

// HasLast6BiMonths returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast6BiMonths() bool {
	if o != nil && !IsNil(o.Last6BiMonths) {
		return true
	}

	return false
}

// SetLast6BiMonths gets a reference to the given bool and assigns it to the Last6BiMonths field.
func (o *RelativePeriods) SetLast6BiMonths(v bool) {
	o.Last6BiMonths = &v
}

// GetLast6Months returns the Last6Months field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast6Months() bool {
	if o == nil || IsNil(o.Last6Months) {
		var ret bool
		return ret
	}
	return *o.Last6Months
}

// GetLast6MonthsOk returns a tuple with the Last6Months field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast6MonthsOk() (*bool, bool) {
	if o == nil || IsNil(o.Last6Months) {
		return nil, false
	}
	return o.Last6Months, true
}

// HasLast6Months returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast6Months() bool {
	if o != nil && !IsNil(o.Last6Months) {
		return true
	}

	return false
}

// SetLast6Months gets a reference to the given bool and assigns it to the Last6Months field.
func (o *RelativePeriods) SetLast6Months(v bool) {
	o.Last6Months = &v
}

// GetLast7Days returns the Last7Days field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast7Days() bool {
	if o == nil || IsNil(o.Last7Days) {
		var ret bool
		return ret
	}
	return *o.Last7Days
}

// GetLast7DaysOk returns a tuple with the Last7Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast7DaysOk() (*bool, bool) {
	if o == nil || IsNil(o.Last7Days) {
		return nil, false
	}
	return o.Last7Days, true
}

// HasLast7Days returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast7Days() bool {
	if o != nil && !IsNil(o.Last7Days) {
		return true
	}

	return false
}

// SetLast7Days gets a reference to the given bool and assigns it to the Last7Days field.
func (o *RelativePeriods) SetLast7Days(v bool) {
	o.Last7Days = &v
}

// GetLast90Days returns the Last90Days field value if set, zero value otherwise.
func (o *RelativePeriods) GetLast90Days() bool {
	if o == nil || IsNil(o.Last90Days) {
		var ret bool
		return ret
	}
	return *o.Last90Days
}

// GetLast90DaysOk returns a tuple with the Last90Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLast90DaysOk() (*bool, bool) {
	if o == nil || IsNil(o.Last90Days) {
		return nil, false
	}
	return o.Last90Days, true
}

// HasLast90Days returns a boolean if a field has been set.
func (o *RelativePeriods) HasLast90Days() bool {
	if o != nil && !IsNil(o.Last90Days) {
		return true
	}

	return false
}

// SetLast90Days gets a reference to the given bool and assigns it to the Last90Days field.
func (o *RelativePeriods) SetLast90Days(v bool) {
	o.Last90Days = &v
}

// GetLastBiWeek returns the LastBiWeek field value if set, zero value otherwise.
func (o *RelativePeriods) GetLastBiWeek() bool {
	if o == nil || IsNil(o.LastBiWeek) {
		var ret bool
		return ret
	}
	return *o.LastBiWeek
}

// GetLastBiWeekOk returns a tuple with the LastBiWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLastBiWeekOk() (*bool, bool) {
	if o == nil || IsNil(o.LastBiWeek) {
		return nil, false
	}
	return o.LastBiWeek, true
}

// HasLastBiWeek returns a boolean if a field has been set.
func (o *RelativePeriods) HasLastBiWeek() bool {
	if o != nil && !IsNil(o.LastBiWeek) {
		return true
	}

	return false
}

// SetLastBiWeek gets a reference to the given bool and assigns it to the LastBiWeek field.
func (o *RelativePeriods) SetLastBiWeek(v bool) {
	o.LastBiWeek = &v
}

// GetLastBimonth returns the LastBimonth field value if set, zero value otherwise.
func (o *RelativePeriods) GetLastBimonth() bool {
	if o == nil || IsNil(o.LastBimonth) {
		var ret bool
		return ret
	}
	return *o.LastBimonth
}

// GetLastBimonthOk returns a tuple with the LastBimonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLastBimonthOk() (*bool, bool) {
	if o == nil || IsNil(o.LastBimonth) {
		return nil, false
	}
	return o.LastBimonth, true
}

// HasLastBimonth returns a boolean if a field has been set.
func (o *RelativePeriods) HasLastBimonth() bool {
	if o != nil && !IsNil(o.LastBimonth) {
		return true
	}

	return false
}

// SetLastBimonth gets a reference to the given bool and assigns it to the LastBimonth field.
func (o *RelativePeriods) SetLastBimonth(v bool) {
	o.LastBimonth = &v
}

// GetLastFinancialYear returns the LastFinancialYear field value if set, zero value otherwise.
func (o *RelativePeriods) GetLastFinancialYear() bool {
	if o == nil || IsNil(o.LastFinancialYear) {
		var ret bool
		return ret
	}
	return *o.LastFinancialYear
}

// GetLastFinancialYearOk returns a tuple with the LastFinancialYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLastFinancialYearOk() (*bool, bool) {
	if o == nil || IsNil(o.LastFinancialYear) {
		return nil, false
	}
	return o.LastFinancialYear, true
}

// HasLastFinancialYear returns a boolean if a field has been set.
func (o *RelativePeriods) HasLastFinancialYear() bool {
	if o != nil && !IsNil(o.LastFinancialYear) {
		return true
	}

	return false
}

// SetLastFinancialYear gets a reference to the given bool and assigns it to the LastFinancialYear field.
func (o *RelativePeriods) SetLastFinancialYear(v bool) {
	o.LastFinancialYear = &v
}

// GetLastMonth returns the LastMonth field value if set, zero value otherwise.
func (o *RelativePeriods) GetLastMonth() bool {
	if o == nil || IsNil(o.LastMonth) {
		var ret bool
		return ret
	}
	return *o.LastMonth
}

// GetLastMonthOk returns a tuple with the LastMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLastMonthOk() (*bool, bool) {
	if o == nil || IsNil(o.LastMonth) {
		return nil, false
	}
	return o.LastMonth, true
}

// HasLastMonth returns a boolean if a field has been set.
func (o *RelativePeriods) HasLastMonth() bool {
	if o != nil && !IsNil(o.LastMonth) {
		return true
	}

	return false
}

// SetLastMonth gets a reference to the given bool and assigns it to the LastMonth field.
func (o *RelativePeriods) SetLastMonth(v bool) {
	o.LastMonth = &v
}

// GetLastQuarter returns the LastQuarter field value if set, zero value otherwise.
func (o *RelativePeriods) GetLastQuarter() bool {
	if o == nil || IsNil(o.LastQuarter) {
		var ret bool
		return ret
	}
	return *o.LastQuarter
}

// GetLastQuarterOk returns a tuple with the LastQuarter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLastQuarterOk() (*bool, bool) {
	if o == nil || IsNil(o.LastQuarter) {
		return nil, false
	}
	return o.LastQuarter, true
}

// HasLastQuarter returns a boolean if a field has been set.
func (o *RelativePeriods) HasLastQuarter() bool {
	if o != nil && !IsNil(o.LastQuarter) {
		return true
	}

	return false
}

// SetLastQuarter gets a reference to the given bool and assigns it to the LastQuarter field.
func (o *RelativePeriods) SetLastQuarter(v bool) {
	o.LastQuarter = &v
}

// GetLastSixMonth returns the LastSixMonth field value if set, zero value otherwise.
func (o *RelativePeriods) GetLastSixMonth() bool {
	if o == nil || IsNil(o.LastSixMonth) {
		var ret bool
		return ret
	}
	return *o.LastSixMonth
}

// GetLastSixMonthOk returns a tuple with the LastSixMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLastSixMonthOk() (*bool, bool) {
	if o == nil || IsNil(o.LastSixMonth) {
		return nil, false
	}
	return o.LastSixMonth, true
}

// HasLastSixMonth returns a boolean if a field has been set.
func (o *RelativePeriods) HasLastSixMonth() bool {
	if o != nil && !IsNil(o.LastSixMonth) {
		return true
	}

	return false
}

// SetLastSixMonth gets a reference to the given bool and assigns it to the LastSixMonth field.
func (o *RelativePeriods) SetLastSixMonth(v bool) {
	o.LastSixMonth = &v
}

// GetLastWeek returns the LastWeek field value if set, zero value otherwise.
func (o *RelativePeriods) GetLastWeek() bool {
	if o == nil || IsNil(o.LastWeek) {
		var ret bool
		return ret
	}
	return *o.LastWeek
}

// GetLastWeekOk returns a tuple with the LastWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLastWeekOk() (*bool, bool) {
	if o == nil || IsNil(o.LastWeek) {
		return nil, false
	}
	return o.LastWeek, true
}

// HasLastWeek returns a boolean if a field has been set.
func (o *RelativePeriods) HasLastWeek() bool {
	if o != nil && !IsNil(o.LastWeek) {
		return true
	}

	return false
}

// SetLastWeek gets a reference to the given bool and assigns it to the LastWeek field.
func (o *RelativePeriods) SetLastWeek(v bool) {
	o.LastWeek = &v
}

// GetLastYear returns the LastYear field value if set, zero value otherwise.
func (o *RelativePeriods) GetLastYear() bool {
	if o == nil || IsNil(o.LastYear) {
		var ret bool
		return ret
	}
	return *o.LastYear
}

// GetLastYearOk returns a tuple with the LastYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetLastYearOk() (*bool, bool) {
	if o == nil || IsNil(o.LastYear) {
		return nil, false
	}
	return o.LastYear, true
}

// HasLastYear returns a boolean if a field has been set.
func (o *RelativePeriods) HasLastYear() bool {
	if o != nil && !IsNil(o.LastYear) {
		return true
	}

	return false
}

// SetLastYear gets a reference to the given bool and assigns it to the LastYear field.
func (o *RelativePeriods) SetLastYear(v bool) {
	o.LastYear = &v
}

// GetMonthsLastYear returns the MonthsLastYear field value if set, zero value otherwise.
func (o *RelativePeriods) GetMonthsLastYear() bool {
	if o == nil || IsNil(o.MonthsLastYear) {
		var ret bool
		return ret
	}
	return *o.MonthsLastYear
}

// GetMonthsLastYearOk returns a tuple with the MonthsLastYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetMonthsLastYearOk() (*bool, bool) {
	if o == nil || IsNil(o.MonthsLastYear) {
		return nil, false
	}
	return o.MonthsLastYear, true
}

// HasMonthsLastYear returns a boolean if a field has been set.
func (o *RelativePeriods) HasMonthsLastYear() bool {
	if o != nil && !IsNil(o.MonthsLastYear) {
		return true
	}

	return false
}

// SetMonthsLastYear gets a reference to the given bool and assigns it to the MonthsLastYear field.
func (o *RelativePeriods) SetMonthsLastYear(v bool) {
	o.MonthsLastYear = &v
}

// GetMonthsThisYear returns the MonthsThisYear field value if set, zero value otherwise.
func (o *RelativePeriods) GetMonthsThisYear() bool {
	if o == nil || IsNil(o.MonthsThisYear) {
		var ret bool
		return ret
	}
	return *o.MonthsThisYear
}

// GetMonthsThisYearOk returns a tuple with the MonthsThisYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetMonthsThisYearOk() (*bool, bool) {
	if o == nil || IsNil(o.MonthsThisYear) {
		return nil, false
	}
	return o.MonthsThisYear, true
}

// HasMonthsThisYear returns a boolean if a field has been set.
func (o *RelativePeriods) HasMonthsThisYear() bool {
	if o != nil && !IsNil(o.MonthsThisYear) {
		return true
	}

	return false
}

// SetMonthsThisYear gets a reference to the given bool and assigns it to the MonthsThisYear field.
func (o *RelativePeriods) SetMonthsThisYear(v bool) {
	o.MonthsThisYear = &v
}

// GetQuartersLastYear returns the QuartersLastYear field value if set, zero value otherwise.
func (o *RelativePeriods) GetQuartersLastYear() bool {
	if o == nil || IsNil(o.QuartersLastYear) {
		var ret bool
		return ret
	}
	return *o.QuartersLastYear
}

// GetQuartersLastYearOk returns a tuple with the QuartersLastYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetQuartersLastYearOk() (*bool, bool) {
	if o == nil || IsNil(o.QuartersLastYear) {
		return nil, false
	}
	return o.QuartersLastYear, true
}

// HasQuartersLastYear returns a boolean if a field has been set.
func (o *RelativePeriods) HasQuartersLastYear() bool {
	if o != nil && !IsNil(o.QuartersLastYear) {
		return true
	}

	return false
}

// SetQuartersLastYear gets a reference to the given bool and assigns it to the QuartersLastYear field.
func (o *RelativePeriods) SetQuartersLastYear(v bool) {
	o.QuartersLastYear = &v
}

// GetQuartersThisYear returns the QuartersThisYear field value if set, zero value otherwise.
func (o *RelativePeriods) GetQuartersThisYear() bool {
	if o == nil || IsNil(o.QuartersThisYear) {
		var ret bool
		return ret
	}
	return *o.QuartersThisYear
}

// GetQuartersThisYearOk returns a tuple with the QuartersThisYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetQuartersThisYearOk() (*bool, bool) {
	if o == nil || IsNil(o.QuartersThisYear) {
		return nil, false
	}
	return o.QuartersThisYear, true
}

// HasQuartersThisYear returns a boolean if a field has been set.
func (o *RelativePeriods) HasQuartersThisYear() bool {
	if o != nil && !IsNil(o.QuartersThisYear) {
		return true
	}

	return false
}

// SetQuartersThisYear gets a reference to the given bool and assigns it to the QuartersThisYear field.
func (o *RelativePeriods) SetQuartersThisYear(v bool) {
	o.QuartersThisYear = &v
}

// GetThisBiWeek returns the ThisBiWeek field value if set, zero value otherwise.
func (o *RelativePeriods) GetThisBiWeek() bool {
	if o == nil || IsNil(o.ThisBiWeek) {
		var ret bool
		return ret
	}
	return *o.ThisBiWeek
}

// GetThisBiWeekOk returns a tuple with the ThisBiWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetThisBiWeekOk() (*bool, bool) {
	if o == nil || IsNil(o.ThisBiWeek) {
		return nil, false
	}
	return o.ThisBiWeek, true
}

// HasThisBiWeek returns a boolean if a field has been set.
func (o *RelativePeriods) HasThisBiWeek() bool {
	if o != nil && !IsNil(o.ThisBiWeek) {
		return true
	}

	return false
}

// SetThisBiWeek gets a reference to the given bool and assigns it to the ThisBiWeek field.
func (o *RelativePeriods) SetThisBiWeek(v bool) {
	o.ThisBiWeek = &v
}

// GetThisBimonth returns the ThisBimonth field value if set, zero value otherwise.
func (o *RelativePeriods) GetThisBimonth() bool {
	if o == nil || IsNil(o.ThisBimonth) {
		var ret bool
		return ret
	}
	return *o.ThisBimonth
}

// GetThisBimonthOk returns a tuple with the ThisBimonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetThisBimonthOk() (*bool, bool) {
	if o == nil || IsNil(o.ThisBimonth) {
		return nil, false
	}
	return o.ThisBimonth, true
}

// HasThisBimonth returns a boolean if a field has been set.
func (o *RelativePeriods) HasThisBimonth() bool {
	if o != nil && !IsNil(o.ThisBimonth) {
		return true
	}

	return false
}

// SetThisBimonth gets a reference to the given bool and assigns it to the ThisBimonth field.
func (o *RelativePeriods) SetThisBimonth(v bool) {
	o.ThisBimonth = &v
}

// GetThisDay returns the ThisDay field value if set, zero value otherwise.
func (o *RelativePeriods) GetThisDay() bool {
	if o == nil || IsNil(o.ThisDay) {
		var ret bool
		return ret
	}
	return *o.ThisDay
}

// GetThisDayOk returns a tuple with the ThisDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetThisDayOk() (*bool, bool) {
	if o == nil || IsNil(o.ThisDay) {
		return nil, false
	}
	return o.ThisDay, true
}

// HasThisDay returns a boolean if a field has been set.
func (o *RelativePeriods) HasThisDay() bool {
	if o != nil && !IsNil(o.ThisDay) {
		return true
	}

	return false
}

// SetThisDay gets a reference to the given bool and assigns it to the ThisDay field.
func (o *RelativePeriods) SetThisDay(v bool) {
	o.ThisDay = &v
}

// GetThisFinancialYear returns the ThisFinancialYear field value if set, zero value otherwise.
func (o *RelativePeriods) GetThisFinancialYear() bool {
	if o == nil || IsNil(o.ThisFinancialYear) {
		var ret bool
		return ret
	}
	return *o.ThisFinancialYear
}

// GetThisFinancialYearOk returns a tuple with the ThisFinancialYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetThisFinancialYearOk() (*bool, bool) {
	if o == nil || IsNil(o.ThisFinancialYear) {
		return nil, false
	}
	return o.ThisFinancialYear, true
}

// HasThisFinancialYear returns a boolean if a field has been set.
func (o *RelativePeriods) HasThisFinancialYear() bool {
	if o != nil && !IsNil(o.ThisFinancialYear) {
		return true
	}

	return false
}

// SetThisFinancialYear gets a reference to the given bool and assigns it to the ThisFinancialYear field.
func (o *RelativePeriods) SetThisFinancialYear(v bool) {
	o.ThisFinancialYear = &v
}

// GetThisMonth returns the ThisMonth field value if set, zero value otherwise.
func (o *RelativePeriods) GetThisMonth() bool {
	if o == nil || IsNil(o.ThisMonth) {
		var ret bool
		return ret
	}
	return *o.ThisMonth
}

// GetThisMonthOk returns a tuple with the ThisMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetThisMonthOk() (*bool, bool) {
	if o == nil || IsNil(o.ThisMonth) {
		return nil, false
	}
	return o.ThisMonth, true
}

// HasThisMonth returns a boolean if a field has been set.
func (o *RelativePeriods) HasThisMonth() bool {
	if o != nil && !IsNil(o.ThisMonth) {
		return true
	}

	return false
}

// SetThisMonth gets a reference to the given bool and assigns it to the ThisMonth field.
func (o *RelativePeriods) SetThisMonth(v bool) {
	o.ThisMonth = &v
}

// GetThisQuarter returns the ThisQuarter field value if set, zero value otherwise.
func (o *RelativePeriods) GetThisQuarter() bool {
	if o == nil || IsNil(o.ThisQuarter) {
		var ret bool
		return ret
	}
	return *o.ThisQuarter
}

// GetThisQuarterOk returns a tuple with the ThisQuarter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetThisQuarterOk() (*bool, bool) {
	if o == nil || IsNil(o.ThisQuarter) {
		return nil, false
	}
	return o.ThisQuarter, true
}

// HasThisQuarter returns a boolean if a field has been set.
func (o *RelativePeriods) HasThisQuarter() bool {
	if o != nil && !IsNil(o.ThisQuarter) {
		return true
	}

	return false
}

// SetThisQuarter gets a reference to the given bool and assigns it to the ThisQuarter field.
func (o *RelativePeriods) SetThisQuarter(v bool) {
	o.ThisQuarter = &v
}

// GetThisSixMonth returns the ThisSixMonth field value if set, zero value otherwise.
func (o *RelativePeriods) GetThisSixMonth() bool {
	if o == nil || IsNil(o.ThisSixMonth) {
		var ret bool
		return ret
	}
	return *o.ThisSixMonth
}

// GetThisSixMonthOk returns a tuple with the ThisSixMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetThisSixMonthOk() (*bool, bool) {
	if o == nil || IsNil(o.ThisSixMonth) {
		return nil, false
	}
	return o.ThisSixMonth, true
}

// HasThisSixMonth returns a boolean if a field has been set.
func (o *RelativePeriods) HasThisSixMonth() bool {
	if o != nil && !IsNil(o.ThisSixMonth) {
		return true
	}

	return false
}

// SetThisSixMonth gets a reference to the given bool and assigns it to the ThisSixMonth field.
func (o *RelativePeriods) SetThisSixMonth(v bool) {
	o.ThisSixMonth = &v
}

// GetThisWeek returns the ThisWeek field value if set, zero value otherwise.
func (o *RelativePeriods) GetThisWeek() bool {
	if o == nil || IsNil(o.ThisWeek) {
		var ret bool
		return ret
	}
	return *o.ThisWeek
}

// GetThisWeekOk returns a tuple with the ThisWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetThisWeekOk() (*bool, bool) {
	if o == nil || IsNil(o.ThisWeek) {
		return nil, false
	}
	return o.ThisWeek, true
}

// HasThisWeek returns a boolean if a field has been set.
func (o *RelativePeriods) HasThisWeek() bool {
	if o != nil && !IsNil(o.ThisWeek) {
		return true
	}

	return false
}

// SetThisWeek gets a reference to the given bool and assigns it to the ThisWeek field.
func (o *RelativePeriods) SetThisWeek(v bool) {
	o.ThisWeek = &v
}

// GetThisYear returns the ThisYear field value if set, zero value otherwise.
func (o *RelativePeriods) GetThisYear() bool {
	if o == nil || IsNil(o.ThisYear) {
		var ret bool
		return ret
	}
	return *o.ThisYear
}

// GetThisYearOk returns a tuple with the ThisYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetThisYearOk() (*bool, bool) {
	if o == nil || IsNil(o.ThisYear) {
		return nil, false
	}
	return o.ThisYear, true
}

// HasThisYear returns a boolean if a field has been set.
func (o *RelativePeriods) HasThisYear() bool {
	if o != nil && !IsNil(o.ThisYear) {
		return true
	}

	return false
}

// SetThisYear gets a reference to the given bool and assigns it to the ThisYear field.
func (o *RelativePeriods) SetThisYear(v bool) {
	o.ThisYear = &v
}

// GetWeeksThisYear returns the WeeksThisYear field value if set, zero value otherwise.
func (o *RelativePeriods) GetWeeksThisYear() bool {
	if o == nil || IsNil(o.WeeksThisYear) {
		var ret bool
		return ret
	}
	return *o.WeeksThisYear
}

// GetWeeksThisYearOk returns a tuple with the WeeksThisYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetWeeksThisYearOk() (*bool, bool) {
	if o == nil || IsNil(o.WeeksThisYear) {
		return nil, false
	}
	return o.WeeksThisYear, true
}

// HasWeeksThisYear returns a boolean if a field has been set.
func (o *RelativePeriods) HasWeeksThisYear() bool {
	if o != nil && !IsNil(o.WeeksThisYear) {
		return true
	}

	return false
}

// SetWeeksThisYear gets a reference to the given bool and assigns it to the WeeksThisYear field.
func (o *RelativePeriods) SetWeeksThisYear(v bool) {
	o.WeeksThisYear = &v
}

// GetYesterday returns the Yesterday field value if set, zero value otherwise.
func (o *RelativePeriods) GetYesterday() bool {
	if o == nil || IsNil(o.Yesterday) {
		var ret bool
		return ret
	}
	return *o.Yesterday
}

// GetYesterdayOk returns a tuple with the Yesterday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelativePeriods) GetYesterdayOk() (*bool, bool) {
	if o == nil || IsNil(o.Yesterday) {
		return nil, false
	}
	return o.Yesterday, true
}

// HasYesterday returns a boolean if a field has been set.
func (o *RelativePeriods) HasYesterday() bool {
	if o != nil && !IsNil(o.Yesterday) {
		return true
	}

	return false
}

// SetYesterday gets a reference to the given bool and assigns it to the Yesterday field.
func (o *RelativePeriods) SetYesterday(v bool) {
	o.Yesterday = &v
}

func (o RelativePeriods) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelativePeriods) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BiMonthsThisYear) {
		toSerialize["biMonthsThisYear"] = o.BiMonthsThisYear
	}
	if !IsNil(o.Last10FinancialYears) {
		toSerialize["last10FinancialYears"] = o.Last10FinancialYears
	}
	if !IsNil(o.Last10Years) {
		toSerialize["last10Years"] = o.Last10Years
	}
	if !IsNil(o.Last12Months) {
		toSerialize["last12Months"] = o.Last12Months
	}
	if !IsNil(o.Last12Weeks) {
		toSerialize["last12Weeks"] = o.Last12Weeks
	}
	if !IsNil(o.Last14Days) {
		toSerialize["last14Days"] = o.Last14Days
	}
	if !IsNil(o.Last180Days) {
		toSerialize["last180Days"] = o.Last180Days
	}
	if !IsNil(o.Last2SixMonths) {
		toSerialize["last2SixMonths"] = o.Last2SixMonths
	}
	if !IsNil(o.Last30Days) {
		toSerialize["last30Days"] = o.Last30Days
	}
	if !IsNil(o.Last3Days) {
		toSerialize["last3Days"] = o.Last3Days
	}
	if !IsNil(o.Last3Months) {
		toSerialize["last3Months"] = o.Last3Months
	}
	if !IsNil(o.Last4BiWeeks) {
		toSerialize["last4BiWeeks"] = o.Last4BiWeeks
	}
	if !IsNil(o.Last4Quarters) {
		toSerialize["last4Quarters"] = o.Last4Quarters
	}
	if !IsNil(o.Last4Weeks) {
		toSerialize["last4Weeks"] = o.Last4Weeks
	}
	if !IsNil(o.Last52Weeks) {
		toSerialize["last52Weeks"] = o.Last52Weeks
	}
	if !IsNil(o.Last5FinancialYears) {
		toSerialize["last5FinancialYears"] = o.Last5FinancialYears
	}
	if !IsNil(o.Last5Years) {
		toSerialize["last5Years"] = o.Last5Years
	}
	if !IsNil(o.Last60Days) {
		toSerialize["last60Days"] = o.Last60Days
	}
	if !IsNil(o.Last6BiMonths) {
		toSerialize["last6BiMonths"] = o.Last6BiMonths
	}
	if !IsNil(o.Last6Months) {
		toSerialize["last6Months"] = o.Last6Months
	}
	if !IsNil(o.Last7Days) {
		toSerialize["last7Days"] = o.Last7Days
	}
	if !IsNil(o.Last90Days) {
		toSerialize["last90Days"] = o.Last90Days
	}
	if !IsNil(o.LastBiWeek) {
		toSerialize["lastBiWeek"] = o.LastBiWeek
	}
	if !IsNil(o.LastBimonth) {
		toSerialize["lastBimonth"] = o.LastBimonth
	}
	if !IsNil(o.LastFinancialYear) {
		toSerialize["lastFinancialYear"] = o.LastFinancialYear
	}
	if !IsNil(o.LastMonth) {
		toSerialize["lastMonth"] = o.LastMonth
	}
	if !IsNil(o.LastQuarter) {
		toSerialize["lastQuarter"] = o.LastQuarter
	}
	if !IsNil(o.LastSixMonth) {
		toSerialize["lastSixMonth"] = o.LastSixMonth
	}
	if !IsNil(o.LastWeek) {
		toSerialize["lastWeek"] = o.LastWeek
	}
	if !IsNil(o.LastYear) {
		toSerialize["lastYear"] = o.LastYear
	}
	if !IsNil(o.MonthsLastYear) {
		toSerialize["monthsLastYear"] = o.MonthsLastYear
	}
	if !IsNil(o.MonthsThisYear) {
		toSerialize["monthsThisYear"] = o.MonthsThisYear
	}
	if !IsNil(o.QuartersLastYear) {
		toSerialize["quartersLastYear"] = o.QuartersLastYear
	}
	if !IsNil(o.QuartersThisYear) {
		toSerialize["quartersThisYear"] = o.QuartersThisYear
	}
	if !IsNil(o.ThisBiWeek) {
		toSerialize["thisBiWeek"] = o.ThisBiWeek
	}
	if !IsNil(o.ThisBimonth) {
		toSerialize["thisBimonth"] = o.ThisBimonth
	}
	if !IsNil(o.ThisDay) {
		toSerialize["thisDay"] = o.ThisDay
	}
	if !IsNil(o.ThisFinancialYear) {
		toSerialize["thisFinancialYear"] = o.ThisFinancialYear
	}
	if !IsNil(o.ThisMonth) {
		toSerialize["thisMonth"] = o.ThisMonth
	}
	if !IsNil(o.ThisQuarter) {
		toSerialize["thisQuarter"] = o.ThisQuarter
	}
	if !IsNil(o.ThisSixMonth) {
		toSerialize["thisSixMonth"] = o.ThisSixMonth
	}
	if !IsNil(o.ThisWeek) {
		toSerialize["thisWeek"] = o.ThisWeek
	}
	if !IsNil(o.ThisYear) {
		toSerialize["thisYear"] = o.ThisYear
	}
	if !IsNil(o.WeeksThisYear) {
		toSerialize["weeksThisYear"] = o.WeeksThisYear
	}
	if !IsNil(o.Yesterday) {
		toSerialize["yesterday"] = o.Yesterday
	}
	return toSerialize, nil
}

type NullableRelativePeriods struct {
	value *RelativePeriods
	isSet bool
}

func (v NullableRelativePeriods) Get() *RelativePeriods {
	return v.value
}

func (v *NullableRelativePeriods) Set(val *RelativePeriods) {
	v.value = val
	v.isSet = true
}

func (v NullableRelativePeriods) IsSet() bool {
	return v.isSet
}

func (v *NullableRelativePeriods) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelativePeriods(val *RelativePeriods) *NullableRelativePeriods {
	return &NullableRelativePeriods{value: val, isSet: true}
}

func (v NullableRelativePeriods) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelativePeriods) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
