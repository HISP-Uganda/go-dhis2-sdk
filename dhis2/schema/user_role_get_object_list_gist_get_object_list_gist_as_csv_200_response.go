/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// UserRoleGetObjectListGistGetObjectListGistAsCsv200Response - struct for UserRoleGetObjectListGistGetObjectListGistAsCsv200Response
type UserRoleGetObjectListGistGetObjectListGistAsCsv200Response struct {
	UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfUserRole                                                 *[]UserRole
}

// UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsUserRoleGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in UserRoleGetObjectListGistGetObjectListGistAsCsv200Response
func UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsUserRoleGetObjectListGistGetObjectListGistAsCsv200Response(v *UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) UserRoleGetObjectListGistGetObjectListGistAsCsv200Response {
	return UserRoleGetObjectListGistGetObjectListGistAsCsv200Response{
		UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []UserRoleAsUserRoleGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []UserRole wrapped in UserRoleGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfUserRoleAsUserRoleGetObjectListGistGetObjectListGistAsCsv200Response(v *[]UserRole) UserRoleGetObjectListGistGetObjectListGistAsCsv200Response {
	return UserRoleGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfUserRole: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *UserRoleGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonUserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonUserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfUserRole
	err = newStrictDecoder(data).Decode(&dst.ArrayOfUserRole)
	if err == nil {
		jsonArrayOfUserRole, _ := json.Marshal(dst.ArrayOfUserRole)
		if string(jsonArrayOfUserRole) == "{}" { // empty struct
			dst.ArrayOfUserRole = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfUserRole = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfUserRole = nil

		return fmt.Errorf("data matches more than one schema in oneOf(UserRoleGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(UserRoleGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src UserRoleGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfUserRole != nil {
		return json.Marshal(&src.ArrayOfUserRole)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *UserRoleGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.UserRoleGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfUserRole != nil {
		return obj.ArrayOfUserRole
	}

	// all schemas are nil
	return nil
}

type NullableUserRoleGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *UserRoleGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableUserRoleGetObjectListGistGetObjectListGistAsCsv200Response) Get() *UserRoleGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableUserRoleGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *UserRoleGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUserRoleGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUserRoleGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserRoleGetObjectListGistGetObjectListGistAsCsv200Response(val *UserRoleGetObjectListGistGetObjectListGistAsCsv200Response) *NullableUserRoleGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableUserRoleGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableUserRoleGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserRoleGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
