/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the SchemaGetSchemas200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchemaGetSchemas200Response{}

// SchemaGetSchemas200Response struct for SchemaGetSchemas200Response
type SchemaGetSchemas200Response struct {
	Pager   *Pager   `json:"pager,omitempty"`
	Schemas []Schema `json:"schemas,omitempty"`
}

// NewSchemaGetSchemas200Response instantiates a new SchemaGetSchemas200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchemaGetSchemas200Response() *SchemaGetSchemas200Response {
	this := SchemaGetSchemas200Response{}
	return &this
}

// NewSchemaGetSchemas200ResponseWithDefaults instantiates a new SchemaGetSchemas200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchemaGetSchemas200ResponseWithDefaults() *SchemaGetSchemas200Response {
	this := SchemaGetSchemas200Response{}
	return &this
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *SchemaGetSchemas200Response) GetPager() Pager {
	if o == nil || IsNil(o.Pager) {
		var ret Pager
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaGetSchemas200Response) GetPagerOk() (*Pager, bool) {
	if o == nil || IsNil(o.Pager) {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *SchemaGetSchemas200Response) HasPager() bool {
	if o != nil && !IsNil(o.Pager) {
		return true
	}

	return false
}

// SetPager gets a reference to the given Pager and assigns it to the Pager field.
func (o *SchemaGetSchemas200Response) SetPager(v Pager) {
	o.Pager = &v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *SchemaGetSchemas200Response) GetSchemas() []Schema {
	if o == nil || IsNil(o.Schemas) {
		var ret []Schema
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchemaGetSchemas200Response) GetSchemasOk() ([]Schema, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *SchemaGetSchemas200Response) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []Schema and assigns it to the Schemas field.
func (o *SchemaGetSchemas200Response) SetSchemas(v []Schema) {
	o.Schemas = v
}

func (o SchemaGetSchemas200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchemaGetSchemas200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pager) {
		toSerialize["pager"] = o.Pager
	}
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	return toSerialize, nil
}

type NullableSchemaGetSchemas200Response struct {
	value *SchemaGetSchemas200Response
	isSet bool
}

func (v NullableSchemaGetSchemas200Response) Get() *SchemaGetSchemas200Response {
	return v.value
}

func (v *NullableSchemaGetSchemas200Response) Set(val *SchemaGetSchemas200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSchemaGetSchemas200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSchemaGetSchemas200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchemaGetSchemas200Response(val *SchemaGetSchemas200Response) *NullableSchemaGetSchemas200Response {
	return &NullableSchemaGetSchemas200Response{value: val, isSet: true}
}

func (v NullableSchemaGetSchemas200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchemaGetSchemas200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
