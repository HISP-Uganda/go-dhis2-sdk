/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ProgramRuleProgramRuleActionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramRuleProgramRuleActionsInner{}

// ProgramRuleProgramRuleActionsInner A UID reference to a ProgramRuleAction   (Java name `org.hisp.dhis.programrule.ProgramRuleAction`)
type ProgramRuleProgramRuleActionsInner struct {
	Id string `json:"id"`
}

type _ProgramRuleProgramRuleActionsInner ProgramRuleProgramRuleActionsInner

// NewProgramRuleProgramRuleActionsInner instantiates a new ProgramRuleProgramRuleActionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramRuleProgramRuleActionsInner(id string) *ProgramRuleProgramRuleActionsInner {
	this := ProgramRuleProgramRuleActionsInner{}
	this.Id = id
	return &this
}

// NewProgramRuleProgramRuleActionsInnerWithDefaults instantiates a new ProgramRuleProgramRuleActionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramRuleProgramRuleActionsInnerWithDefaults() *ProgramRuleProgramRuleActionsInner {
	this := ProgramRuleProgramRuleActionsInner{}
	return &this
}

// GetId returns the Id field value
func (o *ProgramRuleProgramRuleActionsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProgramRuleProgramRuleActionsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProgramRuleProgramRuleActionsInner) SetId(v string) {
	o.Id = v
}

func (o ProgramRuleProgramRuleActionsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramRuleProgramRuleActionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *ProgramRuleProgramRuleActionsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramRuleProgramRuleActionsInner := _ProgramRuleProgramRuleActionsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgramRuleProgramRuleActionsInner)

	if err != nil {
		return err
	}

	*o = ProgramRuleProgramRuleActionsInner(varProgramRuleProgramRuleActionsInner)

	return err
}

type NullableProgramRuleProgramRuleActionsInner struct {
	value *ProgramRuleProgramRuleActionsInner
	isSet bool
}

func (v NullableProgramRuleProgramRuleActionsInner) Get() *ProgramRuleProgramRuleActionsInner {
	return v.value
}

func (v *NullableProgramRuleProgramRuleActionsInner) Set(val *ProgramRuleProgramRuleActionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramRuleProgramRuleActionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramRuleProgramRuleActionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramRuleProgramRuleActionsInner(val *ProgramRuleProgramRuleActionsInner) *NullableProgramRuleProgramRuleActionsInner {
	return &NullableProgramRuleProgramRuleActionsInner{value: val, isSet: true}
}

func (v NullableProgramRuleProgramRuleActionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramRuleProgramRuleActionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
