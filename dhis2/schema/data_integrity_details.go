/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the DataIntegrityDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataIntegrityDetails{}

// DataIntegrityDetails struct for DataIntegrityDetails
type DataIntegrityDetails struct {
	Error        *string              `json:"error,omitempty"`
	FinishedTime *time.Time           `json:"finishedTime,omitempty"`
	Issues       []DataIntegrityIssue `json:"issues,omitempty"`
	StartTime    *time.Time           `json:"startTime,omitempty"`
}

// NewDataIntegrityDetails instantiates a new DataIntegrityDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataIntegrityDetails() *DataIntegrityDetails {
	this := DataIntegrityDetails{}
	return &this
}

// NewDataIntegrityDetailsWithDefaults instantiates a new DataIntegrityDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataIntegrityDetailsWithDefaults() *DataIntegrityDetails {
	this := DataIntegrityDetails{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *DataIntegrityDetails) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityDetails) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *DataIntegrityDetails) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *DataIntegrityDetails) SetError(v string) {
	o.Error = &v
}

// GetFinishedTime returns the FinishedTime field value if set, zero value otherwise.
func (o *DataIntegrityDetails) GetFinishedTime() time.Time {
	if o == nil || IsNil(o.FinishedTime) {
		var ret time.Time
		return ret
	}
	return *o.FinishedTime
}

// GetFinishedTimeOk returns a tuple with the FinishedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityDetails) GetFinishedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FinishedTime) {
		return nil, false
	}
	return o.FinishedTime, true
}

// HasFinishedTime returns a boolean if a field has been set.
func (o *DataIntegrityDetails) HasFinishedTime() bool {
	if o != nil && !IsNil(o.FinishedTime) {
		return true
	}

	return false
}

// SetFinishedTime gets a reference to the given time.Time and assigns it to the FinishedTime field.
func (o *DataIntegrityDetails) SetFinishedTime(v time.Time) {
	o.FinishedTime = &v
}

// GetIssues returns the Issues field value if set, zero value otherwise.
func (o *DataIntegrityDetails) GetIssues() []DataIntegrityIssue {
	if o == nil || IsNil(o.Issues) {
		var ret []DataIntegrityIssue
		return ret
	}
	return o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityDetails) GetIssuesOk() ([]DataIntegrityIssue, bool) {
	if o == nil || IsNil(o.Issues) {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *DataIntegrityDetails) HasIssues() bool {
	if o != nil && !IsNil(o.Issues) {
		return true
	}

	return false
}

// SetIssues gets a reference to the given []DataIntegrityIssue and assigns it to the Issues field.
func (o *DataIntegrityDetails) SetIssues(v []DataIntegrityIssue) {
	o.Issues = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DataIntegrityDetails) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityDetails) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DataIntegrityDetails) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *DataIntegrityDetails) SetStartTime(v time.Time) {
	o.StartTime = &v
}

func (o DataIntegrityDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataIntegrityDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.FinishedTime) {
		toSerialize["finishedTime"] = o.FinishedTime
	}
	if !IsNil(o.Issues) {
		toSerialize["issues"] = o.Issues
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	return toSerialize, nil
}

type NullableDataIntegrityDetails struct {
	value *DataIntegrityDetails
	isSet bool
}

func (v NullableDataIntegrityDetails) Get() *DataIntegrityDetails {
	return v.value
}

func (v *NullableDataIntegrityDetails) Set(val *DataIntegrityDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDataIntegrityDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDataIntegrityDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataIntegrityDetails(val *DataIntegrityDetails) *NullableDataIntegrityDetails {
	return &NullableDataIntegrityDetails{value: val, isSet: true}
}

func (v NullableDataIntegrityDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataIntegrityDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
