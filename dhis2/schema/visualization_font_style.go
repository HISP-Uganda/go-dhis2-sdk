/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the VisualizationFontStyle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VisualizationFontStyle{}

// VisualizationFontStyle struct for VisualizationFontStyle
type VisualizationFontStyle struct {
	BaseLineLabel         *FontStyle `json:"baseLineLabel,omitempty"`
	CategoryAxisLabel     *FontStyle `json:"categoryAxisLabel,omitempty"`
	HorizontalAxisTitle   *FontStyle `json:"horizontalAxisTitle,omitempty"`
	Legend                *FontStyle `json:"legend,omitempty"`
	SeriesAxisLabel       *FontStyle `json:"seriesAxisLabel,omitempty"`
	TargetLineLabel       *FontStyle `json:"targetLineLabel,omitempty"`
	VerticalAxisTitle     *FontStyle `json:"verticalAxisTitle,omitempty"`
	VisualizationSubtitle *FontStyle `json:"visualizationSubtitle,omitempty"`
	VisualizationTitle    *FontStyle `json:"visualizationTitle,omitempty"`
}

// NewVisualizationFontStyle instantiates a new VisualizationFontStyle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVisualizationFontStyle() *VisualizationFontStyle {
	this := VisualizationFontStyle{}
	return &this
}

// NewVisualizationFontStyleWithDefaults instantiates a new VisualizationFontStyle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVisualizationFontStyleWithDefaults() *VisualizationFontStyle {
	this := VisualizationFontStyle{}
	return &this
}

// GetBaseLineLabel returns the BaseLineLabel field value if set, zero value otherwise.
func (o *VisualizationFontStyle) GetBaseLineLabel() FontStyle {
	if o == nil || IsNil(o.BaseLineLabel) {
		var ret FontStyle
		return ret
	}
	return *o.BaseLineLabel
}

// GetBaseLineLabelOk returns a tuple with the BaseLineLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationFontStyle) GetBaseLineLabelOk() (*FontStyle, bool) {
	if o == nil || IsNil(o.BaseLineLabel) {
		return nil, false
	}
	return o.BaseLineLabel, true
}

// HasBaseLineLabel returns a boolean if a field has been set.
func (o *VisualizationFontStyle) HasBaseLineLabel() bool {
	if o != nil && !IsNil(o.BaseLineLabel) {
		return true
	}

	return false
}

// SetBaseLineLabel gets a reference to the given FontStyle and assigns it to the BaseLineLabel field.
func (o *VisualizationFontStyle) SetBaseLineLabel(v FontStyle) {
	o.BaseLineLabel = &v
}

// GetCategoryAxisLabel returns the CategoryAxisLabel field value if set, zero value otherwise.
func (o *VisualizationFontStyle) GetCategoryAxisLabel() FontStyle {
	if o == nil || IsNil(o.CategoryAxisLabel) {
		var ret FontStyle
		return ret
	}
	return *o.CategoryAxisLabel
}

// GetCategoryAxisLabelOk returns a tuple with the CategoryAxisLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationFontStyle) GetCategoryAxisLabelOk() (*FontStyle, bool) {
	if o == nil || IsNil(o.CategoryAxisLabel) {
		return nil, false
	}
	return o.CategoryAxisLabel, true
}

// HasCategoryAxisLabel returns a boolean if a field has been set.
func (o *VisualizationFontStyle) HasCategoryAxisLabel() bool {
	if o != nil && !IsNil(o.CategoryAxisLabel) {
		return true
	}

	return false
}

// SetCategoryAxisLabel gets a reference to the given FontStyle and assigns it to the CategoryAxisLabel field.
func (o *VisualizationFontStyle) SetCategoryAxisLabel(v FontStyle) {
	o.CategoryAxisLabel = &v
}

// GetHorizontalAxisTitle returns the HorizontalAxisTitle field value if set, zero value otherwise.
func (o *VisualizationFontStyle) GetHorizontalAxisTitle() FontStyle {
	if o == nil || IsNil(o.HorizontalAxisTitle) {
		var ret FontStyle
		return ret
	}
	return *o.HorizontalAxisTitle
}

// GetHorizontalAxisTitleOk returns a tuple with the HorizontalAxisTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationFontStyle) GetHorizontalAxisTitleOk() (*FontStyle, bool) {
	if o == nil || IsNil(o.HorizontalAxisTitle) {
		return nil, false
	}
	return o.HorizontalAxisTitle, true
}

// HasHorizontalAxisTitle returns a boolean if a field has been set.
func (o *VisualizationFontStyle) HasHorizontalAxisTitle() bool {
	if o != nil && !IsNil(o.HorizontalAxisTitle) {
		return true
	}

	return false
}

// SetHorizontalAxisTitle gets a reference to the given FontStyle and assigns it to the HorizontalAxisTitle field.
func (o *VisualizationFontStyle) SetHorizontalAxisTitle(v FontStyle) {
	o.HorizontalAxisTitle = &v
}

// GetLegend returns the Legend field value if set, zero value otherwise.
func (o *VisualizationFontStyle) GetLegend() FontStyle {
	if o == nil || IsNil(o.Legend) {
		var ret FontStyle
		return ret
	}
	return *o.Legend
}

// GetLegendOk returns a tuple with the Legend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationFontStyle) GetLegendOk() (*FontStyle, bool) {
	if o == nil || IsNil(o.Legend) {
		return nil, false
	}
	return o.Legend, true
}

// HasLegend returns a boolean if a field has been set.
func (o *VisualizationFontStyle) HasLegend() bool {
	if o != nil && !IsNil(o.Legend) {
		return true
	}

	return false
}

// SetLegend gets a reference to the given FontStyle and assigns it to the Legend field.
func (o *VisualizationFontStyle) SetLegend(v FontStyle) {
	o.Legend = &v
}

// GetSeriesAxisLabel returns the SeriesAxisLabel field value if set, zero value otherwise.
func (o *VisualizationFontStyle) GetSeriesAxisLabel() FontStyle {
	if o == nil || IsNil(o.SeriesAxisLabel) {
		var ret FontStyle
		return ret
	}
	return *o.SeriesAxisLabel
}

// GetSeriesAxisLabelOk returns a tuple with the SeriesAxisLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationFontStyle) GetSeriesAxisLabelOk() (*FontStyle, bool) {
	if o == nil || IsNil(o.SeriesAxisLabel) {
		return nil, false
	}
	return o.SeriesAxisLabel, true
}

// HasSeriesAxisLabel returns a boolean if a field has been set.
func (o *VisualizationFontStyle) HasSeriesAxisLabel() bool {
	if o != nil && !IsNil(o.SeriesAxisLabel) {
		return true
	}

	return false
}

// SetSeriesAxisLabel gets a reference to the given FontStyle and assigns it to the SeriesAxisLabel field.
func (o *VisualizationFontStyle) SetSeriesAxisLabel(v FontStyle) {
	o.SeriesAxisLabel = &v
}

// GetTargetLineLabel returns the TargetLineLabel field value if set, zero value otherwise.
func (o *VisualizationFontStyle) GetTargetLineLabel() FontStyle {
	if o == nil || IsNil(o.TargetLineLabel) {
		var ret FontStyle
		return ret
	}
	return *o.TargetLineLabel
}

// GetTargetLineLabelOk returns a tuple with the TargetLineLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationFontStyle) GetTargetLineLabelOk() (*FontStyle, bool) {
	if o == nil || IsNil(o.TargetLineLabel) {
		return nil, false
	}
	return o.TargetLineLabel, true
}

// HasTargetLineLabel returns a boolean if a field has been set.
func (o *VisualizationFontStyle) HasTargetLineLabel() bool {
	if o != nil && !IsNil(o.TargetLineLabel) {
		return true
	}

	return false
}

// SetTargetLineLabel gets a reference to the given FontStyle and assigns it to the TargetLineLabel field.
func (o *VisualizationFontStyle) SetTargetLineLabel(v FontStyle) {
	o.TargetLineLabel = &v
}

// GetVerticalAxisTitle returns the VerticalAxisTitle field value if set, zero value otherwise.
func (o *VisualizationFontStyle) GetVerticalAxisTitle() FontStyle {
	if o == nil || IsNil(o.VerticalAxisTitle) {
		var ret FontStyle
		return ret
	}
	return *o.VerticalAxisTitle
}

// GetVerticalAxisTitleOk returns a tuple with the VerticalAxisTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationFontStyle) GetVerticalAxisTitleOk() (*FontStyle, bool) {
	if o == nil || IsNil(o.VerticalAxisTitle) {
		return nil, false
	}
	return o.VerticalAxisTitle, true
}

// HasVerticalAxisTitle returns a boolean if a field has been set.
func (o *VisualizationFontStyle) HasVerticalAxisTitle() bool {
	if o != nil && !IsNil(o.VerticalAxisTitle) {
		return true
	}

	return false
}

// SetVerticalAxisTitle gets a reference to the given FontStyle and assigns it to the VerticalAxisTitle field.
func (o *VisualizationFontStyle) SetVerticalAxisTitle(v FontStyle) {
	o.VerticalAxisTitle = &v
}

// GetVisualizationSubtitle returns the VisualizationSubtitle field value if set, zero value otherwise.
func (o *VisualizationFontStyle) GetVisualizationSubtitle() FontStyle {
	if o == nil || IsNil(o.VisualizationSubtitle) {
		var ret FontStyle
		return ret
	}
	return *o.VisualizationSubtitle
}

// GetVisualizationSubtitleOk returns a tuple with the VisualizationSubtitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationFontStyle) GetVisualizationSubtitleOk() (*FontStyle, bool) {
	if o == nil || IsNil(o.VisualizationSubtitle) {
		return nil, false
	}
	return o.VisualizationSubtitle, true
}

// HasVisualizationSubtitle returns a boolean if a field has been set.
func (o *VisualizationFontStyle) HasVisualizationSubtitle() bool {
	if o != nil && !IsNil(o.VisualizationSubtitle) {
		return true
	}

	return false
}

// SetVisualizationSubtitle gets a reference to the given FontStyle and assigns it to the VisualizationSubtitle field.
func (o *VisualizationFontStyle) SetVisualizationSubtitle(v FontStyle) {
	o.VisualizationSubtitle = &v
}

// GetVisualizationTitle returns the VisualizationTitle field value if set, zero value otherwise.
func (o *VisualizationFontStyle) GetVisualizationTitle() FontStyle {
	if o == nil || IsNil(o.VisualizationTitle) {
		var ret FontStyle
		return ret
	}
	return *o.VisualizationTitle
}

// GetVisualizationTitleOk returns a tuple with the VisualizationTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VisualizationFontStyle) GetVisualizationTitleOk() (*FontStyle, bool) {
	if o == nil || IsNil(o.VisualizationTitle) {
		return nil, false
	}
	return o.VisualizationTitle, true
}

// HasVisualizationTitle returns a boolean if a field has been set.
func (o *VisualizationFontStyle) HasVisualizationTitle() bool {
	if o != nil && !IsNil(o.VisualizationTitle) {
		return true
	}

	return false
}

// SetVisualizationTitle gets a reference to the given FontStyle and assigns it to the VisualizationTitle field.
func (o *VisualizationFontStyle) SetVisualizationTitle(v FontStyle) {
	o.VisualizationTitle = &v
}

func (o VisualizationFontStyle) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VisualizationFontStyle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseLineLabel) {
		toSerialize["baseLineLabel"] = o.BaseLineLabel
	}
	if !IsNil(o.CategoryAxisLabel) {
		toSerialize["categoryAxisLabel"] = o.CategoryAxisLabel
	}
	if !IsNil(o.HorizontalAxisTitle) {
		toSerialize["horizontalAxisTitle"] = o.HorizontalAxisTitle
	}
	if !IsNil(o.Legend) {
		toSerialize["legend"] = o.Legend
	}
	if !IsNil(o.SeriesAxisLabel) {
		toSerialize["seriesAxisLabel"] = o.SeriesAxisLabel
	}
	if !IsNil(o.TargetLineLabel) {
		toSerialize["targetLineLabel"] = o.TargetLineLabel
	}
	if !IsNil(o.VerticalAxisTitle) {
		toSerialize["verticalAxisTitle"] = o.VerticalAxisTitle
	}
	if !IsNil(o.VisualizationSubtitle) {
		toSerialize["visualizationSubtitle"] = o.VisualizationSubtitle
	}
	if !IsNil(o.VisualizationTitle) {
		toSerialize["visualizationTitle"] = o.VisualizationTitle
	}
	return toSerialize, nil
}

type NullableVisualizationFontStyle struct {
	value *VisualizationFontStyle
	isSet bool
}

func (v NullableVisualizationFontStyle) Get() *VisualizationFontStyle {
	return v.value
}

func (v *NullableVisualizationFontStyle) Set(val *VisualizationFontStyle) {
	v.value = val
	v.isSet = true
}

func (v NullableVisualizationFontStyle) IsSet() bool {
	return v.isSet
}

func (v *NullableVisualizationFontStyle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVisualizationFontStyle(val *VisualizationFontStyle) *NullableVisualizationFontStyle {
	return &NullableVisualizationFontStyle{value: val, isSet: true}
}

func (v NullableVisualizationFontStyle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVisualizationFontStyle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
