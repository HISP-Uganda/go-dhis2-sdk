/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DataIntegritySummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataIntegritySummary{}

// DataIntegritySummary struct for DataIntegritySummary
type DataIntegritySummary struct {
	Count        int32      `json:"count"`
	Error        *string    `json:"error,omitempty"`
	FinishedTime *time.Time `json:"finishedTime,omitempty"`
	Percentage   *float64   `json:"percentage,omitempty"`
	StartTime    *time.Time `json:"startTime,omitempty"`
}

type _DataIntegritySummary DataIntegritySummary

// NewDataIntegritySummary instantiates a new DataIntegritySummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataIntegritySummary(count int32) *DataIntegritySummary {
	this := DataIntegritySummary{}
	this.Count = count
	return &this
}

// NewDataIntegritySummaryWithDefaults instantiates a new DataIntegritySummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataIntegritySummaryWithDefaults() *DataIntegritySummary {
	this := DataIntegritySummary{}
	return &this
}

// GetCount returns the Count field value
func (o *DataIntegritySummary) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *DataIntegritySummary) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *DataIntegritySummary) SetCount(v int32) {
	o.Count = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *DataIntegritySummary) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegritySummary) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *DataIntegritySummary) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *DataIntegritySummary) SetError(v string) {
	o.Error = &v
}

// GetFinishedTime returns the FinishedTime field value if set, zero value otherwise.
func (o *DataIntegritySummary) GetFinishedTime() time.Time {
	if o == nil || IsNil(o.FinishedTime) {
		var ret time.Time
		return ret
	}
	return *o.FinishedTime
}

// GetFinishedTimeOk returns a tuple with the FinishedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegritySummary) GetFinishedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FinishedTime) {
		return nil, false
	}
	return o.FinishedTime, true
}

// HasFinishedTime returns a boolean if a field has been set.
func (o *DataIntegritySummary) HasFinishedTime() bool {
	if o != nil && !IsNil(o.FinishedTime) {
		return true
	}

	return false
}

// SetFinishedTime gets a reference to the given time.Time and assigns it to the FinishedTime field.
func (o *DataIntegritySummary) SetFinishedTime(v time.Time) {
	o.FinishedTime = &v
}

// GetPercentage returns the Percentage field value if set, zero value otherwise.
func (o *DataIntegritySummary) GetPercentage() float64 {
	if o == nil || IsNil(o.Percentage) {
		var ret float64
		return ret
	}
	return *o.Percentage
}

// GetPercentageOk returns a tuple with the Percentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegritySummary) GetPercentageOk() (*float64, bool) {
	if o == nil || IsNil(o.Percentage) {
		return nil, false
	}
	return o.Percentage, true
}

// HasPercentage returns a boolean if a field has been set.
func (o *DataIntegritySummary) HasPercentage() bool {
	if o != nil && !IsNil(o.Percentage) {
		return true
	}

	return false
}

// SetPercentage gets a reference to the given float64 and assigns it to the Percentage field.
func (o *DataIntegritySummary) SetPercentage(v float64) {
	o.Percentage = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *DataIntegritySummary) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegritySummary) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *DataIntegritySummary) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *DataIntegritySummary) SetStartTime(v time.Time) {
	o.StartTime = &v
}

func (o DataIntegritySummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataIntegritySummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["count"] = o.Count
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.FinishedTime) {
		toSerialize["finishedTime"] = o.FinishedTime
	}
	if !IsNil(o.Percentage) {
		toSerialize["percentage"] = o.Percentage
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	return toSerialize, nil
}

func (o *DataIntegritySummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDataIntegritySummary := _DataIntegritySummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDataIntegritySummary)

	if err != nil {
		return err
	}

	*o = DataIntegritySummary(varDataIntegritySummary)

	return err
}

type NullableDataIntegritySummary struct {
	value *DataIntegritySummary
	isSet bool
}

func (v NullableDataIntegritySummary) Get() *DataIntegritySummary {
	return v.value
}

func (v *NullableDataIntegritySummary) Set(val *DataIntegritySummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDataIntegritySummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDataIntegritySummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataIntegritySummary(val *DataIntegritySummary) *NullableDataIntegritySummary {
	return &NullableDataIntegritySummary{value: val, isSet: true}
}

func (v NullableDataIntegritySummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataIntegritySummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
