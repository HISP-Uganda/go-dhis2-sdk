/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the MergeObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MergeObject{}

// MergeObject struct for MergeObject
type MergeObject struct {
	Enrollments             []string `json:"enrollments,omitempty"`
	Relationships           []string `json:"relationships,omitempty"`
	TrackedEntityAttributes []string `json:"trackedEntityAttributes,omitempty"`
}

// NewMergeObject instantiates a new MergeObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergeObject() *MergeObject {
	this := MergeObject{}
	return &this
}

// NewMergeObjectWithDefaults instantiates a new MergeObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergeObjectWithDefaults() *MergeObject {
	this := MergeObject{}
	return &this
}

// GetEnrollments returns the Enrollments field value if set, zero value otherwise.
func (o *MergeObject) GetEnrollments() []string {
	if o == nil || IsNil(o.Enrollments) {
		var ret []string
		return ret
	}
	return o.Enrollments
}

// GetEnrollmentsOk returns a tuple with the Enrollments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeObject) GetEnrollmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Enrollments) {
		return nil, false
	}
	return o.Enrollments, true
}

// HasEnrollments returns a boolean if a field has been set.
func (o *MergeObject) HasEnrollments() bool {
	if o != nil && !IsNil(o.Enrollments) {
		return true
	}

	return false
}

// SetEnrollments gets a reference to the given []string and assigns it to the Enrollments field.
func (o *MergeObject) SetEnrollments(v []string) {
	o.Enrollments = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *MergeObject) GetRelationships() []string {
	if o == nil || IsNil(o.Relationships) {
		var ret []string
		return ret
	}
	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeObject) GetRelationshipsOk() ([]string, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *MergeObject) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given []string and assigns it to the Relationships field.
func (o *MergeObject) SetRelationships(v []string) {
	o.Relationships = v
}

// GetTrackedEntityAttributes returns the TrackedEntityAttributes field value if set, zero value otherwise.
func (o *MergeObject) GetTrackedEntityAttributes() []string {
	if o == nil || IsNil(o.TrackedEntityAttributes) {
		var ret []string
		return ret
	}
	return o.TrackedEntityAttributes
}

// GetTrackedEntityAttributesOk returns a tuple with the TrackedEntityAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MergeObject) GetTrackedEntityAttributesOk() ([]string, bool) {
	if o == nil || IsNil(o.TrackedEntityAttributes) {
		return nil, false
	}
	return o.TrackedEntityAttributes, true
}

// HasTrackedEntityAttributes returns a boolean if a field has been set.
func (o *MergeObject) HasTrackedEntityAttributes() bool {
	if o != nil && !IsNil(o.TrackedEntityAttributes) {
		return true
	}

	return false
}

// SetTrackedEntityAttributes gets a reference to the given []string and assigns it to the TrackedEntityAttributes field.
func (o *MergeObject) SetTrackedEntityAttributes(v []string) {
	o.TrackedEntityAttributes = v
}

func (o MergeObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MergeObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enrollments) {
		toSerialize["enrollments"] = o.Enrollments
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.TrackedEntityAttributes) {
		toSerialize["trackedEntityAttributes"] = o.TrackedEntityAttributes
	}
	return toSerialize, nil
}

type NullableMergeObject struct {
	value *MergeObject
	isSet bool
}

func (v NullableMergeObject) Get() *MergeObject {
	return v.value
}

func (v *NullableMergeObject) Set(val *MergeObject) {
	v.value = val
	v.isSet = true
}

func (v NullableMergeObject) IsSet() bool {
	return v.isSet
}

func (v *NullableMergeObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergeObject(val *MergeObject) *NullableMergeObject {
	return &NullableMergeObject{value: val, isSet: true}
}

func (v NullableMergeObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergeObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
