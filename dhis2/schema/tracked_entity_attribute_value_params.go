/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"time"
)

// checks if the TrackedEntityAttributeValueParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackedEntityAttributeValueParams{}

// TrackedEntityAttributeValueParams struct for TrackedEntityAttributeValueParams
type TrackedEntityAttributeValueParams struct {
	Created                *time.Time                    `json:"created,omitempty"`
	LastUpdated            *time.Time                    `json:"lastUpdated,omitempty"`
	StoredBy               *string                       `json:"storedBy,omitempty"`
	TrackedEntityAttribute *TrackedEntityAttributeParams `json:"trackedEntityAttribute,omitempty"`
	TrackedEntityInstance  *TrackedEntityParams          `json:"trackedEntityInstance,omitempty"`
	Value                  *string                       `json:"value,omitempty"`
}

// NewTrackedEntityAttributeValueParams instantiates a new TrackedEntityAttributeValueParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackedEntityAttributeValueParams() *TrackedEntityAttributeValueParams {
	this := TrackedEntityAttributeValueParams{}
	return &this
}

// NewTrackedEntityAttributeValueParamsWithDefaults instantiates a new TrackedEntityAttributeValueParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackedEntityAttributeValueParamsWithDefaults() *TrackedEntityAttributeValueParams {
	this := TrackedEntityAttributeValueParams{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *TrackedEntityAttributeValueParams) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityAttributeValueParams) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *TrackedEntityAttributeValueParams) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *TrackedEntityAttributeValueParams) SetCreated(v time.Time) {
	o.Created = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *TrackedEntityAttributeValueParams) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityAttributeValueParams) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *TrackedEntityAttributeValueParams) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *TrackedEntityAttributeValueParams) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetStoredBy returns the StoredBy field value if set, zero value otherwise.
func (o *TrackedEntityAttributeValueParams) GetStoredBy() string {
	if o == nil || IsNil(o.StoredBy) {
		var ret string
		return ret
	}
	return *o.StoredBy
}

// GetStoredByOk returns a tuple with the StoredBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityAttributeValueParams) GetStoredByOk() (*string, bool) {
	if o == nil || IsNil(o.StoredBy) {
		return nil, false
	}
	return o.StoredBy, true
}

// HasStoredBy returns a boolean if a field has been set.
func (o *TrackedEntityAttributeValueParams) HasStoredBy() bool {
	if o != nil && !IsNil(o.StoredBy) {
		return true
	}

	return false
}

// SetStoredBy gets a reference to the given string and assigns it to the StoredBy field.
func (o *TrackedEntityAttributeValueParams) SetStoredBy(v string) {
	o.StoredBy = &v
}

// GetTrackedEntityAttribute returns the TrackedEntityAttribute field value if set, zero value otherwise.
func (o *TrackedEntityAttributeValueParams) GetTrackedEntityAttribute() TrackedEntityAttributeParams {
	if o == nil || IsNil(o.TrackedEntityAttribute) {
		var ret TrackedEntityAttributeParams
		return ret
	}
	return *o.TrackedEntityAttribute
}

// GetTrackedEntityAttributeOk returns a tuple with the TrackedEntityAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityAttributeValueParams) GetTrackedEntityAttributeOk() (*TrackedEntityAttributeParams, bool) {
	if o == nil || IsNil(o.TrackedEntityAttribute) {
		return nil, false
	}
	return o.TrackedEntityAttribute, true
}

// HasTrackedEntityAttribute returns a boolean if a field has been set.
func (o *TrackedEntityAttributeValueParams) HasTrackedEntityAttribute() bool {
	if o != nil && !IsNil(o.TrackedEntityAttribute) {
		return true
	}

	return false
}

// SetTrackedEntityAttribute gets a reference to the given TrackedEntityAttributeParams and assigns it to the TrackedEntityAttribute field.
func (o *TrackedEntityAttributeValueParams) SetTrackedEntityAttribute(v TrackedEntityAttributeParams) {
	o.TrackedEntityAttribute = &v
}

// GetTrackedEntityInstance returns the TrackedEntityInstance field value if set, zero value otherwise.
func (o *TrackedEntityAttributeValueParams) GetTrackedEntityInstance() TrackedEntityParams {
	if o == nil || IsNil(o.TrackedEntityInstance) {
		var ret TrackedEntityParams
		return ret
	}
	return *o.TrackedEntityInstance
}

// GetTrackedEntityInstanceOk returns a tuple with the TrackedEntityInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityAttributeValueParams) GetTrackedEntityInstanceOk() (*TrackedEntityParams, bool) {
	if o == nil || IsNil(o.TrackedEntityInstance) {
		return nil, false
	}
	return o.TrackedEntityInstance, true
}

// HasTrackedEntityInstance returns a boolean if a field has been set.
func (o *TrackedEntityAttributeValueParams) HasTrackedEntityInstance() bool {
	if o != nil && !IsNil(o.TrackedEntityInstance) {
		return true
	}

	return false
}

// SetTrackedEntityInstance gets a reference to the given TrackedEntityParams and assigns it to the TrackedEntityInstance field.
func (o *TrackedEntityAttributeValueParams) SetTrackedEntityInstance(v TrackedEntityParams) {
	o.TrackedEntityInstance = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *TrackedEntityAttributeValueParams) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityAttributeValueParams) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *TrackedEntityAttributeValueParams) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *TrackedEntityAttributeValueParams) SetValue(v string) {
	o.Value = &v
}

func (o TrackedEntityAttributeValueParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackedEntityAttributeValueParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.StoredBy) {
		toSerialize["storedBy"] = o.StoredBy
	}
	if !IsNil(o.TrackedEntityAttribute) {
		toSerialize["trackedEntityAttribute"] = o.TrackedEntityAttribute
	}
	if !IsNil(o.TrackedEntityInstance) {
		toSerialize["trackedEntityInstance"] = o.TrackedEntityInstance
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableTrackedEntityAttributeValueParams struct {
	value *TrackedEntityAttributeValueParams
	isSet bool
}

func (v NullableTrackedEntityAttributeValueParams) Get() *TrackedEntityAttributeValueParams {
	return v.value
}

func (v *NullableTrackedEntityAttributeValueParams) Set(val *TrackedEntityAttributeValueParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackedEntityAttributeValueParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackedEntityAttributeValueParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackedEntityAttributeValueParams(val *TrackedEntityAttributeValueParams) *NullableTrackedEntityAttributeValueParams {
	return &NullableTrackedEntityAttributeValueParams{value: val, isSet: true}
}

func (v NullableTrackedEntityAttributeValueParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackedEntityAttributeValueParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
