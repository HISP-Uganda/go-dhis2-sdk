/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PredictionSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PredictionSummary{}

// PredictionSummary struct for PredictionSummary
type PredictionSummary struct {
	Deleted      int32            `json:"deleted"`
	Description  *string          `json:"description,omitempty"`
	Inserted     int32            `json:"inserted"`
	Predictors   int32            `json:"predictors"`
	ResponseType *string          `json:"responseType,omitempty"`
	Status       PredictionStatus `json:"status"`
	Unchanged    int32            `json:"unchanged"`
	Updated      int32            `json:"updated"`
}

type _PredictionSummary PredictionSummary

// NewPredictionSummary instantiates a new PredictionSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPredictionSummary(deleted int32, inserted int32, predictors int32, status PredictionStatus, unchanged int32, updated int32) *PredictionSummary {
	this := PredictionSummary{}
	this.Deleted = deleted
	this.Inserted = inserted
	this.Predictors = predictors
	this.Status = status
	this.Unchanged = unchanged
	this.Updated = updated
	return &this
}

// NewPredictionSummaryWithDefaults instantiates a new PredictionSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPredictionSummaryWithDefaults() *PredictionSummary {
	this := PredictionSummary{}
	return &this
}

// GetDeleted returns the Deleted field value
func (o *PredictionSummary) GetDeleted() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *PredictionSummary) GetDeletedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *PredictionSummary) SetDeleted(v int32) {
	o.Deleted = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PredictionSummary) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PredictionSummary) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PredictionSummary) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PredictionSummary) SetDescription(v string) {
	o.Description = &v
}

// GetInserted returns the Inserted field value
func (o *PredictionSummary) GetInserted() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Inserted
}

// GetInsertedOk returns a tuple with the Inserted field value
// and a boolean to check if the value has been set.
func (o *PredictionSummary) GetInsertedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inserted, true
}

// SetInserted sets field value
func (o *PredictionSummary) SetInserted(v int32) {
	o.Inserted = v
}

// GetPredictors returns the Predictors field value
func (o *PredictionSummary) GetPredictors() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Predictors
}

// GetPredictorsOk returns a tuple with the Predictors field value
// and a boolean to check if the value has been set.
func (o *PredictionSummary) GetPredictorsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Predictors, true
}

// SetPredictors sets field value
func (o *PredictionSummary) SetPredictors(v int32) {
	o.Predictors = v
}

// GetResponseType returns the ResponseType field value if set, zero value otherwise.
func (o *PredictionSummary) GetResponseType() string {
	if o == nil || IsNil(o.ResponseType) {
		var ret string
		return ret
	}
	return *o.ResponseType
}

// GetResponseTypeOk returns a tuple with the ResponseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PredictionSummary) GetResponseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseType) {
		return nil, false
	}
	return o.ResponseType, true
}

// HasResponseType returns a boolean if a field has been set.
func (o *PredictionSummary) HasResponseType() bool {
	if o != nil && !IsNil(o.ResponseType) {
		return true
	}

	return false
}

// SetResponseType gets a reference to the given string and assigns it to the ResponseType field.
func (o *PredictionSummary) SetResponseType(v string) {
	o.ResponseType = &v
}

// GetStatus returns the Status field value
func (o *PredictionSummary) GetStatus() PredictionStatus {
	if o == nil {
		var ret PredictionStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PredictionSummary) GetStatusOk() (*PredictionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PredictionSummary) SetStatus(v PredictionStatus) {
	o.Status = v
}

// GetUnchanged returns the Unchanged field value
func (o *PredictionSummary) GetUnchanged() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Unchanged
}

// GetUnchangedOk returns a tuple with the Unchanged field value
// and a boolean to check if the value has been set.
func (o *PredictionSummary) GetUnchangedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unchanged, true
}

// SetUnchanged sets field value
func (o *PredictionSummary) SetUnchanged(v int32) {
	o.Unchanged = v
}

// GetUpdated returns the Updated field value
func (o *PredictionSummary) GetUpdated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *PredictionSummary) GetUpdatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *PredictionSummary) SetUpdated(v int32) {
	o.Updated = v
}

func (o PredictionSummary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PredictionSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deleted"] = o.Deleted
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["inserted"] = o.Inserted
	toSerialize["predictors"] = o.Predictors
	if !IsNil(o.ResponseType) {
		toSerialize["responseType"] = o.ResponseType
	}
	toSerialize["status"] = o.Status
	toSerialize["unchanged"] = o.Unchanged
	toSerialize["updated"] = o.Updated
	return toSerialize, nil
}

func (o *PredictionSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deleted",
		"inserted",
		"predictors",
		"status",
		"unchanged",
		"updated",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPredictionSummary := _PredictionSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPredictionSummary)

	if err != nil {
		return err
	}

	*o = PredictionSummary(varPredictionSummary)

	return err
}

type NullablePredictionSummary struct {
	value *PredictionSummary
	isSet bool
}

func (v NullablePredictionSummary) Get() *PredictionSummary {
	return v.value
}

func (v *NullablePredictionSummary) Set(val *PredictionSummary) {
	v.value = val
	v.isSet = true
}

func (v NullablePredictionSummary) IsSet() bool {
	return v.isSet
}

func (v *NullablePredictionSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePredictionSummary(val *PredictionSummary) *NullablePredictionSummary {
	return &NullablePredictionSummary{value: val, isSet: true}
}

func (v NullablePredictionSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePredictionSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
