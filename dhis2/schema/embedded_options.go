/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the EmbeddedOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbeddedOptions{}

// EmbeddedOptions struct for EmbeddedOptions
type EmbeddedOptions struct {
	Filters           *FilterOptions `json:"filters,omitempty"`
	HideChartControls *bool          `json:"hideChartControls,omitempty"`
	HideTab           *bool          `json:"hideTab,omitempty"`
}

// NewEmbeddedOptions instantiates a new EmbeddedOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbeddedOptions() *EmbeddedOptions {
	this := EmbeddedOptions{}
	return &this
}

// NewEmbeddedOptionsWithDefaults instantiates a new EmbeddedOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbeddedOptionsWithDefaults() *EmbeddedOptions {
	this := EmbeddedOptions{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *EmbeddedOptions) GetFilters() FilterOptions {
	if o == nil || IsNil(o.Filters) {
		var ret FilterOptions
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddedOptions) GetFiltersOk() (*FilterOptions, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *EmbeddedOptions) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FilterOptions and assigns it to the Filters field.
func (o *EmbeddedOptions) SetFilters(v FilterOptions) {
	o.Filters = &v
}

// GetHideChartControls returns the HideChartControls field value if set, zero value otherwise.
func (o *EmbeddedOptions) GetHideChartControls() bool {
	if o == nil || IsNil(o.HideChartControls) {
		var ret bool
		return ret
	}
	return *o.HideChartControls
}

// GetHideChartControlsOk returns a tuple with the HideChartControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddedOptions) GetHideChartControlsOk() (*bool, bool) {
	if o == nil || IsNil(o.HideChartControls) {
		return nil, false
	}
	return o.HideChartControls, true
}

// HasHideChartControls returns a boolean if a field has been set.
func (o *EmbeddedOptions) HasHideChartControls() bool {
	if o != nil && !IsNil(o.HideChartControls) {
		return true
	}

	return false
}

// SetHideChartControls gets a reference to the given bool and assigns it to the HideChartControls field.
func (o *EmbeddedOptions) SetHideChartControls(v bool) {
	o.HideChartControls = &v
}

// GetHideTab returns the HideTab field value if set, zero value otherwise.
func (o *EmbeddedOptions) GetHideTab() bool {
	if o == nil || IsNil(o.HideTab) {
		var ret bool
		return ret
	}
	return *o.HideTab
}

// GetHideTabOk returns a tuple with the HideTab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddedOptions) GetHideTabOk() (*bool, bool) {
	if o == nil || IsNil(o.HideTab) {
		return nil, false
	}
	return o.HideTab, true
}

// HasHideTab returns a boolean if a field has been set.
func (o *EmbeddedOptions) HasHideTab() bool {
	if o != nil && !IsNil(o.HideTab) {
		return true
	}

	return false
}

// SetHideTab gets a reference to the given bool and assigns it to the HideTab field.
func (o *EmbeddedOptions) SetHideTab(v bool) {
	o.HideTab = &v
}

func (o EmbeddedOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbeddedOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.HideChartControls) {
		toSerialize["hideChartControls"] = o.HideChartControls
	}
	if !IsNil(o.HideTab) {
		toSerialize["hideTab"] = o.HideTab
	}
	return toSerialize, nil
}

type NullableEmbeddedOptions struct {
	value *EmbeddedOptions
	isSet bool
}

func (v NullableEmbeddedOptions) Get() *EmbeddedOptions {
	return v.value
}

func (v *NullableEmbeddedOptions) Set(val *EmbeddedOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddedOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddedOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddedOptions(val *EmbeddedOptions) *NullableEmbeddedOptions {
	return &NullableEmbeddedOptions{value: val, isSet: true}
}

func (v NullableEmbeddedOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddedOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
