/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the DimensionItemKeywords type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DimensionItemKeywords{}

// DimensionItemKeywords struct for DimensionItemKeywords
type DimensionItemKeywords struct {
	Empty    *bool     `json:"empty,omitempty"`
	Keywords []Keyword `json:"keywords,omitempty"`
}

// NewDimensionItemKeywords instantiates a new DimensionItemKeywords object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDimensionItemKeywords() *DimensionItemKeywords {
	this := DimensionItemKeywords{}
	return &this
}

// NewDimensionItemKeywordsWithDefaults instantiates a new DimensionItemKeywords object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDimensionItemKeywordsWithDefaults() *DimensionItemKeywords {
	this := DimensionItemKeywords{}
	return &this
}

// GetEmpty returns the Empty field value if set, zero value otherwise.
func (o *DimensionItemKeywords) GetEmpty() bool {
	if o == nil || IsNil(o.Empty) {
		var ret bool
		return ret
	}
	return *o.Empty
}

// GetEmptyOk returns a tuple with the Empty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionItemKeywords) GetEmptyOk() (*bool, bool) {
	if o == nil || IsNil(o.Empty) {
		return nil, false
	}
	return o.Empty, true
}

// HasEmpty returns a boolean if a field has been set.
func (o *DimensionItemKeywords) HasEmpty() bool {
	if o != nil && !IsNil(o.Empty) {
		return true
	}

	return false
}

// SetEmpty gets a reference to the given bool and assigns it to the Empty field.
func (o *DimensionItemKeywords) SetEmpty(v bool) {
	o.Empty = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *DimensionItemKeywords) GetKeywords() []Keyword {
	if o == nil || IsNil(o.Keywords) {
		var ret []Keyword
		return ret
	}
	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionItemKeywords) GetKeywordsOk() ([]Keyword, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *DimensionItemKeywords) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given []Keyword and assigns it to the Keywords field.
func (o *DimensionItemKeywords) SetKeywords(v []Keyword) {
	o.Keywords = v
}

func (o DimensionItemKeywords) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DimensionItemKeywords) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Empty) {
		toSerialize["empty"] = o.Empty
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	return toSerialize, nil
}

type NullableDimensionItemKeywords struct {
	value *DimensionItemKeywords
	isSet bool
}

func (v NullableDimensionItemKeywords) Get() *DimensionItemKeywords {
	return v.value
}

func (v *NullableDimensionItemKeywords) Set(val *DimensionItemKeywords) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionItemKeywords) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionItemKeywords) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionItemKeywords(val *DimensionItemKeywords) *NullableDimensionItemKeywords {
	return &NullableDimensionItemKeywords{value: val, isSet: true}
}

func (v NullableDimensionItemKeywords) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionItemKeywords) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
