/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the ObjectStyle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStyle{}

// ObjectStyle struct for ObjectStyle
type ObjectStyle struct {
	Color *string `json:"color,omitempty"`
	Icon  *string `json:"icon,omitempty"`
}

// NewObjectStyle instantiates a new ObjectStyle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStyle() *ObjectStyle {
	this := ObjectStyle{}
	return &this
}

// NewObjectStyleWithDefaults instantiates a new ObjectStyle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStyleWithDefaults() *ObjectStyle {
	this := ObjectStyle{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *ObjectStyle) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStyle) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *ObjectStyle) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *ObjectStyle) SetColor(v string) {
	o.Color = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *ObjectStyle) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStyle) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *ObjectStyle) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *ObjectStyle) SetIcon(v string) {
	o.Icon = &v
}

func (o ObjectStyle) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStyle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	return toSerialize, nil
}

type NullableObjectStyle struct {
	value *ObjectStyle
	isSet bool
}

func (v NullableObjectStyle) Get() *ObjectStyle {
	return v.value
}

func (v *NullableObjectStyle) Set(val *ObjectStyle) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStyle) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStyle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStyle(val *ObjectStyle) *NullableObjectStyle {
	return &NullableObjectStyle{value: val, isSet: true}
}

func (v NullableObjectStyle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStyle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
