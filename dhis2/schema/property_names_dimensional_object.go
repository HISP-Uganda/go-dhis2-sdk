/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesDimensionalObject the model 'PropertyNamesDimensionalObject'
type PropertyNamesDimensionalObject string

// List of PropertyNames_DimensionalObject
const (
	PROPERTYNAMESDIMENSIONALOBJECT_ACCESS                  PropertyNamesDimensionalObject = "access"
	PROPERTYNAMESDIMENSIONALOBJECT_AGGREGATION_TYPE        PropertyNamesDimensionalObject = "aggregationType"
	PROPERTYNAMESDIMENSIONALOBJECT_ALL_ITEMS               PropertyNamesDimensionalObject = "allItems"
	PROPERTYNAMESDIMENSIONALOBJECT_ANALYTICS_TYPE          PropertyNamesDimensionalObject = "analyticsType"
	PROPERTYNAMESDIMENSIONALOBJECT_ATTRIBUTE_VALUES        PropertyNamesDimensionalObject = "attributeValues"
	PROPERTYNAMESDIMENSIONALOBJECT_CODE                    PropertyNamesDimensionalObject = "code"
	PROPERTYNAMESDIMENSIONALOBJECT_CREATED                 PropertyNamesDimensionalObject = "created"
	PROPERTYNAMESDIMENSIONALOBJECT_CREATED_BY              PropertyNamesDimensionalObject = "createdBy"
	PROPERTYNAMESDIMENSIONALOBJECT_DATA_DIMENSION          PropertyNamesDimensionalObject = "dataDimension"
	PROPERTYNAMESDIMENSIONALOBJECT_DATA_DIMENSION_TYPE     PropertyNamesDimensionalObject = "dataDimensionType"
	PROPERTYNAMESDIMENSIONALOBJECT_DESCRIPTION             PropertyNamesDimensionalObject = "description"
	PROPERTYNAMESDIMENSIONALOBJECT_DIMENSION               PropertyNamesDimensionalObject = "dimension"
	PROPERTYNAMESDIMENSIONALOBJECT_DIMENSION_DISPLAY_NAME  PropertyNamesDimensionalObject = "dimensionDisplayName"
	PROPERTYNAMESDIMENSIONALOBJECT_DIMENSION_ITEM_KEYWORDS PropertyNamesDimensionalObject = "dimensionItemKeywords"
	PROPERTYNAMESDIMENSIONALOBJECT_DIMENSION_NAME          PropertyNamesDimensionalObject = "dimensionName"
	PROPERTYNAMESDIMENSIONALOBJECT_DIMENSION_TYPE          PropertyNamesDimensionalObject = "dimensionType"
	PROPERTYNAMESDIMENSIONALOBJECT_DISPLAY_DESCRIPTION     PropertyNamesDimensionalObject = "displayDescription"
	PROPERTYNAMESDIMENSIONALOBJECT_DISPLAY_NAME            PropertyNamesDimensionalObject = "displayName"
	PROPERTYNAMESDIMENSIONALOBJECT_DISPLAY_SHORT_NAME      PropertyNamesDimensionalObject = "displayShortName"
	PROPERTYNAMESDIMENSIONALOBJECT_EVENT_REPETITION        PropertyNamesDimensionalObject = "eventRepetition"
	PROPERTYNAMESDIMENSIONALOBJECT_EXTERNAL_ACCESS         PropertyNamesDimensionalObject = "externalAccess"
	PROPERTYNAMESDIMENSIONALOBJECT_FAVORITE                PropertyNamesDimensionalObject = "favorite"
	PROPERTYNAMESDIMENSIONALOBJECT_FAVORITES               PropertyNamesDimensionalObject = "favorites"
	PROPERTYNAMESDIMENSIONALOBJECT_FILTER                  PropertyNamesDimensionalObject = "filter"
	PROPERTYNAMESDIMENSIONALOBJECT_FIXED                   PropertyNamesDimensionalObject = "fixed"
	PROPERTYNAMESDIMENSIONALOBJECT_GROUP_UUID              PropertyNamesDimensionalObject = "groupUUID"
	PROPERTYNAMESDIMENSIONALOBJECT_HREF                    PropertyNamesDimensionalObject = "href"
	PROPERTYNAMESDIMENSIONALOBJECT_ID                      PropertyNamesDimensionalObject = "id"
	PROPERTYNAMESDIMENSIONALOBJECT_ITEMS                   PropertyNamesDimensionalObject = "items"
	PROPERTYNAMESDIMENSIONALOBJECT_KEY                     PropertyNamesDimensionalObject = "key"
	PROPERTYNAMESDIMENSIONALOBJECT_LAST_UPDATED            PropertyNamesDimensionalObject = "lastUpdated"
	PROPERTYNAMESDIMENSIONALOBJECT_LAST_UPDATED_BY         PropertyNamesDimensionalObject = "lastUpdatedBy"
	PROPERTYNAMESDIMENSIONALOBJECT_LEGEND_SET              PropertyNamesDimensionalObject = "legendSet"
	PROPERTYNAMESDIMENSIONALOBJECT_NAME                    PropertyNamesDimensionalObject = "name"
	PROPERTYNAMESDIMENSIONALOBJECT_OPTION_SET              PropertyNamesDimensionalObject = "optionSet"
	PROPERTYNAMESDIMENSIONALOBJECT_PROGRAM_STAGE           PropertyNamesDimensionalObject = "programStage"
	PROPERTYNAMESDIMENSIONALOBJECT_PUBLIC_ACCESS           PropertyNamesDimensionalObject = "publicAccess"
	PROPERTYNAMESDIMENSIONALOBJECT_SHARING                 PropertyNamesDimensionalObject = "sharing"
	PROPERTYNAMESDIMENSIONALOBJECT_SHORT_NAME              PropertyNamesDimensionalObject = "shortName"
	PROPERTYNAMESDIMENSIONALOBJECT_TRANSLATIONS            PropertyNamesDimensionalObject = "translations"
	PROPERTYNAMESDIMENSIONALOBJECT_UID                     PropertyNamesDimensionalObject = "uid"
	PROPERTYNAMESDIMENSIONALOBJECT_USER                    PropertyNamesDimensionalObject = "user"
	PROPERTYNAMESDIMENSIONALOBJECT_USER_ACCESSES           PropertyNamesDimensionalObject = "userAccesses"
	PROPERTYNAMESDIMENSIONALOBJECT_USER_GROUP_ACCESSES     PropertyNamesDimensionalObject = "userGroupAccesses"
	PROPERTYNAMESDIMENSIONALOBJECT_VALUE_TYPE              PropertyNamesDimensionalObject = "valueType"
)

// All allowed values of PropertyNamesDimensionalObject enum
var AllowedPropertyNamesDimensionalObjectEnumValues = []PropertyNamesDimensionalObject{
	"access",
	"aggregationType",
	"allItems",
	"analyticsType",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"dataDimension",
	"dataDimensionType",
	"description",
	"dimension",
	"dimensionDisplayName",
	"dimensionItemKeywords",
	"dimensionName",
	"dimensionType",
	"displayDescription",
	"displayName",
	"displayShortName",
	"eventRepetition",
	"externalAccess",
	"favorite",
	"favorites",
	"filter",
	"fixed",
	"groupUUID",
	"href",
	"id",
	"items",
	"key",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"name",
	"optionSet",
	"programStage",
	"publicAccess",
	"sharing",
	"shortName",
	"translations",
	"uid",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"valueType",
}

func (v *PropertyNamesDimensionalObject) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesDimensionalObject(value)
	for _, existing := range AllowedPropertyNamesDimensionalObjectEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesDimensionalObject", value)
}

// NewPropertyNamesDimensionalObjectFromValue returns a pointer to a valid PropertyNamesDimensionalObject
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesDimensionalObjectFromValue(v string) (*PropertyNamesDimensionalObject, error) {
	ev := PropertyNamesDimensionalObject(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesDimensionalObject: valid values are %v", v, AllowedPropertyNamesDimensionalObjectEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesDimensionalObject) IsValid() bool {
	for _, existing := range AllowedPropertyNamesDimensionalObjectEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_DimensionalObject value
func (v PropertyNamesDimensionalObject) Ptr() *PropertyNamesDimensionalObject {
	return &v
}

type NullablePropertyNamesDimensionalObject struct {
	value *PropertyNamesDimensionalObject
	isSet bool
}

func (v NullablePropertyNamesDimensionalObject) Get() *PropertyNamesDimensionalObject {
	return v.value
}

func (v *NullablePropertyNamesDimensionalObject) Set(val *PropertyNamesDimensionalObject) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesDimensionalObject) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesDimensionalObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesDimensionalObject(val *PropertyNamesDimensionalObject) *NullablePropertyNamesDimensionalObject {
	return &NullablePropertyNamesDimensionalObject{value: val, isSet: true}
}

func (v NullablePropertyNamesDimensionalObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesDimensionalObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
