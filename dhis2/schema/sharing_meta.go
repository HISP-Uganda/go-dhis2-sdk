/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the SharingMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SharingMeta{}

// SharingMeta struct for SharingMeta
type SharingMeta struct {
	AllowExternalAccess *bool `json:"allowExternalAccess,omitempty"`
	AllowPublicAccess   *bool `json:"allowPublicAccess,omitempty"`
}

// NewSharingMeta instantiates a new SharingMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharingMeta() *SharingMeta {
	this := SharingMeta{}
	return &this
}

// NewSharingMetaWithDefaults instantiates a new SharingMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharingMetaWithDefaults() *SharingMeta {
	this := SharingMeta{}
	return &this
}

// GetAllowExternalAccess returns the AllowExternalAccess field value if set, zero value otherwise.
func (o *SharingMeta) GetAllowExternalAccess() bool {
	if o == nil || IsNil(o.AllowExternalAccess) {
		var ret bool
		return ret
	}
	return *o.AllowExternalAccess
}

// GetAllowExternalAccessOk returns a tuple with the AllowExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharingMeta) GetAllowExternalAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowExternalAccess) {
		return nil, false
	}
	return o.AllowExternalAccess, true
}

// HasAllowExternalAccess returns a boolean if a field has been set.
func (o *SharingMeta) HasAllowExternalAccess() bool {
	if o != nil && !IsNil(o.AllowExternalAccess) {
		return true
	}

	return false
}

// SetAllowExternalAccess gets a reference to the given bool and assigns it to the AllowExternalAccess field.
func (o *SharingMeta) SetAllowExternalAccess(v bool) {
	o.AllowExternalAccess = &v
}

// GetAllowPublicAccess returns the AllowPublicAccess field value if set, zero value otherwise.
func (o *SharingMeta) GetAllowPublicAccess() bool {
	if o == nil || IsNil(o.AllowPublicAccess) {
		var ret bool
		return ret
	}
	return *o.AllowPublicAccess
}

// GetAllowPublicAccessOk returns a tuple with the AllowPublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharingMeta) GetAllowPublicAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPublicAccess) {
		return nil, false
	}
	return o.AllowPublicAccess, true
}

// HasAllowPublicAccess returns a boolean if a field has been set.
func (o *SharingMeta) HasAllowPublicAccess() bool {
	if o != nil && !IsNil(o.AllowPublicAccess) {
		return true
	}

	return false
}

// SetAllowPublicAccess gets a reference to the given bool and assigns it to the AllowPublicAccess field.
func (o *SharingMeta) SetAllowPublicAccess(v bool) {
	o.AllowPublicAccess = &v
}

func (o SharingMeta) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharingMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowExternalAccess) {
		toSerialize["allowExternalAccess"] = o.AllowExternalAccess
	}
	if !IsNil(o.AllowPublicAccess) {
		toSerialize["allowPublicAccess"] = o.AllowPublicAccess
	}
	return toSerialize, nil
}

type NullableSharingMeta struct {
	value *SharingMeta
	isSet bool
}

func (v NullableSharingMeta) Get() *SharingMeta {
	return v.value
}

func (v *NullableSharingMeta) Set(val *SharingMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableSharingMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableSharingMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharingMeta(val *SharingMeta) *NullableSharingMeta {
	return &NullableSharingMeta{value: val, isSet: true}
}

func (v NullableSharingMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharingMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
