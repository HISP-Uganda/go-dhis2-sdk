/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DimensionalObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DimensionalObject{}

// DimensionalObject struct for DimensionalObject
type DimensionalObject struct {
	Access                *Access                         `json:"access,omitempty"`
	AggregationType       string                          `json:"aggregationType"`
	AllItems              *bool                           `json:"allItems,omitempty"`
	AnalyticsType         string                          `json:"analyticsType"`
	AttributeValues       []AttributeValue                `json:"attributeValues,omitempty"`
	Code                  *string                         `json:"code,omitempty"`
	Created               *time.Time                      `json:"created,omitempty"`
	CreatedBy             *AggregateDataExchangeCreatedBy `json:"createdBy,omitempty"`
	DataDimension         *bool                           `json:"dataDimension,omitempty"`
	DataDimensionType     string                          `json:"dataDimensionType"`
	Description           *string                         `json:"description,omitempty"`
	Dimension             *string                         `json:"dimension,omitempty"`
	DimensionDisplayName  *string                         `json:"dimensionDisplayName,omitempty"`
	DimensionItemKeywords *DimensionItemKeywords          `json:"dimensionItemKeywords,omitempty"`
	DimensionName         *string                         `json:"dimensionName,omitempty"`
	DimensionType         string                          `json:"dimensionType"`
	DisplayDescription    *string                         `json:"displayDescription,omitempty"`
	DisplayName           *string                         `json:"displayName,omitempty"`
	DisplayShortName      *string                         `json:"displayShortName,omitempty"`
	EventRepetition       *EventRepetition                `json:"eventRepetition,omitempty"`
	ExternalAccess        *bool                           `json:"externalAccess,omitempty"`
	Favorite              *bool                           `json:"favorite,omitempty"`
	Favorites             []string                        `json:"favorites,omitempty"`
	Filter                *string                         `json:"filter,omitempty"`
	Fixed                 *bool                           `json:"fixed,omitempty"`
	GroupUUID             *string                         `json:"groupUUID,omitempty"`
	Href                  *string                         `json:"href,omitempty"`
	Id                    int64                           `json:"id"`
	Items                 []CategoryItemsInner            `json:"items,omitempty"`
	Key                   *string                         `json:"key,omitempty"`
	LastUpdated           *time.Time                      `json:"lastUpdated,omitempty"`
	LastUpdatedBy         *AggregateDataExchangeCreatedBy `json:"lastUpdatedBy,omitempty"`
	LegendSet             *CategoryLegendSet              `json:"legendSet,omitempty"`
	Name                  *string                         `json:"name,omitempty"`
	OptionSet             *AttributeOptionSet             `json:"optionSet,omitempty"`
	ProgramStage          *CategoryProgramStage           `json:"programStage,omitempty"`
	PublicAccess          *string                         `json:"publicAccess,omitempty"`
	Sharing               *Sharing                        `json:"sharing,omitempty"`
	ShortName             *string                         `json:"shortName,omitempty"`
	Translations          []Translation                   `json:"translations,omitempty"`
	Uid                   *string                         `json:"uid,omitempty"`
	User                  *AggregateDataExchangeCreatedBy `json:"user,omitempty"`
	UserAccesses          []LegacyUserAccess              `json:"userAccesses,omitempty"`
	UserGroupAccesses     []LegacyUserGroupAccess         `json:"userGroupAccesses,omitempty"`
	ValueType             string                          `json:"valueType"`
}

type _DimensionalObject DimensionalObject

// NewDimensionalObject instantiates a new DimensionalObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDimensionalObject(aggregationType string, analyticsType string, dataDimensionType string, dimensionType string, id int64, valueType string) *DimensionalObject {
	this := DimensionalObject{}
	this.AggregationType = aggregationType
	this.AnalyticsType = analyticsType
	this.DataDimensionType = dataDimensionType
	this.DimensionType = dimensionType
	this.Id = id
	this.ValueType = valueType
	return &this
}

// NewDimensionalObjectWithDefaults instantiates a new DimensionalObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDimensionalObjectWithDefaults() *DimensionalObject {
	this := DimensionalObject{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *DimensionalObject) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *DimensionalObject) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *DimensionalObject) SetAccess(v Access) {
	o.Access = &v
}

// GetAggregationType returns the AggregationType field value
func (o *DimensionalObject) GetAggregationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AggregationType
}

// GetAggregationTypeOk returns a tuple with the AggregationType field value
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetAggregationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationType, true
}

// SetAggregationType sets field value
func (o *DimensionalObject) SetAggregationType(v string) {
	o.AggregationType = v
}

// GetAllItems returns the AllItems field value if set, zero value otherwise.
func (o *DimensionalObject) GetAllItems() bool {
	if o == nil || IsNil(o.AllItems) {
		var ret bool
		return ret
	}
	return *o.AllItems
}

// GetAllItemsOk returns a tuple with the AllItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetAllItemsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllItems) {
		return nil, false
	}
	return o.AllItems, true
}

// HasAllItems returns a boolean if a field has been set.
func (o *DimensionalObject) HasAllItems() bool {
	if o != nil && !IsNil(o.AllItems) {
		return true
	}

	return false
}

// SetAllItems gets a reference to the given bool and assigns it to the AllItems field.
func (o *DimensionalObject) SetAllItems(v bool) {
	o.AllItems = &v
}

// GetAnalyticsType returns the AnalyticsType field value
func (o *DimensionalObject) GetAnalyticsType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AnalyticsType
}

// GetAnalyticsTypeOk returns a tuple with the AnalyticsType field value
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetAnalyticsTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalyticsType, true
}

// SetAnalyticsType sets field value
func (o *DimensionalObject) SetAnalyticsType(v string) {
	o.AnalyticsType = v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *DimensionalObject) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *DimensionalObject) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *DimensionalObject) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DimensionalObject) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DimensionalObject) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *DimensionalObject) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *DimensionalObject) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *DimensionalObject) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *DimensionalObject) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *DimensionalObject) GetCreatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetCreatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *DimensionalObject) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the CreatedBy field.
func (o *DimensionalObject) SetCreatedBy(v AggregateDataExchangeCreatedBy) {
	o.CreatedBy = &v
}

// GetDataDimension returns the DataDimension field value if set, zero value otherwise.
func (o *DimensionalObject) GetDataDimension() bool {
	if o == nil || IsNil(o.DataDimension) {
		var ret bool
		return ret
	}
	return *o.DataDimension
}

// GetDataDimensionOk returns a tuple with the DataDimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDataDimensionOk() (*bool, bool) {
	if o == nil || IsNil(o.DataDimension) {
		return nil, false
	}
	return o.DataDimension, true
}

// HasDataDimension returns a boolean if a field has been set.
func (o *DimensionalObject) HasDataDimension() bool {
	if o != nil && !IsNil(o.DataDimension) {
		return true
	}

	return false
}

// SetDataDimension gets a reference to the given bool and assigns it to the DataDimension field.
func (o *DimensionalObject) SetDataDimension(v bool) {
	o.DataDimension = &v
}

// GetDataDimensionType returns the DataDimensionType field value
func (o *DimensionalObject) GetDataDimensionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataDimensionType
}

// GetDataDimensionTypeOk returns a tuple with the DataDimensionType field value
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDataDimensionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataDimensionType, true
}

// SetDataDimensionType sets field value
func (o *DimensionalObject) SetDataDimensionType(v string) {
	o.DataDimensionType = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DimensionalObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DimensionalObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DimensionalObject) SetDescription(v string) {
	o.Description = &v
}

// GetDimension returns the Dimension field value if set, zero value otherwise.
func (o *DimensionalObject) GetDimension() string {
	if o == nil || IsNil(o.Dimension) {
		var ret string
		return ret
	}
	return *o.Dimension
}

// GetDimensionOk returns a tuple with the Dimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDimensionOk() (*string, bool) {
	if o == nil || IsNil(o.Dimension) {
		return nil, false
	}
	return o.Dimension, true
}

// HasDimension returns a boolean if a field has been set.
func (o *DimensionalObject) HasDimension() bool {
	if o != nil && !IsNil(o.Dimension) {
		return true
	}

	return false
}

// SetDimension gets a reference to the given string and assigns it to the Dimension field.
func (o *DimensionalObject) SetDimension(v string) {
	o.Dimension = &v
}

// GetDimensionDisplayName returns the DimensionDisplayName field value if set, zero value otherwise.
func (o *DimensionalObject) GetDimensionDisplayName() string {
	if o == nil || IsNil(o.DimensionDisplayName) {
		var ret string
		return ret
	}
	return *o.DimensionDisplayName
}

// GetDimensionDisplayNameOk returns a tuple with the DimensionDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDimensionDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DimensionDisplayName) {
		return nil, false
	}
	return o.DimensionDisplayName, true
}

// HasDimensionDisplayName returns a boolean if a field has been set.
func (o *DimensionalObject) HasDimensionDisplayName() bool {
	if o != nil && !IsNil(o.DimensionDisplayName) {
		return true
	}

	return false
}

// SetDimensionDisplayName gets a reference to the given string and assigns it to the DimensionDisplayName field.
func (o *DimensionalObject) SetDimensionDisplayName(v string) {
	o.DimensionDisplayName = &v
}

// GetDimensionItemKeywords returns the DimensionItemKeywords field value if set, zero value otherwise.
func (o *DimensionalObject) GetDimensionItemKeywords() DimensionItemKeywords {
	if o == nil || IsNil(o.DimensionItemKeywords) {
		var ret DimensionItemKeywords
		return ret
	}
	return *o.DimensionItemKeywords
}

// GetDimensionItemKeywordsOk returns a tuple with the DimensionItemKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDimensionItemKeywordsOk() (*DimensionItemKeywords, bool) {
	if o == nil || IsNil(o.DimensionItemKeywords) {
		return nil, false
	}
	return o.DimensionItemKeywords, true
}

// HasDimensionItemKeywords returns a boolean if a field has been set.
func (o *DimensionalObject) HasDimensionItemKeywords() bool {
	if o != nil && !IsNil(o.DimensionItemKeywords) {
		return true
	}

	return false
}

// SetDimensionItemKeywords gets a reference to the given DimensionItemKeywords and assigns it to the DimensionItemKeywords field.
func (o *DimensionalObject) SetDimensionItemKeywords(v DimensionItemKeywords) {
	o.DimensionItemKeywords = &v
}

// GetDimensionName returns the DimensionName field value if set, zero value otherwise.
func (o *DimensionalObject) GetDimensionName() string {
	if o == nil || IsNil(o.DimensionName) {
		var ret string
		return ret
	}
	return *o.DimensionName
}

// GetDimensionNameOk returns a tuple with the DimensionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDimensionNameOk() (*string, bool) {
	if o == nil || IsNil(o.DimensionName) {
		return nil, false
	}
	return o.DimensionName, true
}

// HasDimensionName returns a boolean if a field has been set.
func (o *DimensionalObject) HasDimensionName() bool {
	if o != nil && !IsNil(o.DimensionName) {
		return true
	}

	return false
}

// SetDimensionName gets a reference to the given string and assigns it to the DimensionName field.
func (o *DimensionalObject) SetDimensionName(v string) {
	o.DimensionName = &v
}

// GetDimensionType returns the DimensionType field value
func (o *DimensionalObject) GetDimensionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DimensionType
}

// GetDimensionTypeOk returns a tuple with the DimensionType field value
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDimensionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DimensionType, true
}

// SetDimensionType sets field value
func (o *DimensionalObject) SetDimensionType(v string) {
	o.DimensionType = v
}

// GetDisplayDescription returns the DisplayDescription field value if set, zero value otherwise.
func (o *DimensionalObject) GetDisplayDescription() string {
	if o == nil || IsNil(o.DisplayDescription) {
		var ret string
		return ret
	}
	return *o.DisplayDescription
}

// GetDisplayDescriptionOk returns a tuple with the DisplayDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDisplayDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayDescription) {
		return nil, false
	}
	return o.DisplayDescription, true
}

// HasDisplayDescription returns a boolean if a field has been set.
func (o *DimensionalObject) HasDisplayDescription() bool {
	if o != nil && !IsNil(o.DisplayDescription) {
		return true
	}

	return false
}

// SetDisplayDescription gets a reference to the given string and assigns it to the DisplayDescription field.
func (o *DimensionalObject) SetDisplayDescription(v string) {
	o.DisplayDescription = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *DimensionalObject) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DimensionalObject) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DimensionalObject) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplayShortName returns the DisplayShortName field value if set, zero value otherwise.
func (o *DimensionalObject) GetDisplayShortName() string {
	if o == nil || IsNil(o.DisplayShortName) {
		var ret string
		return ret
	}
	return *o.DisplayShortName
}

// GetDisplayShortNameOk returns a tuple with the DisplayShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetDisplayShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayShortName) {
		return nil, false
	}
	return o.DisplayShortName, true
}

// HasDisplayShortName returns a boolean if a field has been set.
func (o *DimensionalObject) HasDisplayShortName() bool {
	if o != nil && !IsNil(o.DisplayShortName) {
		return true
	}

	return false
}

// SetDisplayShortName gets a reference to the given string and assigns it to the DisplayShortName field.
func (o *DimensionalObject) SetDisplayShortName(v string) {
	o.DisplayShortName = &v
}

// GetEventRepetition returns the EventRepetition field value if set, zero value otherwise.
func (o *DimensionalObject) GetEventRepetition() EventRepetition {
	if o == nil || IsNil(o.EventRepetition) {
		var ret EventRepetition
		return ret
	}
	return *o.EventRepetition
}

// GetEventRepetitionOk returns a tuple with the EventRepetition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetEventRepetitionOk() (*EventRepetition, bool) {
	if o == nil || IsNil(o.EventRepetition) {
		return nil, false
	}
	return o.EventRepetition, true
}

// HasEventRepetition returns a boolean if a field has been set.
func (o *DimensionalObject) HasEventRepetition() bool {
	if o != nil && !IsNil(o.EventRepetition) {
		return true
	}

	return false
}

// SetEventRepetition gets a reference to the given EventRepetition and assigns it to the EventRepetition field.
func (o *DimensionalObject) SetEventRepetition(v EventRepetition) {
	o.EventRepetition = &v
}

// GetExternalAccess returns the ExternalAccess field value if set, zero value otherwise.
func (o *DimensionalObject) GetExternalAccess() bool {
	if o == nil || IsNil(o.ExternalAccess) {
		var ret bool
		return ret
	}
	return *o.ExternalAccess
}

// GetExternalAccessOk returns a tuple with the ExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetExternalAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalAccess) {
		return nil, false
	}
	return o.ExternalAccess, true
}

// HasExternalAccess returns a boolean if a field has been set.
func (o *DimensionalObject) HasExternalAccess() bool {
	if o != nil && !IsNil(o.ExternalAccess) {
		return true
	}

	return false
}

// SetExternalAccess gets a reference to the given bool and assigns it to the ExternalAccess field.
func (o *DimensionalObject) SetExternalAccess(v bool) {
	o.ExternalAccess = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *DimensionalObject) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *DimensionalObject) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *DimensionalObject) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *DimensionalObject) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *DimensionalObject) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *DimensionalObject) SetFavorites(v []string) {
	o.Favorites = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *DimensionalObject) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *DimensionalObject) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *DimensionalObject) SetFilter(v string) {
	o.Filter = &v
}

// GetFixed returns the Fixed field value if set, zero value otherwise.
func (o *DimensionalObject) GetFixed() bool {
	if o == nil || IsNil(o.Fixed) {
		var ret bool
		return ret
	}
	return *o.Fixed
}

// GetFixedOk returns a tuple with the Fixed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetFixedOk() (*bool, bool) {
	if o == nil || IsNil(o.Fixed) {
		return nil, false
	}
	return o.Fixed, true
}

// HasFixed returns a boolean if a field has been set.
func (o *DimensionalObject) HasFixed() bool {
	if o != nil && !IsNil(o.Fixed) {
		return true
	}

	return false
}

// SetFixed gets a reference to the given bool and assigns it to the Fixed field.
func (o *DimensionalObject) SetFixed(v bool) {
	o.Fixed = &v
}

// GetGroupUUID returns the GroupUUID field value if set, zero value otherwise.
func (o *DimensionalObject) GetGroupUUID() string {
	if o == nil || IsNil(o.GroupUUID) {
		var ret string
		return ret
	}
	return *o.GroupUUID
}

// GetGroupUUIDOk returns a tuple with the GroupUUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetGroupUUIDOk() (*string, bool) {
	if o == nil || IsNil(o.GroupUUID) {
		return nil, false
	}
	return o.GroupUUID, true
}

// HasGroupUUID returns a boolean if a field has been set.
func (o *DimensionalObject) HasGroupUUID() bool {
	if o != nil && !IsNil(o.GroupUUID) {
		return true
	}

	return false
}

// SetGroupUUID gets a reference to the given string and assigns it to the GroupUUID field.
func (o *DimensionalObject) SetGroupUUID(v string) {
	o.GroupUUID = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *DimensionalObject) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *DimensionalObject) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *DimensionalObject) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value
func (o *DimensionalObject) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DimensionalObject) SetId(v int64) {
	o.Id = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *DimensionalObject) GetItems() []CategoryItemsInner {
	if o == nil || IsNil(o.Items) {
		var ret []CategoryItemsInner
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetItemsOk() ([]CategoryItemsInner, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *DimensionalObject) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []CategoryItemsInner and assigns it to the Items field.
func (o *DimensionalObject) SetItems(v []CategoryItemsInner) {
	o.Items = v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *DimensionalObject) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *DimensionalObject) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *DimensionalObject) SetKey(v string) {
	o.Key = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *DimensionalObject) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *DimensionalObject) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *DimensionalObject) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *DimensionalObject) GetLastUpdatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetLastUpdatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *DimensionalObject) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the LastUpdatedBy field.
func (o *DimensionalObject) SetLastUpdatedBy(v AggregateDataExchangeCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetLegendSet returns the LegendSet field value if set, zero value otherwise.
func (o *DimensionalObject) GetLegendSet() CategoryLegendSet {
	if o == nil || IsNil(o.LegendSet) {
		var ret CategoryLegendSet
		return ret
	}
	return *o.LegendSet
}

// GetLegendSetOk returns a tuple with the LegendSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetLegendSetOk() (*CategoryLegendSet, bool) {
	if o == nil || IsNil(o.LegendSet) {
		return nil, false
	}
	return o.LegendSet, true
}

// HasLegendSet returns a boolean if a field has been set.
func (o *DimensionalObject) HasLegendSet() bool {
	if o != nil && !IsNil(o.LegendSet) {
		return true
	}

	return false
}

// SetLegendSet gets a reference to the given CategoryLegendSet and assigns it to the LegendSet field.
func (o *DimensionalObject) SetLegendSet(v CategoryLegendSet) {
	o.LegendSet = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DimensionalObject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DimensionalObject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DimensionalObject) SetName(v string) {
	o.Name = &v
}

// GetOptionSet returns the OptionSet field value if set, zero value otherwise.
func (o *DimensionalObject) GetOptionSet() AttributeOptionSet {
	if o == nil || IsNil(o.OptionSet) {
		var ret AttributeOptionSet
		return ret
	}
	return *o.OptionSet
}

// GetOptionSetOk returns a tuple with the OptionSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetOptionSetOk() (*AttributeOptionSet, bool) {
	if o == nil || IsNil(o.OptionSet) {
		return nil, false
	}
	return o.OptionSet, true
}

// HasOptionSet returns a boolean if a field has been set.
func (o *DimensionalObject) HasOptionSet() bool {
	if o != nil && !IsNil(o.OptionSet) {
		return true
	}

	return false
}

// SetOptionSet gets a reference to the given AttributeOptionSet and assigns it to the OptionSet field.
func (o *DimensionalObject) SetOptionSet(v AttributeOptionSet) {
	o.OptionSet = &v
}

// GetProgramStage returns the ProgramStage field value if set, zero value otherwise.
func (o *DimensionalObject) GetProgramStage() CategoryProgramStage {
	if o == nil || IsNil(o.ProgramStage) {
		var ret CategoryProgramStage
		return ret
	}
	return *o.ProgramStage
}

// GetProgramStageOk returns a tuple with the ProgramStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetProgramStageOk() (*CategoryProgramStage, bool) {
	if o == nil || IsNil(o.ProgramStage) {
		return nil, false
	}
	return o.ProgramStage, true
}

// HasProgramStage returns a boolean if a field has been set.
func (o *DimensionalObject) HasProgramStage() bool {
	if o != nil && !IsNil(o.ProgramStage) {
		return true
	}

	return false
}

// SetProgramStage gets a reference to the given CategoryProgramStage and assigns it to the ProgramStage field.
func (o *DimensionalObject) SetProgramStage(v CategoryProgramStage) {
	o.ProgramStage = &v
}

// GetPublicAccess returns the PublicAccess field value if set, zero value otherwise.
func (o *DimensionalObject) GetPublicAccess() string {
	if o == nil || IsNil(o.PublicAccess) {
		var ret string
		return ret
	}
	return *o.PublicAccess
}

// GetPublicAccessOk returns a tuple with the PublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetPublicAccessOk() (*string, bool) {
	if o == nil || IsNil(o.PublicAccess) {
		return nil, false
	}
	return o.PublicAccess, true
}

// HasPublicAccess returns a boolean if a field has been set.
func (o *DimensionalObject) HasPublicAccess() bool {
	if o != nil && !IsNil(o.PublicAccess) {
		return true
	}

	return false
}

// SetPublicAccess gets a reference to the given string and assigns it to the PublicAccess field.
func (o *DimensionalObject) SetPublicAccess(v string) {
	o.PublicAccess = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *DimensionalObject) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *DimensionalObject) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *DimensionalObject) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetShortName returns the ShortName field value if set, zero value otherwise.
func (o *DimensionalObject) GetShortName() string {
	if o == nil || IsNil(o.ShortName) {
		var ret string
		return ret
	}
	return *o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetShortNameOk() (*string, bool) {
	if o == nil || IsNil(o.ShortName) {
		return nil, false
	}
	return o.ShortName, true
}

// HasShortName returns a boolean if a field has been set.
func (o *DimensionalObject) HasShortName() bool {
	if o != nil && !IsNil(o.ShortName) {
		return true
	}

	return false
}

// SetShortName gets a reference to the given string and assigns it to the ShortName field.
func (o *DimensionalObject) SetShortName(v string) {
	o.ShortName = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *DimensionalObject) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *DimensionalObject) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *DimensionalObject) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *DimensionalObject) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *DimensionalObject) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *DimensionalObject) SetUid(v string) {
	o.Uid = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *DimensionalObject) GetUser() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.User) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetUserOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *DimensionalObject) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the User field.
func (o *DimensionalObject) SetUser(v AggregateDataExchangeCreatedBy) {
	o.User = &v
}

// GetUserAccesses returns the UserAccesses field value if set, zero value otherwise.
func (o *DimensionalObject) GetUserAccesses() []LegacyUserAccess {
	if o == nil || IsNil(o.UserAccesses) {
		var ret []LegacyUserAccess
		return ret
	}
	return o.UserAccesses
}

// GetUserAccessesOk returns a tuple with the UserAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetUserAccessesOk() ([]LegacyUserAccess, bool) {
	if o == nil || IsNil(o.UserAccesses) {
		return nil, false
	}
	return o.UserAccesses, true
}

// HasUserAccesses returns a boolean if a field has been set.
func (o *DimensionalObject) HasUserAccesses() bool {
	if o != nil && !IsNil(o.UserAccesses) {
		return true
	}

	return false
}

// SetUserAccesses gets a reference to the given []LegacyUserAccess and assigns it to the UserAccesses field.
func (o *DimensionalObject) SetUserAccesses(v []LegacyUserAccess) {
	o.UserAccesses = v
}

// GetUserGroupAccesses returns the UserGroupAccesses field value if set, zero value otherwise.
func (o *DimensionalObject) GetUserGroupAccesses() []LegacyUserGroupAccess {
	if o == nil || IsNil(o.UserGroupAccesses) {
		var ret []LegacyUserGroupAccess
		return ret
	}
	return o.UserGroupAccesses
}

// GetUserGroupAccessesOk returns a tuple with the UserGroupAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetUserGroupAccessesOk() ([]LegacyUserGroupAccess, bool) {
	if o == nil || IsNil(o.UserGroupAccesses) {
		return nil, false
	}
	return o.UserGroupAccesses, true
}

// HasUserGroupAccesses returns a boolean if a field has been set.
func (o *DimensionalObject) HasUserGroupAccesses() bool {
	if o != nil && !IsNil(o.UserGroupAccesses) {
		return true
	}

	return false
}

// SetUserGroupAccesses gets a reference to the given []LegacyUserGroupAccess and assigns it to the UserGroupAccesses field.
func (o *DimensionalObject) SetUserGroupAccesses(v []LegacyUserGroupAccess) {
	o.UserGroupAccesses = v
}

// GetValueType returns the ValueType field value
func (o *DimensionalObject) GetValueType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value
// and a boolean to check if the value has been set.
func (o *DimensionalObject) GetValueTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValueType, true
}

// SetValueType sets field value
func (o *DimensionalObject) SetValueType(v string) {
	o.ValueType = v
}

func (o DimensionalObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DimensionalObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	toSerialize["aggregationType"] = o.AggregationType
	if !IsNil(o.AllItems) {
		toSerialize["allItems"] = o.AllItems
	}
	toSerialize["analyticsType"] = o.AnalyticsType
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DataDimension) {
		toSerialize["dataDimension"] = o.DataDimension
	}
	toSerialize["dataDimensionType"] = o.DataDimensionType
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Dimension) {
		toSerialize["dimension"] = o.Dimension
	}
	if !IsNil(o.DimensionDisplayName) {
		toSerialize["dimensionDisplayName"] = o.DimensionDisplayName
	}
	if !IsNil(o.DimensionItemKeywords) {
		toSerialize["dimensionItemKeywords"] = o.DimensionItemKeywords
	}
	if !IsNil(o.DimensionName) {
		toSerialize["dimensionName"] = o.DimensionName
	}
	toSerialize["dimensionType"] = o.DimensionType
	if !IsNil(o.DisplayDescription) {
		toSerialize["displayDescription"] = o.DisplayDescription
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplayShortName) {
		toSerialize["displayShortName"] = o.DisplayShortName
	}
	if !IsNil(o.EventRepetition) {
		toSerialize["eventRepetition"] = o.EventRepetition
	}
	if !IsNil(o.ExternalAccess) {
		toSerialize["externalAccess"] = o.ExternalAccess
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.Fixed) {
		toSerialize["fixed"] = o.Fixed
	}
	if !IsNil(o.GroupUUID) {
		toSerialize["groupUUID"] = o.GroupUUID
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.LegendSet) {
		toSerialize["legendSet"] = o.LegendSet
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OptionSet) {
		toSerialize["optionSet"] = o.OptionSet
	}
	if !IsNil(o.ProgramStage) {
		toSerialize["programStage"] = o.ProgramStage
	}
	if !IsNil(o.PublicAccess) {
		toSerialize["publicAccess"] = o.PublicAccess
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.ShortName) {
		toSerialize["shortName"] = o.ShortName
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserAccesses) {
		toSerialize["userAccesses"] = o.UserAccesses
	}
	if !IsNil(o.UserGroupAccesses) {
		toSerialize["userGroupAccesses"] = o.UserGroupAccesses
	}
	toSerialize["valueType"] = o.ValueType
	return toSerialize, nil
}

func (o *DimensionalObject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"aggregationType",
		"analyticsType",
		"dataDimensionType",
		"dimensionType",
		"id",
		"valueType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDimensionalObject := _DimensionalObject{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDimensionalObject)

	if err != nil {
		return err
	}

	*o = DimensionalObject(varDimensionalObject)

	return err
}

type NullableDimensionalObject struct {
	value *DimensionalObject
	isSet bool
}

func (v NullableDimensionalObject) Get() *DimensionalObject {
	return v.value
}

func (v *NullableDimensionalObject) Set(val *DimensionalObject) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionalObject) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionalObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionalObject(val *DimensionalObject) *NullableDimensionalObject {
	return &NullableDimensionalObject{value: val, isSet: true}
}

func (v NullableDimensionalObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionalObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
