/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the MessageConversationInfoParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageConversationInfoParams{}

// MessageConversationInfoParams struct for MessageConversationInfoParams
type MessageConversationInfoParams struct {
	Attachments       []MessageConversationInfoParamsAttachmentsInner       `json:"attachments,omitempty"`
	OrganisationUnits []CategoryOptionParamsOrganisationUnitsInner          `json:"organisationUnits,omitempty"`
	Subject           *string                                               `json:"subject,omitempty"`
	Text              *string                                               `json:"text,omitempty"`
	UserGroups        []DataSetNotificationTemplateParamsRecipientUserGroup `json:"userGroups,omitempty"`
	Users             []AggregateDataExchangeParamsCreatedBy                `json:"users,omitempty"`
}

// NewMessageConversationInfoParams instantiates a new MessageConversationInfoParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageConversationInfoParams() *MessageConversationInfoParams {
	this := MessageConversationInfoParams{}
	return &this
}

// NewMessageConversationInfoParamsWithDefaults instantiates a new MessageConversationInfoParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageConversationInfoParamsWithDefaults() *MessageConversationInfoParams {
	this := MessageConversationInfoParams{}
	return &this
}

// GetAttachments returns the Attachments field value if set, zero value otherwise.
func (o *MessageConversationInfoParams) GetAttachments() []MessageConversationInfoParamsAttachmentsInner {
	if o == nil || IsNil(o.Attachments) {
		var ret []MessageConversationInfoParamsAttachmentsInner
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationInfoParams) GetAttachmentsOk() ([]MessageConversationInfoParamsAttachmentsInner, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *MessageConversationInfoParams) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []MessageConversationInfoParamsAttachmentsInner and assigns it to the Attachments field.
func (o *MessageConversationInfoParams) SetAttachments(v []MessageConversationInfoParamsAttachmentsInner) {
	o.Attachments = v
}

// GetOrganisationUnits returns the OrganisationUnits field value if set, zero value otherwise.
func (o *MessageConversationInfoParams) GetOrganisationUnits() []CategoryOptionParamsOrganisationUnitsInner {
	if o == nil || IsNil(o.OrganisationUnits) {
		var ret []CategoryOptionParamsOrganisationUnitsInner
		return ret
	}
	return o.OrganisationUnits
}

// GetOrganisationUnitsOk returns a tuple with the OrganisationUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationInfoParams) GetOrganisationUnitsOk() ([]CategoryOptionParamsOrganisationUnitsInner, bool) {
	if o == nil || IsNil(o.OrganisationUnits) {
		return nil, false
	}
	return o.OrganisationUnits, true
}

// HasOrganisationUnits returns a boolean if a field has been set.
func (o *MessageConversationInfoParams) HasOrganisationUnits() bool {
	if o != nil && !IsNil(o.OrganisationUnits) {
		return true
	}

	return false
}

// SetOrganisationUnits gets a reference to the given []CategoryOptionParamsOrganisationUnitsInner and assigns it to the OrganisationUnits field.
func (o *MessageConversationInfoParams) SetOrganisationUnits(v []CategoryOptionParamsOrganisationUnitsInner) {
	o.OrganisationUnits = v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *MessageConversationInfoParams) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationInfoParams) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *MessageConversationInfoParams) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *MessageConversationInfoParams) SetSubject(v string) {
	o.Subject = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *MessageConversationInfoParams) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationInfoParams) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *MessageConversationInfoParams) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *MessageConversationInfoParams) SetText(v string) {
	o.Text = &v
}

// GetUserGroups returns the UserGroups field value if set, zero value otherwise.
func (o *MessageConversationInfoParams) GetUserGroups() []DataSetNotificationTemplateParamsRecipientUserGroup {
	if o == nil || IsNil(o.UserGroups) {
		var ret []DataSetNotificationTemplateParamsRecipientUserGroup
		return ret
	}
	return o.UserGroups
}

// GetUserGroupsOk returns a tuple with the UserGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationInfoParams) GetUserGroupsOk() ([]DataSetNotificationTemplateParamsRecipientUserGroup, bool) {
	if o == nil || IsNil(o.UserGroups) {
		return nil, false
	}
	return o.UserGroups, true
}

// HasUserGroups returns a boolean if a field has been set.
func (o *MessageConversationInfoParams) HasUserGroups() bool {
	if o != nil && !IsNil(o.UserGroups) {
		return true
	}

	return false
}

// SetUserGroups gets a reference to the given []DataSetNotificationTemplateParamsRecipientUserGroup and assigns it to the UserGroups field.
func (o *MessageConversationInfoParams) SetUserGroups(v []DataSetNotificationTemplateParamsRecipientUserGroup) {
	o.UserGroups = v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *MessageConversationInfoParams) GetUsers() []AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.Users) {
		var ret []AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageConversationInfoParams) GetUsersOk() ([]AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *MessageConversationInfoParams) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []AggregateDataExchangeParamsCreatedBy and assigns it to the Users field.
func (o *MessageConversationInfoParams) SetUsers(v []AggregateDataExchangeParamsCreatedBy) {
	o.Users = v
}

func (o MessageConversationInfoParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageConversationInfoParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attachments) {
		toSerialize["attachments"] = o.Attachments
	}
	if !IsNil(o.OrganisationUnits) {
		toSerialize["organisationUnits"] = o.OrganisationUnits
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.UserGroups) {
		toSerialize["userGroups"] = o.UserGroups
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableMessageConversationInfoParams struct {
	value *MessageConversationInfoParams
	isSet bool
}

func (v NullableMessageConversationInfoParams) Get() *MessageConversationInfoParams {
	return v.value
}

func (v *NullableMessageConversationInfoParams) Set(val *MessageConversationInfoParams) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageConversationInfoParams) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageConversationInfoParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageConversationInfoParams(val *MessageConversationInfoParams) *NullableMessageConversationInfoParams {
	return &NullableMessageConversationInfoParams{value: val, isSet: true}
}

func (v NullableMessageConversationInfoParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageConversationInfoParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
