/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the SeriesKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeriesKey{}

// SeriesKey struct for SeriesKey
type SeriesKey struct {
	Hidden *bool         `json:"hidden,omitempty"`
	Label  *StyledObject `json:"label,omitempty"`
}

// NewSeriesKey instantiates a new SeriesKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesKey() *SeriesKey {
	this := SeriesKey{}
	return &this
}

// NewSeriesKeyWithDefaults instantiates a new SeriesKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesKeyWithDefaults() *SeriesKey {
	this := SeriesKey{}
	return &this
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *SeriesKey) GetHidden() bool {
	if o == nil || IsNil(o.Hidden) {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesKey) GetHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.Hidden) {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *SeriesKey) HasHidden() bool {
	if o != nil && !IsNil(o.Hidden) {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *SeriesKey) SetHidden(v bool) {
	o.Hidden = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *SeriesKey) GetLabel() StyledObject {
	if o == nil || IsNil(o.Label) {
		var ret StyledObject
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesKey) GetLabelOk() (*StyledObject, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *SeriesKey) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given StyledObject and assigns it to the Label field.
func (o *SeriesKey) SetLabel(v StyledObject) {
	o.Label = &v
}

func (o SeriesKey) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeriesKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hidden) {
		toSerialize["hidden"] = o.Hidden
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	return toSerialize, nil
}

type NullableSeriesKey struct {
	value *SeriesKey
	isSet bool
}

func (v NullableSeriesKey) Get() *SeriesKey {
	return v.value
}

func (v *NullableSeriesKey) Set(val *SeriesKey) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesKey) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesKey(val *SeriesKey) *NullableSeriesKey {
	return &NullableSeriesKey{value: val, isSet: true}
}

func (v NullableSeriesKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
