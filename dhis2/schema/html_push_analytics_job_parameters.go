/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the HtmlPushAnalyticsJobParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HtmlPushAnalyticsJobParameters{}

// HtmlPushAnalyticsJobParameters struct for HtmlPushAnalyticsJobParameters
type HtmlPushAnalyticsJobParameters struct {
	// A UID for an Dashboard object   (Java name `org.hisp.dhis.dashboard.Dashboard`)
	Dashboard string   `json:"dashboard"`
	Mode      ViewMode `json:"mode"`
	// A UID for an UserGroup object   (Java name `org.hisp.dhis.user.UserGroup`)
	Receivers string `json:"receivers"`
}

type _HtmlPushAnalyticsJobParameters HtmlPushAnalyticsJobParameters

// NewHtmlPushAnalyticsJobParameters instantiates a new HtmlPushAnalyticsJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHtmlPushAnalyticsJobParameters(dashboard string, mode ViewMode, receivers string) *HtmlPushAnalyticsJobParameters {
	this := HtmlPushAnalyticsJobParameters{}
	this.Dashboard = dashboard
	this.Mode = mode
	this.Receivers = receivers
	return &this
}

// NewHtmlPushAnalyticsJobParametersWithDefaults instantiates a new HtmlPushAnalyticsJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHtmlPushAnalyticsJobParametersWithDefaults() *HtmlPushAnalyticsJobParameters {
	this := HtmlPushAnalyticsJobParameters{}
	return &this
}

// GetDashboard returns the Dashboard field value
func (o *HtmlPushAnalyticsJobParameters) GetDashboard() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field value
// and a boolean to check if the value has been set.
func (o *HtmlPushAnalyticsJobParameters) GetDashboardOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dashboard, true
}

// SetDashboard sets field value
func (o *HtmlPushAnalyticsJobParameters) SetDashboard(v string) {
	o.Dashboard = v
}

// GetMode returns the Mode field value
func (o *HtmlPushAnalyticsJobParameters) GetMode() ViewMode {
	if o == nil {
		var ret ViewMode
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *HtmlPushAnalyticsJobParameters) GetModeOk() (*ViewMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *HtmlPushAnalyticsJobParameters) SetMode(v ViewMode) {
	o.Mode = v
}

// GetReceivers returns the Receivers field value
func (o *HtmlPushAnalyticsJobParameters) GetReceivers() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Receivers
}

// GetReceiversOk returns a tuple with the Receivers field value
// and a boolean to check if the value has been set.
func (o *HtmlPushAnalyticsJobParameters) GetReceiversOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Receivers, true
}

// SetReceivers sets field value
func (o *HtmlPushAnalyticsJobParameters) SetReceivers(v string) {
	o.Receivers = v
}

func (o HtmlPushAnalyticsJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HtmlPushAnalyticsJobParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dashboard"] = o.Dashboard
	toSerialize["mode"] = o.Mode
	toSerialize["receivers"] = o.Receivers
	return toSerialize, nil
}

func (o *HtmlPushAnalyticsJobParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dashboard",
		"mode",
		"receivers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHtmlPushAnalyticsJobParameters := _HtmlPushAnalyticsJobParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHtmlPushAnalyticsJobParameters)

	if err != nil {
		return err
	}

	*o = HtmlPushAnalyticsJobParameters(varHtmlPushAnalyticsJobParameters)

	return err
}

type NullableHtmlPushAnalyticsJobParameters struct {
	value *HtmlPushAnalyticsJobParameters
	isSet bool
}

func (v NullableHtmlPushAnalyticsJobParameters) Get() *HtmlPushAnalyticsJobParameters {
	return v.value
}

func (v *NullableHtmlPushAnalyticsJobParameters) Set(val *HtmlPushAnalyticsJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableHtmlPushAnalyticsJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableHtmlPushAnalyticsJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHtmlPushAnalyticsJobParameters(val *HtmlPushAnalyticsJobParameters) *NullableHtmlPushAnalyticsJobParameters {
	return &NullableHtmlPushAnalyticsJobParameters{value: val, isSet: true}
}

func (v NullableHtmlPushAnalyticsJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHtmlPushAnalyticsJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
