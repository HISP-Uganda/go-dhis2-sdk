/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesProgramIndicator the model 'PropertyNamesProgramIndicator'
type PropertyNamesProgramIndicator string

// List of PropertyNames_ProgramIndicator
const (
	PROPERTYNAMESPROGRAMINDICATOR_ACCESS                                  PropertyNamesProgramIndicator = "access"
	PROPERTYNAMESPROGRAMINDICATOR_AGGREGATE_EXPORT_ATTRIBUTE_OPTION_COMBO PropertyNamesProgramIndicator = "aggregateExportAttributeOptionCombo"
	PROPERTYNAMESPROGRAMINDICATOR_AGGREGATE_EXPORT_CATEGORY_OPTION_COMBO  PropertyNamesProgramIndicator = "aggregateExportCategoryOptionCombo"
	PROPERTYNAMESPROGRAMINDICATOR_AGGREGATION_TYPE                        PropertyNamesProgramIndicator = "aggregationType"
	PROPERTYNAMESPROGRAMINDICATOR_ANALYTICS_PERIOD_BOUNDARIES             PropertyNamesProgramIndicator = "analyticsPeriodBoundaries"
	PROPERTYNAMESPROGRAMINDICATOR_ANALYTICS_TYPE                          PropertyNamesProgramIndicator = "analyticsType"
	PROPERTYNAMESPROGRAMINDICATOR_ATTRIBUTE_VALUES                        PropertyNamesProgramIndicator = "attributeValues"
	PROPERTYNAMESPROGRAMINDICATOR_CODE                                    PropertyNamesProgramIndicator = "code"
	PROPERTYNAMESPROGRAMINDICATOR_CREATED                                 PropertyNamesProgramIndicator = "created"
	PROPERTYNAMESPROGRAMINDICATOR_CREATED_BY                              PropertyNamesProgramIndicator = "createdBy"
	PROPERTYNAMESPROGRAMINDICATOR_DECIMALS                                PropertyNamesProgramIndicator = "decimals"
	PROPERTYNAMESPROGRAMINDICATOR_DESCRIPTION                             PropertyNamesProgramIndicator = "description"
	PROPERTYNAMESPROGRAMINDICATOR_DIMENSION_ITEM                          PropertyNamesProgramIndicator = "dimensionItem"
	PROPERTYNAMESPROGRAMINDICATOR_DISPLAY_DESCRIPTION                     PropertyNamesProgramIndicator = "displayDescription"
	PROPERTYNAMESPROGRAMINDICATOR_DISPLAY_FORM_NAME                       PropertyNamesProgramIndicator = "displayFormName"
	PROPERTYNAMESPROGRAMINDICATOR_DISPLAY_IN_FORM                         PropertyNamesProgramIndicator = "displayInForm"
	PROPERTYNAMESPROGRAMINDICATOR_DISPLAY_NAME                            PropertyNamesProgramIndicator = "displayName"
	PROPERTYNAMESPROGRAMINDICATOR_DISPLAY_SHORT_NAME                      PropertyNamesProgramIndicator = "displayShortName"
	PROPERTYNAMESPROGRAMINDICATOR_EXPRESSION                              PropertyNamesProgramIndicator = "expression"
	PROPERTYNAMESPROGRAMINDICATOR_EXTERNAL_ACCESS                         PropertyNamesProgramIndicator = "externalAccess"
	PROPERTYNAMESPROGRAMINDICATOR_FAVORITE                                PropertyNamesProgramIndicator = "favorite"
	PROPERTYNAMESPROGRAMINDICATOR_FAVORITES                               PropertyNamesProgramIndicator = "favorites"
	PROPERTYNAMESPROGRAMINDICATOR_FILTER                                  PropertyNamesProgramIndicator = "filter"
	PROPERTYNAMESPROGRAMINDICATOR_FORM_NAME                               PropertyNamesProgramIndicator = "formName"
	PROPERTYNAMESPROGRAMINDICATOR_HREF                                    PropertyNamesProgramIndicator = "href"
	PROPERTYNAMESPROGRAMINDICATOR_ID                                      PropertyNamesProgramIndicator = "id"
	PROPERTYNAMESPROGRAMINDICATOR_LAST_UPDATED                            PropertyNamesProgramIndicator = "lastUpdated"
	PROPERTYNAMESPROGRAMINDICATOR_LAST_UPDATED_BY                         PropertyNamesProgramIndicator = "lastUpdatedBy"
	PROPERTYNAMESPROGRAMINDICATOR_LEGEND_SET                              PropertyNamesProgramIndicator = "legendSet"
	PROPERTYNAMESPROGRAMINDICATOR_LEGEND_SETS                             PropertyNamesProgramIndicator = "legendSets"
	PROPERTYNAMESPROGRAMINDICATOR_NAME                                    PropertyNamesProgramIndicator = "name"
	PROPERTYNAMESPROGRAMINDICATOR_ORG_UNIT_FIELD                          PropertyNamesProgramIndicator = "orgUnitField"
	PROPERTYNAMESPROGRAMINDICATOR_PROGRAM                                 PropertyNamesProgramIndicator = "program"
	PROPERTYNAMESPROGRAMINDICATOR_PROGRAM_INDICATOR_GROUPS                PropertyNamesProgramIndicator = "programIndicatorGroups"
	PROPERTYNAMESPROGRAMINDICATOR_PUBLIC_ACCESS                           PropertyNamesProgramIndicator = "publicAccess"
	PROPERTYNAMESPROGRAMINDICATOR_QUERY_MODS                              PropertyNamesProgramIndicator = "queryMods"
	PROPERTYNAMESPROGRAMINDICATOR_SHARING                                 PropertyNamesProgramIndicator = "sharing"
	PROPERTYNAMESPROGRAMINDICATOR_SHORT_NAME                              PropertyNamesProgramIndicator = "shortName"
	PROPERTYNAMESPROGRAMINDICATOR_STYLE                                   PropertyNamesProgramIndicator = "style"
	PROPERTYNAMESPROGRAMINDICATOR_TRANSLATIONS                            PropertyNamesProgramIndicator = "translations"
	PROPERTYNAMESPROGRAMINDICATOR_USER                                    PropertyNamesProgramIndicator = "user"
	PROPERTYNAMESPROGRAMINDICATOR_USER_ACCESSES                           PropertyNamesProgramIndicator = "userAccesses"
	PROPERTYNAMESPROGRAMINDICATOR_USER_GROUP_ACCESSES                     PropertyNamesProgramIndicator = "userGroupAccesses"
)

// All allowed values of PropertyNamesProgramIndicator enum
var AllowedPropertyNamesProgramIndicatorEnumValues = []PropertyNamesProgramIndicator{
	"access",
	"aggregateExportAttributeOptionCombo",
	"aggregateExportCategoryOptionCombo",
	"aggregationType",
	"analyticsPeriodBoundaries",
	"analyticsType",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"decimals",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayInForm",
	"displayName",
	"displayShortName",
	"expression",
	"externalAccess",
	"favorite",
	"favorites",
	"filter",
	"formName",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"name",
	"orgUnitField",
	"program",
	"programIndicatorGroups",
	"publicAccess",
	"queryMods",
	"sharing",
	"shortName",
	"style",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
}

func (v *PropertyNamesProgramIndicator) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesProgramIndicator(value)
	for _, existing := range AllowedPropertyNamesProgramIndicatorEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesProgramIndicator", value)
}

// NewPropertyNamesProgramIndicatorFromValue returns a pointer to a valid PropertyNamesProgramIndicator
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesProgramIndicatorFromValue(v string) (*PropertyNamesProgramIndicator, error) {
	ev := PropertyNamesProgramIndicator(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesProgramIndicator: valid values are %v", v, AllowedPropertyNamesProgramIndicatorEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesProgramIndicator) IsValid() bool {
	for _, existing := range AllowedPropertyNamesProgramIndicatorEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_ProgramIndicator value
func (v PropertyNamesProgramIndicator) Ptr() *PropertyNamesProgramIndicator {
	return &v
}

type NullablePropertyNamesProgramIndicator struct {
	value *PropertyNamesProgramIndicator
	isSet bool
}

func (v NullablePropertyNamesProgramIndicator) Get() *PropertyNamesProgramIndicator {
	return v.value
}

func (v *NullablePropertyNamesProgramIndicator) Set(val *PropertyNamesProgramIndicator) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesProgramIndicator) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesProgramIndicator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesProgramIndicator(val *PropertyNamesProgramIndicator) *NullablePropertyNamesProgramIndicator {
	return &NullablePropertyNamesProgramIndicator{value: val, isSet: true}
}

func (v NullablePropertyNamesProgramIndicator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesProgramIndicator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
