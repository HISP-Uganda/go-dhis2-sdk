/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the RelationshipItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelationshipItem{}

// RelationshipItem struct for RelationshipItem
type RelationshipItem struct {
	ProgramInstance       *ProgramMessageProgramInstance                 `json:"programInstance,omitempty"`
	ProgramStageInstance  *ProgramMessageProgramStageInstance            `json:"programStageInstance,omitempty"`
	Relationship          *RelationshipItemRelationship                  `json:"relationship,omitempty"`
	TrackedEntityInstance *ProgramMessageRecipientsTrackedEntityInstance `json:"trackedEntityInstance,omitempty"`
}

// NewRelationshipItem instantiates a new RelationshipItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelationshipItem() *RelationshipItem {
	this := RelationshipItem{}
	return &this
}

// NewRelationshipItemWithDefaults instantiates a new RelationshipItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelationshipItemWithDefaults() *RelationshipItem {
	this := RelationshipItem{}
	return &this
}

// GetProgramInstance returns the ProgramInstance field value if set, zero value otherwise.
func (o *RelationshipItem) GetProgramInstance() ProgramMessageProgramInstance {
	if o == nil || IsNil(o.ProgramInstance) {
		var ret ProgramMessageProgramInstance
		return ret
	}
	return *o.ProgramInstance
}

// GetProgramInstanceOk returns a tuple with the ProgramInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelationshipItem) GetProgramInstanceOk() (*ProgramMessageProgramInstance, bool) {
	if o == nil || IsNil(o.ProgramInstance) {
		return nil, false
	}
	return o.ProgramInstance, true
}

// HasProgramInstance returns a boolean if a field has been set.
func (o *RelationshipItem) HasProgramInstance() bool {
	if o != nil && !IsNil(o.ProgramInstance) {
		return true
	}

	return false
}

// SetProgramInstance gets a reference to the given ProgramMessageProgramInstance and assigns it to the ProgramInstance field.
func (o *RelationshipItem) SetProgramInstance(v ProgramMessageProgramInstance) {
	o.ProgramInstance = &v
}

// GetProgramStageInstance returns the ProgramStageInstance field value if set, zero value otherwise.
func (o *RelationshipItem) GetProgramStageInstance() ProgramMessageProgramStageInstance {
	if o == nil || IsNil(o.ProgramStageInstance) {
		var ret ProgramMessageProgramStageInstance
		return ret
	}
	return *o.ProgramStageInstance
}

// GetProgramStageInstanceOk returns a tuple with the ProgramStageInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelationshipItem) GetProgramStageInstanceOk() (*ProgramMessageProgramStageInstance, bool) {
	if o == nil || IsNil(o.ProgramStageInstance) {
		return nil, false
	}
	return o.ProgramStageInstance, true
}

// HasProgramStageInstance returns a boolean if a field has been set.
func (o *RelationshipItem) HasProgramStageInstance() bool {
	if o != nil && !IsNil(o.ProgramStageInstance) {
		return true
	}

	return false
}

// SetProgramStageInstance gets a reference to the given ProgramMessageProgramStageInstance and assigns it to the ProgramStageInstance field.
func (o *RelationshipItem) SetProgramStageInstance(v ProgramMessageProgramStageInstance) {
	o.ProgramStageInstance = &v
}

// GetRelationship returns the Relationship field value if set, zero value otherwise.
func (o *RelationshipItem) GetRelationship() RelationshipItemRelationship {
	if o == nil || IsNil(o.Relationship) {
		var ret RelationshipItemRelationship
		return ret
	}
	return *o.Relationship
}

// GetRelationshipOk returns a tuple with the Relationship field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelationshipItem) GetRelationshipOk() (*RelationshipItemRelationship, bool) {
	if o == nil || IsNil(o.Relationship) {
		return nil, false
	}
	return o.Relationship, true
}

// HasRelationship returns a boolean if a field has been set.
func (o *RelationshipItem) HasRelationship() bool {
	if o != nil && !IsNil(o.Relationship) {
		return true
	}

	return false
}

// SetRelationship gets a reference to the given RelationshipItemRelationship and assigns it to the Relationship field.
func (o *RelationshipItem) SetRelationship(v RelationshipItemRelationship) {
	o.Relationship = &v
}

// GetTrackedEntityInstance returns the TrackedEntityInstance field value if set, zero value otherwise.
func (o *RelationshipItem) GetTrackedEntityInstance() ProgramMessageRecipientsTrackedEntityInstance {
	if o == nil || IsNil(o.TrackedEntityInstance) {
		var ret ProgramMessageRecipientsTrackedEntityInstance
		return ret
	}
	return *o.TrackedEntityInstance
}

// GetTrackedEntityInstanceOk returns a tuple with the TrackedEntityInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelationshipItem) GetTrackedEntityInstanceOk() (*ProgramMessageRecipientsTrackedEntityInstance, bool) {
	if o == nil || IsNil(o.TrackedEntityInstance) {
		return nil, false
	}
	return o.TrackedEntityInstance, true
}

// HasTrackedEntityInstance returns a boolean if a field has been set.
func (o *RelationshipItem) HasTrackedEntityInstance() bool {
	if o != nil && !IsNil(o.TrackedEntityInstance) {
		return true
	}

	return false
}

// SetTrackedEntityInstance gets a reference to the given ProgramMessageRecipientsTrackedEntityInstance and assigns it to the TrackedEntityInstance field.
func (o *RelationshipItem) SetTrackedEntityInstance(v ProgramMessageRecipientsTrackedEntityInstance) {
	o.TrackedEntityInstance = &v
}

func (o RelationshipItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelationshipItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProgramInstance) {
		toSerialize["programInstance"] = o.ProgramInstance
	}
	if !IsNil(o.ProgramStageInstance) {
		toSerialize["programStageInstance"] = o.ProgramStageInstance
	}
	if !IsNil(o.Relationship) {
		toSerialize["relationship"] = o.Relationship
	}
	if !IsNil(o.TrackedEntityInstance) {
		toSerialize["trackedEntityInstance"] = o.TrackedEntityInstance
	}
	return toSerialize, nil
}

type NullableRelationshipItem struct {
	value *RelationshipItem
	isSet bool
}

func (v NullableRelationshipItem) Get() *RelationshipItem {
	return v.value
}

func (v *NullableRelationshipItem) Set(val *RelationshipItem) {
	v.value = val
	v.isSet = true
}

func (v NullableRelationshipItem) IsSet() bool {
	return v.isSet
}

func (v *NullableRelationshipItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelationshipItem(val *RelationshipItem) *NullableRelationshipItem {
	return &NullableRelationshipItem{value: val, isSet: true}
}

func (v NullableRelationshipItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelationshipItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
