/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// ValidationRulePropertyNames the model 'ValidationRulePropertyNames'
type ValidationRulePropertyNames string

// List of ValidationRulePropertyNames
const (
	VALIDATIONRULEPROPERTYNAMES_ACCESS                                  ValidationRulePropertyNames = "access"
	VALIDATIONRULEPROPERTYNAMES_AGGREGATE_EXPORT_ATTRIBUTE_OPTION_COMBO ValidationRulePropertyNames = "aggregateExportAttributeOptionCombo"
	VALIDATIONRULEPROPERTYNAMES_AGGREGATE_EXPORT_CATEGORY_OPTION_COMBO  ValidationRulePropertyNames = "aggregateExportCategoryOptionCombo"
	VALIDATIONRULEPROPERTYNAMES_AGGREGATION_TYPE                        ValidationRulePropertyNames = "aggregationType"
	VALIDATIONRULEPROPERTYNAMES_ATTRIBUTE_VALUES                        ValidationRulePropertyNames = "attributeValues"
	VALIDATIONRULEPROPERTYNAMES_CODE                                    ValidationRulePropertyNames = "code"
	VALIDATIONRULEPROPERTYNAMES_CREATED                                 ValidationRulePropertyNames = "created"
	VALIDATIONRULEPROPERTYNAMES_CREATED_BY                              ValidationRulePropertyNames = "createdBy"
	VALIDATIONRULEPROPERTYNAMES_DESCRIPTION                             ValidationRulePropertyNames = "description"
	VALIDATIONRULEPROPERTYNAMES_DIMENSION_ITEM                          ValidationRulePropertyNames = "dimensionItem"
	VALIDATIONRULEPROPERTYNAMES_DIMENSION_ITEM_TYPE                     ValidationRulePropertyNames = "dimensionItemType"
	VALIDATIONRULEPROPERTYNAMES_DISPLAY_DESCRIPTION                     ValidationRulePropertyNames = "displayDescription"
	VALIDATIONRULEPROPERTYNAMES_DISPLAY_FORM_NAME                       ValidationRulePropertyNames = "displayFormName"
	VALIDATIONRULEPROPERTYNAMES_DISPLAY_INSTRUCTION                     ValidationRulePropertyNames = "displayInstruction"
	VALIDATIONRULEPROPERTYNAMES_DISPLAY_NAME                            ValidationRulePropertyNames = "displayName"
	VALIDATIONRULEPROPERTYNAMES_DISPLAY_SHORT_NAME                      ValidationRulePropertyNames = "displayShortName"
	VALIDATIONRULEPROPERTYNAMES_FAVORITE                                ValidationRulePropertyNames = "favorite"
	VALIDATIONRULEPROPERTYNAMES_FAVORITES                               ValidationRulePropertyNames = "favorites"
	VALIDATIONRULEPROPERTYNAMES_FORM_NAME                               ValidationRulePropertyNames = "formName"
	VALIDATIONRULEPROPERTYNAMES_HREF                                    ValidationRulePropertyNames = "href"
	VALIDATIONRULEPROPERTYNAMES_ID                                      ValidationRulePropertyNames = "id"
	VALIDATIONRULEPROPERTYNAMES_IMPORTANCE                              ValidationRulePropertyNames = "importance"
	VALIDATIONRULEPROPERTYNAMES_INSTRUCTION                             ValidationRulePropertyNames = "instruction"
	VALIDATIONRULEPROPERTYNAMES_LAST_UPDATED                            ValidationRulePropertyNames = "lastUpdated"
	VALIDATIONRULEPROPERTYNAMES_LAST_UPDATED_BY                         ValidationRulePropertyNames = "lastUpdatedBy"
	VALIDATIONRULEPROPERTYNAMES_LEFT_SIDE                               ValidationRulePropertyNames = "leftSide"
	VALIDATIONRULEPROPERTYNAMES_LEGEND_SET                              ValidationRulePropertyNames = "legendSet"
	VALIDATIONRULEPROPERTYNAMES_LEGEND_SETS                             ValidationRulePropertyNames = "legendSets"
	VALIDATIONRULEPROPERTYNAMES_NAME                                    ValidationRulePropertyNames = "name"
	VALIDATIONRULEPROPERTYNAMES_NOTIFICATION_TEMPLATES                  ValidationRulePropertyNames = "notificationTemplates"
	VALIDATIONRULEPROPERTYNAMES_OPERATOR                                ValidationRulePropertyNames = "operator"
	VALIDATIONRULEPROPERTYNAMES_ORGANISATION_UNIT_LEVELS                ValidationRulePropertyNames = "organisationUnitLevels"
	VALIDATIONRULEPROPERTYNAMES_PERIOD_TYPE                             ValidationRulePropertyNames = "periodType"
	VALIDATIONRULEPROPERTYNAMES_QUERY_MODS                              ValidationRulePropertyNames = "queryMods"
	VALIDATIONRULEPROPERTYNAMES_RIGHT_SIDE                              ValidationRulePropertyNames = "rightSide"
	VALIDATIONRULEPROPERTYNAMES_SHARING                                 ValidationRulePropertyNames = "sharing"
	VALIDATIONRULEPROPERTYNAMES_SHORT_NAME                              ValidationRulePropertyNames = "shortName"
	VALIDATIONRULEPROPERTYNAMES_SKIP_FORM_VALIDATION                    ValidationRulePropertyNames = "skipFormValidation"
	VALIDATIONRULEPROPERTYNAMES_TRANSLATIONS                            ValidationRulePropertyNames = "translations"
	VALIDATIONRULEPROPERTYNAMES_VALIDATION_RULE_GROUPS                  ValidationRulePropertyNames = "validationRuleGroups"
)

// All allowed values of ValidationRulePropertyNames enum
var AllowedValidationRulePropertyNamesEnumValues = []ValidationRulePropertyNames{
	"access",
	"aggregateExportAttributeOptionCombo",
	"aggregateExportCategoryOptionCombo",
	"aggregationType",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"description",
	"dimensionItem",
	"dimensionItemType",
	"displayDescription",
	"displayFormName",
	"displayInstruction",
	"displayName",
	"displayShortName",
	"favorite",
	"favorites",
	"formName",
	"href",
	"id",
	"importance",
	"instruction",
	"lastUpdated",
	"lastUpdatedBy",
	"leftSide",
	"legendSet",
	"legendSets",
	"name",
	"notificationTemplates",
	"operator",
	"organisationUnitLevels",
	"periodType",
	"queryMods",
	"rightSide",
	"sharing",
	"shortName",
	"skipFormValidation",
	"translations",
	"validationRuleGroups",
}

func (v *ValidationRulePropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ValidationRulePropertyNames(value)
	for _, existing := range AllowedValidationRulePropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ValidationRulePropertyNames", value)
}

// NewValidationRulePropertyNamesFromValue returns a pointer to a valid ValidationRulePropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewValidationRulePropertyNamesFromValue(v string) (*ValidationRulePropertyNames, error) {
	ev := ValidationRulePropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ValidationRulePropertyNames: valid values are %v", v, AllowedValidationRulePropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ValidationRulePropertyNames) IsValid() bool {
	for _, existing := range AllowedValidationRulePropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ValidationRulePropertyNames value
func (v ValidationRulePropertyNames) Ptr() *ValidationRulePropertyNames {
	return &v
}

type NullableValidationRulePropertyNames struct {
	value *ValidationRulePropertyNames
	isSet bool
}

func (v NullableValidationRulePropertyNames) Get() *ValidationRulePropertyNames {
	return v.value
}

func (v *NullableValidationRulePropertyNames) Set(val *ValidationRulePropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableValidationRulePropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableValidationRulePropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidationRulePropertyNames(val *ValidationRulePropertyNames) *NullableValidationRulePropertyNames {
	return &NullableValidationRulePropertyNames{value: val, isSet: true}
}

func (v NullableValidationRulePropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidationRulePropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
