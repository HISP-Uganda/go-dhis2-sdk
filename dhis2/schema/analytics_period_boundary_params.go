/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the AnalyticsPeriodBoundaryParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsPeriodBoundaryParams{}

// AnalyticsPeriodBoundaryParams struct for AnalyticsPeriodBoundaryParams
type AnalyticsPeriodBoundaryParams struct {
	AnalyticsPeriodBoundaryType AnalyticsPeriodBoundaryType           `json:"analyticsPeriodBoundaryType"`
	AttributeValues             []AttributeValueParams                `json:"attributeValues,omitempty"`
	BoundaryTarget              *string                               `json:"boundaryTarget,omitempty"`
	Code                        *string                               `json:"code,omitempty"`
	Created                     *time.Time                            `json:"created,omitempty"`
	CreatedBy                   *AggregateDataExchangeParamsCreatedBy `json:"createdBy,omitempty"`
	DisplayName                 *string                               `json:"displayName,omitempty"`
	Favorite                    *bool                                 `json:"favorite,omitempty"`
	Favorites                   []string                              `json:"favorites,omitempty"`
	Id                          *string                               `json:"id,omitempty"`
	LastUpdated                 *time.Time                            `json:"lastUpdated,omitempty"`
	LastUpdatedBy               *AggregateDataExchangeParamsCreatedBy `json:"lastUpdatedBy,omitempty"`
	Name                        *string                               `json:"name,omitempty"`
	OffsetPeriodType            *string                               `json:"offsetPeriodType,omitempty"`
	OffsetPeriods               *int32                                `json:"offsetPeriods,omitempty"`
	Sharing                     *Sharing                              `json:"sharing,omitempty"`
	Translations                []Translation                         `json:"translations,omitempty"`
}

type _AnalyticsPeriodBoundaryParams AnalyticsPeriodBoundaryParams

// NewAnalyticsPeriodBoundaryParams instantiates a new AnalyticsPeriodBoundaryParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsPeriodBoundaryParams(analyticsPeriodBoundaryType AnalyticsPeriodBoundaryType) *AnalyticsPeriodBoundaryParams {
	this := AnalyticsPeriodBoundaryParams{}
	this.AnalyticsPeriodBoundaryType = analyticsPeriodBoundaryType
	return &this
}

// NewAnalyticsPeriodBoundaryParamsWithDefaults instantiates a new AnalyticsPeriodBoundaryParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsPeriodBoundaryParamsWithDefaults() *AnalyticsPeriodBoundaryParams {
	this := AnalyticsPeriodBoundaryParams{}
	return &this
}

// GetAnalyticsPeriodBoundaryType returns the AnalyticsPeriodBoundaryType field value
func (o *AnalyticsPeriodBoundaryParams) GetAnalyticsPeriodBoundaryType() AnalyticsPeriodBoundaryType {
	if o == nil {
		var ret AnalyticsPeriodBoundaryType
		return ret
	}

	return o.AnalyticsPeriodBoundaryType
}

// GetAnalyticsPeriodBoundaryTypeOk returns a tuple with the AnalyticsPeriodBoundaryType field value
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetAnalyticsPeriodBoundaryTypeOk() (*AnalyticsPeriodBoundaryType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalyticsPeriodBoundaryType, true
}

// SetAnalyticsPeriodBoundaryType sets field value
func (o *AnalyticsPeriodBoundaryParams) SetAnalyticsPeriodBoundaryType(v AnalyticsPeriodBoundaryType) {
	o.AnalyticsPeriodBoundaryType = v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetAttributeValues() []AttributeValueParams {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValueParams
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetAttributeValuesOk() ([]AttributeValueParams, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValueParams and assigns it to the AttributeValues field.
func (o *AnalyticsPeriodBoundaryParams) SetAttributeValues(v []AttributeValueParams) {
	o.AttributeValues = v
}

// GetBoundaryTarget returns the BoundaryTarget field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetBoundaryTarget() string {
	if o == nil || IsNil(o.BoundaryTarget) {
		var ret string
		return ret
	}
	return *o.BoundaryTarget
}

// GetBoundaryTargetOk returns a tuple with the BoundaryTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetBoundaryTargetOk() (*string, bool) {
	if o == nil || IsNil(o.BoundaryTarget) {
		return nil, false
	}
	return o.BoundaryTarget, true
}

// HasBoundaryTarget returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasBoundaryTarget() bool {
	if o != nil && !IsNil(o.BoundaryTarget) {
		return true
	}

	return false
}

// SetBoundaryTarget gets a reference to the given string and assigns it to the BoundaryTarget field.
func (o *AnalyticsPeriodBoundaryParams) SetBoundaryTarget(v string) {
	o.BoundaryTarget = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *AnalyticsPeriodBoundaryParams) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *AnalyticsPeriodBoundaryParams) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetCreatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetCreatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the CreatedBy field.
func (o *AnalyticsPeriodBoundaryParams) SetCreatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.CreatedBy = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AnalyticsPeriodBoundaryParams) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *AnalyticsPeriodBoundaryParams) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *AnalyticsPeriodBoundaryParams) SetFavorites(v []string) {
	o.Favorites = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AnalyticsPeriodBoundaryParams) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *AnalyticsPeriodBoundaryParams) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetLastUpdatedBy() AggregateDataExchangeParamsCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeParamsCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetLastUpdatedByOk() (*AggregateDataExchangeParamsCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeParamsCreatedBy and assigns it to the LastUpdatedBy field.
func (o *AnalyticsPeriodBoundaryParams) SetLastUpdatedBy(v AggregateDataExchangeParamsCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AnalyticsPeriodBoundaryParams) SetName(v string) {
	o.Name = &v
}

// GetOffsetPeriodType returns the OffsetPeriodType field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetOffsetPeriodType() string {
	if o == nil || IsNil(o.OffsetPeriodType) {
		var ret string
		return ret
	}
	return *o.OffsetPeriodType
}

// GetOffsetPeriodTypeOk returns a tuple with the OffsetPeriodType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetOffsetPeriodTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OffsetPeriodType) {
		return nil, false
	}
	return o.OffsetPeriodType, true
}

// HasOffsetPeriodType returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasOffsetPeriodType() bool {
	if o != nil && !IsNil(o.OffsetPeriodType) {
		return true
	}

	return false
}

// SetOffsetPeriodType gets a reference to the given string and assigns it to the OffsetPeriodType field.
func (o *AnalyticsPeriodBoundaryParams) SetOffsetPeriodType(v string) {
	o.OffsetPeriodType = &v
}

// GetOffsetPeriods returns the OffsetPeriods field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetOffsetPeriods() int32 {
	if o == nil || IsNil(o.OffsetPeriods) {
		var ret int32
		return ret
	}
	return *o.OffsetPeriods
}

// GetOffsetPeriodsOk returns a tuple with the OffsetPeriods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetOffsetPeriodsOk() (*int32, bool) {
	if o == nil || IsNil(o.OffsetPeriods) {
		return nil, false
	}
	return o.OffsetPeriods, true
}

// HasOffsetPeriods returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasOffsetPeriods() bool {
	if o != nil && !IsNil(o.OffsetPeriods) {
		return true
	}

	return false
}

// SetOffsetPeriods gets a reference to the given int32 and assigns it to the OffsetPeriods field.
func (o *AnalyticsPeriodBoundaryParams) SetOffsetPeriods(v int32) {
	o.OffsetPeriods = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *AnalyticsPeriodBoundaryParams) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *AnalyticsPeriodBoundaryParams) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsPeriodBoundaryParams) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *AnalyticsPeriodBoundaryParams) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *AnalyticsPeriodBoundaryParams) SetTranslations(v []Translation) {
	o.Translations = v
}

func (o AnalyticsPeriodBoundaryParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsPeriodBoundaryParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["analyticsPeriodBoundaryType"] = o.AnalyticsPeriodBoundaryType
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.BoundaryTarget) {
		toSerialize["boundaryTarget"] = o.BoundaryTarget
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OffsetPeriodType) {
		toSerialize["offsetPeriodType"] = o.OffsetPeriodType
	}
	if !IsNil(o.OffsetPeriods) {
		toSerialize["offsetPeriods"] = o.OffsetPeriods
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	return toSerialize, nil
}

func (o *AnalyticsPeriodBoundaryParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"analyticsPeriodBoundaryType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAnalyticsPeriodBoundaryParams := _AnalyticsPeriodBoundaryParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAnalyticsPeriodBoundaryParams)

	if err != nil {
		return err
	}

	*o = AnalyticsPeriodBoundaryParams(varAnalyticsPeriodBoundaryParams)

	return err
}

type NullableAnalyticsPeriodBoundaryParams struct {
	value *AnalyticsPeriodBoundaryParams
	isSet bool
}

func (v NullableAnalyticsPeriodBoundaryParams) Get() *AnalyticsPeriodBoundaryParams {
	return v.value
}

func (v *NullableAnalyticsPeriodBoundaryParams) Set(val *AnalyticsPeriodBoundaryParams) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsPeriodBoundaryParams) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsPeriodBoundaryParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsPeriodBoundaryParams(val *AnalyticsPeriodBoundaryParams) *NullableAnalyticsPeriodBoundaryParams {
	return &NullableAnalyticsPeriodBoundaryParams{value: val, isSet: true}
}

func (v NullableAnalyticsPeriodBoundaryParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsPeriodBoundaryParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
