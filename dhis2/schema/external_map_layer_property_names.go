/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// ExternalMapLayerPropertyNames the model 'ExternalMapLayerPropertyNames'
type ExternalMapLayerPropertyNames string

// List of ExternalMapLayerPropertyNames
const (
	EXTERNALMAPLAYERPROPERTYNAMES_ACCESS             ExternalMapLayerPropertyNames = "access"
	EXTERNALMAPLAYERPROPERTYNAMES_ATTRIBUTE_VALUES   ExternalMapLayerPropertyNames = "attributeValues"
	EXTERNALMAPLAYERPROPERTYNAMES_ATTRIBUTION        ExternalMapLayerPropertyNames = "attribution"
	EXTERNALMAPLAYERPROPERTYNAMES_CODE               ExternalMapLayerPropertyNames = "code"
	EXTERNALMAPLAYERPROPERTYNAMES_CREATED            ExternalMapLayerPropertyNames = "created"
	EXTERNALMAPLAYERPROPERTYNAMES_CREATED_BY         ExternalMapLayerPropertyNames = "createdBy"
	EXTERNALMAPLAYERPROPERTYNAMES_DISPLAY_NAME       ExternalMapLayerPropertyNames = "displayName"
	EXTERNALMAPLAYERPROPERTYNAMES_FAVORITE           ExternalMapLayerPropertyNames = "favorite"
	EXTERNALMAPLAYERPROPERTYNAMES_FAVORITES          ExternalMapLayerPropertyNames = "favorites"
	EXTERNALMAPLAYERPROPERTYNAMES_HREF               ExternalMapLayerPropertyNames = "href"
	EXTERNALMAPLAYERPROPERTYNAMES_ID                 ExternalMapLayerPropertyNames = "id"
	EXTERNALMAPLAYERPROPERTYNAMES_IMAGE_FORMAT       ExternalMapLayerPropertyNames = "imageFormat"
	EXTERNALMAPLAYERPROPERTYNAMES_LAST_UPDATED       ExternalMapLayerPropertyNames = "lastUpdated"
	EXTERNALMAPLAYERPROPERTYNAMES_LAST_UPDATED_BY    ExternalMapLayerPropertyNames = "lastUpdatedBy"
	EXTERNALMAPLAYERPROPERTYNAMES_LAYERS             ExternalMapLayerPropertyNames = "layers"
	EXTERNALMAPLAYERPROPERTYNAMES_LEGEND_SET         ExternalMapLayerPropertyNames = "legendSet"
	EXTERNALMAPLAYERPROPERTYNAMES_LEGEND_SET_URL     ExternalMapLayerPropertyNames = "legendSetUrl"
	EXTERNALMAPLAYERPROPERTYNAMES_MAP_LAYER_POSITION ExternalMapLayerPropertyNames = "mapLayerPosition"
	EXTERNALMAPLAYERPROPERTYNAMES_MAP_SERVICE        ExternalMapLayerPropertyNames = "mapService"
	EXTERNALMAPLAYERPROPERTYNAMES_NAME               ExternalMapLayerPropertyNames = "name"
	EXTERNALMAPLAYERPROPERTYNAMES_SHARING            ExternalMapLayerPropertyNames = "sharing"
	EXTERNALMAPLAYERPROPERTYNAMES_TRANSLATIONS       ExternalMapLayerPropertyNames = "translations"
	EXTERNALMAPLAYERPROPERTYNAMES_URL                ExternalMapLayerPropertyNames = "url"
)

// All allowed values of ExternalMapLayerPropertyNames enum
var AllowedExternalMapLayerPropertyNamesEnumValues = []ExternalMapLayerPropertyNames{
	"access",
	"attributeValues",
	"attribution",
	"code",
	"created",
	"createdBy",
	"displayName",
	"favorite",
	"favorites",
	"href",
	"id",
	"imageFormat",
	"lastUpdated",
	"lastUpdatedBy",
	"layers",
	"legendSet",
	"legendSetUrl",
	"mapLayerPosition",
	"mapService",
	"name",
	"sharing",
	"translations",
	"url",
}

func (v *ExternalMapLayerPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExternalMapLayerPropertyNames(value)
	for _, existing := range AllowedExternalMapLayerPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ExternalMapLayerPropertyNames", value)
}

// NewExternalMapLayerPropertyNamesFromValue returns a pointer to a valid ExternalMapLayerPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExternalMapLayerPropertyNamesFromValue(v string) (*ExternalMapLayerPropertyNames, error) {
	ev := ExternalMapLayerPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ExternalMapLayerPropertyNames: valid values are %v", v, AllowedExternalMapLayerPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExternalMapLayerPropertyNames) IsValid() bool {
	for _, existing := range AllowedExternalMapLayerPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ExternalMapLayerPropertyNames value
func (v ExternalMapLayerPropertyNames) Ptr() *ExternalMapLayerPropertyNames {
	return &v
}

type NullableExternalMapLayerPropertyNames struct {
	value *ExternalMapLayerPropertyNames
	isSet bool
}

func (v NullableExternalMapLayerPropertyNames) Get() *ExternalMapLayerPropertyNames {
	return v.value
}

func (v *NullableExternalMapLayerPropertyNames) Set(val *ExternalMapLayerPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalMapLayerPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalMapLayerPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalMapLayerPropertyNames(val *ExternalMapLayerPropertyNames) *NullableExternalMapLayerPropertyNames {
	return &NullableExternalMapLayerPropertyNames{value: val, isSet: true}
}

func (v NullableExternalMapLayerPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalMapLayerPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
