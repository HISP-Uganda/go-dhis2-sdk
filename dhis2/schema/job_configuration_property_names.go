/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// JobConfigurationPropertyNames the model 'JobConfigurationPropertyNames'
type JobConfigurationPropertyNames string

// List of JobConfigurationPropertyNames
const (
	JOBCONFIGURATIONPROPERTYNAMES_ACCESS                     JobConfigurationPropertyNames = "access"
	JOBCONFIGURATIONPROPERTYNAMES_ATTRIBUTE_VALUES           JobConfigurationPropertyNames = "attributeValues"
	JOBCONFIGURATIONPROPERTYNAMES_CODE                       JobConfigurationPropertyNames = "code"
	JOBCONFIGURATIONPROPERTYNAMES_CONFIGURABLE               JobConfigurationPropertyNames = "configurable"
	JOBCONFIGURATIONPROPERTYNAMES_CREATED                    JobConfigurationPropertyNames = "created"
	JOBCONFIGURATIONPROPERTYNAMES_CREATED_BY                 JobConfigurationPropertyNames = "createdBy"
	JOBCONFIGURATIONPROPERTYNAMES_CRON_EXPRESSION            JobConfigurationPropertyNames = "cronExpression"
	JOBCONFIGURATIONPROPERTYNAMES_DELAY                      JobConfigurationPropertyNames = "delay"
	JOBCONFIGURATIONPROPERTYNAMES_DISPLAY_NAME               JobConfigurationPropertyNames = "displayName"
	JOBCONFIGURATIONPROPERTYNAMES_ENABLED                    JobConfigurationPropertyNames = "enabled"
	JOBCONFIGURATIONPROPERTYNAMES_ERROR_CODES                JobConfigurationPropertyNames = "errorCodes"
	JOBCONFIGURATIONPROPERTYNAMES_EXECUTED_BY                JobConfigurationPropertyNames = "executedBy"
	JOBCONFIGURATIONPROPERTYNAMES_FAVORITE                   JobConfigurationPropertyNames = "favorite"
	JOBCONFIGURATIONPROPERTYNAMES_FAVORITES                  JobConfigurationPropertyNames = "favorites"
	JOBCONFIGURATIONPROPERTYNAMES_HREF                       JobConfigurationPropertyNames = "href"
	JOBCONFIGURATIONPROPERTYNAMES_ID                         JobConfigurationPropertyNames = "id"
	JOBCONFIGURATIONPROPERTYNAMES_JOB_PARAMETERS             JobConfigurationPropertyNames = "jobParameters"
	JOBCONFIGURATIONPROPERTYNAMES_JOB_STATUS                 JobConfigurationPropertyNames = "jobStatus"
	JOBCONFIGURATIONPROPERTYNAMES_JOB_TYPE                   JobConfigurationPropertyNames = "jobType"
	JOBCONFIGURATIONPROPERTYNAMES_LAST_ALIVE                 JobConfigurationPropertyNames = "lastAlive"
	JOBCONFIGURATIONPROPERTYNAMES_LAST_EXECUTED              JobConfigurationPropertyNames = "lastExecuted"
	JOBCONFIGURATIONPROPERTYNAMES_LAST_EXECUTED_STATUS       JobConfigurationPropertyNames = "lastExecutedStatus"
	JOBCONFIGURATIONPROPERTYNAMES_LAST_FINISHED              JobConfigurationPropertyNames = "lastFinished"
	JOBCONFIGURATIONPROPERTYNAMES_LAST_RUNTIME_EXECUTION     JobConfigurationPropertyNames = "lastRuntimeExecution"
	JOBCONFIGURATIONPROPERTYNAMES_LAST_UPDATED               JobConfigurationPropertyNames = "lastUpdated"
	JOBCONFIGURATIONPROPERTYNAMES_LAST_UPDATED_BY            JobConfigurationPropertyNames = "lastUpdatedBy"
	JOBCONFIGURATIONPROPERTYNAMES_LEADER_ONLY_JOB            JobConfigurationPropertyNames = "leaderOnlyJob"
	JOBCONFIGURATIONPROPERTYNAMES_MAX_DELAYED_EXECUTION_TIME JobConfigurationPropertyNames = "maxDelayedExecutionTime"
	JOBCONFIGURATIONPROPERTYNAMES_NAME                       JobConfigurationPropertyNames = "name"
	JOBCONFIGURATIONPROPERTYNAMES_NEXT_EXECUTION_TIME        JobConfigurationPropertyNames = "nextExecutionTime"
	JOBCONFIGURATIONPROPERTYNAMES_QUEUE_NAME                 JobConfigurationPropertyNames = "queueName"
	JOBCONFIGURATIONPROPERTYNAMES_QUEUE_POSITION             JobConfigurationPropertyNames = "queuePosition"
	JOBCONFIGURATIONPROPERTYNAMES_SCHEDULING_TYPE            JobConfigurationPropertyNames = "schedulingType"
	JOBCONFIGURATIONPROPERTYNAMES_SHARING                    JobConfigurationPropertyNames = "sharing"
	JOBCONFIGURATIONPROPERTYNAMES_TRANSLATIONS               JobConfigurationPropertyNames = "translations"
	JOBCONFIGURATIONPROPERTYNAMES_USER_UID                   JobConfigurationPropertyNames = "userUid"
)

// All allowed values of JobConfigurationPropertyNames enum
var AllowedJobConfigurationPropertyNamesEnumValues = []JobConfigurationPropertyNames{
	"access",
	"attributeValues",
	"code",
	"configurable",
	"created",
	"createdBy",
	"cronExpression",
	"delay",
	"displayName",
	"enabled",
	"errorCodes",
	"executedBy",
	"favorite",
	"favorites",
	"href",
	"id",
	"jobParameters",
	"jobStatus",
	"jobType",
	"lastAlive",
	"lastExecuted",
	"lastExecutedStatus",
	"lastFinished",
	"lastRuntimeExecution",
	"lastUpdated",
	"lastUpdatedBy",
	"leaderOnlyJob",
	"maxDelayedExecutionTime",
	"name",
	"nextExecutionTime",
	"queueName",
	"queuePosition",
	"schedulingType",
	"sharing",
	"translations",
	"userUid",
}

func (v *JobConfigurationPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := JobConfigurationPropertyNames(value)
	for _, existing := range AllowedJobConfigurationPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid JobConfigurationPropertyNames", value)
}

// NewJobConfigurationPropertyNamesFromValue returns a pointer to a valid JobConfigurationPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewJobConfigurationPropertyNamesFromValue(v string) (*JobConfigurationPropertyNames, error) {
	ev := JobConfigurationPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for JobConfigurationPropertyNames: valid values are %v", v, AllowedJobConfigurationPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v JobConfigurationPropertyNames) IsValid() bool {
	for _, existing := range AllowedJobConfigurationPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to JobConfigurationPropertyNames value
func (v JobConfigurationPropertyNames) Ptr() *JobConfigurationPropertyNames {
	return &v
}

type NullableJobConfigurationPropertyNames struct {
	value *JobConfigurationPropertyNames
	isSet bool
}

func (v NullableJobConfigurationPropertyNames) Get() *JobConfigurationPropertyNames {
	return v.value
}

func (v *NullableJobConfigurationPropertyNames) Set(val *JobConfigurationPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableJobConfigurationPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableJobConfigurationPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobConfigurationPropertyNames(val *JobConfigurationPropertyNames) *NullableJobConfigurationPropertyNames {
	return &NullableJobConfigurationPropertyNames{value: val, isSet: true}
}

func (v NullableJobConfigurationPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobConfigurationPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
