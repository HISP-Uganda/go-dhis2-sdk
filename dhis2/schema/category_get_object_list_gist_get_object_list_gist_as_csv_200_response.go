/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// CategoryGetObjectListGistGetObjectListGistAsCsv200Response - struct for CategoryGetObjectListGistGetObjectListGistAsCsv200Response
type CategoryGetObjectListGistGetObjectListGistAsCsv200Response struct {
	CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfCategory                                                 *[]Category
}

// CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsCategoryGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in CategoryGetObjectListGistGetObjectListGistAsCsv200Response
func CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsCategoryGetObjectListGistGetObjectListGistAsCsv200Response(v *CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) CategoryGetObjectListGistGetObjectListGistAsCsv200Response {
	return CategoryGetObjectListGistGetObjectListGistAsCsv200Response{
		CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []CategoryAsCategoryGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []Category wrapped in CategoryGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfCategoryAsCategoryGetObjectListGistGetObjectListGistAsCsv200Response(v *[]Category) CategoryGetObjectListGistGetObjectListGistAsCsv200Response {
	return CategoryGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfCategory: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *CategoryGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonCategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonCategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfCategory
	err = newStrictDecoder(data).Decode(&dst.ArrayOfCategory)
	if err == nil {
		jsonArrayOfCategory, _ := json.Marshal(dst.ArrayOfCategory)
		if string(jsonArrayOfCategory) == "{}" { // empty struct
			dst.ArrayOfCategory = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfCategory = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfCategory = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CategoryGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CategoryGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CategoryGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfCategory != nil {
		return json.Marshal(&src.ArrayOfCategory)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CategoryGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.CategoryGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfCategory != nil {
		return obj.ArrayOfCategory
	}

	// all schemas are nil
	return nil
}

type NullableCategoryGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *CategoryGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableCategoryGetObjectListGistGetObjectListGistAsCsv200Response) Get() *CategoryGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableCategoryGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *CategoryGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryGetObjectListGistGetObjectListGistAsCsv200Response(val *CategoryGetObjectListGistGetObjectListGistAsCsv200Response) *NullableCategoryGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableCategoryGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableCategoryGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
