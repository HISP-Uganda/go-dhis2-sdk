/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response - struct for DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response
type DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response struct {
	DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfDataElementGroupSet                                                 *[]DataElementGroupSet
}

// DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response
func DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response(v *DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response {
	return DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response{
		DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []DataElementGroupSetAsDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []DataElementGroupSet wrapped in DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfDataElementGroupSetAsDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response(v *[]DataElementGroupSet) DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response {
	return DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfDataElementGroupSet: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfDataElementGroupSet
	err = newStrictDecoder(data).Decode(&dst.ArrayOfDataElementGroupSet)
	if err == nil {
		jsonArrayOfDataElementGroupSet, _ := json.Marshal(dst.ArrayOfDataElementGroupSet)
		if string(jsonArrayOfDataElementGroupSet) == "{}" { // empty struct
			dst.ArrayOfDataElementGroupSet = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfDataElementGroupSet = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfDataElementGroupSet = nil

		return fmt.Errorf("data matches more than one schema in oneOf(DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfDataElementGroupSet != nil {
		return json.Marshal(&src.ArrayOfDataElementGroupSet)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfDataElementGroupSet != nil {
		return obj.ArrayOfDataElementGroupSet
	}

	// all schemas are nil
	return nil
}

type NullableDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) Get() *DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response(val *DataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) *NullableDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataElementGroupSetGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
