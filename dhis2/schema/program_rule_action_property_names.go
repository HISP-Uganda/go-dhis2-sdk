/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// ProgramRuleActionPropertyNames the model 'ProgramRuleActionPropertyNames'
type ProgramRuleActionPropertyNames string

// List of ProgramRuleActionPropertyNames
const (
	PROGRAMRULEACTIONPROPERTYNAMES_ACCESS                                      ProgramRuleActionPropertyNames = "access"
	PROGRAMRULEACTIONPROPERTYNAMES_ATTRIBUTE_VALUES                            ProgramRuleActionPropertyNames = "attributeValues"
	PROGRAMRULEACTIONPROPERTYNAMES_CODE                                        ProgramRuleActionPropertyNames = "code"
	PROGRAMRULEACTIONPROPERTYNAMES_CONTENT                                     ProgramRuleActionPropertyNames = "content"
	PROGRAMRULEACTIONPROPERTYNAMES_CREATED                                     ProgramRuleActionPropertyNames = "created"
	PROGRAMRULEACTIONPROPERTYNAMES_CREATED_BY                                  ProgramRuleActionPropertyNames = "createdBy"
	PROGRAMRULEACTIONPROPERTYNAMES_DATA                                        ProgramRuleActionPropertyNames = "data"
	PROGRAMRULEACTIONPROPERTYNAMES_DATA_ELEMENT                                ProgramRuleActionPropertyNames = "dataElement"
	PROGRAMRULEACTIONPROPERTYNAMES_DISPLAY_CONTENT                             ProgramRuleActionPropertyNames = "displayContent"
	PROGRAMRULEACTIONPROPERTYNAMES_DISPLAY_NAME                                ProgramRuleActionPropertyNames = "displayName"
	PROGRAMRULEACTIONPROPERTYNAMES_FAVORITE                                    ProgramRuleActionPropertyNames = "favorite"
	PROGRAMRULEACTIONPROPERTYNAMES_FAVORITES                                   ProgramRuleActionPropertyNames = "favorites"
	PROGRAMRULEACTIONPROPERTYNAMES_HREF                                        ProgramRuleActionPropertyNames = "href"
	PROGRAMRULEACTIONPROPERTYNAMES_ID                                          ProgramRuleActionPropertyNames = "id"
	PROGRAMRULEACTIONPROPERTYNAMES_LAST_UPDATED                                ProgramRuleActionPropertyNames = "lastUpdated"
	PROGRAMRULEACTIONPROPERTYNAMES_LAST_UPDATED_BY                             ProgramRuleActionPropertyNames = "lastUpdatedBy"
	PROGRAMRULEACTIONPROPERTYNAMES_LOCATION                                    ProgramRuleActionPropertyNames = "location"
	PROGRAMRULEACTIONPROPERTYNAMES_NAME                                        ProgramRuleActionPropertyNames = "name"
	PROGRAMRULEACTIONPROPERTYNAMES_OPTION                                      ProgramRuleActionPropertyNames = "option"
	PROGRAMRULEACTIONPROPERTYNAMES_OPTION_GROUP                                ProgramRuleActionPropertyNames = "optionGroup"
	PROGRAMRULEACTIONPROPERTYNAMES_PROGRAM_INDICATOR                           ProgramRuleActionPropertyNames = "programIndicator"
	PROGRAMRULEACTIONPROPERTYNAMES_PROGRAM_RULE                                ProgramRuleActionPropertyNames = "programRule"
	PROGRAMRULEACTIONPROPERTYNAMES_PROGRAM_RULE_ACTION_EVALUATION_ENVIRONMENTS ProgramRuleActionPropertyNames = "programRuleActionEvaluationEnvironments"
	PROGRAMRULEACTIONPROPERTYNAMES_PROGRAM_RULE_ACTION_EVALUATION_TIME         ProgramRuleActionPropertyNames = "programRuleActionEvaluationTime"
	PROGRAMRULEACTIONPROPERTYNAMES_PROGRAM_RULE_ACTION_TYPE                    ProgramRuleActionPropertyNames = "programRuleActionType"
	PROGRAMRULEACTIONPROPERTYNAMES_PROGRAM_STAGE                               ProgramRuleActionPropertyNames = "programStage"
	PROGRAMRULEACTIONPROPERTYNAMES_PROGRAM_STAGE_SECTION                       ProgramRuleActionPropertyNames = "programStageSection"
	PROGRAMRULEACTIONPROPERTYNAMES_SHARING                                     ProgramRuleActionPropertyNames = "sharing"
	PROGRAMRULEACTIONPROPERTYNAMES_TEMPLATE_UID                                ProgramRuleActionPropertyNames = "templateUid"
	PROGRAMRULEACTIONPROPERTYNAMES_TRACKED_ENTITY_ATTRIBUTE                    ProgramRuleActionPropertyNames = "trackedEntityAttribute"
	PROGRAMRULEACTIONPROPERTYNAMES_TRANSLATIONS                                ProgramRuleActionPropertyNames = "translations"
)

// All allowed values of ProgramRuleActionPropertyNames enum
var AllowedProgramRuleActionPropertyNamesEnumValues = []ProgramRuleActionPropertyNames{
	"access",
	"attributeValues",
	"code",
	"content",
	"created",
	"createdBy",
	"data",
	"dataElement",
	"displayContent",
	"displayName",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"location",
	"name",
	"option",
	"optionGroup",
	"programIndicator",
	"programRule",
	"programRuleActionEvaluationEnvironments",
	"programRuleActionEvaluationTime",
	"programRuleActionType",
	"programStage",
	"programStageSection",
	"sharing",
	"templateUid",
	"trackedEntityAttribute",
	"translations",
}

func (v *ProgramRuleActionPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProgramRuleActionPropertyNames(value)
	for _, existing := range AllowedProgramRuleActionPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProgramRuleActionPropertyNames", value)
}

// NewProgramRuleActionPropertyNamesFromValue returns a pointer to a valid ProgramRuleActionPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProgramRuleActionPropertyNamesFromValue(v string) (*ProgramRuleActionPropertyNames, error) {
	ev := ProgramRuleActionPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProgramRuleActionPropertyNames: valid values are %v", v, AllowedProgramRuleActionPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProgramRuleActionPropertyNames) IsValid() bool {
	for _, existing := range AllowedProgramRuleActionPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProgramRuleActionPropertyNames value
func (v ProgramRuleActionPropertyNames) Ptr() *ProgramRuleActionPropertyNames {
	return &v
}

type NullableProgramRuleActionPropertyNames struct {
	value *ProgramRuleActionPropertyNames
	isSet bool
}

func (v NullableProgramRuleActionPropertyNames) Get() *ProgramRuleActionPropertyNames {
	return v.value
}

func (v *NullableProgramRuleActionPropertyNames) Set(val *ProgramRuleActionPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramRuleActionPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramRuleActionPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramRuleActionPropertyNames(val *ProgramRuleActionPropertyNames) *NullableProgramRuleActionPropertyNames {
	return &NullableProgramRuleActionPropertyNames{value: val, isSet: true}
}

func (v NullableProgramRuleActionPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramRuleActionPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
