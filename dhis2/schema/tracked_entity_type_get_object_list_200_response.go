/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the TrackedEntityTypeGetObjectList200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackedEntityTypeGetObjectList200Response{}

// TrackedEntityTypeGetObjectList200Response struct for TrackedEntityTypeGetObjectList200Response
type TrackedEntityTypeGetObjectList200Response struct {
	Pager              *Pager              `json:"pager,omitempty"`
	TrackedEntityTypes []TrackedEntityType `json:"trackedEntityTypes,omitempty"`
}

// NewTrackedEntityTypeGetObjectList200Response instantiates a new TrackedEntityTypeGetObjectList200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackedEntityTypeGetObjectList200Response() *TrackedEntityTypeGetObjectList200Response {
	this := TrackedEntityTypeGetObjectList200Response{}
	return &this
}

// NewTrackedEntityTypeGetObjectList200ResponseWithDefaults instantiates a new TrackedEntityTypeGetObjectList200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackedEntityTypeGetObjectList200ResponseWithDefaults() *TrackedEntityTypeGetObjectList200Response {
	this := TrackedEntityTypeGetObjectList200Response{}
	return &this
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *TrackedEntityTypeGetObjectList200Response) GetPager() Pager {
	if o == nil || IsNil(o.Pager) {
		var ret Pager
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityTypeGetObjectList200Response) GetPagerOk() (*Pager, bool) {
	if o == nil || IsNil(o.Pager) {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *TrackedEntityTypeGetObjectList200Response) HasPager() bool {
	if o != nil && !IsNil(o.Pager) {
		return true
	}

	return false
}

// SetPager gets a reference to the given Pager and assigns it to the Pager field.
func (o *TrackedEntityTypeGetObjectList200Response) SetPager(v Pager) {
	o.Pager = &v
}

// GetTrackedEntityTypes returns the TrackedEntityTypes field value if set, zero value otherwise.
func (o *TrackedEntityTypeGetObjectList200Response) GetTrackedEntityTypes() []TrackedEntityType {
	if o == nil || IsNil(o.TrackedEntityTypes) {
		var ret []TrackedEntityType
		return ret
	}
	return o.TrackedEntityTypes
}

// GetTrackedEntityTypesOk returns a tuple with the TrackedEntityTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityTypeGetObjectList200Response) GetTrackedEntityTypesOk() ([]TrackedEntityType, bool) {
	if o == nil || IsNil(o.TrackedEntityTypes) {
		return nil, false
	}
	return o.TrackedEntityTypes, true
}

// HasTrackedEntityTypes returns a boolean if a field has been set.
func (o *TrackedEntityTypeGetObjectList200Response) HasTrackedEntityTypes() bool {
	if o != nil && !IsNil(o.TrackedEntityTypes) {
		return true
	}

	return false
}

// SetTrackedEntityTypes gets a reference to the given []TrackedEntityType and assigns it to the TrackedEntityTypes field.
func (o *TrackedEntityTypeGetObjectList200Response) SetTrackedEntityTypes(v []TrackedEntityType) {
	o.TrackedEntityTypes = v
}

func (o TrackedEntityTypeGetObjectList200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackedEntityTypeGetObjectList200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pager) {
		toSerialize["pager"] = o.Pager
	}
	if !IsNil(o.TrackedEntityTypes) {
		toSerialize["trackedEntityTypes"] = o.TrackedEntityTypes
	}
	return toSerialize, nil
}

type NullableTrackedEntityTypeGetObjectList200Response struct {
	value *TrackedEntityTypeGetObjectList200Response
	isSet bool
}

func (v NullableTrackedEntityTypeGetObjectList200Response) Get() *TrackedEntityTypeGetObjectList200Response {
	return v.value
}

func (v *NullableTrackedEntityTypeGetObjectList200Response) Set(val *TrackedEntityTypeGetObjectList200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackedEntityTypeGetObjectList200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackedEntityTypeGetObjectList200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackedEntityTypeGetObjectList200Response(val *TrackedEntityTypeGetObjectList200Response) *NullableTrackedEntityTypeGetObjectList200Response {
	return &NullableTrackedEntityTypeGetObjectList200Response{value: val, isSet: true}
}

func (v NullableTrackedEntityTypeGetObjectList200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackedEntityTypeGetObjectList200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
