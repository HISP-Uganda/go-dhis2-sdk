/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// checks if the FavoriteStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FavoriteStatistics{}

// FavoriteStatistics struct for FavoriteStatistics
type FavoriteStatistics struct {
	Created  *time.Time `json:"created,omitempty"`
	Id       *string    `json:"id,omitempty"`
	Name     *string    `json:"name,omitempty"`
	Position *int32     `json:"position,omitempty"`
	Views    *int32     `json:"views,omitempty"`
}

// NewFavoriteStatistics instantiates a new FavoriteStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFavoriteStatistics() *FavoriteStatistics {
	this := FavoriteStatistics{}
	return &this
}

// NewFavoriteStatisticsWithDefaults instantiates a new FavoriteStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFavoriteStatisticsWithDefaults() *FavoriteStatistics {
	this := FavoriteStatistics{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *FavoriteStatistics) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FavoriteStatistics) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *FavoriteStatistics) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *FavoriteStatistics) SetCreated(v time.Time) {
	o.Created = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FavoriteStatistics) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FavoriteStatistics) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FavoriteStatistics) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FavoriteStatistics) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FavoriteStatistics) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FavoriteStatistics) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FavoriteStatistics) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FavoriteStatistics) SetName(v string) {
	o.Name = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *FavoriteStatistics) GetPosition() int32 {
	if o == nil || IsNil(o.Position) {
		var ret int32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FavoriteStatistics) GetPositionOk() (*int32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *FavoriteStatistics) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given int32 and assigns it to the Position field.
func (o *FavoriteStatistics) SetPosition(v int32) {
	o.Position = &v
}

// GetViews returns the Views field value if set, zero value otherwise.
func (o *FavoriteStatistics) GetViews() int32 {
	if o == nil || IsNil(o.Views) {
		var ret int32
		return ret
	}
	return *o.Views
}

// GetViewsOk returns a tuple with the Views field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FavoriteStatistics) GetViewsOk() (*int32, bool) {
	if o == nil || IsNil(o.Views) {
		return nil, false
	}
	return o.Views, true
}

// HasViews returns a boolean if a field has been set.
func (o *FavoriteStatistics) HasViews() bool {
	if o != nil && !IsNil(o.Views) {
		return true
	}

	return false
}

// SetViews gets a reference to the given int32 and assigns it to the Views field.
func (o *FavoriteStatistics) SetViews(v int32) {
	o.Views = &v
}

func (o FavoriteStatistics) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FavoriteStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.Views) {
		toSerialize["views"] = o.Views
	}
	return toSerialize, nil
}

type NullableFavoriteStatistics struct {
	value *FavoriteStatistics
	isSet bool
}

func (v NullableFavoriteStatistics) Get() *FavoriteStatistics {
	return v.value
}

func (v *NullableFavoriteStatistics) Set(val *FavoriteStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableFavoriteStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableFavoriteStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFavoriteStatistics(val *FavoriteStatistics) *NullableFavoriteStatistics {
	return &NullableFavoriteStatistics{value: val, isSet: true}
}

func (v NullableFavoriteStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFavoriteStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
