/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ProgramIndicatorPropertyNames the model 'ProgramIndicatorPropertyNames'
type ProgramIndicatorPropertyNames string

// List of ProgramIndicatorPropertyNames
const (
	PROGRAMINDICATORPROPERTYNAMES_ACCESS                                  ProgramIndicatorPropertyNames = "access"
	PROGRAMINDICATORPROPERTYNAMES_AGGREGATE_EXPORT_ATTRIBUTE_OPTION_COMBO ProgramIndicatorPropertyNames = "aggregateExportAttributeOptionCombo"
	PROGRAMINDICATORPROPERTYNAMES_AGGREGATE_EXPORT_CATEGORY_OPTION_COMBO  ProgramIndicatorPropertyNames = "aggregateExportCategoryOptionCombo"
	PROGRAMINDICATORPROPERTYNAMES_AGGREGATE_EXPORT_DATA_ELEMENT           ProgramIndicatorPropertyNames = "aggregateExportDataElement"
	PROGRAMINDICATORPROPERTYNAMES_AGGREGATION_TYPE                        ProgramIndicatorPropertyNames = "aggregationType"
	PROGRAMINDICATORPROPERTYNAMES_ANALYTICS_PERIOD_BOUNDARIES             ProgramIndicatorPropertyNames = "analyticsPeriodBoundaries"
	PROGRAMINDICATORPROPERTYNAMES_ANALYTICS_TYPE                          ProgramIndicatorPropertyNames = "analyticsType"
	PROGRAMINDICATORPROPERTYNAMES_ATTRIBUTE_COMBO                         ProgramIndicatorPropertyNames = "attributeCombo"
	PROGRAMINDICATORPROPERTYNAMES_ATTRIBUTE_VALUES                        ProgramIndicatorPropertyNames = "attributeValues"
	PROGRAMINDICATORPROPERTYNAMES_CATEGORY_COMBO                          ProgramIndicatorPropertyNames = "categoryCombo"
	PROGRAMINDICATORPROPERTYNAMES_CATEGORY_MAPPING_IDS                    ProgramIndicatorPropertyNames = "categoryMappingIds"
	PROGRAMINDICATORPROPERTYNAMES_CODE                                    ProgramIndicatorPropertyNames = "code"
	PROGRAMINDICATORPROPERTYNAMES_CREATED                                 ProgramIndicatorPropertyNames = "created"
	PROGRAMINDICATORPROPERTYNAMES_CREATED_BY                              ProgramIndicatorPropertyNames = "createdBy"
	PROGRAMINDICATORPROPERTYNAMES_DECIMALS                                ProgramIndicatorPropertyNames = "decimals"
	PROGRAMINDICATORPROPERTYNAMES_DESCRIPTION                             ProgramIndicatorPropertyNames = "description"
	PROGRAMINDICATORPROPERTYNAMES_DIMENSION_ITEM                          ProgramIndicatorPropertyNames = "dimensionItem"
	PROGRAMINDICATORPROPERTYNAMES_DISPLAY_DESCRIPTION                     ProgramIndicatorPropertyNames = "displayDescription"
	PROGRAMINDICATORPROPERTYNAMES_DISPLAY_FORM_NAME                       ProgramIndicatorPropertyNames = "displayFormName"
	PROGRAMINDICATORPROPERTYNAMES_DISPLAY_IN_FORM                         ProgramIndicatorPropertyNames = "displayInForm"
	PROGRAMINDICATORPROPERTYNAMES_DISPLAY_NAME                            ProgramIndicatorPropertyNames = "displayName"
	PROGRAMINDICATORPROPERTYNAMES_DISPLAY_SHORT_NAME                      ProgramIndicatorPropertyNames = "displayShortName"
	PROGRAMINDICATORPROPERTYNAMES_EXPRESSION                              ProgramIndicatorPropertyNames = "expression"
	PROGRAMINDICATORPROPERTYNAMES_FAVORITE                                ProgramIndicatorPropertyNames = "favorite"
	PROGRAMINDICATORPROPERTYNAMES_FAVORITES                               ProgramIndicatorPropertyNames = "favorites"
	PROGRAMINDICATORPROPERTYNAMES_FILTER                                  ProgramIndicatorPropertyNames = "filter"
	PROGRAMINDICATORPROPERTYNAMES_FORM_NAME                               ProgramIndicatorPropertyNames = "formName"
	PROGRAMINDICATORPROPERTYNAMES_HREF                                    ProgramIndicatorPropertyNames = "href"
	PROGRAMINDICATORPROPERTYNAMES_ID                                      ProgramIndicatorPropertyNames = "id"
	PROGRAMINDICATORPROPERTYNAMES_LAST_UPDATED                            ProgramIndicatorPropertyNames = "lastUpdated"
	PROGRAMINDICATORPROPERTYNAMES_LAST_UPDATED_BY                         ProgramIndicatorPropertyNames = "lastUpdatedBy"
	PROGRAMINDICATORPROPERTYNAMES_LEGEND_SET                              ProgramIndicatorPropertyNames = "legendSet"
	PROGRAMINDICATORPROPERTYNAMES_LEGEND_SETS                             ProgramIndicatorPropertyNames = "legendSets"
	PROGRAMINDICATORPROPERTYNAMES_NAME                                    ProgramIndicatorPropertyNames = "name"
	PROGRAMINDICATORPROPERTYNAMES_ORG_UNIT_FIELD                          ProgramIndicatorPropertyNames = "orgUnitField"
	PROGRAMINDICATORPROPERTYNAMES_PROGRAM                                 ProgramIndicatorPropertyNames = "program"
	PROGRAMINDICATORPROPERTYNAMES_PROGRAM_INDICATOR_GROUPS                ProgramIndicatorPropertyNames = "programIndicatorGroups"
	PROGRAMINDICATORPROPERTYNAMES_QUERY_MODS                              ProgramIndicatorPropertyNames = "queryMods"
	PROGRAMINDICATORPROPERTYNAMES_SHARING                                 ProgramIndicatorPropertyNames = "sharing"
	PROGRAMINDICATORPROPERTYNAMES_SHORT_NAME                              ProgramIndicatorPropertyNames = "shortName"
	PROGRAMINDICATORPROPERTYNAMES_STYLE                                   ProgramIndicatorPropertyNames = "style"
	PROGRAMINDICATORPROPERTYNAMES_TRANSLATIONS                            ProgramIndicatorPropertyNames = "translations"
)

// All allowed values of ProgramIndicatorPropertyNames enum
var AllowedProgramIndicatorPropertyNamesEnumValues = []ProgramIndicatorPropertyNames{
	"access",
	"aggregateExportAttributeOptionCombo",
	"aggregateExportCategoryOptionCombo",
	"aggregateExportDataElement",
	"aggregationType",
	"analyticsPeriodBoundaries",
	"analyticsType",
	"attributeCombo",
	"attributeValues",
	"categoryCombo",
	"categoryMappingIds",
	"code",
	"created",
	"createdBy",
	"decimals",
	"description",
	"dimensionItem",
	"displayDescription",
	"displayFormName",
	"displayInForm",
	"displayName",
	"displayShortName",
	"expression",
	"favorite",
	"favorites",
	"filter",
	"formName",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"legendSet",
	"legendSets",
	"name",
	"orgUnitField",
	"program",
	"programIndicatorGroups",
	"queryMods",
	"sharing",
	"shortName",
	"style",
	"translations",
}

func (v *ProgramIndicatorPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProgramIndicatorPropertyNames(value)
	for _, existing := range AllowedProgramIndicatorPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProgramIndicatorPropertyNames", value)
}

// NewProgramIndicatorPropertyNamesFromValue returns a pointer to a valid ProgramIndicatorPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProgramIndicatorPropertyNamesFromValue(v string) (*ProgramIndicatorPropertyNames, error) {
	ev := ProgramIndicatorPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProgramIndicatorPropertyNames: valid values are %v", v, AllowedProgramIndicatorPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProgramIndicatorPropertyNames) IsValid() bool {
	for _, existing := range AllowedProgramIndicatorPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProgramIndicatorPropertyNames value
func (v ProgramIndicatorPropertyNames) Ptr() *ProgramIndicatorPropertyNames {
	return &v
}

type NullableProgramIndicatorPropertyNames struct {
	value *ProgramIndicatorPropertyNames
	isSet bool
}

func (v NullableProgramIndicatorPropertyNames) Get() *ProgramIndicatorPropertyNames {
	return v.value
}

func (v *NullableProgramIndicatorPropertyNames) Set(val *ProgramIndicatorPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramIndicatorPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramIndicatorPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramIndicatorPropertyNames(val *ProgramIndicatorPropertyNames) *NullableProgramIndicatorPropertyNames {
	return &NullableProgramIndicatorPropertyNames{value: val, isSet: true}
}

func (v NullableProgramIndicatorPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramIndicatorPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
