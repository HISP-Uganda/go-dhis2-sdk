/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DataIntegrityJobParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataIntegrityJobParameters{}

// DataIntegrityJobParameters struct for DataIntegrityJobParameters
type DataIntegrityJobParameters struct {
	Checks []string                `json:"checks,omitempty"`
	Type   DataIntegrityReportType `json:"type"`
}

type _DataIntegrityJobParameters DataIntegrityJobParameters

// NewDataIntegrityJobParameters instantiates a new DataIntegrityJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataIntegrityJobParameters(type_ DataIntegrityReportType) *DataIntegrityJobParameters {
	this := DataIntegrityJobParameters{}
	this.Type = type_
	return &this
}

// NewDataIntegrityJobParametersWithDefaults instantiates a new DataIntegrityJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataIntegrityJobParametersWithDefaults() *DataIntegrityJobParameters {
	this := DataIntegrityJobParameters{}
	return &this
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *DataIntegrityJobParameters) GetChecks() []string {
	if o == nil || IsNil(o.Checks) {
		var ret []string
		return ret
	}
	return o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataIntegrityJobParameters) GetChecksOk() ([]string, bool) {
	if o == nil || IsNil(o.Checks) {
		return nil, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *DataIntegrityJobParameters) HasChecks() bool {
	if o != nil && !IsNil(o.Checks) {
		return true
	}

	return false
}

// SetChecks gets a reference to the given []string and assigns it to the Checks field.
func (o *DataIntegrityJobParameters) SetChecks(v []string) {
	o.Checks = v
}

// GetType returns the Type field value
func (o *DataIntegrityJobParameters) GetType() DataIntegrityReportType {
	if o == nil {
		var ret DataIntegrityReportType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DataIntegrityJobParameters) GetTypeOk() (*DataIntegrityReportType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DataIntegrityJobParameters) SetType(v DataIntegrityReportType) {
	o.Type = v
}

func (o DataIntegrityJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataIntegrityJobParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Checks) {
		toSerialize["checks"] = o.Checks
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *DataIntegrityJobParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDataIntegrityJobParameters := _DataIntegrityJobParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDataIntegrityJobParameters)

	if err != nil {
		return err
	}

	*o = DataIntegrityJobParameters(varDataIntegrityJobParameters)

	return err
}

type NullableDataIntegrityJobParameters struct {
	value *DataIntegrityJobParameters
	isSet bool
}

func (v NullableDataIntegrityJobParameters) Get() *DataIntegrityJobParameters {
	return v.value
}

func (v *NullableDataIntegrityJobParameters) Set(val *DataIntegrityJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableDataIntegrityJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableDataIntegrityJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataIntegrityJobParameters(val *DataIntegrityJobParameters) *NullableDataIntegrityJobParameters {
	return &NullableDataIntegrityJobParameters{value: val, isSet: true}
}

func (v NullableDataIntegrityJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataIntegrityJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
