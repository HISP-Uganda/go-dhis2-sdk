/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// DataApprovalWorkflowPropertyNames the model 'DataApprovalWorkflowPropertyNames'
type DataApprovalWorkflowPropertyNames string

// List of DataApprovalWorkflowPropertyNames
const (
	DATAAPPROVALWORKFLOWPROPERTYNAMES_ACCESS               DataApprovalWorkflowPropertyNames = "access"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_ATTRIBUTE_VALUES     DataApprovalWorkflowPropertyNames = "attributeValues"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_CATEGORY_COMBO       DataApprovalWorkflowPropertyNames = "categoryCombo"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_CODE                 DataApprovalWorkflowPropertyNames = "code"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_CREATED              DataApprovalWorkflowPropertyNames = "created"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_CREATED_BY           DataApprovalWorkflowPropertyNames = "createdBy"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_DATA_APPROVAL_LEVELS DataApprovalWorkflowPropertyNames = "dataApprovalLevels"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_DATA_SETS            DataApprovalWorkflowPropertyNames = "dataSets"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_DISPLAY_NAME         DataApprovalWorkflowPropertyNames = "displayName"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_FAVORITE             DataApprovalWorkflowPropertyNames = "favorite"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_FAVORITES            DataApprovalWorkflowPropertyNames = "favorites"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_HREF                 DataApprovalWorkflowPropertyNames = "href"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_ID                   DataApprovalWorkflowPropertyNames = "id"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_LAST_UPDATED         DataApprovalWorkflowPropertyNames = "lastUpdated"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_LAST_UPDATED_BY      DataApprovalWorkflowPropertyNames = "lastUpdatedBy"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_NAME                 DataApprovalWorkflowPropertyNames = "name"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_PERIOD_TYPE          DataApprovalWorkflowPropertyNames = "periodType"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_SHARING              DataApprovalWorkflowPropertyNames = "sharing"
	DATAAPPROVALWORKFLOWPROPERTYNAMES_TRANSLATIONS         DataApprovalWorkflowPropertyNames = "translations"
)

// All allowed values of DataApprovalWorkflowPropertyNames enum
var AllowedDataApprovalWorkflowPropertyNamesEnumValues = []DataApprovalWorkflowPropertyNames{
	"access",
	"attributeValues",
	"categoryCombo",
	"code",
	"created",
	"createdBy",
	"dataApprovalLevels",
	"dataSets",
	"displayName",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"periodType",
	"sharing",
	"translations",
}

func (v *DataApprovalWorkflowPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DataApprovalWorkflowPropertyNames(value)
	for _, existing := range AllowedDataApprovalWorkflowPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DataApprovalWorkflowPropertyNames", value)
}

// NewDataApprovalWorkflowPropertyNamesFromValue returns a pointer to a valid DataApprovalWorkflowPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDataApprovalWorkflowPropertyNamesFromValue(v string) (*DataApprovalWorkflowPropertyNames, error) {
	ev := DataApprovalWorkflowPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DataApprovalWorkflowPropertyNames: valid values are %v", v, AllowedDataApprovalWorkflowPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DataApprovalWorkflowPropertyNames) IsValid() bool {
	for _, existing := range AllowedDataApprovalWorkflowPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DataApprovalWorkflowPropertyNames value
func (v DataApprovalWorkflowPropertyNames) Ptr() *DataApprovalWorkflowPropertyNames {
	return &v
}

type NullableDataApprovalWorkflowPropertyNames struct {
	value *DataApprovalWorkflowPropertyNames
	isSet bool
}

func (v NullableDataApprovalWorkflowPropertyNames) Get() *DataApprovalWorkflowPropertyNames {
	return v.value
}

func (v *NullableDataApprovalWorkflowPropertyNames) Set(val *DataApprovalWorkflowPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableDataApprovalWorkflowPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableDataApprovalWorkflowPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataApprovalWorkflowPropertyNames(val *DataApprovalWorkflowPropertyNames) *NullableDataApprovalWorkflowPropertyNames {
	return &NullableDataApprovalWorkflowPropertyNames{value: val, isSet: true}
}

func (v NullableDataApprovalWorkflowPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataApprovalWorkflowPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
