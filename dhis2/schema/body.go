/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the Body type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Body{}

// Body struct for Body
type Body struct {
	Enrollments     []EnrollmentInfo    `json:"enrollments,omitempty"`
	Events          []EventInfo         `json:"events,omitempty"`
	Relationships   []RelationshipInfo  `json:"relationships,omitempty"`
	TrackedEntities []TrackedEntityInfo `json:"trackedEntities,omitempty"`
}

// NewBody instantiates a new Body object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBody() *Body {
	this := Body{}
	return &this
}

// NewBodyWithDefaults instantiates a new Body object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBodyWithDefaults() *Body {
	this := Body{}
	return &this
}

// GetEnrollments returns the Enrollments field value if set, zero value otherwise.
func (o *Body) GetEnrollments() []EnrollmentInfo {
	if o == nil || IsNil(o.Enrollments) {
		var ret []EnrollmentInfo
		return ret
	}
	return o.Enrollments
}

// GetEnrollmentsOk returns a tuple with the Enrollments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Body) GetEnrollmentsOk() ([]EnrollmentInfo, bool) {
	if o == nil || IsNil(o.Enrollments) {
		return nil, false
	}
	return o.Enrollments, true
}

// HasEnrollments returns a boolean if a field has been set.
func (o *Body) HasEnrollments() bool {
	if o != nil && !IsNil(o.Enrollments) {
		return true
	}

	return false
}

// SetEnrollments gets a reference to the given []EnrollmentInfo and assigns it to the Enrollments field.
func (o *Body) SetEnrollments(v []EnrollmentInfo) {
	o.Enrollments = v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *Body) GetEvents() []EventInfo {
	if o == nil || IsNil(o.Events) {
		var ret []EventInfo
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Body) GetEventsOk() ([]EventInfo, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *Body) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []EventInfo and assigns it to the Events field.
func (o *Body) SetEvents(v []EventInfo) {
	o.Events = v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *Body) GetRelationships() []RelationshipInfo {
	if o == nil || IsNil(o.Relationships) {
		var ret []RelationshipInfo
		return ret
	}
	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Body) GetRelationshipsOk() ([]RelationshipInfo, bool) {
	if o == nil || IsNil(o.Relationships) {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *Body) HasRelationships() bool {
	if o != nil && !IsNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given []RelationshipInfo and assigns it to the Relationships field.
func (o *Body) SetRelationships(v []RelationshipInfo) {
	o.Relationships = v
}

// GetTrackedEntities returns the TrackedEntities field value if set, zero value otherwise.
func (o *Body) GetTrackedEntities() []TrackedEntityInfo {
	if o == nil || IsNil(o.TrackedEntities) {
		var ret []TrackedEntityInfo
		return ret
	}
	return o.TrackedEntities
}

// GetTrackedEntitiesOk returns a tuple with the TrackedEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Body) GetTrackedEntitiesOk() ([]TrackedEntityInfo, bool) {
	if o == nil || IsNil(o.TrackedEntities) {
		return nil, false
	}
	return o.TrackedEntities, true
}

// HasTrackedEntities returns a boolean if a field has been set.
func (o *Body) HasTrackedEntities() bool {
	if o != nil && !IsNil(o.TrackedEntities) {
		return true
	}

	return false
}

// SetTrackedEntities gets a reference to the given []TrackedEntityInfo and assigns it to the TrackedEntities field.
func (o *Body) SetTrackedEntities(v []TrackedEntityInfo) {
	o.TrackedEntities = v
}

func (o Body) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Body) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enrollments) {
		toSerialize["enrollments"] = o.Enrollments
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !IsNil(o.TrackedEntities) {
		toSerialize["trackedEntities"] = o.TrackedEntities
	}
	return toSerialize, nil
}

type NullableBody struct {
	value *Body
	isSet bool
}

func (v NullableBody) Get() *Body {
	return v.value
}

func (v *NullableBody) Set(val *Body) {
	v.value = val
	v.isSet = true
}

func (v NullableBody) IsSet() bool {
	return v.isSet
}

func (v *NullableBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBody(val *Body) *NullableBody {
	return &NullableBody{value: val, isSet: true}
}

func (v NullableBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
