/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the LoginOidcProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginOidcProvider{}

// LoginOidcProvider struct for LoginOidcProvider
type LoginOidcProvider struct {
	Icon        *string `json:"icon,omitempty"`
	IconPadding *string `json:"iconPadding,omitempty"`
	Id          *string `json:"id,omitempty"`
	LoginText   *string `json:"loginText,omitempty"`
	Url         *string `json:"url,omitempty"`
}

// NewLoginOidcProvider instantiates a new LoginOidcProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginOidcProvider() *LoginOidcProvider {
	this := LoginOidcProvider{}
	return &this
}

// NewLoginOidcProviderWithDefaults instantiates a new LoginOidcProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginOidcProviderWithDefaults() *LoginOidcProvider {
	this := LoginOidcProvider{}
	return &this
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *LoginOidcProvider) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginOidcProvider) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *LoginOidcProvider) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *LoginOidcProvider) SetIcon(v string) {
	o.Icon = &v
}

// GetIconPadding returns the IconPadding field value if set, zero value otherwise.
func (o *LoginOidcProvider) GetIconPadding() string {
	if o == nil || IsNil(o.IconPadding) {
		var ret string
		return ret
	}
	return *o.IconPadding
}

// GetIconPaddingOk returns a tuple with the IconPadding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginOidcProvider) GetIconPaddingOk() (*string, bool) {
	if o == nil || IsNil(o.IconPadding) {
		return nil, false
	}
	return o.IconPadding, true
}

// HasIconPadding returns a boolean if a field has been set.
func (o *LoginOidcProvider) HasIconPadding() bool {
	if o != nil && !IsNil(o.IconPadding) {
		return true
	}

	return false
}

// SetIconPadding gets a reference to the given string and assigns it to the IconPadding field.
func (o *LoginOidcProvider) SetIconPadding(v string) {
	o.IconPadding = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LoginOidcProvider) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginOidcProvider) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LoginOidcProvider) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LoginOidcProvider) SetId(v string) {
	o.Id = &v
}

// GetLoginText returns the LoginText field value if set, zero value otherwise.
func (o *LoginOidcProvider) GetLoginText() string {
	if o == nil || IsNil(o.LoginText) {
		var ret string
		return ret
	}
	return *o.LoginText
}

// GetLoginTextOk returns a tuple with the LoginText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginOidcProvider) GetLoginTextOk() (*string, bool) {
	if o == nil || IsNil(o.LoginText) {
		return nil, false
	}
	return o.LoginText, true
}

// HasLoginText returns a boolean if a field has been set.
func (o *LoginOidcProvider) HasLoginText() bool {
	if o != nil && !IsNil(o.LoginText) {
		return true
	}

	return false
}

// SetLoginText gets a reference to the given string and assigns it to the LoginText field.
func (o *LoginOidcProvider) SetLoginText(v string) {
	o.LoginText = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *LoginOidcProvider) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginOidcProvider) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *LoginOidcProvider) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *LoginOidcProvider) SetUrl(v string) {
	o.Url = &v
}

func (o LoginOidcProvider) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginOidcProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.IconPadding) {
		toSerialize["iconPadding"] = o.IconPadding
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LoginText) {
		toSerialize["loginText"] = o.LoginText
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableLoginOidcProvider struct {
	value *LoginOidcProvider
	isSet bool
}

func (v NullableLoginOidcProvider) Get() *LoginOidcProvider {
	return v.value
}

func (v *NullableLoginOidcProvider) Set(val *LoginOidcProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginOidcProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginOidcProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginOidcProvider(val *LoginOidcProvider) *NullableLoginOidcProvider {
	return &NullableLoginOidcProvider{value: val, isSet: true}
}

func (v NullableLoginOidcProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginOidcProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
