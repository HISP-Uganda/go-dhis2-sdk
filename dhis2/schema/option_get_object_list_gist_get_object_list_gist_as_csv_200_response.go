/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// OptionGetObjectListGistGetObjectListGistAsCsv200Response - struct for OptionGetObjectListGistGetObjectListGistAsCsv200Response
type OptionGetObjectListGistGetObjectListGistAsCsv200Response struct {
	OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfOption                                                 *[]Option
}

// OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsOptionGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in OptionGetObjectListGistGetObjectListGistAsCsv200Response
func OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsOptionGetObjectListGistGetObjectListGistAsCsv200Response(v *OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) OptionGetObjectListGistGetObjectListGistAsCsv200Response {
	return OptionGetObjectListGistGetObjectListGistAsCsv200Response{
		OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []OptionAsOptionGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []Option wrapped in OptionGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfOptionAsOptionGetObjectListGistGetObjectListGistAsCsv200Response(v *[]Option) OptionGetObjectListGistGetObjectListGistAsCsv200Response {
	return OptionGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfOption: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *OptionGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonOptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonOptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfOption
	err = newStrictDecoder(data).Decode(&dst.ArrayOfOption)
	if err == nil {
		jsonArrayOfOption, _ := json.Marshal(dst.ArrayOfOption)
		if string(jsonArrayOfOption) == "{}" { // empty struct
			dst.ArrayOfOption = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfOption = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfOption = nil

		return fmt.Errorf("data matches more than one schema in oneOf(OptionGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(OptionGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src OptionGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfOption != nil {
		return json.Marshal(&src.ArrayOfOption)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *OptionGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.OptionGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfOption != nil {
		return obj.ArrayOfOption
	}

	// all schemas are nil
	return nil
}

type NullableOptionGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *OptionGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableOptionGetObjectListGistGetObjectListGistAsCsv200Response) Get() *OptionGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableOptionGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *OptionGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionGetObjectListGistGetObjectListGistAsCsv200Response(val *OptionGetObjectListGistGetObjectListGistAsCsv200Response) *NullableOptionGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableOptionGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableOptionGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
