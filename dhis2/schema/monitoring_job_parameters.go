/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the MonitoringJobParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitoringJobParameters{}

// MonitoringJobParameters struct for MonitoringJobParameters
type MonitoringJobParameters struct {
	PersistResults       *bool    `json:"persistResults,omitempty"`
	RelativeEnd          int32    `json:"relativeEnd"`
	RelativeStart        int32    `json:"relativeStart"`
	SendNotifications    *bool    `json:"sendNotifications,omitempty"`
	ValidationRuleGroups []string `json:"validationRuleGroups,omitempty"`
}

type _MonitoringJobParameters MonitoringJobParameters

// NewMonitoringJobParameters instantiates a new MonitoringJobParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringJobParameters(relativeEnd int32, relativeStart int32) *MonitoringJobParameters {
	this := MonitoringJobParameters{}
	this.RelativeEnd = relativeEnd
	this.RelativeStart = relativeStart
	return &this
}

// NewMonitoringJobParametersWithDefaults instantiates a new MonitoringJobParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringJobParametersWithDefaults() *MonitoringJobParameters {
	this := MonitoringJobParameters{}
	return &this
}

// GetPersistResults returns the PersistResults field value if set, zero value otherwise.
func (o *MonitoringJobParameters) GetPersistResults() bool {
	if o == nil || IsNil(o.PersistResults) {
		var ret bool
		return ret
	}
	return *o.PersistResults
}

// GetPersistResultsOk returns a tuple with the PersistResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringJobParameters) GetPersistResultsOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistResults) {
		return nil, false
	}
	return o.PersistResults, true
}

// HasPersistResults returns a boolean if a field has been set.
func (o *MonitoringJobParameters) HasPersistResults() bool {
	if o != nil && !IsNil(o.PersistResults) {
		return true
	}

	return false
}

// SetPersistResults gets a reference to the given bool and assigns it to the PersistResults field.
func (o *MonitoringJobParameters) SetPersistResults(v bool) {
	o.PersistResults = &v
}

// GetRelativeEnd returns the RelativeEnd field value
func (o *MonitoringJobParameters) GetRelativeEnd() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RelativeEnd
}

// GetRelativeEndOk returns a tuple with the RelativeEnd field value
// and a boolean to check if the value has been set.
func (o *MonitoringJobParameters) GetRelativeEndOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelativeEnd, true
}

// SetRelativeEnd sets field value
func (o *MonitoringJobParameters) SetRelativeEnd(v int32) {
	o.RelativeEnd = v
}

// GetRelativeStart returns the RelativeStart field value
func (o *MonitoringJobParameters) GetRelativeStart() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RelativeStart
}

// GetRelativeStartOk returns a tuple with the RelativeStart field value
// and a boolean to check if the value has been set.
func (o *MonitoringJobParameters) GetRelativeStartOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelativeStart, true
}

// SetRelativeStart sets field value
func (o *MonitoringJobParameters) SetRelativeStart(v int32) {
	o.RelativeStart = v
}

// GetSendNotifications returns the SendNotifications field value if set, zero value otherwise.
func (o *MonitoringJobParameters) GetSendNotifications() bool {
	if o == nil || IsNil(o.SendNotifications) {
		var ret bool
		return ret
	}
	return *o.SendNotifications
}

// GetSendNotificationsOk returns a tuple with the SendNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringJobParameters) GetSendNotificationsOk() (*bool, bool) {
	if o == nil || IsNil(o.SendNotifications) {
		return nil, false
	}
	return o.SendNotifications, true
}

// HasSendNotifications returns a boolean if a field has been set.
func (o *MonitoringJobParameters) HasSendNotifications() bool {
	if o != nil && !IsNil(o.SendNotifications) {
		return true
	}

	return false
}

// SetSendNotifications gets a reference to the given bool and assigns it to the SendNotifications field.
func (o *MonitoringJobParameters) SetSendNotifications(v bool) {
	o.SendNotifications = &v
}

// GetValidationRuleGroups returns the ValidationRuleGroups field value if set, zero value otherwise.
func (o *MonitoringJobParameters) GetValidationRuleGroups() []string {
	if o == nil || IsNil(o.ValidationRuleGroups) {
		var ret []string
		return ret
	}
	return o.ValidationRuleGroups
}

// GetValidationRuleGroupsOk returns a tuple with the ValidationRuleGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringJobParameters) GetValidationRuleGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.ValidationRuleGroups) {
		return nil, false
	}
	return o.ValidationRuleGroups, true
}

// HasValidationRuleGroups returns a boolean if a field has been set.
func (o *MonitoringJobParameters) HasValidationRuleGroups() bool {
	if o != nil && !IsNil(o.ValidationRuleGroups) {
		return true
	}

	return false
}

// SetValidationRuleGroups gets a reference to the given []string and assigns it to the ValidationRuleGroups field.
func (o *MonitoringJobParameters) SetValidationRuleGroups(v []string) {
	o.ValidationRuleGroups = v
}

func (o MonitoringJobParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitoringJobParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PersistResults) {
		toSerialize["persistResults"] = o.PersistResults
	}
	toSerialize["relativeEnd"] = o.RelativeEnd
	toSerialize["relativeStart"] = o.RelativeStart
	if !IsNil(o.SendNotifications) {
		toSerialize["sendNotifications"] = o.SendNotifications
	}
	if !IsNil(o.ValidationRuleGroups) {
		toSerialize["validationRuleGroups"] = o.ValidationRuleGroups
	}
	return toSerialize, nil
}

func (o *MonitoringJobParameters) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"relativeEnd",
		"relativeStart",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMonitoringJobParameters := _MonitoringJobParameters{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMonitoringJobParameters)

	if err != nil {
		return err
	}

	*o = MonitoringJobParameters(varMonitoringJobParameters)

	return err
}

type NullableMonitoringJobParameters struct {
	value *MonitoringJobParameters
	isSet bool
}

func (v NullableMonitoringJobParameters) Get() *MonitoringJobParameters {
	return v.value
}

func (v *NullableMonitoringJobParameters) Set(val *MonitoringJobParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringJobParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringJobParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringJobParameters(val *MonitoringJobParameters) *NullableMonitoringJobParameters {
	return &NullableMonitoringJobParameters{value: val, isSet: true}
}

func (v NullableMonitoringJobParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringJobParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
