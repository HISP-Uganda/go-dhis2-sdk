/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// Dhis2OAuth2ClientPropertyNames the model 'Dhis2OAuth2ClientPropertyNames'
type Dhis2OAuth2ClientPropertyNames string

// List of Dhis2OAuth2ClientPropertyNames
const (
	DHIS2OAUTH2CLIENTPROPERTYNAMES_ACCESS                        Dhis2OAuth2ClientPropertyNames = "access"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_ATTRIBUTE_VALUES              Dhis2OAuth2ClientPropertyNames = "attributeValues"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_AUTHORIZATION_GRANT_TYPES     Dhis2OAuth2ClientPropertyNames = "authorizationGrantTypes"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_CLIENT_AUTHENTICATION_METHODS Dhis2OAuth2ClientPropertyNames = "clientAuthenticationMethods"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_CLIENT_ID                     Dhis2OAuth2ClientPropertyNames = "clientId"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_CLIENT_ID_ISSUED_AT           Dhis2OAuth2ClientPropertyNames = "clientIdIssuedAt"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_CLIENT_SECRET                 Dhis2OAuth2ClientPropertyNames = "clientSecret"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_CLIENT_SECRET_EXPIRES_AT      Dhis2OAuth2ClientPropertyNames = "clientSecretExpiresAt"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_CLIENT_SETTINGS               Dhis2OAuth2ClientPropertyNames = "clientSettings"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_CODE                          Dhis2OAuth2ClientPropertyNames = "code"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_CREATED                       Dhis2OAuth2ClientPropertyNames = "created"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_CREATED_BY                    Dhis2OAuth2ClientPropertyNames = "createdBy"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_DISPLAY_NAME                  Dhis2OAuth2ClientPropertyNames = "displayName"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_FAVORITE                      Dhis2OAuth2ClientPropertyNames = "favorite"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_FAVORITES                     Dhis2OAuth2ClientPropertyNames = "favorites"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_HREF                          Dhis2OAuth2ClientPropertyNames = "href"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_ID                            Dhis2OAuth2ClientPropertyNames = "id"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_LAST_UPDATED                  Dhis2OAuth2ClientPropertyNames = "lastUpdated"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_LAST_UPDATED_BY               Dhis2OAuth2ClientPropertyNames = "lastUpdatedBy"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_NAME                          Dhis2OAuth2ClientPropertyNames = "name"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_POST_LOGOUT_REDIRECT_URIS     Dhis2OAuth2ClientPropertyNames = "postLogoutRedirectUris"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_REDIRECT_URIS                 Dhis2OAuth2ClientPropertyNames = "redirectUris"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_SCOPES                        Dhis2OAuth2ClientPropertyNames = "scopes"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_SHARING                       Dhis2OAuth2ClientPropertyNames = "sharing"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_TOKEN_SETTINGS                Dhis2OAuth2ClientPropertyNames = "tokenSettings"
	DHIS2OAUTH2CLIENTPROPERTYNAMES_TRANSLATIONS                  Dhis2OAuth2ClientPropertyNames = "translations"
)

// All allowed values of Dhis2OAuth2ClientPropertyNames enum
var AllowedDhis2OAuth2ClientPropertyNamesEnumValues = []Dhis2OAuth2ClientPropertyNames{
	"access",
	"attributeValues",
	"authorizationGrantTypes",
	"clientAuthenticationMethods",
	"clientId",
	"clientIdIssuedAt",
	"clientSecret",
	"clientSecretExpiresAt",
	"clientSettings",
	"code",
	"created",
	"createdBy",
	"displayName",
	"favorite",
	"favorites",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"postLogoutRedirectUris",
	"redirectUris",
	"scopes",
	"sharing",
	"tokenSettings",
	"translations",
}

func (v *Dhis2OAuth2ClientPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Dhis2OAuth2ClientPropertyNames(value)
	for _, existing := range AllowedDhis2OAuth2ClientPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Dhis2OAuth2ClientPropertyNames", value)
}

// NewDhis2OAuth2ClientPropertyNamesFromValue returns a pointer to a valid Dhis2OAuth2ClientPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDhis2OAuth2ClientPropertyNamesFromValue(v string) (*Dhis2OAuth2ClientPropertyNames, error) {
	ev := Dhis2OAuth2ClientPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Dhis2OAuth2ClientPropertyNames: valid values are %v", v, AllowedDhis2OAuth2ClientPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Dhis2OAuth2ClientPropertyNames) IsValid() bool {
	for _, existing := range AllowedDhis2OAuth2ClientPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Dhis2OAuth2ClientPropertyNames value
func (v Dhis2OAuth2ClientPropertyNames) Ptr() *Dhis2OAuth2ClientPropertyNames {
	return &v
}

type NullableDhis2OAuth2ClientPropertyNames struct {
	value *Dhis2OAuth2ClientPropertyNames
	isSet bool
}

func (v NullableDhis2OAuth2ClientPropertyNames) Get() *Dhis2OAuth2ClientPropertyNames {
	return v.value
}

func (v *NullableDhis2OAuth2ClientPropertyNames) Set(val *Dhis2OAuth2ClientPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableDhis2OAuth2ClientPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableDhis2OAuth2ClientPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDhis2OAuth2ClientPropertyNames(val *Dhis2OAuth2ClientPropertyNames) *NullableDhis2OAuth2ClientPropertyNames {
	return &NullableDhis2OAuth2ClientPropertyNames{value: val, isSet: true}
}

func (v NullableDhis2OAuth2ClientPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDhis2OAuth2ClientPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
