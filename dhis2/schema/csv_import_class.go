/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// CsvImportClass the model 'CsvImportClass'
type CsvImportClass string

// List of CsvImportClass
const (
	CSVIMPORTCLASS_ORGANISATION_UNIT_GROUP_MEMBERSHIP CsvImportClass = "ORGANISATION_UNIT_GROUP_MEMBERSHIP"
	CSVIMPORTCLASS_DATA_ELEMENT_GROUP_MEMBERSHIP      CsvImportClass = "DATA_ELEMENT_GROUP_MEMBERSHIP"
	CSVIMPORTCLASS_INDICATOR_GROUP_MEMBERSHIP         CsvImportClass = "INDICATOR_GROUP_MEMBERSHIP"
	CSVIMPORTCLASS_DATA_ELEMENT                       CsvImportClass = "DATA_ELEMENT"
	CSVIMPORTCLASS_DATA_ELEMENT_GROUP                 CsvImportClass = "DATA_ELEMENT_GROUP"
	CSVIMPORTCLASS_CATEGORY_OPTION                    CsvImportClass = "CATEGORY_OPTION"
	CSVIMPORTCLASS_CATEGORY                           CsvImportClass = "CATEGORY"
	CSVIMPORTCLASS_CATEGORY_COMBO                     CsvImportClass = "CATEGORY_COMBO"
	CSVIMPORTCLASS_CATEGORY_OPTION_GROUP              CsvImportClass = "CATEGORY_OPTION_GROUP"
	CSVIMPORTCLASS_ORGANISATION_UNIT                  CsvImportClass = "ORGANISATION_UNIT"
	CSVIMPORTCLASS_ORGANISATION_UNIT_GROUP            CsvImportClass = "ORGANISATION_UNIT_GROUP"
	CSVIMPORTCLASS_VALIDATION_RULE                    CsvImportClass = "VALIDATION_RULE"
	CSVIMPORTCLASS_OPTION_SET                         CsvImportClass = "OPTION_SET"
	CSVIMPORTCLASS_OPTION_GROUP                       CsvImportClass = "OPTION_GROUP"
	CSVIMPORTCLASS_OPTION_GROUP_SET                   CsvImportClass = "OPTION_GROUP_SET"
	CSVIMPORTCLASS_OPTION_GROUP_SET_MEMBERSHIP        CsvImportClass = "OPTION_GROUP_SET_MEMBERSHIP"
	CSVIMPORTCLASS_INDICATOR                          CsvImportClass = "INDICATOR"
)

// All allowed values of CsvImportClass enum
var AllowedCsvImportClassEnumValues = []CsvImportClass{
	"ORGANISATION_UNIT_GROUP_MEMBERSHIP",
	"DATA_ELEMENT_GROUP_MEMBERSHIP",
	"INDICATOR_GROUP_MEMBERSHIP",
	"DATA_ELEMENT",
	"DATA_ELEMENT_GROUP",
	"CATEGORY_OPTION",
	"CATEGORY",
	"CATEGORY_COMBO",
	"CATEGORY_OPTION_GROUP",
	"ORGANISATION_UNIT",
	"ORGANISATION_UNIT_GROUP",
	"VALIDATION_RULE",
	"OPTION_SET",
	"OPTION_GROUP",
	"OPTION_GROUP_SET",
	"OPTION_GROUP_SET_MEMBERSHIP",
	"INDICATOR",
}

func (v *CsvImportClass) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CsvImportClass(value)
	for _, existing := range AllowedCsvImportClassEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CsvImportClass", value)
}

// NewCsvImportClassFromValue returns a pointer to a valid CsvImportClass
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCsvImportClassFromValue(v string) (*CsvImportClass, error) {
	ev := CsvImportClass(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CsvImportClass: valid values are %v", v, AllowedCsvImportClassEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CsvImportClass) IsValid() bool {
	for _, existing := range AllowedCsvImportClassEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CsvImportClass value
func (v CsvImportClass) Ptr() *CsvImportClass {
	return &v
}

type NullableCsvImportClass struct {
	value *CsvImportClass
	isSet bool
}

func (v NullableCsvImportClass) Get() *CsvImportClass {
	return v.value
}

func (v *NullableCsvImportClass) Set(val *CsvImportClass) {
	v.value = val
	v.isSet = true
}

func (v NullableCsvImportClass) IsSet() bool {
	return v.isSet
}

func (v *NullableCsvImportClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCsvImportClass(val *CsvImportClass) *NullableCsvImportClass {
	return &NullableCsvImportClass{value: val, isSet: true}
}

func (v NullableCsvImportClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCsvImportClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
