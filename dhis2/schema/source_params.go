/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the SourceParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceParams{}

// SourceParams struct for SourceParams
type SourceParams struct {
	PeriodTypes []PeriodTypeEnum `json:"periodTypes,omitempty"`
}

// NewSourceParams instantiates a new SourceParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceParams() *SourceParams {
	this := SourceParams{}
	return &this
}

// NewSourceParamsWithDefaults instantiates a new SourceParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceParamsWithDefaults() *SourceParams {
	this := SourceParams{}
	return &this
}

// GetPeriodTypes returns the PeriodTypes field value if set, zero value otherwise.
func (o *SourceParams) GetPeriodTypes() []PeriodTypeEnum {
	if o == nil || IsNil(o.PeriodTypes) {
		var ret []PeriodTypeEnum
		return ret
	}
	return o.PeriodTypes
}

// GetPeriodTypesOk returns a tuple with the PeriodTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceParams) GetPeriodTypesOk() ([]PeriodTypeEnum, bool) {
	if o == nil || IsNil(o.PeriodTypes) {
		return nil, false
	}
	return o.PeriodTypes, true
}

// HasPeriodTypes returns a boolean if a field has been set.
func (o *SourceParams) HasPeriodTypes() bool {
	if o != nil && !IsNil(o.PeriodTypes) {
		return true
	}

	return false
}

// SetPeriodTypes gets a reference to the given []PeriodTypeEnum and assigns it to the PeriodTypes field.
func (o *SourceParams) SetPeriodTypes(v []PeriodTypeEnum) {
	o.PeriodTypes = v
}

func (o SourceParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PeriodTypes) {
		toSerialize["periodTypes"] = o.PeriodTypes
	}
	return toSerialize, nil
}

type NullableSourceParams struct {
	value *SourceParams
	isSet bool
}

func (v NullableSourceParams) Get() *SourceParams {
	return v.value
}

func (v *NullableSourceParams) Set(val *SourceParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceParams(val *SourceParams) *NullableSourceParams {
	return &NullableSourceParams{value: val, isSet: true}
}

func (v NullableSourceParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
