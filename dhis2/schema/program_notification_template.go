/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ProgramNotificationTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgramNotificationTemplate{}

// ProgramNotificationTemplate struct for ProgramNotificationTemplate
type ProgramNotificationTemplate struct {
	Access                           *Access                                    `json:"access,omitempty"`
	AttributeValues                  []AttributeValue                           `json:"attributeValues,omitempty"`
	Code                             *string                                    `json:"code,omitempty"`
	Created                          *time.Time                                 `json:"created,omitempty"`
	CreatedBy                        *AggregateDataExchangeCreatedBy            `json:"createdBy,omitempty"`
	DeliveryChannels                 []string                                   `json:"deliveryChannels,omitempty"`
	DisplayMessageTemplate           *string                                    `json:"displayMessageTemplate,omitempty"`
	DisplayName                      *string                                    `json:"displayName,omitempty"`
	DisplaySubjectTemplate           *string                                    `json:"displaySubjectTemplate,omitempty"`
	ExternalAccess                   *bool                                      `json:"externalAccess,omitempty"`
	Favorite                         *bool                                      `json:"favorite,omitempty"`
	Favorites                        []string                                   `json:"favorites,omitempty"`
	Href                             *string                                    `json:"href,omitempty"`
	Id                               *string                                    `json:"id,omitempty"`
	LastUpdated                      *time.Time                                 `json:"lastUpdated,omitempty"`
	LastUpdatedBy                    *AggregateDataExchangeCreatedBy            `json:"lastUpdatedBy,omitempty"`
	MessageTemplate                  *string                                    `json:"messageTemplate,omitempty"`
	Name                             *string                                    `json:"name,omitempty"`
	NotificationRecipient            string                                     `json:"notificationRecipient"`
	NotificationTrigger              string                                     `json:"notificationTrigger"`
	NotifyParentOrganisationUnitOnly *bool                                      `json:"notifyParentOrganisationUnitOnly,omitempty"`
	NotifyUsersInHierarchyOnly       *bool                                      `json:"notifyUsersInHierarchyOnly,omitempty"`
	PublicAccess                     *string                                    `json:"publicAccess,omitempty"`
	RecipientDataElement             *DataDimensionItemDataElement              `json:"recipientDataElement,omitempty"`
	RecipientProgramAttribute        *EventVisualizationAttributeValueDimension `json:"recipientProgramAttribute,omitempty"`
	RecipientUserGroup               *ConfigurationFeedbackRecipients           `json:"recipientUserGroup,omitempty"`
	RelativeScheduledDays            *int32                                     `json:"relativeScheduledDays,omitempty"`
	SendRepeatable                   *bool                                      `json:"sendRepeatable,omitempty"`
	Sharing                          *Sharing                                   `json:"sharing,omitempty"`
	SubjectTemplate                  *string                                    `json:"subjectTemplate,omitempty"`
	Translations                     []Translation                              `json:"translations,omitempty"`
	User                             *AggregateDataExchangeCreatedBy            `json:"user,omitempty"`
	UserAccesses                     []LegacyUserAccess                         `json:"userAccesses,omitempty"`
	UserGroupAccesses                []LegacyUserGroupAccess                    `json:"userGroupAccesses,omitempty"`
}

type _ProgramNotificationTemplate ProgramNotificationTemplate

// NewProgramNotificationTemplate instantiates a new ProgramNotificationTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgramNotificationTemplate(notificationRecipient string, notificationTrigger string) *ProgramNotificationTemplate {
	this := ProgramNotificationTemplate{}
	this.NotificationRecipient = notificationRecipient
	this.NotificationTrigger = notificationTrigger
	return &this
}

// NewProgramNotificationTemplateWithDefaults instantiates a new ProgramNotificationTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgramNotificationTemplateWithDefaults() *ProgramNotificationTemplate {
	this := ProgramNotificationTemplate{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetAccess() Access {
	if o == nil || IsNil(o.Access) {
		var ret Access
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetAccessOk() (*Access, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given Access and assigns it to the Access field.
func (o *ProgramNotificationTemplate) SetAccess(v Access) {
	o.Access = &v
}

// GetAttributeValues returns the AttributeValues field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetAttributeValues() []AttributeValue {
	if o == nil || IsNil(o.AttributeValues) {
		var ret []AttributeValue
		return ret
	}
	return o.AttributeValues
}

// GetAttributeValuesOk returns a tuple with the AttributeValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetAttributeValuesOk() ([]AttributeValue, bool) {
	if o == nil || IsNil(o.AttributeValues) {
		return nil, false
	}
	return o.AttributeValues, true
}

// HasAttributeValues returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasAttributeValues() bool {
	if o != nil && !IsNil(o.AttributeValues) {
		return true
	}

	return false
}

// SetAttributeValues gets a reference to the given []AttributeValue and assigns it to the AttributeValues field.
func (o *ProgramNotificationTemplate) SetAttributeValues(v []AttributeValue) {
	o.AttributeValues = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProgramNotificationTemplate) SetCode(v string) {
	o.Code = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ProgramNotificationTemplate) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetCreatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.CreatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetCreatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the CreatedBy field.
func (o *ProgramNotificationTemplate) SetCreatedBy(v AggregateDataExchangeCreatedBy) {
	o.CreatedBy = &v
}

// GetDeliveryChannels returns the DeliveryChannels field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetDeliveryChannels() []string {
	if o == nil || IsNil(o.DeliveryChannels) {
		var ret []string
		return ret
	}
	return o.DeliveryChannels
}

// GetDeliveryChannelsOk returns a tuple with the DeliveryChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetDeliveryChannelsOk() ([]string, bool) {
	if o == nil || IsNil(o.DeliveryChannels) {
		return nil, false
	}
	return o.DeliveryChannels, true
}

// HasDeliveryChannels returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasDeliveryChannels() bool {
	if o != nil && !IsNil(o.DeliveryChannels) {
		return true
	}

	return false
}

// SetDeliveryChannels gets a reference to the given []string and assigns it to the DeliveryChannels field.
func (o *ProgramNotificationTemplate) SetDeliveryChannels(v []string) {
	o.DeliveryChannels = v
}

// GetDisplayMessageTemplate returns the DisplayMessageTemplate field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetDisplayMessageTemplate() string {
	if o == nil || IsNil(o.DisplayMessageTemplate) {
		var ret string
		return ret
	}
	return *o.DisplayMessageTemplate
}

// GetDisplayMessageTemplateOk returns a tuple with the DisplayMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetDisplayMessageTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayMessageTemplate) {
		return nil, false
	}
	return o.DisplayMessageTemplate, true
}

// HasDisplayMessageTemplate returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasDisplayMessageTemplate() bool {
	if o != nil && !IsNil(o.DisplayMessageTemplate) {
		return true
	}

	return false
}

// SetDisplayMessageTemplate gets a reference to the given string and assigns it to the DisplayMessageTemplate field.
func (o *ProgramNotificationTemplate) SetDisplayMessageTemplate(v string) {
	o.DisplayMessageTemplate = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ProgramNotificationTemplate) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDisplaySubjectTemplate returns the DisplaySubjectTemplate field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetDisplaySubjectTemplate() string {
	if o == nil || IsNil(o.DisplaySubjectTemplate) {
		var ret string
		return ret
	}
	return *o.DisplaySubjectTemplate
}

// GetDisplaySubjectTemplateOk returns a tuple with the DisplaySubjectTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetDisplaySubjectTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.DisplaySubjectTemplate) {
		return nil, false
	}
	return o.DisplaySubjectTemplate, true
}

// HasDisplaySubjectTemplate returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasDisplaySubjectTemplate() bool {
	if o != nil && !IsNil(o.DisplaySubjectTemplate) {
		return true
	}

	return false
}

// SetDisplaySubjectTemplate gets a reference to the given string and assigns it to the DisplaySubjectTemplate field.
func (o *ProgramNotificationTemplate) SetDisplaySubjectTemplate(v string) {
	o.DisplaySubjectTemplate = &v
}

// GetExternalAccess returns the ExternalAccess field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetExternalAccess() bool {
	if o == nil || IsNil(o.ExternalAccess) {
		var ret bool
		return ret
	}
	return *o.ExternalAccess
}

// GetExternalAccessOk returns a tuple with the ExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetExternalAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalAccess) {
		return nil, false
	}
	return o.ExternalAccess, true
}

// HasExternalAccess returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasExternalAccess() bool {
	if o != nil && !IsNil(o.ExternalAccess) {
		return true
	}

	return false
}

// SetExternalAccess gets a reference to the given bool and assigns it to the ExternalAccess field.
func (o *ProgramNotificationTemplate) SetExternalAccess(v bool) {
	o.ExternalAccess = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ProgramNotificationTemplate) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetFavorites returns the Favorites field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetFavorites() []string {
	if o == nil || IsNil(o.Favorites) {
		var ret []string
		return ret
	}
	return o.Favorites
}

// GetFavoritesOk returns a tuple with the Favorites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetFavoritesOk() ([]string, bool) {
	if o == nil || IsNil(o.Favorites) {
		return nil, false
	}
	return o.Favorites, true
}

// HasFavorites returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasFavorites() bool {
	if o != nil && !IsNil(o.Favorites) {
		return true
	}

	return false
}

// SetFavorites gets a reference to the given []string and assigns it to the Favorites field.
func (o *ProgramNotificationTemplate) SetFavorites(v []string) {
	o.Favorites = v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ProgramNotificationTemplate) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProgramNotificationTemplate) SetId(v string) {
	o.Id = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *ProgramNotificationTemplate) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetLastUpdatedBy() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetLastUpdatedByOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the LastUpdatedBy field.
func (o *ProgramNotificationTemplate) SetLastUpdatedBy(v AggregateDataExchangeCreatedBy) {
	o.LastUpdatedBy = &v
}

// GetMessageTemplate returns the MessageTemplate field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetMessageTemplate() string {
	if o == nil || IsNil(o.MessageTemplate) {
		var ret string
		return ret
	}
	return *o.MessageTemplate
}

// GetMessageTemplateOk returns a tuple with the MessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetMessageTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.MessageTemplate) {
		return nil, false
	}
	return o.MessageTemplate, true
}

// HasMessageTemplate returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasMessageTemplate() bool {
	if o != nil && !IsNil(o.MessageTemplate) {
		return true
	}

	return false
}

// SetMessageTemplate gets a reference to the given string and assigns it to the MessageTemplate field.
func (o *ProgramNotificationTemplate) SetMessageTemplate(v string) {
	o.MessageTemplate = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProgramNotificationTemplate) SetName(v string) {
	o.Name = &v
}

// GetNotificationRecipient returns the NotificationRecipient field value
func (o *ProgramNotificationTemplate) GetNotificationRecipient() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationRecipient
}

// GetNotificationRecipientOk returns a tuple with the NotificationRecipient field value
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetNotificationRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationRecipient, true
}

// SetNotificationRecipient sets field value
func (o *ProgramNotificationTemplate) SetNotificationRecipient(v string) {
	o.NotificationRecipient = v
}

// GetNotificationTrigger returns the NotificationTrigger field value
func (o *ProgramNotificationTemplate) GetNotificationTrigger() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationTrigger
}

// GetNotificationTriggerOk returns a tuple with the NotificationTrigger field value
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetNotificationTriggerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationTrigger, true
}

// SetNotificationTrigger sets field value
func (o *ProgramNotificationTemplate) SetNotificationTrigger(v string) {
	o.NotificationTrigger = v
}

// GetNotifyParentOrganisationUnitOnly returns the NotifyParentOrganisationUnitOnly field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetNotifyParentOrganisationUnitOnly() bool {
	if o == nil || IsNil(o.NotifyParentOrganisationUnitOnly) {
		var ret bool
		return ret
	}
	return *o.NotifyParentOrganisationUnitOnly
}

// GetNotifyParentOrganisationUnitOnlyOk returns a tuple with the NotifyParentOrganisationUnitOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetNotifyParentOrganisationUnitOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.NotifyParentOrganisationUnitOnly) {
		return nil, false
	}
	return o.NotifyParentOrganisationUnitOnly, true
}

// HasNotifyParentOrganisationUnitOnly returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasNotifyParentOrganisationUnitOnly() bool {
	if o != nil && !IsNil(o.NotifyParentOrganisationUnitOnly) {
		return true
	}

	return false
}

// SetNotifyParentOrganisationUnitOnly gets a reference to the given bool and assigns it to the NotifyParentOrganisationUnitOnly field.
func (o *ProgramNotificationTemplate) SetNotifyParentOrganisationUnitOnly(v bool) {
	o.NotifyParentOrganisationUnitOnly = &v
}

// GetNotifyUsersInHierarchyOnly returns the NotifyUsersInHierarchyOnly field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetNotifyUsersInHierarchyOnly() bool {
	if o == nil || IsNil(o.NotifyUsersInHierarchyOnly) {
		var ret bool
		return ret
	}
	return *o.NotifyUsersInHierarchyOnly
}

// GetNotifyUsersInHierarchyOnlyOk returns a tuple with the NotifyUsersInHierarchyOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetNotifyUsersInHierarchyOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.NotifyUsersInHierarchyOnly) {
		return nil, false
	}
	return o.NotifyUsersInHierarchyOnly, true
}

// HasNotifyUsersInHierarchyOnly returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasNotifyUsersInHierarchyOnly() bool {
	if o != nil && !IsNil(o.NotifyUsersInHierarchyOnly) {
		return true
	}

	return false
}

// SetNotifyUsersInHierarchyOnly gets a reference to the given bool and assigns it to the NotifyUsersInHierarchyOnly field.
func (o *ProgramNotificationTemplate) SetNotifyUsersInHierarchyOnly(v bool) {
	o.NotifyUsersInHierarchyOnly = &v
}

// GetPublicAccess returns the PublicAccess field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetPublicAccess() string {
	if o == nil || IsNil(o.PublicAccess) {
		var ret string
		return ret
	}
	return *o.PublicAccess
}

// GetPublicAccessOk returns a tuple with the PublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetPublicAccessOk() (*string, bool) {
	if o == nil || IsNil(o.PublicAccess) {
		return nil, false
	}
	return o.PublicAccess, true
}

// HasPublicAccess returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasPublicAccess() bool {
	if o != nil && !IsNil(o.PublicAccess) {
		return true
	}

	return false
}

// SetPublicAccess gets a reference to the given string and assigns it to the PublicAccess field.
func (o *ProgramNotificationTemplate) SetPublicAccess(v string) {
	o.PublicAccess = &v
}

// GetRecipientDataElement returns the RecipientDataElement field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetRecipientDataElement() DataDimensionItemDataElement {
	if o == nil || IsNil(o.RecipientDataElement) {
		var ret DataDimensionItemDataElement
		return ret
	}
	return *o.RecipientDataElement
}

// GetRecipientDataElementOk returns a tuple with the RecipientDataElement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetRecipientDataElementOk() (*DataDimensionItemDataElement, bool) {
	if o == nil || IsNil(o.RecipientDataElement) {
		return nil, false
	}
	return o.RecipientDataElement, true
}

// HasRecipientDataElement returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasRecipientDataElement() bool {
	if o != nil && !IsNil(o.RecipientDataElement) {
		return true
	}

	return false
}

// SetRecipientDataElement gets a reference to the given DataDimensionItemDataElement and assigns it to the RecipientDataElement field.
func (o *ProgramNotificationTemplate) SetRecipientDataElement(v DataDimensionItemDataElement) {
	o.RecipientDataElement = &v
}

// GetRecipientProgramAttribute returns the RecipientProgramAttribute field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetRecipientProgramAttribute() EventVisualizationAttributeValueDimension {
	if o == nil || IsNil(o.RecipientProgramAttribute) {
		var ret EventVisualizationAttributeValueDimension
		return ret
	}
	return *o.RecipientProgramAttribute
}

// GetRecipientProgramAttributeOk returns a tuple with the RecipientProgramAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetRecipientProgramAttributeOk() (*EventVisualizationAttributeValueDimension, bool) {
	if o == nil || IsNil(o.RecipientProgramAttribute) {
		return nil, false
	}
	return o.RecipientProgramAttribute, true
}

// HasRecipientProgramAttribute returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasRecipientProgramAttribute() bool {
	if o != nil && !IsNil(o.RecipientProgramAttribute) {
		return true
	}

	return false
}

// SetRecipientProgramAttribute gets a reference to the given EventVisualizationAttributeValueDimension and assigns it to the RecipientProgramAttribute field.
func (o *ProgramNotificationTemplate) SetRecipientProgramAttribute(v EventVisualizationAttributeValueDimension) {
	o.RecipientProgramAttribute = &v
}

// GetRecipientUserGroup returns the RecipientUserGroup field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetRecipientUserGroup() ConfigurationFeedbackRecipients {
	if o == nil || IsNil(o.RecipientUserGroup) {
		var ret ConfigurationFeedbackRecipients
		return ret
	}
	return *o.RecipientUserGroup
}

// GetRecipientUserGroupOk returns a tuple with the RecipientUserGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetRecipientUserGroupOk() (*ConfigurationFeedbackRecipients, bool) {
	if o == nil || IsNil(o.RecipientUserGroup) {
		return nil, false
	}
	return o.RecipientUserGroup, true
}

// HasRecipientUserGroup returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasRecipientUserGroup() bool {
	if o != nil && !IsNil(o.RecipientUserGroup) {
		return true
	}

	return false
}

// SetRecipientUserGroup gets a reference to the given ConfigurationFeedbackRecipients and assigns it to the RecipientUserGroup field.
func (o *ProgramNotificationTemplate) SetRecipientUserGroup(v ConfigurationFeedbackRecipients) {
	o.RecipientUserGroup = &v
}

// GetRelativeScheduledDays returns the RelativeScheduledDays field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetRelativeScheduledDays() int32 {
	if o == nil || IsNil(o.RelativeScheduledDays) {
		var ret int32
		return ret
	}
	return *o.RelativeScheduledDays
}

// GetRelativeScheduledDaysOk returns a tuple with the RelativeScheduledDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetRelativeScheduledDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.RelativeScheduledDays) {
		return nil, false
	}
	return o.RelativeScheduledDays, true
}

// HasRelativeScheduledDays returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasRelativeScheduledDays() bool {
	if o != nil && !IsNil(o.RelativeScheduledDays) {
		return true
	}

	return false
}

// SetRelativeScheduledDays gets a reference to the given int32 and assigns it to the RelativeScheduledDays field.
func (o *ProgramNotificationTemplate) SetRelativeScheduledDays(v int32) {
	o.RelativeScheduledDays = &v
}

// GetSendRepeatable returns the SendRepeatable field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetSendRepeatable() bool {
	if o == nil || IsNil(o.SendRepeatable) {
		var ret bool
		return ret
	}
	return *o.SendRepeatable
}

// GetSendRepeatableOk returns a tuple with the SendRepeatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetSendRepeatableOk() (*bool, bool) {
	if o == nil || IsNil(o.SendRepeatable) {
		return nil, false
	}
	return o.SendRepeatable, true
}

// HasSendRepeatable returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasSendRepeatable() bool {
	if o != nil && !IsNil(o.SendRepeatable) {
		return true
	}

	return false
}

// SetSendRepeatable gets a reference to the given bool and assigns it to the SendRepeatable field.
func (o *ProgramNotificationTemplate) SetSendRepeatable(v bool) {
	o.SendRepeatable = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetSharing() Sharing {
	if o == nil || IsNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetSharingOk() (*Sharing, bool) {
	if o == nil || IsNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasSharing() bool {
	if o != nil && !IsNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ProgramNotificationTemplate) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetSubjectTemplate returns the SubjectTemplate field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetSubjectTemplate() string {
	if o == nil || IsNil(o.SubjectTemplate) {
		var ret string
		return ret
	}
	return *o.SubjectTemplate
}

// GetSubjectTemplateOk returns a tuple with the SubjectTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetSubjectTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.SubjectTemplate) {
		return nil, false
	}
	return o.SubjectTemplate, true
}

// HasSubjectTemplate returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasSubjectTemplate() bool {
	if o != nil && !IsNil(o.SubjectTemplate) {
		return true
	}

	return false
}

// SetSubjectTemplate gets a reference to the given string and assigns it to the SubjectTemplate field.
func (o *ProgramNotificationTemplate) SetSubjectTemplate(v string) {
	o.SubjectTemplate = &v
}

// GetTranslations returns the Translations field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetTranslations() []Translation {
	if o == nil || IsNil(o.Translations) {
		var ret []Translation
		return ret
	}
	return o.Translations
}

// GetTranslationsOk returns a tuple with the Translations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetTranslationsOk() ([]Translation, bool) {
	if o == nil || IsNil(o.Translations) {
		return nil, false
	}
	return o.Translations, true
}

// HasTranslations returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasTranslations() bool {
	if o != nil && !IsNil(o.Translations) {
		return true
	}

	return false
}

// SetTranslations gets a reference to the given []Translation and assigns it to the Translations field.
func (o *ProgramNotificationTemplate) SetTranslations(v []Translation) {
	o.Translations = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetUser() AggregateDataExchangeCreatedBy {
	if o == nil || IsNil(o.User) {
		var ret AggregateDataExchangeCreatedBy
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetUserOk() (*AggregateDataExchangeCreatedBy, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given AggregateDataExchangeCreatedBy and assigns it to the User field.
func (o *ProgramNotificationTemplate) SetUser(v AggregateDataExchangeCreatedBy) {
	o.User = &v
}

// GetUserAccesses returns the UserAccesses field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetUserAccesses() []LegacyUserAccess {
	if o == nil || IsNil(o.UserAccesses) {
		var ret []LegacyUserAccess
		return ret
	}
	return o.UserAccesses
}

// GetUserAccessesOk returns a tuple with the UserAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetUserAccessesOk() ([]LegacyUserAccess, bool) {
	if o == nil || IsNil(o.UserAccesses) {
		return nil, false
	}
	return o.UserAccesses, true
}

// HasUserAccesses returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasUserAccesses() bool {
	if o != nil && !IsNil(o.UserAccesses) {
		return true
	}

	return false
}

// SetUserAccesses gets a reference to the given []LegacyUserAccess and assigns it to the UserAccesses field.
func (o *ProgramNotificationTemplate) SetUserAccesses(v []LegacyUserAccess) {
	o.UserAccesses = v
}

// GetUserGroupAccesses returns the UserGroupAccesses field value if set, zero value otherwise.
func (o *ProgramNotificationTemplate) GetUserGroupAccesses() []LegacyUserGroupAccess {
	if o == nil || IsNil(o.UserGroupAccesses) {
		var ret []LegacyUserGroupAccess
		return ret
	}
	return o.UserGroupAccesses
}

// GetUserGroupAccessesOk returns a tuple with the UserGroupAccesses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgramNotificationTemplate) GetUserGroupAccessesOk() ([]LegacyUserGroupAccess, bool) {
	if o == nil || IsNil(o.UserGroupAccesses) {
		return nil, false
	}
	return o.UserGroupAccesses, true
}

// HasUserGroupAccesses returns a boolean if a field has been set.
func (o *ProgramNotificationTemplate) HasUserGroupAccesses() bool {
	if o != nil && !IsNil(o.UserGroupAccesses) {
		return true
	}

	return false
}

// SetUserGroupAccesses gets a reference to the given []LegacyUserGroupAccess and assigns it to the UserGroupAccesses field.
func (o *ProgramNotificationTemplate) SetUserGroupAccesses(v []LegacyUserGroupAccess) {
	o.UserGroupAccesses = v
}

func (o ProgramNotificationTemplate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgramNotificationTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.AttributeValues) {
		toSerialize["attributeValues"] = o.AttributeValues
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.DeliveryChannels) {
		toSerialize["deliveryChannels"] = o.DeliveryChannels
	}
	if !IsNil(o.DisplayMessageTemplate) {
		toSerialize["displayMessageTemplate"] = o.DisplayMessageTemplate
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.DisplaySubjectTemplate) {
		toSerialize["displaySubjectTemplate"] = o.DisplaySubjectTemplate
	}
	if !IsNil(o.ExternalAccess) {
		toSerialize["externalAccess"] = o.ExternalAccess
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Favorites) {
		toSerialize["favorites"] = o.Favorites
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.MessageTemplate) {
		toSerialize["messageTemplate"] = o.MessageTemplate
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["notificationRecipient"] = o.NotificationRecipient
	toSerialize["notificationTrigger"] = o.NotificationTrigger
	if !IsNil(o.NotifyParentOrganisationUnitOnly) {
		toSerialize["notifyParentOrganisationUnitOnly"] = o.NotifyParentOrganisationUnitOnly
	}
	if !IsNil(o.NotifyUsersInHierarchyOnly) {
		toSerialize["notifyUsersInHierarchyOnly"] = o.NotifyUsersInHierarchyOnly
	}
	if !IsNil(o.PublicAccess) {
		toSerialize["publicAccess"] = o.PublicAccess
	}
	if !IsNil(o.RecipientDataElement) {
		toSerialize["recipientDataElement"] = o.RecipientDataElement
	}
	if !IsNil(o.RecipientProgramAttribute) {
		toSerialize["recipientProgramAttribute"] = o.RecipientProgramAttribute
	}
	if !IsNil(o.RecipientUserGroup) {
		toSerialize["recipientUserGroup"] = o.RecipientUserGroup
	}
	if !IsNil(o.RelativeScheduledDays) {
		toSerialize["relativeScheduledDays"] = o.RelativeScheduledDays
	}
	if !IsNil(o.SendRepeatable) {
		toSerialize["sendRepeatable"] = o.SendRepeatable
	}
	if !IsNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !IsNil(o.SubjectTemplate) {
		toSerialize["subjectTemplate"] = o.SubjectTemplate
	}
	if !IsNil(o.Translations) {
		toSerialize["translations"] = o.Translations
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserAccesses) {
		toSerialize["userAccesses"] = o.UserAccesses
	}
	if !IsNil(o.UserGroupAccesses) {
		toSerialize["userGroupAccesses"] = o.UserGroupAccesses
	}
	return toSerialize, nil
}

func (o *ProgramNotificationTemplate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"notificationRecipient",
		"notificationTrigger",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProgramNotificationTemplate := _ProgramNotificationTemplate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProgramNotificationTemplate)

	if err != nil {
		return err
	}

	*o = ProgramNotificationTemplate(varProgramNotificationTemplate)

	return err
}

type NullableProgramNotificationTemplate struct {
	value *ProgramNotificationTemplate
	isSet bool
}

func (v NullableProgramNotificationTemplate) Get() *ProgramNotificationTemplate {
	return v.value
}

func (v *NullableProgramNotificationTemplate) Set(val *ProgramNotificationTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableProgramNotificationTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableProgramNotificationTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgramNotificationTemplate(val *ProgramNotificationTemplate) *NullableProgramNotificationTemplate {
	return &NullableProgramNotificationTemplate{value: val, isSet: true}
}

func (v NullableProgramNotificationTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgramNotificationTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
