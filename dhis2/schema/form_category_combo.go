/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the FormCategoryCombo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormCategoryCombo{}

// FormCategoryCombo struct for FormCategoryCombo
type FormCategoryCombo struct {
	Categories []FormCategoryComboCategoriesInner `json:"categories,omitempty"`
	Id         *string                            `json:"id,omitempty"`
}

// NewFormCategoryCombo instantiates a new FormCategoryCombo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormCategoryCombo() *FormCategoryCombo {
	this := FormCategoryCombo{}
	return &this
}

// NewFormCategoryComboWithDefaults instantiates a new FormCategoryCombo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormCategoryComboWithDefaults() *FormCategoryCombo {
	this := FormCategoryCombo{}
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *FormCategoryCombo) GetCategories() []FormCategoryComboCategoriesInner {
	if o == nil || IsNil(o.Categories) {
		var ret []FormCategoryComboCategoriesInner
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormCategoryCombo) GetCategoriesOk() ([]FormCategoryComboCategoriesInner, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *FormCategoryCombo) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []FormCategoryComboCategoriesInner and assigns it to the Categories field.
func (o *FormCategoryCombo) SetCategories(v []FormCategoryComboCategoriesInner) {
	o.Categories = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FormCategoryCombo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormCategoryCombo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FormCategoryCombo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FormCategoryCombo) SetId(v string) {
	o.Id = &v
}

func (o FormCategoryCombo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormCategoryCombo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableFormCategoryCombo struct {
	value *FormCategoryCombo
	isSet bool
}

func (v NullableFormCategoryCombo) Get() *FormCategoryCombo {
	return v.value
}

func (v *NullableFormCategoryCombo) Set(val *FormCategoryCombo) {
	v.value = val
	v.isSet = true
}

func (v NullableFormCategoryCombo) IsSet() bool {
	return v.isSet
}

func (v *NullableFormCategoryCombo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormCategoryCombo(val *FormCategoryCombo) *NullableFormCategoryCombo {
	return &NullableFormCategoryCombo{value: val, isSet: true}
}

func (v NullableFormCategoryCombo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormCategoryCombo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
