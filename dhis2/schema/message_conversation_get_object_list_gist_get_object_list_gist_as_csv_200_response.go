/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response - struct for MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response
type MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response struct {
	MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfMessageConversation                                                 *[]MessageConversation
}

// MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response
func MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response(v *MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response {
	return MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response{
		MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []MessageConversationAsMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []MessageConversation wrapped in MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfMessageConversationAsMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response(v *[]MessageConversation) MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response {
	return MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfMessageConversation: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonMessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonMessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfMessageConversation
	err = newStrictDecoder(data).Decode(&dst.ArrayOfMessageConversation)
	if err == nil {
		jsonArrayOfMessageConversation, _ := json.Marshal(dst.ArrayOfMessageConversation)
		if string(jsonArrayOfMessageConversation) == "{}" { // empty struct
			dst.ArrayOfMessageConversation = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfMessageConversation = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfMessageConversation = nil

		return fmt.Errorf("data matches more than one schema in oneOf(MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfMessageConversation != nil {
		return json.Marshal(&src.ArrayOfMessageConversation)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.MessageConversationGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfMessageConversation != nil {
		return obj.ArrayOfMessageConversation
	}

	// all schemas are nil
	return nil
}

type NullableMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) Get() *MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response(val *MessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) *NullableMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageConversationGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
