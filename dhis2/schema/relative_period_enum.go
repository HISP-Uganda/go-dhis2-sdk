/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
	"fmt"
)

// RelativePeriodEnum the model 'RelativePeriodEnum'
type RelativePeriodEnum string

// List of RelativePeriodEnum
const (
	RELATIVEPERIODENUM_TODAY                   RelativePeriodEnum = "TODAY"
	RELATIVEPERIODENUM_YESTERDAY               RelativePeriodEnum = "YESTERDAY"
	RELATIVEPERIODENUM_LAST_3_DAYS             RelativePeriodEnum = "LAST_3_DAYS"
	RELATIVEPERIODENUM_LAST_7_DAYS             RelativePeriodEnum = "LAST_7_DAYS"
	RELATIVEPERIODENUM_LAST_14_DAYS            RelativePeriodEnum = "LAST_14_DAYS"
	RELATIVEPERIODENUM_LAST_30_DAYS            RelativePeriodEnum = "LAST_30_DAYS"
	RELATIVEPERIODENUM_LAST_60_DAYS            RelativePeriodEnum = "LAST_60_DAYS"
	RELATIVEPERIODENUM_LAST_90_DAYS            RelativePeriodEnum = "LAST_90_DAYS"
	RELATIVEPERIODENUM_LAST_180_DAYS           RelativePeriodEnum = "LAST_180_DAYS"
	RELATIVEPERIODENUM_THIS_MONTH              RelativePeriodEnum = "THIS_MONTH"
	RELATIVEPERIODENUM_LAST_MONTH              RelativePeriodEnum = "LAST_MONTH"
	RELATIVEPERIODENUM_THIS_BIMONTH            RelativePeriodEnum = "THIS_BIMONTH"
	RELATIVEPERIODENUM_LAST_BIMONTH            RelativePeriodEnum = "LAST_BIMONTH"
	RELATIVEPERIODENUM_THIS_QUARTER            RelativePeriodEnum = "THIS_QUARTER"
	RELATIVEPERIODENUM_LAST_QUARTER            RelativePeriodEnum = "LAST_QUARTER"
	RELATIVEPERIODENUM_THIS_SIX_MONTH          RelativePeriodEnum = "THIS_SIX_MONTH"
	RELATIVEPERIODENUM_LAST_SIX_MONTH          RelativePeriodEnum = "LAST_SIX_MONTH"
	RELATIVEPERIODENUM_WEEKS_THIS_YEAR         RelativePeriodEnum = "WEEKS_THIS_YEAR"
	RELATIVEPERIODENUM_MONTHS_THIS_YEAR        RelativePeriodEnum = "MONTHS_THIS_YEAR"
	RELATIVEPERIODENUM_BIMONTHS_THIS_YEAR      RelativePeriodEnum = "BIMONTHS_THIS_YEAR"
	RELATIVEPERIODENUM_QUARTERS_THIS_YEAR      RelativePeriodEnum = "QUARTERS_THIS_YEAR"
	RELATIVEPERIODENUM_THIS_YEAR               RelativePeriodEnum = "THIS_YEAR"
	RELATIVEPERIODENUM_MONTHS_LAST_YEAR        RelativePeriodEnum = "MONTHS_LAST_YEAR"
	RELATIVEPERIODENUM_QUARTERS_LAST_YEAR      RelativePeriodEnum = "QUARTERS_LAST_YEAR"
	RELATIVEPERIODENUM_LAST_YEAR               RelativePeriodEnum = "LAST_YEAR"
	RELATIVEPERIODENUM_LAST_5_YEARS            RelativePeriodEnum = "LAST_5_YEARS"
	RELATIVEPERIODENUM_LAST_10_YEARS           RelativePeriodEnum = "LAST_10_YEARS"
	RELATIVEPERIODENUM_LAST_12_MONTHS          RelativePeriodEnum = "LAST_12_MONTHS"
	RELATIVEPERIODENUM_LAST_6_MONTHS           RelativePeriodEnum = "LAST_6_MONTHS"
	RELATIVEPERIODENUM_LAST_3_MONTHS           RelativePeriodEnum = "LAST_3_MONTHS"
	RELATIVEPERIODENUM_LAST_6_BIMONTHS         RelativePeriodEnum = "LAST_6_BIMONTHS"
	RELATIVEPERIODENUM_LAST_4_QUARTERS         RelativePeriodEnum = "LAST_4_QUARTERS"
	RELATIVEPERIODENUM_LAST_2_SIXMONTHS        RelativePeriodEnum = "LAST_2_SIXMONTHS"
	RELATIVEPERIODENUM_THIS_FINANCIAL_YEAR     RelativePeriodEnum = "THIS_FINANCIAL_YEAR"
	RELATIVEPERIODENUM_LAST_FINANCIAL_YEAR     RelativePeriodEnum = "LAST_FINANCIAL_YEAR"
	RELATIVEPERIODENUM_LAST_5_FINANCIAL_YEARS  RelativePeriodEnum = "LAST_5_FINANCIAL_YEARS"
	RELATIVEPERIODENUM_LAST_10_FINANCIAL_YEARS RelativePeriodEnum = "LAST_10_FINANCIAL_YEARS"
	RELATIVEPERIODENUM_THIS_WEEK               RelativePeriodEnum = "THIS_WEEK"
	RELATIVEPERIODENUM_LAST_WEEK               RelativePeriodEnum = "LAST_WEEK"
	RELATIVEPERIODENUM_THIS_BIWEEK             RelativePeriodEnum = "THIS_BIWEEK"
	RELATIVEPERIODENUM_LAST_BIWEEK             RelativePeriodEnum = "LAST_BIWEEK"
	RELATIVEPERIODENUM_LAST_4_WEEKS            RelativePeriodEnum = "LAST_4_WEEKS"
	RELATIVEPERIODENUM_LAST_4_BIWEEKS          RelativePeriodEnum = "LAST_4_BIWEEKS"
	RELATIVEPERIODENUM_LAST_12_WEEKS           RelativePeriodEnum = "LAST_12_WEEKS"
	RELATIVEPERIODENUM_LAST_52_WEEKS           RelativePeriodEnum = "LAST_52_WEEKS"
)

// All allowed values of RelativePeriodEnum enum
var AllowedRelativePeriodEnumEnumValues = []RelativePeriodEnum{
	"TODAY",
	"YESTERDAY",
	"LAST_3_DAYS",
	"LAST_7_DAYS",
	"LAST_14_DAYS",
	"LAST_30_DAYS",
	"LAST_60_DAYS",
	"LAST_90_DAYS",
	"LAST_180_DAYS",
	"THIS_MONTH",
	"LAST_MONTH",
	"THIS_BIMONTH",
	"LAST_BIMONTH",
	"THIS_QUARTER",
	"LAST_QUARTER",
	"THIS_SIX_MONTH",
	"LAST_SIX_MONTH",
	"WEEKS_THIS_YEAR",
	"MONTHS_THIS_YEAR",
	"BIMONTHS_THIS_YEAR",
	"QUARTERS_THIS_YEAR",
	"THIS_YEAR",
	"MONTHS_LAST_YEAR",
	"QUARTERS_LAST_YEAR",
	"LAST_YEAR",
	"LAST_5_YEARS",
	"LAST_10_YEARS",
	"LAST_12_MONTHS",
	"LAST_6_MONTHS",
	"LAST_3_MONTHS",
	"LAST_6_BIMONTHS",
	"LAST_4_QUARTERS",
	"LAST_2_SIXMONTHS",
	"THIS_FINANCIAL_YEAR",
	"LAST_FINANCIAL_YEAR",
	"LAST_5_FINANCIAL_YEARS",
	"LAST_10_FINANCIAL_YEARS",
	"THIS_WEEK",
	"LAST_WEEK",
	"THIS_BIWEEK",
	"LAST_BIWEEK",
	"LAST_4_WEEKS",
	"LAST_4_BIWEEKS",
	"LAST_12_WEEKS",
	"LAST_52_WEEKS",
}

func (v *RelativePeriodEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RelativePeriodEnum(value)
	for _, existing := range AllowedRelativePeriodEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RelativePeriodEnum", value)
}

// NewRelativePeriodEnumFromValue returns a pointer to a valid RelativePeriodEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRelativePeriodEnumFromValue(v string) (*RelativePeriodEnum, error) {
	ev := RelativePeriodEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RelativePeriodEnum: valid values are %v", v, AllowedRelativePeriodEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RelativePeriodEnum) IsValid() bool {
	for _, existing := range AllowedRelativePeriodEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RelativePeriodEnum value
func (v RelativePeriodEnum) Ptr() *RelativePeriodEnum {
	return &v
}

type NullableRelativePeriodEnum struct {
	value *RelativePeriodEnum
	isSet bool
}

func (v NullableRelativePeriodEnum) Get() *RelativePeriodEnum {
	return v.value
}

func (v *NullableRelativePeriodEnum) Set(val *RelativePeriodEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableRelativePeriodEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableRelativePeriodEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelativePeriodEnum(val *RelativePeriodEnum) *NullableRelativePeriodEnum {
	return &NullableRelativePeriodEnum{value: val, isSet: true}
}

func (v NullableRelativePeriodEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelativePeriodEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
