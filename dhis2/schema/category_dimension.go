/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the CategoryDimension type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CategoryDimension{}

// CategoryDimension struct for CategoryDimension
type CategoryDimension struct {
	Category        *CategoryComboCategoriesInner  `json:"category,omitempty"`
	CategoryOptions []CategoryCategoryOptionsInner `json:"categoryOptions,omitempty"`
}

// NewCategoryDimension instantiates a new CategoryDimension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryDimension() *CategoryDimension {
	this := CategoryDimension{}
	return &this
}

// NewCategoryDimensionWithDefaults instantiates a new CategoryDimension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryDimensionWithDefaults() *CategoryDimension {
	this := CategoryDimension{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CategoryDimension) GetCategory() CategoryComboCategoriesInner {
	if o == nil || IsNil(o.Category) {
		var ret CategoryComboCategoriesInner
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDimension) GetCategoryOk() (*CategoryComboCategoriesInner, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CategoryDimension) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given CategoryComboCategoriesInner and assigns it to the Category field.
func (o *CategoryDimension) SetCategory(v CategoryComboCategoriesInner) {
	o.Category = &v
}

// GetCategoryOptions returns the CategoryOptions field value if set, zero value otherwise.
func (o *CategoryDimension) GetCategoryOptions() []CategoryCategoryOptionsInner {
	if o == nil || IsNil(o.CategoryOptions) {
		var ret []CategoryCategoryOptionsInner
		return ret
	}
	return o.CategoryOptions
}

// GetCategoryOptionsOk returns a tuple with the CategoryOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryDimension) GetCategoryOptionsOk() ([]CategoryCategoryOptionsInner, bool) {
	if o == nil || IsNil(o.CategoryOptions) {
		return nil, false
	}
	return o.CategoryOptions, true
}

// HasCategoryOptions returns a boolean if a field has been set.
func (o *CategoryDimension) HasCategoryOptions() bool {
	if o != nil && !IsNil(o.CategoryOptions) {
		return true
	}

	return false
}

// SetCategoryOptions gets a reference to the given []CategoryCategoryOptionsInner and assigns it to the CategoryOptions field.
func (o *CategoryDimension) SetCategoryOptions(v []CategoryCategoryOptionsInner) {
	o.CategoryOptions = v
}

func (o CategoryDimension) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CategoryDimension) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.CategoryOptions) {
		toSerialize["categoryOptions"] = o.CategoryOptions
	}
	return toSerialize, nil
}

type NullableCategoryDimension struct {
	value *CategoryDimension
	isSet bool
}

func (v NullableCategoryDimension) Get() *CategoryDimension {
	return v.value
}

func (v *NullableCategoryDimension) Set(val *CategoryDimension) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryDimension) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryDimension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryDimension(val *CategoryDimension) *NullableCategoryDimension {
	return &NullableCategoryDimension{value: val, isSet: true}
}

func (v NullableCategoryDimension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryDimension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
