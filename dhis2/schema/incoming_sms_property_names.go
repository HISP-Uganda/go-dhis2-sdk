/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// IncomingSmsPropertyNames the model 'IncomingSmsPropertyNames'
type IncomingSmsPropertyNames string

// List of IncomingSmsPropertyNames
const (
	INCOMINGSMSPROPERTYNAMES_ACCESS           IncomingSmsPropertyNames = "access"
	INCOMINGSMSPROPERTYNAMES_ATTRIBUTE_VALUES IncomingSmsPropertyNames = "attributeValues"
	INCOMINGSMSPROPERTYNAMES_CODE             IncomingSmsPropertyNames = "code"
	INCOMINGSMSPROPERTYNAMES_CREATED          IncomingSmsPropertyNames = "created"
	INCOMINGSMSPROPERTYNAMES_CREATED_BY       IncomingSmsPropertyNames = "createdBy"
	INCOMINGSMSPROPERTYNAMES_DISPLAY_NAME     IncomingSmsPropertyNames = "displayName"
	INCOMINGSMSPROPERTYNAMES_FAVORITE         IncomingSmsPropertyNames = "favorite"
	INCOMINGSMSPROPERTYNAMES_FAVORITES        IncomingSmsPropertyNames = "favorites"
	INCOMINGSMSPROPERTYNAMES_GATEWAYID        IncomingSmsPropertyNames = "gatewayid"
	INCOMINGSMSPROPERTYNAMES_HREF             IncomingSmsPropertyNames = "href"
	INCOMINGSMSPROPERTYNAMES_ID               IncomingSmsPropertyNames = "id"
	INCOMINGSMSPROPERTYNAMES_LAST_UPDATED     IncomingSmsPropertyNames = "lastUpdated"
	INCOMINGSMSPROPERTYNAMES_LAST_UPDATED_BY  IncomingSmsPropertyNames = "lastUpdatedBy"
	INCOMINGSMSPROPERTYNAMES_NAME             IncomingSmsPropertyNames = "name"
	INCOMINGSMSPROPERTYNAMES_ORIGINATOR       IncomingSmsPropertyNames = "originator"
	INCOMINGSMSPROPERTYNAMES_RECEIVEDDATE     IncomingSmsPropertyNames = "receiveddate"
	INCOMINGSMSPROPERTYNAMES_SENTDATE         IncomingSmsPropertyNames = "sentdate"
	INCOMINGSMSPROPERTYNAMES_SHARING          IncomingSmsPropertyNames = "sharing"
	INCOMINGSMSPROPERTYNAMES_SMSENCODING      IncomingSmsPropertyNames = "smsencoding"
	INCOMINGSMSPROPERTYNAMES_SMSSTATUS        IncomingSmsPropertyNames = "smsstatus"
	INCOMINGSMSPROPERTYNAMES_TEXT             IncomingSmsPropertyNames = "text"
	INCOMINGSMSPROPERTYNAMES_TRANSLATIONS     IncomingSmsPropertyNames = "translations"
)

// All allowed values of IncomingSmsPropertyNames enum
var AllowedIncomingSmsPropertyNamesEnumValues = []IncomingSmsPropertyNames{
	"access",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"displayName",
	"favorite",
	"favorites",
	"gatewayid",
	"href",
	"id",
	"lastUpdated",
	"lastUpdatedBy",
	"name",
	"originator",
	"receiveddate",
	"sentdate",
	"sharing",
	"smsencoding",
	"smsstatus",
	"text",
	"translations",
}

func (v *IncomingSmsPropertyNames) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := IncomingSmsPropertyNames(value)
	for _, existing := range AllowedIncomingSmsPropertyNamesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid IncomingSmsPropertyNames", value)
}

// NewIncomingSmsPropertyNamesFromValue returns a pointer to a valid IncomingSmsPropertyNames
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIncomingSmsPropertyNamesFromValue(v string) (*IncomingSmsPropertyNames, error) {
	ev := IncomingSmsPropertyNames(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for IncomingSmsPropertyNames: valid values are %v", v, AllowedIncomingSmsPropertyNamesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IncomingSmsPropertyNames) IsValid() bool {
	for _, existing := range AllowedIncomingSmsPropertyNamesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to IncomingSmsPropertyNames value
func (v IncomingSmsPropertyNames) Ptr() *IncomingSmsPropertyNames {
	return &v
}

type NullableIncomingSmsPropertyNames struct {
	value *IncomingSmsPropertyNames
	isSet bool
}

func (v NullableIncomingSmsPropertyNames) Get() *IncomingSmsPropertyNames {
	return v.value
}

func (v *NullableIncomingSmsPropertyNames) Set(val *IncomingSmsPropertyNames) {
	v.value = val
	v.isSet = true
}

func (v NullableIncomingSmsPropertyNames) IsSet() bool {
	return v.isSet
}

func (v *NullableIncomingSmsPropertyNames) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIncomingSmsPropertyNames(val *IncomingSmsPropertyNames) *NullableIncomingSmsPropertyNames {
	return &NullableIncomingSmsPropertyNames{value: val, isSet: true}
}

func (v NullableIncomingSmsPropertyNames) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIncomingSmsPropertyNames) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
