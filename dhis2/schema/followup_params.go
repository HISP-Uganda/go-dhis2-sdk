/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the FollowupParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FollowupParams{}

// FollowupParams struct for FollowupParams
type FollowupParams struct {
	AttributeOptionComboId int32 `json:"attributeOptionComboId"`
	CategoryOptionComboId  int32 `json:"categoryOptionComboId"`
	DataElementId          int32 `json:"dataElementId"`
	Followup               *bool `json:"followup,omitempty"`
	OrganisationUnitId     int32 `json:"organisationUnitId"`
	PeriodId               int32 `json:"periodId"`
}

type _FollowupParams FollowupParams

// NewFollowupParams instantiates a new FollowupParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFollowupParams(attributeOptionComboId int32, categoryOptionComboId int32, dataElementId int32, organisationUnitId int32, periodId int32) *FollowupParams {
	this := FollowupParams{}
	this.AttributeOptionComboId = attributeOptionComboId
	this.CategoryOptionComboId = categoryOptionComboId
	this.DataElementId = dataElementId
	this.OrganisationUnitId = organisationUnitId
	this.PeriodId = periodId
	return &this
}

// NewFollowupParamsWithDefaults instantiates a new FollowupParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFollowupParamsWithDefaults() *FollowupParams {
	this := FollowupParams{}
	return &this
}

// GetAttributeOptionComboId returns the AttributeOptionComboId field value
func (o *FollowupParams) GetAttributeOptionComboId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AttributeOptionComboId
}

// GetAttributeOptionComboIdOk returns a tuple with the AttributeOptionComboId field value
// and a boolean to check if the value has been set.
func (o *FollowupParams) GetAttributeOptionComboIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeOptionComboId, true
}

// SetAttributeOptionComboId sets field value
func (o *FollowupParams) SetAttributeOptionComboId(v int32) {
	o.AttributeOptionComboId = v
}

// GetCategoryOptionComboId returns the CategoryOptionComboId field value
func (o *FollowupParams) GetCategoryOptionComboId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CategoryOptionComboId
}

// GetCategoryOptionComboIdOk returns a tuple with the CategoryOptionComboId field value
// and a boolean to check if the value has been set.
func (o *FollowupParams) GetCategoryOptionComboIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryOptionComboId, true
}

// SetCategoryOptionComboId sets field value
func (o *FollowupParams) SetCategoryOptionComboId(v int32) {
	o.CategoryOptionComboId = v
}

// GetDataElementId returns the DataElementId field value
func (o *FollowupParams) GetDataElementId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DataElementId
}

// GetDataElementIdOk returns a tuple with the DataElementId field value
// and a boolean to check if the value has been set.
func (o *FollowupParams) GetDataElementIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataElementId, true
}

// SetDataElementId sets field value
func (o *FollowupParams) SetDataElementId(v int32) {
	o.DataElementId = v
}

// GetFollowup returns the Followup field value if set, zero value otherwise.
func (o *FollowupParams) GetFollowup() bool {
	if o == nil || IsNil(o.Followup) {
		var ret bool
		return ret
	}
	return *o.Followup
}

// GetFollowupOk returns a tuple with the Followup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FollowupParams) GetFollowupOk() (*bool, bool) {
	if o == nil || IsNil(o.Followup) {
		return nil, false
	}
	return o.Followup, true
}

// HasFollowup returns a boolean if a field has been set.
func (o *FollowupParams) HasFollowup() bool {
	if o != nil && !IsNil(o.Followup) {
		return true
	}

	return false
}

// SetFollowup gets a reference to the given bool and assigns it to the Followup field.
func (o *FollowupParams) SetFollowup(v bool) {
	o.Followup = &v
}

// GetOrganisationUnitId returns the OrganisationUnitId field value
func (o *FollowupParams) GetOrganisationUnitId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OrganisationUnitId
}

// GetOrganisationUnitIdOk returns a tuple with the OrganisationUnitId field value
// and a boolean to check if the value has been set.
func (o *FollowupParams) GetOrganisationUnitIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganisationUnitId, true
}

// SetOrganisationUnitId sets field value
func (o *FollowupParams) SetOrganisationUnitId(v int32) {
	o.OrganisationUnitId = v
}

// GetPeriodId returns the PeriodId field value
func (o *FollowupParams) GetPeriodId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PeriodId
}

// GetPeriodIdOk returns a tuple with the PeriodId field value
// and a boolean to check if the value has been set.
func (o *FollowupParams) GetPeriodIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeriodId, true
}

// SetPeriodId sets field value
func (o *FollowupParams) SetPeriodId(v int32) {
	o.PeriodId = v
}

func (o FollowupParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FollowupParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributeOptionComboId"] = o.AttributeOptionComboId
	toSerialize["categoryOptionComboId"] = o.CategoryOptionComboId
	toSerialize["dataElementId"] = o.DataElementId
	if !IsNil(o.Followup) {
		toSerialize["followup"] = o.Followup
	}
	toSerialize["organisationUnitId"] = o.OrganisationUnitId
	toSerialize["periodId"] = o.PeriodId
	return toSerialize, nil
}

func (o *FollowupParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attributeOptionComboId",
		"categoryOptionComboId",
		"dataElementId",
		"organisationUnitId",
		"periodId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFollowupParams := _FollowupParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFollowupParams)

	if err != nil {
		return err
	}

	*o = FollowupParams(varFollowupParams)

	return err
}

type NullableFollowupParams struct {
	value *FollowupParams
	isSet bool
}

func (v NullableFollowupParams) Get() *FollowupParams {
	return v.value
}

func (v *NullableFollowupParams) Set(val *FollowupParams) {
	v.value = val
	v.isSet = true
}

func (v NullableFollowupParams) IsSet() bool {
	return v.isSet
}

func (v *NullableFollowupParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFollowupParams(val *FollowupParams) *NullableFollowupParams {
	return &NullableFollowupParams{value: val, isSet: true}
}

func (v NullableFollowupParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFollowupParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
