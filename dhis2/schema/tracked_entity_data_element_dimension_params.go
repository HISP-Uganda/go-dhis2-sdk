/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schema

import (
	"encoding/json"
)

// checks if the TrackedEntityDataElementDimensionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrackedEntityDataElementDimensionParams{}

// TrackedEntityDataElementDimensionParams struct for TrackedEntityDataElementDimensionParams
type TrackedEntityDataElementDimensionParams struct {
	DataElement  *DataElementParams  `json:"dataElement,omitempty"`
	Filter       *string             `json:"filter,omitempty"`
	LegendSet    *LegendSetParams    `json:"legendSet,omitempty"`
	ProgramStage *ProgramStageParams `json:"programStage,omitempty"`
}

// NewTrackedEntityDataElementDimensionParams instantiates a new TrackedEntityDataElementDimensionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrackedEntityDataElementDimensionParams() *TrackedEntityDataElementDimensionParams {
	this := TrackedEntityDataElementDimensionParams{}
	return &this
}

// NewTrackedEntityDataElementDimensionParamsWithDefaults instantiates a new TrackedEntityDataElementDimensionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrackedEntityDataElementDimensionParamsWithDefaults() *TrackedEntityDataElementDimensionParams {
	this := TrackedEntityDataElementDimensionParams{}
	return &this
}

// GetDataElement returns the DataElement field value if set, zero value otherwise.
func (o *TrackedEntityDataElementDimensionParams) GetDataElement() DataElementParams {
	if o == nil || IsNil(o.DataElement) {
		var ret DataElementParams
		return ret
	}
	return *o.DataElement
}

// GetDataElementOk returns a tuple with the DataElement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityDataElementDimensionParams) GetDataElementOk() (*DataElementParams, bool) {
	if o == nil || IsNil(o.DataElement) {
		return nil, false
	}
	return o.DataElement, true
}

// HasDataElement returns a boolean if a field has been set.
func (o *TrackedEntityDataElementDimensionParams) HasDataElement() bool {
	if o != nil && !IsNil(o.DataElement) {
		return true
	}

	return false
}

// SetDataElement gets a reference to the given DataElementParams and assigns it to the DataElement field.
func (o *TrackedEntityDataElementDimensionParams) SetDataElement(v DataElementParams) {
	o.DataElement = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *TrackedEntityDataElementDimensionParams) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityDataElementDimensionParams) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *TrackedEntityDataElementDimensionParams) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *TrackedEntityDataElementDimensionParams) SetFilter(v string) {
	o.Filter = &v
}

// GetLegendSet returns the LegendSet field value if set, zero value otherwise.
func (o *TrackedEntityDataElementDimensionParams) GetLegendSet() LegendSetParams {
	if o == nil || IsNil(o.LegendSet) {
		var ret LegendSetParams
		return ret
	}
	return *o.LegendSet
}

// GetLegendSetOk returns a tuple with the LegendSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityDataElementDimensionParams) GetLegendSetOk() (*LegendSetParams, bool) {
	if o == nil || IsNil(o.LegendSet) {
		return nil, false
	}
	return o.LegendSet, true
}

// HasLegendSet returns a boolean if a field has been set.
func (o *TrackedEntityDataElementDimensionParams) HasLegendSet() bool {
	if o != nil && !IsNil(o.LegendSet) {
		return true
	}

	return false
}

// SetLegendSet gets a reference to the given LegendSetParams and assigns it to the LegendSet field.
func (o *TrackedEntityDataElementDimensionParams) SetLegendSet(v LegendSetParams) {
	o.LegendSet = &v
}

// GetProgramStage returns the ProgramStage field value if set, zero value otherwise.
func (o *TrackedEntityDataElementDimensionParams) GetProgramStage() ProgramStageParams {
	if o == nil || IsNil(o.ProgramStage) {
		var ret ProgramStageParams
		return ret
	}
	return *o.ProgramStage
}

// GetProgramStageOk returns a tuple with the ProgramStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrackedEntityDataElementDimensionParams) GetProgramStageOk() (*ProgramStageParams, bool) {
	if o == nil || IsNil(o.ProgramStage) {
		return nil, false
	}
	return o.ProgramStage, true
}

// HasProgramStage returns a boolean if a field has been set.
func (o *TrackedEntityDataElementDimensionParams) HasProgramStage() bool {
	if o != nil && !IsNil(o.ProgramStage) {
		return true
	}

	return false
}

// SetProgramStage gets a reference to the given ProgramStageParams and assigns it to the ProgramStage field.
func (o *TrackedEntityDataElementDimensionParams) SetProgramStage(v ProgramStageParams) {
	o.ProgramStage = &v
}

func (o TrackedEntityDataElementDimensionParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrackedEntityDataElementDimensionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataElement) {
		toSerialize["dataElement"] = o.DataElement
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.LegendSet) {
		toSerialize["legendSet"] = o.LegendSet
	}
	if !IsNil(o.ProgramStage) {
		toSerialize["programStage"] = o.ProgramStage
	}
	return toSerialize, nil
}

type NullableTrackedEntityDataElementDimensionParams struct {
	value *TrackedEntityDataElementDimensionParams
	isSet bool
}

func (v NullableTrackedEntityDataElementDimensionParams) Get() *TrackedEntityDataElementDimensionParams {
	return v.value
}

func (v *NullableTrackedEntityDataElementDimensionParams) Set(val *TrackedEntityDataElementDimensionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTrackedEntityDataElementDimensionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTrackedEntityDataElementDimensionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrackedEntityDataElementDimensionParams(val *TrackedEntityDataElementDimensionParams) *NullableTrackedEntityDataElementDimensionParams {
	return &NullableTrackedEntityDataElementDimensionParams{value: val, isSet: true}
}

func (v NullableTrackedEntityDataElementDimensionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrackedEntityDataElementDimensionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
