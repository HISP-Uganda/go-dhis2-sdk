/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.40
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// PropertyNamesValidationRule the model 'PropertyNamesValidationRule'
type PropertyNamesValidationRule string

// List of PropertyNames_ValidationRule
const (
	PROPERTYNAMESVALIDATIONRULE_ACCESS                                  PropertyNamesValidationRule = "access"
	PROPERTYNAMESVALIDATIONRULE_AGGREGATE_EXPORT_ATTRIBUTE_OPTION_COMBO PropertyNamesValidationRule = "aggregateExportAttributeOptionCombo"
	PROPERTYNAMESVALIDATIONRULE_AGGREGATE_EXPORT_CATEGORY_OPTION_COMBO  PropertyNamesValidationRule = "aggregateExportCategoryOptionCombo"
	PROPERTYNAMESVALIDATIONRULE_AGGREGATION_TYPE                        PropertyNamesValidationRule = "aggregationType"
	PROPERTYNAMESVALIDATIONRULE_ATTRIBUTE_VALUES                        PropertyNamesValidationRule = "attributeValues"
	PROPERTYNAMESVALIDATIONRULE_CODE                                    PropertyNamesValidationRule = "code"
	PROPERTYNAMESVALIDATIONRULE_CREATED                                 PropertyNamesValidationRule = "created"
	PROPERTYNAMESVALIDATIONRULE_CREATED_BY                              PropertyNamesValidationRule = "createdBy"
	PROPERTYNAMESVALIDATIONRULE_DESCRIPTION                             PropertyNamesValidationRule = "description"
	PROPERTYNAMESVALIDATIONRULE_DIMENSION_ITEM                          PropertyNamesValidationRule = "dimensionItem"
	PROPERTYNAMESVALIDATIONRULE_DIMENSION_ITEM_TYPE                     PropertyNamesValidationRule = "dimensionItemType"
	PROPERTYNAMESVALIDATIONRULE_DISPLAY_DESCRIPTION                     PropertyNamesValidationRule = "displayDescription"
	PROPERTYNAMESVALIDATIONRULE_DISPLAY_FORM_NAME                       PropertyNamesValidationRule = "displayFormName"
	PROPERTYNAMESVALIDATIONRULE_DISPLAY_INSTRUCTION                     PropertyNamesValidationRule = "displayInstruction"
	PROPERTYNAMESVALIDATIONRULE_DISPLAY_NAME                            PropertyNamesValidationRule = "displayName"
	PROPERTYNAMESVALIDATIONRULE_DISPLAY_SHORT_NAME                      PropertyNamesValidationRule = "displayShortName"
	PROPERTYNAMESVALIDATIONRULE_EXTERNAL_ACCESS                         PropertyNamesValidationRule = "externalAccess"
	PROPERTYNAMESVALIDATIONRULE_FAVORITE                                PropertyNamesValidationRule = "favorite"
	PROPERTYNAMESVALIDATIONRULE_FAVORITES                               PropertyNamesValidationRule = "favorites"
	PROPERTYNAMESVALIDATIONRULE_FORM_NAME                               PropertyNamesValidationRule = "formName"
	PROPERTYNAMESVALIDATIONRULE_HREF                                    PropertyNamesValidationRule = "href"
	PROPERTYNAMESVALIDATIONRULE_ID                                      PropertyNamesValidationRule = "id"
	PROPERTYNAMESVALIDATIONRULE_IMPORTANCE                              PropertyNamesValidationRule = "importance"
	PROPERTYNAMESVALIDATIONRULE_INSTRUCTION                             PropertyNamesValidationRule = "instruction"
	PROPERTYNAMESVALIDATIONRULE_LAST_UPDATED                            PropertyNamesValidationRule = "lastUpdated"
	PROPERTYNAMESVALIDATIONRULE_LAST_UPDATED_BY                         PropertyNamesValidationRule = "lastUpdatedBy"
	PROPERTYNAMESVALIDATIONRULE_LEFT_SIDE                               PropertyNamesValidationRule = "leftSide"
	PROPERTYNAMESVALIDATIONRULE_LEGEND_SET                              PropertyNamesValidationRule = "legendSet"
	PROPERTYNAMESVALIDATIONRULE_LEGEND_SETS                             PropertyNamesValidationRule = "legendSets"
	PROPERTYNAMESVALIDATIONRULE_NAME                                    PropertyNamesValidationRule = "name"
	PROPERTYNAMESVALIDATIONRULE_NOTIFICATION_TEMPLATES                  PropertyNamesValidationRule = "notificationTemplates"
	PROPERTYNAMESVALIDATIONRULE_OPERATOR                                PropertyNamesValidationRule = "operator"
	PROPERTYNAMESVALIDATIONRULE_ORGANISATION_UNIT_LEVELS                PropertyNamesValidationRule = "organisationUnitLevels"
	PROPERTYNAMESVALIDATIONRULE_PERIOD_TYPE                             PropertyNamesValidationRule = "periodType"
	PROPERTYNAMESVALIDATIONRULE_PUBLIC_ACCESS                           PropertyNamesValidationRule = "publicAccess"
	PROPERTYNAMESVALIDATIONRULE_QUERY_MODS                              PropertyNamesValidationRule = "queryMods"
	PROPERTYNAMESVALIDATIONRULE_RIGHT_SIDE                              PropertyNamesValidationRule = "rightSide"
	PROPERTYNAMESVALIDATIONRULE_SHARING                                 PropertyNamesValidationRule = "sharing"
	PROPERTYNAMESVALIDATIONRULE_SHORT_NAME                              PropertyNamesValidationRule = "shortName"
	PROPERTYNAMESVALIDATIONRULE_SKIP_FORM_VALIDATION                    PropertyNamesValidationRule = "skipFormValidation"
	PROPERTYNAMESVALIDATIONRULE_TRANSLATIONS                            PropertyNamesValidationRule = "translations"
	PROPERTYNAMESVALIDATIONRULE_USER                                    PropertyNamesValidationRule = "user"
	PROPERTYNAMESVALIDATIONRULE_USER_ACCESSES                           PropertyNamesValidationRule = "userAccesses"
	PROPERTYNAMESVALIDATIONRULE_USER_GROUP_ACCESSES                     PropertyNamesValidationRule = "userGroupAccesses"
	PROPERTYNAMESVALIDATIONRULE_VALIDATION_RULE_GROUPS                  PropertyNamesValidationRule = "validationRuleGroups"
)

// All allowed values of PropertyNamesValidationRule enum
var AllowedPropertyNamesValidationRuleEnumValues = []PropertyNamesValidationRule{
	"access",
	"aggregateExportAttributeOptionCombo",
	"aggregateExportCategoryOptionCombo",
	"aggregationType",
	"attributeValues",
	"code",
	"created",
	"createdBy",
	"description",
	"dimensionItem",
	"dimensionItemType",
	"displayDescription",
	"displayFormName",
	"displayInstruction",
	"displayName",
	"displayShortName",
	"externalAccess",
	"favorite",
	"favorites",
	"formName",
	"href",
	"id",
	"importance",
	"instruction",
	"lastUpdated",
	"lastUpdatedBy",
	"leftSide",
	"legendSet",
	"legendSets",
	"name",
	"notificationTemplates",
	"operator",
	"organisationUnitLevels",
	"periodType",
	"publicAccess",
	"queryMods",
	"rightSide",
	"sharing",
	"shortName",
	"skipFormValidation",
	"translations",
	"user",
	"userAccesses",
	"userGroupAccesses",
	"validationRuleGroups",
}

func (v *PropertyNamesValidationRule) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PropertyNamesValidationRule(value)
	for _, existing := range AllowedPropertyNamesValidationRuleEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PropertyNamesValidationRule", value)
}

// NewPropertyNamesValidationRuleFromValue returns a pointer to a valid PropertyNamesValidationRule
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPropertyNamesValidationRuleFromValue(v string) (*PropertyNamesValidationRule, error) {
	ev := PropertyNamesValidationRule(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PropertyNamesValidationRule: valid values are %v", v, AllowedPropertyNamesValidationRuleEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PropertyNamesValidationRule) IsValid() bool {
	for _, existing := range AllowedPropertyNamesValidationRuleEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PropertyNames_ValidationRule value
func (v PropertyNamesValidationRule) Ptr() *PropertyNamesValidationRule {
	return &v
}

type NullablePropertyNamesValidationRule struct {
	value *PropertyNamesValidationRule
	isSet bool
}

func (v NullablePropertyNamesValidationRule) Get() *PropertyNamesValidationRule {
	return v.value
}

func (v *NullablePropertyNamesValidationRule) Set(val *PropertyNamesValidationRule) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyNamesValidationRule) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyNamesValidationRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyNamesValidationRule(val *PropertyNamesValidationRule) *NullablePropertyNamesValidationRule {
	return &NullablePropertyNamesValidationRule{value: val, isSet: true}
}

func (v NullablePropertyNamesValidationRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyNamesValidationRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
