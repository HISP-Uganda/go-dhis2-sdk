/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response - struct for OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response
type OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response struct {
	OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf *OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	ArrayOfOrganisationUnit                                                 *[]OrganisationUnit
}

// OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf wrapped in OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response
func OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOfAsOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response(v *OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response {
	return OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response{
		OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf: v,
	}
}

// []OrganisationUnitAsOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response is a convenience function that returns []OrganisationUnit wrapped in OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response
func ArrayOfOrganisationUnitAsOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response(v *[]OrganisationUnit) OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response {
	return OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response{
		ArrayOfOrganisationUnit: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	err = newStrictDecoder(data).Decode(&dst.OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	if err == nil {
		jsonOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf, _ := json.Marshal(dst.OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
		if string(jsonOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf) == "{}" { // empty struct
			dst.OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		} else {
			match++
		}
	} else {
		dst.OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
	}

	// try to unmarshal data into ArrayOfOrganisationUnit
	err = newStrictDecoder(data).Decode(&dst.ArrayOfOrganisationUnit)
	if err == nil {
		jsonArrayOfOrganisationUnit, _ := json.Marshal(dst.ArrayOfOrganisationUnit)
		if string(jsonArrayOfOrganisationUnit) == "{}" { // empty struct
			dst.ArrayOfOrganisationUnit = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfOrganisationUnit = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf = nil
		dst.ArrayOfOrganisationUnit = nil

		return fmt.Errorf("data matches more than one schema in oneOf(OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	if src.OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return json.Marshal(&src.OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf)
	}

	if src.ArrayOfOrganisationUnit != nil {
		return json.Marshal(&src.ArrayOfOrganisationUnit)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf != nil {
		return obj.OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200ResponseOneOf
	}

	if obj.ArrayOfOrganisationUnit != nil {
		return obj.ArrayOfOrganisationUnit
	}

	// all schemas are nil
	return nil
}

type NullableOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response struct {
	value *OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response
	isSet bool
}

func (v NullableOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) Get() *OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response {
	return v.value
}

func (v *NullableOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) Set(val *OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response(val *OrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) *NullableOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response {
	return &NullableOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response{value: val, isSet: true}
}

func (v NullableOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganisationUnitGetObjectListGistGetObjectListGistAsCsv200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
