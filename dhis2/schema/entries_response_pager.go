/*
DHIS2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.42
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the EntriesResponsePager type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntriesResponsePager{}

// EntriesResponsePager struct for EntriesResponsePager
type EntriesResponsePager struct {
	Page     int32 `json:"page"`
	PageSize int32 `json:"pageSize"`
}

type _EntriesResponsePager EntriesResponsePager

// NewEntriesResponsePager instantiates a new EntriesResponsePager object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntriesResponsePager(page int32, pageSize int32) *EntriesResponsePager {
	this := EntriesResponsePager{}
	this.Page = page
	this.PageSize = pageSize
	return &this
}

// NewEntriesResponsePagerWithDefaults instantiates a new EntriesResponsePager object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntriesResponsePagerWithDefaults() *EntriesResponsePager {
	this := EntriesResponsePager{}
	return &this
}

// GetPage returns the Page field value
func (o *EntriesResponsePager) GetPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *EntriesResponsePager) GetPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *EntriesResponsePager) SetPage(v int32) {
	o.Page = v
}

// GetPageSize returns the PageSize field value
func (o *EntriesResponsePager) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *EntriesResponsePager) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *EntriesResponsePager) SetPageSize(v int32) {
	o.PageSize = v
}

func (o EntriesResponsePager) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntriesResponsePager) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["page"] = o.Page
	toSerialize["pageSize"] = o.PageSize
	return toSerialize, nil
}

func (o *EntriesResponsePager) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"page",
		"pageSize",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEntriesResponsePager := _EntriesResponsePager{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEntriesResponsePager)

	if err != nil {
		return err
	}

	*o = EntriesResponsePager(varEntriesResponsePager)

	return err
}

type NullableEntriesResponsePager struct {
	value *EntriesResponsePager
	isSet bool
}

func (v NullableEntriesResponsePager) Get() *EntriesResponsePager {
	return v.value
}

func (v *NullableEntriesResponsePager) Set(val *EntriesResponsePager) {
	v.value = val
	v.isSet = true
}

func (v NullableEntriesResponsePager) IsSet() bool {
	return v.isSet
}

func (v *NullableEntriesResponsePager) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntriesResponsePager(val *EntriesResponsePager) *NullableEntriesResponsePager {
	return &NullableEntriesResponsePager{value: val, isSet: true}
}

func (v NullableEntriesResponsePager) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntriesResponsePager) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
